{"version":3,"file":"Phaser4.js","sources":["../src/GameInstance.ts","../src/math/matrix2d/Matrix2D.ts","../src/geom/rectangle/Contains.ts","../src/geom/rectangle/Rectangle.ts","../src/utils/NOOP.ts","../src/math/vec2/Vec2Callback.ts","../src/math/angle/AngleBetween.ts","../src/math/angle/AngleBetweenPoints.ts","../src/math/angle/AngleBetweenPointsY.ts","../src/math/angle/AngleBetweenY.ts","../src/math/const.ts","../src/math/angle/CounterClockwise.ts","../src/math/angle/NormalizeAngle.ts","../src/math/angle/ReverseAngle.ts","../src/math/angle/RotateAngleTo.ts","../src/math/angle/ShortestAngleBetween.ts","../src/math/Wrap.ts","../src/math/angle/WrapAngle.ts","../src/math/angle/WrapAngleDegrees.ts","../src/camera/Camera.ts","../src/camera/StaticCamera.ts","../src/dom/GetElement.ts","../src/dom/AddToDOM.ts","../src/dom/DOMContentLoaded.ts","../src/dom/ParseXML.ts","../src/dom/RemoveFromDOM.ts","../src/device/audio/CanPlayAudioType.ts","../src/device/audio/CanPlayM4A.ts","../src/device/audio/CanPlayMP3.ts","../src/device/audio/CanPlayOGG.ts","../src/device/audio/CanPlayOpus.ts","../src/device/audio/CanPlayWAV.ts","../src/device/audio/CanPlayWebM.ts","../src/device/audio/HasAudio.ts","../src/device/audio/HasWebAudio.ts","../src/device/audio/GetAudio.ts","../src/device/browser/IsChrome.ts","../src/device/browser/IsEdge.ts","../src/device/browser/IsFirefox.ts","../src/device/browser/IsMSIE.ts","../src/device/os/IsiOS.ts","../src/device/browser/IsMobileSafari.ts","../src/device/browser/IsOpera.ts","../src/device/os/IsWindowsPhone.ts","../src/device/browser/IsSafari.ts","../src/device/browser/IsSilk.ts","../src/device/browser/IsTrident.ts","../src/device/browser/GetBrowser.ts","../src/device/os/IsAndroid.ts","../src/device/os/IsChromeOS.ts","../src/device/os/IsCordova.ts","../src/device/os/IsCrosswalk.ts","../src/device/os/IsEjecta.ts","../src/device/os/IsKindle.ts","../src/device/os/IsLinux.ts","../src/device/os/IsMacOS.ts","../src/device/os/IsNode.ts","../src/device/os/IsNodeWebkit.ts","../src/device/os/IsWebApp.ts","../src/device/os/IsWindows.ts","../src/device/os/GetOS.ts","../src/device/video/CanPlayVideoType.ts","../src/device/video/CanPlayH264Video.ts","../src/device/video/CanPlayHLSVideo.ts","../src/device/video/CanPlayOGGVideo.ts","../src/device/video/CanPlayVP9Video.ts","../src/device/video/CanPlayWebMVideo.ts","../src/device/video/GetVideo.ts","../src/display/DepthFirstSearch.ts","../src/display/GetChildIndex.ts","../src/display/RemoveChildAt.ts","../src/display/RemoveChild.ts","../src/gameobjects/events/AddedToWorldEvent.ts","../src/gameobjects/events/DestroyEvent.ts","../src/gameobjects/events/PostUpdateEvent.ts","../src/gameobjects/events/RemovedFromWorldEvent.ts","../src/gameobjects/events/UpdateEvent.ts","../src/events/Emit.ts","../src/display/SetWorld.ts","../src/display/SetParent.ts","../src/display/AddChild.ts","../src/display/AddChildAt.ts","../src/display/AddChildren.ts","../src/display/AddChildrenAt.ts","../src/display/AddPosition.ts","../src/display/AddRotation.ts","../src/display/AddScale.ts","../src/display/AddSkew.ts","../src/gameobjects/DIRTY_CONST.ts","../src/display/BringChildToTop.ts","../src/display/DepthFirstSearchRecursiveNested.ts","../src/display/ConsoleTreeChildren.ts","../src/display/CountMatchingChildren.ts","../src/display/DepthFirstSearchRecursive.ts","../src/display/RemoveChildrenBetween.ts","../src/display/DestroyChildren.ts","../src/display/FindChildByName.ts","../src/display/FindChildrenByName.ts","../src/display/GetAllChildren.ts","../src/display/GetChildAt.ts","../src/display/GetChildren.ts","../src/math/distance/DistanceBetweenPoints.ts","../src/display/GetClosestChild.ts","../src/display/GetFirstChild.ts","../src/display/GetFurthestChild.ts","../src/display/GetLastChild.ts","../src/display/GetParents.ts","../src/display/GetRandomChild.ts","../src/display/MoveChildDown.ts","../src/display/MoveChildTo.ts","../src/display/MoveChildUp.ts","../src/geom/intersects/RectangleToRectangle.ts","../src/display/Overlap.ts","../src/display/RemoveChildren.ts","../src/display/RemoveChildrenAt.ts","../src/display/ReparentChildren.ts","../src/display/RotateChildrenLeft.ts","../src/display/RotateChildrenRight.ts","../src/display/SendChildToBack.ts","../src/display/SetBounds.ts","../src/display/SetChildrenValue.ts","../src/display/SetName.ts","../src/display/SetOrigin.ts","../src/display/SetPosition.ts","../src/display/SetRotation.ts","../src/display/SetScale.ts","../src/display/SetSize.ts","../src/display/SetSkew.ts","../src/display/SetType.ts","../src/display/SetValue.ts","../src/display/SetVisible.ts","../src/display/ShuffleChildren.ts","../src/display/SwapChildren.ts","../src/events/ClearEvent.ts","../src/events/EventEmitter.ts","../src/events/EventInstance.ts","../src/events/GetEventNames.ts","../src/events/GetListenerCount.ts","../src/events/GetListeners.ts","../src/events/Off.ts","../src/events/On.ts","../src/events/Once.ts","../src/events/RemoveAllListeners.ts","../src/gameobjects/components/transform/GetVertices.ts","../src/gameobjects/components/bounds/BoundsComponent.ts","../src/gameobjects/components/input/InputComponent.ts","../src/math/vec2/Vec2.ts","../src/config/DefaultOrigin.ts","../src/math/DegToRad.ts","../src/math/Between.ts","../src/gameobjects/components/transform/UpdateLocalTransform.ts","../src/math/matrix2d/Copy.ts","../src/gameobjects/components/transform/UpdateWorldTransform.ts","../src/gameobjects/components/transform/TransformComponent.ts","../src/renderer/webgl1/draw/BatchTexturedQuad.ts","../src/gameobjects/GameObject.ts","../src/gameobjects/container/Container.ts","../src/renderer/canvas/draw/DrawTexturedQuad.ts","../src/renderer/webgl1/colors/PackColor.ts","../src/renderer/webgl1/colors/PackColors.ts","../src/gameobjects/sprite/SetFrame.ts","../src/renderer/BindingQueue.ts","../src/textures/Frame.ts","../src/textures/Texture.ts","../src/textures/TextureManagerInstance.ts","../src/gameobjects/sprite/SetTexture.ts","../src/gameobjects/sprite/UpdateVertices.ts","../src/gameobjects/sprite/Sprite.ts","../src/gameobjects/animatedsprite/AnimatedSprite.ts","../src/renderer/webgl1/draw/BatchSingleQuad.ts","../src/renderer/webgl1/draw/DrawTexturedQuad.ts","../src/config/BackgroundColor.ts","../src/config/Banner.ts","../src/config/Size.ts","../src/config/SetRenderer.ts","../src/config/MaxTextures.ts","../src/config/Scenes.ts","../src/config/WebGLContext.ts","../src/renderer/webgl1/fbo/FBOSystem.ts","../src/renderer/webgl1/GL.ts","../src/renderer/webgl1/colors/GetRGBArray.ts","../src/math/matrix2d-funcs/ExactEquals.ts","../src/renderer/webgl1/fbo/CreateFramebuffer.ts","../src/renderer/webgl1/textures/CreateGLTexture.ts","../src/renderer/webgl1/fbo/DeleteFramebuffer.ts","../src/renderer/webgl1/textures/DeleteGLTexture.ts","../src/math/pow2/IsSizePowerOfTwo.ts","../src/renderer/webgl1/textures/SetGLTextureFilterMode.ts","../src/renderer/webgl1/textures/UpdateGLTexture.ts","../src/renderer/webgl1/textures/GLTextureBinding.ts","../src/renderer/webgl1/buffers/IndexedBuffer.ts","../src/renderer/webgl1/WebGLRendererInstance.ts","../src/renderer/webgl1/shaders/SingleTextureQuadShader.ts","../src/renderer/webgl1/shaders/MultiTextureQuadShader.ts","../src/renderer/webgl1/cameras/Ortho.ts","../src/renderer/webgl1/shaders/ShaderSystem.ts","../src/renderer/webgl1/shaders/CheckShaderMaxIfStatements.ts","../src/renderer/webgl1/textures/TextureSystem.ts","../src/renderer/webgl1/WebGLRenderer.ts","../src/gameobjects/layer/Layer.ts","../src/gameobjects/renderlayer/RenderLayer.ts","../src/gameobjects/effectlayer/EffectLayer.ts","../src/renderer/webgl1/draw/BatchTexturedQuadBuffer.ts","../src/math/Clamp.ts","../src/gameobjects/components/transform/GetVerticesFromValues.ts","../src/gameobjects/spritebatch/SpriteBatch.ts","../src/textures/CreateCanvas.ts","../src/textures/types/CanvasTexture.ts","../src/gameobjects/text/Text.ts","../src/input/keyboard/Key.ts","../src/input/keyboard/keys/ArrowKeys.ts","../src/input/keyboard/keys/DownKey.ts","../src/input/keyboard/keys/LeftKey.ts","../src/input/keyboard/keys/RightKey.ts","../src/input/keyboard/keys/SpaceKey.ts","../src/input/keyboard/keys/UpKey.ts","../src/input/keyboard/keys/WASDKeys.ts","../src/input/keyboard/GetKeyDownDuration.ts","../src/input/keyboard/Keyboard.ts","../src/input/keyboard/SetKeyRepeatRate.ts","../src/math/matrix2d-funcs/Append.ts","../src/math/matrix2d/GlobalToLocal.ts","../src/input/mouse/Mouse.ts","../src/input/SetInteractive.ts","../src/math/distance/ChebyshevDistance.ts","../src/math/distance/DistanceBetween.ts","../src/math/distance/DistanceBetweenPointsSquared.ts","../src/math/distance/DistancePower.ts","../src/math/distance/DistanceSquared.ts","../src/math/distance/SnakeDistance.ts","../src/math/fuzzy/FuzzyCeil.ts","../src/math/fuzzy/FuzzyEqual.ts","../src/math/fuzzy/FuzzyFloor.ts","../src/math/fuzzy/FuzzyGreaterThan.ts","../src/math/fuzzy/FuzzyLessThan.ts","../src/math/Factorial.ts","../src/math/Bernstein.ts","../src/math/interpolation/BezierInterpolation.ts","../src/math/CatmullRom.ts","../src/math/interpolation/CatmullRomInterpolation.ts","../src/math/interpolation/CubicBezierInterpolation.ts","../src/math/Linear.ts","../src/math/interpolation/LinearInterpolation.ts","../src/math/interpolation/QuadraticBezierInterpolation.ts","../src/math/SmoothStep.ts","../src/math/interpolation/SmoothStepInterpolation.ts","../src/math/SmootherStep.ts","../src/math/interpolation/SmootherStepInterpolation.ts","../src/math/matrix2d/Add.ts","../src/math/matrix2d/CopyToContext.ts","../src/math/matrix2d/Determinant.ts","../src/math/matrix2d/Frobenius.ts","../src/math/matrix2d/ITRS.ts","../src/math/matrix2d/ITRSS.ts","../src/math/matrix2d/Invert.ts","../src/math/matrix2d/LocalToGlobal.ts","../src/math/matrix2d/Multiply.ts","../src/math/matrix2d/MultiplyScalar.ts","../src/math/matrix2d/MultiplyScalarAndAdd.ts","../src/math/matrix2d/Rotate.ts","../src/math/matrix2d/Scale.ts","../src/math/matrix2d/SetToContext.ts","../src/math/matrix2d/Skew.ts","../src/math/matrix2d/Subtract.ts","../src/math/matrix2d/Translate.ts","../src/math/matrix2d/Zero.ts","../src/math/matrix2d-funcs/Add.ts","../src/math/matrix2d-funcs/Clone.ts","../src/math/matrix2d-funcs/Equals.ts","../src/math/matrix2d-funcs/Rotate.ts","../src/math/matrix2d-funcs/FromRotation.ts","../src/math/matrix2d-funcs/Scale.ts","../src/math/matrix2d-funcs/FromScaling.ts","../src/math/matrix2d-funcs/Translate.ts","../src/math/matrix2d-funcs/FromTranslation.ts","../src/math/matrix2d-funcs/Identity.ts","../src/math/matrix2d-funcs/Invert.ts","../src/math/matrix2d-funcs/Multiply.ts","../src/math/matrix2d-funcs/MultiplyScalar.ts","../src/math/matrix2d-funcs/MultiplyScalarAndAdd.ts","../src/math/matrix2d-funcs/Subtract.ts","../src/math/matrix2d-funcs/Zero.ts","../src/math/pow2/GetPowerOfTwo.ts","../src/math/pow2/IsValuePowerOfTwo.ts","../src/math/snap/SnapCeil.ts","../src/math/snap/SnapFloor.ts","../src/math/snap/SnapTo.ts","../src/math/Average.ts","../src/math/CeilTo.ts","../src/math/Difference.ts","../src/math/FloatBetween.ts","../src/math/FloorTo.ts","../src/math/FromPercent.ts","../src/math/GetSpeed.ts","../src/math/MaxAdd.ts","../src/math/MinSub.ts","../src/math/Percent.ts","../src/math/RadToDeg.ts","../src/math/RoundAwayFromZero.ts","../src/math/RoundTo.ts","../src/math/SinCosTableGenerator.ts","../src/math/ToXY.ts","../src/math/TransformXY.ts","../src/math/Within.ts","../src/textures/palettes/Arne16.ts","../src/textures/palettes/C64.ts","../src/textures/palettes/CGA.ts","../src/textures/palettes/JMP.ts","../src/textures/palettes/MSX.ts","../src/textures/palettes/PICO8.ts","../src/textures/parsers/AtlasParser.ts","../src/textures/parsers/BitmapTextParser.ts","../src/textures/parsers/SpriteSheetParser.ts","../src/textures/types/GridTexture.ts","../src/textures/types/PixelTexture.ts","../src/textures/types/RenderTexture.ts","../src/textures/types/SolidColorTexture.ts","../src/textures/GetFrames.ts","../src/textures/GetFramesInRange.ts","../src/textures/SetFilter.ts","../src/textures/TextureManager.ts","../src/time/NOOP.ts","../src/time/AddTimer.ts","../src/time/AddDelayedCall.ts","../src/time/Clock.ts","../src/renderer/webgl1/buffers/DeleteGLBuffer.ts","../src/world/events/WorldRenderEvent.ts","../src/world/events/WorldShutdownEvent.ts","../src/world/CalculateTotalRenderable.ts","../src/world/HasDirtyChildren.ts","../src/world/UpdateCachedLayers.ts","../src/world/WorldDepthFirstSearch.ts","../src/world/BuildRenderList.ts","../src/world/MergeRenderData.ts","../src/world/ResetWorldRenderData.ts","../src/world/BaseWorld.ts","../src/world/CreateWorldRenderData.ts","../src/world/StaticWorld.ts","../src/world/World.ts","../src/scenes/CreateSceneRenderData.ts","../src/scenes/ResetSceneRenderData.ts","../src/scenes/SceneManagerInstance.ts","../src/scenes/SceneManager.ts","../src/Game.ts","../src/loader/Loader.ts","../src/scenes/GetConfigValue.ts","../src/scenes/Install.ts","../src/scenes/Scene.ts"],"sourcesContent":["import { Game } from './Game';\r\n\r\nexport let instance: Game;\r\nexport let frame: number = 0;\r\nexport let elapsed: number = 0;\r\n\r\nexport const GameInstance =\r\n{\r\n    get: (): Game =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (game: Game | undefined): void =>\r\n    {\r\n        instance = game;\r\n    },\r\n\r\n    getFrame: (): number =>\r\n    {\r\n        return frame;\r\n    },\r\n\r\n    setFrame: (current: number): void =>\r\n    {\r\n        frame = current;\r\n    },\r\n\r\n    getElapsed: (): number =>\r\n    {\r\n        return elapsed;\r\n    },\r\n\r\n    setElapsed: (current: number): void =>\r\n    {\r\n        elapsed = current;\r\n    }\r\n\r\n};\r\n","//  A Matrix2D contains six elements in a short-form of the 3x3 Matrix, with the last column ignored.\r\n\r\n//  |----|----|----|\r\n//  | a  | b  | 0  |\r\n//  |----|----|----|\r\n//  | c  | d  | 0  |\r\n//  |----|----|----|\r\n//  | tx | ty | 1  |\r\n//  |----|----|----|\r\n\r\nexport class Matrix2D\r\n{\r\n    a: number;\r\n    b: number;\r\n    c: number;\r\n    d: number;\r\n    tx: number;\r\n    ty: number;\r\n\r\n    /**\r\n     * Creates an instance of Matrix2D.\r\n     *\r\n     * @param {number} [a=1] - X scale.\r\n     * @param {number} [b=0] - X skew.\r\n     * @param {number} [c=0] - Y skew.\r\n     * @param {number} [d=1] - Y scale.\r\n     * @param {number} [tx=0] - X translation\r\n     * @param {number} [ty=0] - Y translation\r\n     * @memberof Matrix2D\r\n     */\r\n    constructor (a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0)\r\n    {\r\n        this.set(a, b, c, d, tx, ty);\r\n    }\r\n\r\n    set (a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0): this\r\n    {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n\r\n        return this;\r\n    }\r\n\r\n    identity (): this\r\n    {\r\n        return this.set();\r\n    }\r\n\r\n    toArray (): number[]\r\n    {\r\n        return [ this.a, this.b, this.c, this.d, this.tx, this.ty ];\r\n    }\r\n\r\n    fromArray (src: number[]): Matrix2D\r\n    {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\r\n    }\r\n\r\n    // [Symbol.iterator] ()\r\n    // {\r\n    //     const data = this.toArray();\r\n\r\n    //     return data[Symbol.iterator]();\r\n    // }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Checks if a given point is inside a Rectangle's bounds.\r\n *\r\n * @function Phaser.Geom.Rectangle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to check.\r\n * @param {number} x - The X coordinate of the point to check.\r\n * @param {number} y - The Y coordinate of the point to check.\r\n *\r\n * @return {boolean} `true` if the point is within the Rectangle's bounds, otherwise `false`.\r\n */\r\nexport function Contains (rect: IRectangle, x: number, y: number): boolean\r\n{\r\n    if (rect.width <= 0 || rect.height <= 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return (rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\n\r\nexport class Rectangle\r\n{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, width: number = 0, height: number = 0)\r\n    {\r\n        this.set(x, y, width, height);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, width: number = 0, height: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains (x: number, y: number): boolean\r\n    {\r\n        return Contains(this, x, y);\r\n    }\r\n\r\n    set right (value: number)\r\n    {\r\n        if (value <= this.x)\r\n        {\r\n            this.width = 0;\r\n        }\r\n        else\r\n        {\r\n            this.width = value - this.x;\r\n        }\r\n    }\r\n\r\n    get right (): number\r\n    {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    set bottom (value: number)\r\n    {\r\n        if (value <= this.y)\r\n        {\r\n            this.height = 0;\r\n        }\r\n        else\r\n        {\r\n            this.height = value - this.y;\r\n        }\r\n    }\r\n\r\n    get bottom (): number\r\n    {\r\n        return this.y + this.height;\r\n    }\r\n}\r\n","export function NOOP (): void\r\n{\r\n    //  No-op\r\n}\r\n","import { NOOP } from '../../utils/NOOP';\r\n\r\nexport class Vec2Callback\r\n{\r\n    private _x: number;\r\n    private _y: number;\r\n    callback: (vec2: Vec2Callback) => void;\r\n    compareValue: boolean = false;\r\n\r\n    constructor (callback: (vec2: Vec2Callback) => void, x: number = 0, y: number = 0, compareValue: boolean = false)\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n        this.callback = callback;\r\n        this.compareValue = compareValue;\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0): this\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n\r\n        this.callback(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.callback = NOOP;\r\n    }\r\n\r\n    set x (value: number)\r\n    {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x))\r\n        {\r\n            this._x = value;\r\n\r\n            this.callback(this);\r\n        }\r\n    }\r\n\r\n    get x (): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    set y (value: number)\r\n    {\r\n        if (!this.compareValue || (this.compareValue && value !== this._x))\r\n        {\r\n            this._y = value;\r\n\r\n            this.callback(this);\r\n        }\r\n    }\r\n\r\n    get y (): number\r\n    {\r\n        return this._y;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Find the angle of a segment from (x1, y1) -> (x2, y2).\r\n *\r\n * @function Phaser.Math.Angle.Between\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The angle in radians.\r\n */\r\nexport function AngleBetween (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    return Math.atan2(y2 - y1, x2 - x1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IVec2 } from '../vec2/IVec2';\r\n\r\n/**\r\n * Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y).\r\n *\r\n * Calculates the angle of the vector from the first point to the second point.\r\n *\r\n * @function Phaser.Math.Angle.BetweenPoints\r\n * @since 3.0.0\r\n *\r\n * @param {IVec2} point1 - The first point.\r\n * @param {IVec2} point2 - The second point.\r\n *\r\n * @return {number} The angle in radians.\r\n */\r\nexport function AngleBetweenPoints (point1: IVec2, point2: IVec2): number\r\n{\r\n    return Math.atan2(point2.y - point1.y, point2.x - point1.x);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IVec2 } from '../vec2/IVec2';\r\n\r\n/**\r\n * Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y).\r\n *\r\n * The difference between this method and {@link Phaser.Math.Angle.BetweenPoints} is that this assumes the y coordinate\r\n * travels down the screen.\r\n *\r\n * @function Phaser.Math.Angle.BetweenPointsY\r\n * @since 3.0.0\r\n *\r\n * @param {IVec2} point1 - The first point.\r\n * @param {IVec2} point2 - The second point.\r\n *\r\n * @return {number} The angle in radians.\r\n */\r\nexport function AngleBetweenPointsY (point1: IVec2, point2: IVec2): number\r\n{\r\n    return Math.atan2(point2.x - point1.x, point2.y - point1.y);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Find the angle of a segment from (x1, y1) -> (x2, y2).\r\n *\r\n * The difference between this method and {@link Phaser.Math.Angle.Between} is that this assumes the y coordinate\r\n * travels down the screen.\r\n *\r\n * @function Phaser.Math.Angle.BetweenY\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The angle in radians.\r\n */\r\nexport function AngleBetweenY (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    return Math.atan2(x2 - x1, y2 - y1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nexport const MATH_CONST = {\r\n\r\n    /**\r\n     * The value of PI * 2.\r\n     *\r\n     * @name Phaser.Math.PI2\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PI2: Math.PI * 2,\r\n\r\n    /**\r\n     * The value of PI * 2.\r\n     *\r\n     * @name Phaser.Math.HALF_PI\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    HALF_PI: Math.PI * 0.5,\r\n\r\n    /**\r\n     * An epsilon value (1.0e-6)\r\n     *\r\n     * @name Phaser.Math.EPSILON\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    EPSILON: 1.0e-6,\r\n\r\n    /**\r\n     * For converting degrees to radians (PI / 180)\r\n     *\r\n     * @name Phaser.Math.DEG_TO_RAD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    DEG_TO_RAD: Math.PI / 180,\r\n\r\n    /**\r\n     * For converting radians to degrees (180 / PI)\r\n     *\r\n     * @name Phaser.Math.RAD_TO_DEG\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    RAD_TO_DEG: 180 / Math.PI,\r\n\r\n    /**\r\n     * The minimum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     *\r\n     * @name Phaser.Math.MIN_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\r\n\r\n    /**\r\n     * The maximum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     *\r\n     * @name Phaser.Math.MAX_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST as CONST } from '../const';\r\n\r\n/**\r\n * Takes an angle in Phasers default clockwise format and converts it so that\r\n * 0 is North, 90 is West, 180 is South and 270 is East,\r\n * therefore running counter-clockwise instead of clockwise.\r\n * \r\n * You can pass in the angle from a Game Object using:\r\n * \r\n * ```javascript\r\n * var converted = CounterClockwise(gameobject.rotation);\r\n * ```\r\n * \r\n * All values for this function are in radians.\r\n *\r\n * @function Phaser.Math.Angle.CounterClockwise\r\n * @since 3.16.0\r\n *\r\n * @param {number} angle - The angle to convert, in radians.\r\n *\r\n * @return {number} The converted angle, in radians.\r\n */\r\nexport function CounterClockwise (angle: number): number\r\n{\r\n    if (angle > Math.PI)\r\n    {\r\n        angle -= CONST.PI2;\r\n    }\r\n\r\n    return Math.abs((((angle + CONST.HALF_PI) % CONST.PI2) - CONST.PI2) % CONST.PI2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from '../const';\r\n\r\n/**\r\n * Normalize an angle to the [0, 2pi] range.\r\n *\r\n * @function Phaser.Math.Angle.Normalize\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to normalize, in radians.\r\n *\r\n * @return {number} The normalized angle, in radians.\r\n */\r\nexport function NormalizeAngle (angle: number): number\r\n{\r\n    angle = angle % MATH_CONST.PI2;\r\n\r\n    if (angle >= 0)\r\n    {\r\n        return angle;\r\n    }\r\n    else\r\n    {\r\n        return angle + MATH_CONST.PI2;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { NormalizeAngle } from './NormalizeAngle';\r\n\r\n/**\r\n * Reverse the given angle.\r\n *\r\n * @function Phaser.Math.Angle.Reverse\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to reverse, in radians.\r\n *\r\n * @return {number} The reversed angle, in radians.\r\n */\r\nexport function ReverseAngle (angle: number): number\r\n{\r\n    return NormalizeAngle(angle + Math.PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from '../const';\r\n\r\n/**\r\n * Rotates `currentAngle` towards `targetAngle`, taking the shortest rotation distance. The `lerp` argument is the amount to rotate by in this call.\r\n *\r\n * @function Phaser.Math.Angle.RotateTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} currentAngle - The current angle, in radians.\r\n * @param {number} targetAngle - The target angle to rotate to, in radians.\r\n * @param {number} [lerp=0.05] - The lerp value to add to the current angle.\r\n *\r\n * @return {number} The adjusted angle.\r\n */\r\nexport function RotateAngleTo (currentAngle: number, targetAngle: number, lerp: number = 0.05): number\r\n{\r\n    if (currentAngle === targetAngle)\r\n    {\r\n        return currentAngle;\r\n    }\r\n\r\n    if (Math.abs(targetAngle - currentAngle) <= lerp || Math.abs(targetAngle - currentAngle) >= (MATH_CONST.PI2 - lerp))\r\n    {\r\n        currentAngle = targetAngle;\r\n    }\r\n    else\r\n    {\r\n        if (Math.abs(targetAngle - currentAngle) > Math.PI)\r\n        {\r\n            if (targetAngle < currentAngle)\r\n            {\r\n                targetAngle += MATH_CONST.PI2;\r\n            }\r\n            else\r\n            {\r\n                targetAngle -= MATH_CONST.PI2;\r\n            }\r\n        }\r\n\r\n        if (targetAngle > currentAngle)\r\n        {\r\n            currentAngle += lerp;\r\n        }\r\n        else if (targetAngle < currentAngle)\r\n        {\r\n            currentAngle -= lerp;\r\n        }\r\n    }\r\n\r\n    return currentAngle;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Gets the shortest angle between `angle1` and `angle2`.\r\n *\r\n * Both angles must be in the range -180 to 180, which is the same clamped\r\n * range that `sprite.angle` uses, so you can pass in two sprite angles to\r\n * this method and get the shortest angle back between the two of them.\r\n *\r\n * The angle returned will be in the same range. If the returned angle is\r\n * greater than 0 then it's a counter-clockwise rotation, if < 0 then it's\r\n * a clockwise rotation.\r\n *\r\n * TODO: Wrap the angles in this function?\r\n *\r\n * @function Phaser.Math.Angle.ShortestBetween\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle1 - The first angle in the range -180 to 180.\r\n * @param {number} angle2 - The second angle in the range -180 to 180.\r\n *\r\n * @return {number} The shortest angle, in degrees. If greater than zero it's a counter-clockwise rotation.\r\n */\r\nexport function ShortestAngleBetween (angle1: number, angle2: number): number\r\n{\r\n    const difference = angle2 - angle1;\r\n\r\n    if (difference === 0)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    const times = Math.floor((difference - (-180)) / 360);\r\n\r\n    return difference - (times * 360);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Wrap the given `value` between `min` and `max.\r\n *\r\n * @function Phaser.Math.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to wrap.\r\n * @param {number} min - The minimum value.\r\n * @param {number} max - The maximum value.\r\n *\r\n * @return {number} The wrapped value.\r\n */\r\nexport function Wrap (value: number, min: number, max: number): number\r\n{\r\n    const range = max - min;\r\n\r\n    return (min + ((((value - min) % range) + range) % range));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Wrap } from '../Wrap';\r\n\r\n/**\r\n * Wrap an angle.\r\n *\r\n * Wraps the angle to a value in the range of -PI to PI.\r\n *\r\n * @function Phaser.Math.Angle.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in radians.\r\n *\r\n * @return {number} The wrapped angle, in radians.\r\n */\r\nexport function WrapAngle (angle: number): number\r\n{\r\n    return Wrap(angle, -Math.PI, Math.PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Wrap } from '../Wrap';\r\n\r\n/**\r\n * Wrap an angle in degrees.\r\n *\r\n * Wraps the angle to a value in the range of -180 to 180.\r\n *\r\n * @function Phaser.Math.Angle.WrapDegrees\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in degrees.\r\n *\r\n * @return {number} The wrapped angle, in degrees.\r\n */\r\nexport function WrapAngleDegrees (angle: number): number\r\n{\r\n    return Wrap(angle, -180, 180);\r\n}\r\n","import { GameInstance } from '../GameInstance';\r\nimport { ICamera } from './ICamera';\r\nimport { IRenderer } from '../renderer/IRenderer';\r\nimport { IWorld } from '../world/IWorld';\r\nimport { Matrix2D } from '../math/matrix2d/Matrix2D';\r\nimport { Rectangle } from '../geom/rectangle/Rectangle';\r\nimport { Vec2Callback } from '../math/vec2/Vec2Callback';\r\nimport { WrapAngle } from '../math/angle';\r\n\r\nexport class Camera implements ICamera\r\n{\r\n    world: IWorld;\r\n    matrix: Float32Array;\r\n    renderer: IRenderer;\r\n    type: string;\r\n\r\n    width: number;\r\n    height: number;\r\n    bounds: Rectangle;\r\n\r\n    dirtyRender: boolean;\r\n    worldTransform: Matrix2D;\r\n\r\n    position: Vec2Callback;\r\n    scale: Vec2Callback;\r\n    origin: Vec2Callback;\r\n\r\n    private _rotation: number = 0;\r\n\r\n    constructor ()\r\n    {\r\n        this.type = 'Camera';\r\n\r\n        this.dirtyRender = true;\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.renderer = game.renderer;\r\n\r\n        this.matrix = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ]);\r\n\r\n        this.bounds = new Rectangle();\r\n\r\n        this.worldTransform = new Matrix2D();\r\n\r\n        this.position = new Vec2Callback(() => this.updateTransform(), 0, 0);\r\n        this.scale = new Vec2Callback(() => this.updateTransform(), 1, 1);\r\n        this.origin = new Vec2Callback(() => this.updateTransform(), 0.5, 0.5);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    updateTransform (): void\r\n    {\r\n        const matrix = this.matrix;\r\n\r\n        const px = this.position.x;\r\n        const py = this.position.y;\r\n\r\n        const sx = this.scale.x;\r\n        const sy = this.scale.y;\r\n\r\n        const ox = -px + (this.width * this.origin.x);\r\n        const oy = -py + (this.height * this.origin.y);\r\n\r\n        const z = Math.sin(this.rotation);\r\n        const w = Math.cos(this.rotation);\r\n\r\n        const z2 = z + z;\r\n        const zz = z * z2;\r\n        const wz = w * z2;\r\n\r\n        const out0 = (1 - zz) * sx;\r\n        const out1 = wz * sx;\r\n        const out4 = -wz * sy;\r\n        const out5 = (1 - zz) * sy;\r\n\r\n        matrix[0] = out0;\r\n        matrix[1] = out1;\r\n        matrix[4] = out4;\r\n        matrix[5] = out5;\r\n        matrix[12] = px + ox - (out0 * ox + out4 * oy);\r\n        matrix[13] = py + oy - (out1 * ox + out5 * oy);\r\n\r\n        this.worldTransform.set(\r\n            w * sx,\r\n            z * sx,\r\n            -z * sy,\r\n            w * sy,\r\n            -px,\r\n            -py\r\n        );\r\n\r\n        const bw = this.width * (1 / sx);\r\n        const bh = this.height * (1 / sy);\r\n\r\n        this.bounds.set(\r\n            ox - (bw / 2),\r\n            oy - (bh / 2),\r\n            bw,\r\n            bh\r\n        );\r\n\r\n        // console.log('b', this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height);\r\n\r\n        this.dirtyRender = true;\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n\r\n    set rotation (value: number)\r\n    {\r\n        if (value !== this._rotation)\r\n        {\r\n            this._rotation = WrapAngle(value);\r\n\r\n            this.updateTransform();\r\n        }\r\n    }\r\n\r\n    get rotation (): number\r\n    {\r\n        return this._rotation;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.origin.destroy();\r\n\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\r\n","import { GameInstance } from '../GameInstance';\r\nimport { IRenderer } from '../renderer/IRenderer';\r\nimport { IStaticCamera } from './IStaticCamera';\r\nimport { IStaticWorld } from '../world/IStaticWorld';\r\nimport { Matrix2D } from '../math/matrix2d/Matrix2D';\r\nimport { Rectangle } from '../geom/rectangle/Rectangle';\r\n\r\nexport class StaticCamera implements IStaticCamera\r\n{\r\n    world: IStaticWorld;\r\n    matrix: Float32Array;\r\n    renderer: IRenderer;\r\n    type: string;\r\n\r\n    width: number;\r\n    height: number;\r\n    bounds: Rectangle;\r\n\r\n    dirtyRender: boolean;\r\n    worldTransform: Matrix2D;\r\n\r\n    constructor ()\r\n    {\r\n        this.type = 'StaticCamera';\r\n\r\n        this.dirtyRender = true;\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.renderer = game.renderer;\r\n\r\n        this.matrix = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]);\r\n\r\n        this.bounds = new Rectangle();\r\n\r\n        this.worldTransform = new Matrix2D();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Attempts to get the target DOM element based on the given value, which can be either\r\n * a string, in which case it will be looked-up by ID, or an element node. If nothing\r\n * can be found it will return a reference to the document.body.\r\n *\r\n * @function Phaser.DOM.GetElement\r\n * @since 4.0.0\r\n *\r\n * @param {(string | HTMLElement)} [target] - The DOM element to look-up.\r\n * \r\n * @returns {HTMLElement} The HTML Element that was found.\r\n */\r\nexport function GetElement (target?: string | HTMLElement): HTMLElement\r\n{\r\n    let element: HTMLElement;\r\n\r\n    if (target)\r\n    {\r\n        if (typeof target === 'string')\r\n        {\r\n            //  Hopefully an element ID\r\n            element = document.getElementById(target);\r\n        }\r\n        else if (typeof target === 'object' && target.nodeType === 1)\r\n        {\r\n            //  Quick test for a HTMLElement\r\n            element = target;\r\n        }\r\n    }\r\n\r\n    if (!element)\r\n    {\r\n        element = document.body;\r\n    }\r\n\r\n    return element;\r\n}\r\n","import { GetElement } from './GetElement';\r\n\r\nexport function AddToDOM (element: HTMLElement, parent?: string | HTMLElement): HTMLElement\r\n{\r\n    const target: HTMLElement = GetElement(parent);\r\n\r\n    target.appendChild(element);\r\n\r\n    return element;\r\n}\r\n","export function DOMContentLoaded (callback: () => void): void\r\n{\r\n    const readyState = document.readyState;\r\n\r\n    if (readyState === 'complete' || readyState === 'interactive')\r\n    {\r\n        callback();\r\n\r\n        return;\r\n    }\r\n\r\n    const check = (): void =>\r\n    {\r\n        document.removeEventListener('deviceready', check, true);\r\n        document.removeEventListener('DOMContentLoaded', check, true);\r\n        window.removeEventListener('load', check, true);\r\n\r\n        callback();\r\n    };\r\n\r\n    // TODO - Swap is IsCordova call\r\n\r\n    if (!document.body)\r\n    {\r\n        window.setTimeout(check, 20);\r\n    }\r\n    else if (window.hasOwnProperty('cordova'))\r\n    {\r\n        document.addEventListener('deviceready', check, true);\r\n    }\r\n    else\r\n    {\r\n        document.addEventListener('DOMContentLoaded', check, true);\r\n        window.addEventListener('load', check, true);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes the given data string and parses it as XML using the native DOMParser interface.\r\n * The parsed XML object is returned, or `null` if there was an error while parsing the data.\r\n *\r\n * @function Phaser.DOM.ParseXML\r\n * @since 3.0.0\r\n *\r\n * @param {string} data - The XML source stored in a string.\r\n *\r\n * @return {?XMLDocument} The parsed XML data, or `null` if the data could not be parsed.\r\n */\r\nexport function ParseXML (data: string): XMLDocument | null\r\n{\r\n    let xml: XMLDocument;\r\n\r\n    try\r\n    {\r\n        const parser = new DOMParser();\r\n\r\n        xml = parser.parseFromString(data, 'text/xml');\r\n\r\n        if (!xml || !xml.documentElement || xml.getElementsByTagName('parsererror').length)\r\n        {\r\n            return null;\r\n        }\r\n        else\r\n        {\r\n            return xml;\r\n        }\r\n    }\r\n    catch (error)\r\n    {\r\n        return null;\r\n    }\r\n}\r\n","export function RemoveFromDOM (element: HTMLElement): void\r\n{\r\n    if (element.parentNode)\r\n    {\r\n        element.parentNode.removeChild(element);\r\n    }\r\n}\r\n","let _audioElement: HTMLAudioElement;\r\n\r\nexport function CanPlayAudioType (type: string, audioElement?: HTMLAudioElement): boolean\r\n{\r\n    if (!audioElement)\r\n    {\r\n        if (!_audioElement)\r\n        {\r\n            _audioElement = document.createElement('audio');\r\n        }\r\n\r\n        audioElement = _audioElement;\r\n    }\r\n\r\n    return (audioElement && audioElement.canPlayType(type) !== '');\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayM4A (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return (\r\n        CanPlayAudioType('audio/x-m4a', audioElement) ||\r\n        CanPlayAudioType('audio/aac', audioElement)\r\n    );\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayMP3 (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/mpeg; codecs=\"mp3\"', audioElement);\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayOGG (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/ogg; codecs=\"vorbis\"', audioElement);\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayOpus (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return (\r\n        CanPlayAudioType('audio/ogg; codecs=\"opus\"', audioElement) ||\r\n        CanPlayAudioType('audio/webm; codecs=\"opus\"', audioElement)\r\n    );\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayWAV (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/wav; codecs=\"1\"', audioElement);\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayWebM (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/webm; codecs=\"vorbis\"', audioElement);\r\n}\r\n","export function HasAudio (): boolean\r\n{\r\n    return (window && window.hasOwnProperty('Audio'));\r\n}\r\n","export function HasWebAudio (): boolean\r\n{\r\n    return (\r\n        window &&\r\n        (window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext'))\r\n    );\r\n}\r\n","import { CanPlayM4A } from './CanPlayM4A';\r\nimport { CanPlayMP3 } from './CanPlayMP3';\r\nimport { CanPlayOGG } from './CanPlayOGG';\r\nimport { CanPlayOpus } from './CanPlayOpus';\r\nimport { CanPlayWAV } from './CanPlayWAV';\r\nimport { CanPlayWebM } from './CanPlayWebM';\r\nimport { HasAudio } from './HasAudio';\r\nimport { HasWebAudio } from './HasWebAudio';\r\nimport { IDeviceAudioResult } from './IDeviceAudioResult';\r\n\r\nexport function GetAudio (): IDeviceAudioResult\r\n{\r\n    const result: IDeviceAudioResult = {\r\n        audioData: HasAudio(),\r\n        m4a: false,\r\n        mp3: false,\r\n        ogg: false,\r\n        opus: false,\r\n        wav: false,\r\n        webAudio: HasWebAudio(),\r\n        webm: false\r\n    };\r\n\r\n    if (result.audioData)\r\n    {\r\n        result.m4a = CanPlayM4A();\r\n        result.mp3 = CanPlayMP3();\r\n        result.ogg = CanPlayOGG();\r\n        result.opus = CanPlayOpus();\r\n        result.wav = CanPlayWAV();\r\n        result.webm = CanPlayWebM();\r\n    }\r\n\r\n    return result;\r\n}\r\n","export function IsChrome (): { chrome: boolean; chromeVersion: number }\r\n{\r\n    const chrome = (/Chrome\\/(\\d+)/).test(navigator.userAgent);\r\n    const chromeVersion = (chrome) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        chrome,\r\n        chromeVersion\r\n    };\r\n}\r\n","export function IsEdge (): { edge: boolean }\r\n{\r\n    const edge = (/Edge\\/\\d+/).test(navigator.userAgent);\r\n\r\n    return {\r\n        edge\r\n    };\r\n}\r\n","export function IsFirefox (): { firefox: boolean; firefoxVersion: number }\r\n{\r\n    const firefox = (/Firefox\\D+(\\d+)/).test(navigator.userAgent);\r\n    const firefoxVersion = (firefox) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        firefox,\r\n        firefoxVersion\r\n    };\r\n}\r\n","export function IsMSIE (): { ie: boolean; ieVersion: number }\r\n{\r\n    const ie = (/MSIE (\\d+\\.\\d+);/).test(navigator.userAgent);\r\n    const ieVersion = (ie) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        ie,\r\n        ieVersion\r\n    };\r\n}\r\n","interface IGetIOSResult\r\n{\r\n    iOS: boolean;\r\n    iOSVersion: number;\r\n    iPhone: boolean;\r\n    iPad: boolean;\r\n}\r\n\r\nexport function IsiOS (): IGetIOSResult\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    const result: IGetIOSResult = {\r\n        iOS: false,\r\n        iOSVersion: 0,\r\n        iPhone: false,\r\n        iPad: false\r\n    };\r\n\r\n    if ((/iP[ao]d|iPhone/i).test(ua))\r\n    {\r\n        const match = (/OS (\\d+)/).exec(navigator.appVersion);\r\n\r\n        result.iOS = true;\r\n        result.iOSVersion = parseInt(match[0], 10);\r\n        result.iPhone = (ua.toLowerCase().includes('iphone'));\r\n        result.iPad = (ua.toLowerCase().includes('ipad'));\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { IsiOS } from '../os/IsiOS';\r\n\r\nexport function IsMobileSafari (): { mobileSafari: boolean }\r\n{\r\n    const { iOS } = IsiOS();\r\n\r\n    const mobileSafari = (navigator.userAgent.includes('AppleWebKit') && iOS);\r\n\r\n    return {\r\n        mobileSafari\r\n    };\r\n}\r\n","export function IsOpera (): { opera: boolean }\r\n{\r\n    const opera = navigator.userAgent.includes('Opera');\r\n\r\n    return {\r\n        opera\r\n    };\r\n}\r\n","export function IsWindowsPhone (): boolean\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    return ((/Windows Phone/i).test(ua) || (/IEMobile/i).test(ua));\r\n}\r\n","import { IsWindowsPhone } from '../os/IsWindowsPhone';\r\n\r\nexport function IsSafari (): { safari: boolean; safariVersion: number }\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    const safari = (ua.includes('Safari') && !IsWindowsPhone());\r\n    const safariVersion = ((/Version\\/(\\d+)\\./).test(ua)) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        safari,\r\n        safariVersion\r\n    };\r\n}\r\n","export function IsSilk (): { silk: boolean }\r\n{\r\n    const silk = navigator.userAgent.includes('Silk');\r\n\r\n    return {\r\n        silk\r\n    };\r\n}\r\n","export function IsTrident (): { trident: boolean; tridentVersion: number; tridentIEVersion: number }\r\n{\r\n    const trident = (/Trident\\/(\\d+\\.\\d+)(.*)rv:(\\d+\\.\\d+)/).test(navigator.userAgent);\r\n    const tridentVersion = (trident) ? parseInt(RegExp.$1, 10) : 0;\r\n    const tridentIEVersion = (trident) ? parseInt(RegExp.$3, 10) : 0;\r\n\r\n    return {\r\n        trident,\r\n        tridentVersion,\r\n        tridentIEVersion\r\n    };\r\n}\r\n","import { IDeviceBrowserResult } from './IDeviceBrowserResult';\r\nimport { IsChrome } from './IsChrome';\r\nimport { IsEdge } from './IsEdge';\r\nimport { IsFirefox } from './IsFirefox';\r\nimport { IsMSIE } from './IsMSIE';\r\nimport { IsMobileSafari } from './IsMobileSafari';\r\nimport { IsOpera } from './IsOpera';\r\nimport { IsSafari } from './IsSafari';\r\nimport { IsSilk } from './IsSilk';\r\nimport { IsTrident } from './IsTrident';\r\n\r\nexport function GetBrowser (): IDeviceBrowserResult\r\n{\r\n    const { chrome, chromeVersion } = IsChrome();\r\n    const { edge } = IsEdge();\r\n    const { firefox, firefoxVersion } = IsFirefox();\r\n    let { ie, ieVersion } = IsMSIE();\r\n    const { mobileSafari } = IsMobileSafari();\r\n    const { opera } = IsOpera();\r\n    const { safari, safariVersion } = IsSafari();\r\n    const { silk } = IsSilk();\r\n    const { trident, tridentVersion, tridentIEVersion } = IsTrident();\r\n\r\n    if (trident)\r\n    {\r\n        ie = true;\r\n        ieVersion = tridentIEVersion;\r\n    }\r\n\r\n    const result: IDeviceBrowserResult = {\r\n        chrome,\r\n        chromeVersion,\r\n        edge,\r\n        firefox,\r\n        firefoxVersion,\r\n        ie,\r\n        ieVersion,\r\n        mobileSafari,\r\n        opera,\r\n        safari,\r\n        safariVersion,\r\n        silk,\r\n        trident,\r\n        tridentVersion\r\n    };\r\n\r\n    return result;\r\n}\r\n","export function IsAndroid (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Android'));\r\n}\r\n","export function IsChromeOS (): boolean\r\n{\r\n    return (navigator.userAgent.includes('CrOS'));\r\n}\r\n","export function IsCordova (): boolean\r\n{\r\n    return (window.hasOwnProperty('cordova'));\r\n}\r\n","export function IsCrosswalk (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Crosswalk'));\r\n}\r\n","export function IsEjecta (): boolean\r\n{\r\n    return (window.hasOwnProperty('ejecta'));\r\n}\r\n","export function IsKindle (): boolean\r\n{\r\n    // This will NOT detect early generations of Kindle Fire, I think there is no reliable way...\r\n    // E.g. \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.1.0-80) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Safari/533.16 Silk-Accelerated=true\"\r\n    const ua: string = navigator.userAgent;\r\n\r\n    return ((ua.includes('Kindle') || (/\\bKF[A-Z][A-Z]+/).test(ua) || (/Silk.*Mobile Safari/).test(ua)));\r\n}\r\n","export function IsLinux (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Linux'));\r\n}\r\n","export function IsMacOS (): boolean\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    return (ua.includes('Mac OS') && !(ua.includes('like Mac OS')));\r\n}\r\n","export function IsNode (): boolean\r\n{\r\n    return (typeof process !== 'undefined' && typeof process.versions === 'object' && process.versions.hasOwnProperty('node'));\r\n}\r\n","import { IsNode } from './IsNode';\r\n\r\nexport function IsNodeWebkit (): boolean\r\n{\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return (IsNode() && !!(process.versions as Record<string, any>).hasOwnProperty('node-webkit'));\r\n}\r\n","export function IsWebApp (): boolean\r\n{\r\n    return (navigator.hasOwnProperty('standalone'));\r\n}\r\n","export function IsWindows (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Windows'));\r\n}\r\n","import { IDeviceOSResult } from './IDeviceOSResult';\r\nimport { IsAndroid } from './IsAndroid';\r\nimport { IsChromeOS } from './IsChromeOS';\r\nimport { IsCordova } from './IsCordova';\r\nimport { IsCrosswalk } from './IsCrosswalk';\r\nimport { IsEjecta } from './IsEjecta';\r\nimport { IsKindle } from './IsKindle';\r\nimport { IsLinux } from './IsLinux';\r\nimport { IsMacOS } from './IsMacOS';\r\nimport { IsNode } from './IsNode';\r\nimport { IsNodeWebkit } from './IsNodeWebkit';\r\nimport { IsWebApp } from './IsWebApp';\r\nimport { IsWindows } from './IsWindows';\r\nimport { IsWindowsPhone } from './IsWindowsPhone';\r\nimport { IsiOS } from './IsiOS';\r\n\r\nexport function GetOS (): IDeviceOSResult\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    const { iOS, iOSVersion, iPad, iPhone } = IsiOS();\r\n\r\n    const result: IDeviceOSResult = {\r\n        android: IsAndroid(),\r\n        chromeOS: IsChromeOS(),\r\n        cordova: IsCordova(),\r\n        crosswalk: IsCrosswalk(),\r\n        desktop: false,\r\n        ejecta: IsEjecta(),\r\n        iOS,\r\n        iOSVersion,\r\n        iPad,\r\n        iPhone,\r\n        kindle: IsKindle(),\r\n        linux: IsLinux(),\r\n        macOS: IsMacOS(),\r\n        node: IsNode(),\r\n        nodeWebkit: IsNodeWebkit(),\r\n        pixelRatio: 1,\r\n        webApp: IsWebApp(),\r\n        windows: IsWindows(),\r\n        windowsPhone: IsWindowsPhone()\r\n    };\r\n\r\n    if (result.windowsPhone)\r\n    {\r\n        result.android = false;\r\n        result.iOS = false;\r\n        result.macOS = false;\r\n        result.windows = true;\r\n    }\r\n\r\n    const silk: boolean = ua.includes('Silk');\r\n\r\n    if (result.windows || result.macOS || (result.linux && !silk) || result.chromeOS)\r\n    {\r\n        result.desktop = true;\r\n    }\r\n\r\n    //  Windows Phone / Table reset\r\n    if (result.windowsPhone || (((/Windows NT/i).test(ua)) && ((/Touch/i).test(ua))))\r\n    {\r\n        result.desktop = false;\r\n    }\r\n\r\n    return result;\r\n}\r\n","let _videoElement: HTMLVideoElement;\r\n\r\nexport function CanPlayVideoType (type: string, videoElement?: HTMLVideoElement): boolean\r\n{\r\n    if (!videoElement)\r\n    {\r\n        if (!_videoElement)\r\n        {\r\n            _videoElement = document.createElement('video');\r\n        }\r\n\r\n        videoElement = _videoElement;\r\n    }\r\n\r\n    return (videoElement && videoElement.canPlayType(type) !== '');\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayH264Video (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/mp4; codecs=\"avc1.42E01E\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayHLSVideo (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('application/x-mpegURL; codecs=\"avc1.42E01E\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayOGGVideo (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/ogg; codecs=\"theora\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayVP9Video (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/webm; codecs=\"vp9\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayWebMVideo (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/webm; codecs=\"vp8, vorbis\"', videoElement);\r\n}\r\n","import { CanPlayH264Video } from './CanPlayH264Video';\r\nimport { CanPlayHLSVideo } from './CanPlayHLSVideo';\r\nimport { CanPlayOGGVideo } from './CanPlayOGGVideo';\r\nimport { CanPlayVP9Video } from './CanPlayVP9Video';\r\nimport { CanPlayWebMVideo } from './CanPlayWebMVideo';\r\nimport { IDeviceVideoResult } from './IDeviceVideoResult';\r\n\r\nexport function GetVideo (): IDeviceVideoResult\r\n{\r\n    return {\r\n        h264Video: CanPlayH264Video(),\r\n        hlsVideo: CanPlayHLSVideo(),\r\n        oggVideo: CanPlayOGGVideo(),\r\n        vp9Video: CanPlayVP9Video(),\r\n        webmVideo: CanPlayWebMVideo()\r\n    };\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using an iterative search.\r\n//  Does NOT include the parent in the results.\r\n\r\nexport function DepthFirstSearch (parent: IGameObject): IGameObject[]\r\n{\r\n    const stack: IGameObject[] = [ parent ];\r\n    const output: IGameObject[] = [];\r\n\r\n    while (stack.length > 0)\r\n    {\r\n        const node = stack.shift();\r\n\r\n        output.push(node);\r\n\r\n        const numChildren = node.numChildren;\r\n\r\n        if (numChildren > 0)\r\n        {\r\n            for (let i = numChildren - 1; i >= 0; i--)\r\n            {\r\n                stack.unshift(node.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  Remove the parent from the results\r\n    output.shift();\r\n\r\n    return output;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetChildIndex (parent: IGameObject, child: IGameObject): number\r\n{\r\n    return parent.children.indexOf(child);\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RemoveChildAt (parent: IGameObject, index: number): IGameObject | undefined\r\n{\r\n    const children = parent.children;\r\n    let child: IGameObject;\r\n\r\n    if (index >= 0 && index < children.length)\r\n    {\r\n        const removed = children.splice(index, 1);\r\n\r\n        if (removed[0])\r\n        {\r\n            child = removed[0];\r\n            child.parent = null;\r\n        }\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildAt } from './RemoveChildAt';\r\n\r\nexport function RemoveChild <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex > -1)\r\n    {\r\n        RemoveChildAt(parent, currentIndex);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IBaseWorld } from '../../world/IBaseWorld';\r\nimport { IGameObject } from '../IGameObject';\r\n\r\nexport const AddedToWorldEvent: string = 'addedtoworld';\r\n\r\nexport type AddedToWorldEventHandler = <T extends IGameObject, U extends IBaseWorld> (child: T, world: U) => void;\r\n","import { IGameObject } from '../IGameObject';\r\n\r\nexport const DestroyEvent: string = 'destroy';\r\n\r\nexport type DestroyEventHandler = <T extends IGameObject> (child: T) => void;\r\n","import { IGameObject } from '../IGameObject';\r\n\r\nexport const PostUpdateEvent: string = 'postupdate';\r\n\r\nexport type PostUpdateEventHandler = <T extends IGameObject> (delta: number, time: number, child: T) => void;\r\n","import { IBaseWorld } from '../../world/IBaseWorld';\r\nimport { IGameObject } from '../IGameObject';\r\n\r\nexport const RemovedFromWorldEvent: string = 'removedfromworld';\r\n\r\nexport type RemovedFromWorldEventHandler = <T extends IGameObject, U extends IBaseWorld> (child: T, world: U) => void;\r\n","import { IGameObject } from '../IGameObject';\r\n\r\nexport const UpdateEvent: string = 'update';\r\n\r\nexport type UpdateEventHandler = <T extends IGameObject> (delta: number, time: number, child: T) => void;\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function Emit (emitter: IEventEmitter, event: string, ...args: unknown[]): boolean\r\n{\r\n    if (emitter.events.size === 0 || !emitter.events.has(event))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const listeners = emitter.events.get(event);\r\n\r\n    for (const ee of listeners)\r\n    {\r\n        ee.callback.apply(ee.context, args);\r\n\r\n        if (ee.once)\r\n        {\r\n            listeners.delete(ee);\r\n        }\r\n    }\r\n\r\n    if (listeners.size === 0)\r\n    {\r\n        emitter.events.delete(event);\r\n    }\r\n\r\n    return true;\r\n}\r\n","import { AddedToWorldEvent, RemovedFromWorldEvent } from '../gameobjects/events';\r\n\r\nimport { Emit } from '../events/Emit';\r\nimport { IBaseWorld } from '../world/IBaseWorld';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetWorld (world: IBaseWorld, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        if (child.world)\r\n        {\r\n            Emit(child.world, RemovedFromWorldEvent, child, child.world);\r\n            Emit(child, RemovedFromWorldEvent, child, child.world);\r\n        }\r\n\r\n        child.world = world;\r\n\r\n        Emit(world, AddedToWorldEvent, child, world);\r\n        Emit(child, AddedToWorldEvent, child, world);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChild } from './RemoveChild';\r\nimport { SetWorld } from './SetWorld';\r\n\r\nexport function SetParent (parent: IGameObject, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        if (child.parent)\r\n        {\r\n            RemoveChild(child.parent, child);\r\n        }\r\n\r\n        child.parent = parent;\r\n    });\r\n\r\n    const parentWorld = parent.world;\r\n\r\n    if (parentWorld)\r\n    {\r\n        //  Full list of all children, including sub-children\r\n        SetWorld(parentWorld, ...DepthFirstSearch(parent));\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function AddChild <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    parent.children.push(child);\r\n\r\n    SetParent(parent, child);\r\n\r\n    child.transform.updateWorld();\r\n\r\n    return child;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function AddChildAt <T extends IGameObject> (parent: IGameObject, index: number, child: T): T\r\n{\r\n    const children = parent.children;\r\n\r\n    if (index >= 0 && index <= children.length)\r\n    {\r\n        SetParent(parent, child);\r\n\r\n        children.splice(index, 0, child);\r\n\r\n        child.transform.updateWorld();\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { AddChild } from './AddChild';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function AddChildren (parent: IGameObject, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        AddChild(parent, child);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function AddChildrenAt (parent: IGameObject, index: number, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    if (index >= 0 && index <= parentChildren.length)\r\n    {\r\n        children.reverse().forEach(child =>\r\n        {\r\n            children.splice(index, 0, child);\r\n\r\n            SetParent(parent, child);\r\n\r\n            child.transform.updateWorld();\r\n        });\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddPosition (x: number, y: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.x += x;\r\n        child.y += y;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddRotation (rotation: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.rotation += rotation;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddScale (scaleX: number, scaleY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.scaleX += scaleX;\r\n        child.scaleY += scaleY;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddSkew (skewX: number, skewY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.skewX += skewX;\r\n        child.skewY += skewY;\r\n    });\r\n\r\n    return children;\r\n}\r\n","export const DIRTY_CONST = {\r\n\r\n    CLEAR: 0,\r\n    TRANSFORM: 1,\r\n    UPDATE: 2,\r\n    CHILD_CACHE: 4,\r\n    POST_RENDER: 8,\r\n    COLORS: 16,\r\n    BOUNDS: 32,\r\n    TEXTURE: 64,\r\n    FRAME: 128,\r\n    ALPHA: 256,\r\n    CHILD: 512,\r\n\r\n    //  Special combinations\r\n    DEFAULT: 1 + 2 + 16 + 32,\r\n\r\n    //  Reserved for future use:\r\n    //  1024\r\n    //  2048\r\n    //  4096\r\n    //  8192\r\n    //  16384\r\n    //  32768\r\n    //  65536\r\n    //  131072\r\n    //  262144\r\n    //  524288\r\n    //  1048576\r\n    //  2097152\r\n    //  4194304\r\n    //  8388608\r\n    //  16777216\r\n    //  33554432\r\n    //  67108864\r\n    //  134217728\r\n    //  268435456\r\n\r\n    //  Reserved for user use\r\n    USER1: 536870912,\r\n    USER2: 1073741824,\r\n    USER3: 2147483648,\r\n    USER4: 4294967296\r\n\r\n};\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function BringChildToTop <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex !== -1 && currentIndex < parentChildren.length)\r\n    {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.push(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using a recursive search.\r\n//  Parents and children are grouped together.\r\n\r\nexport type SearchEntry = {\r\n    node: IGameObject;\r\n    children: SearchEntry[];\r\n};\r\n\r\nexport function DepthFirstSearchRecursiveNested (parent: IGameObject, output: SearchEntry[] = []): SearchEntry[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const node = parent.children[i];\r\n\r\n        const children: SearchEntry[] = [];\r\n\r\n        output.push({ node, children });\r\n\r\n        if (node.numChildren > 0)\r\n        {\r\n            DepthFirstSearchRecursiveNested(node, children);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { DepthFirstSearchRecursiveNested, SearchEntry } from './DepthFirstSearchRecursiveNested';\r\n\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nfunction GetInfo (entry: IGameObject): string\r\n{\r\n    const legend = (entry.numChildren > 0) ? 'Parent' :  'Child';\r\n\r\n    return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\r\n}\r\n\r\nfunction LogChildren (entry: SearchEntry): void\r\n{\r\n    console.group(GetInfo(entry.node));\r\n\r\n    entry.children.forEach(child =>\r\n    {\r\n        if (child.children.length > 0)\r\n        {\r\n            LogChildren(child);\r\n        }\r\n        else\r\n        {\r\n            console.log(GetInfo(child.node));\r\n        }\r\n    });\r\n\r\n    console.groupEnd();\r\n}\r\n\r\nexport function ConsoleTreeChildren (parent: IGameObject): void\r\n{\r\n    const entries = DepthFirstSearchRecursiveNested(parent);\r\n\r\n    if (parent.world === parent)\r\n    {\r\n        console.group('World');\r\n    }\r\n    else\r\n    {\r\n        console.group(GetInfo(parent));\r\n    }\r\n\r\n    entries.forEach(entry =>\r\n    {\r\n        if (entry.children.length)\r\n        {\r\n            LogChildren(entry);\r\n        }\r\n        else\r\n        {\r\n            console.log(GetInfo(entry.node));\r\n        }\r\n    });\r\n\r\n    console.groupEnd();\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function CountMatchingChildren (parent: IGameObject, property: string | symbol, value?: never): number\r\n{\r\n    const children = parent.children;\r\n\r\n    let total = 0;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            total++;\r\n        }\r\n    });\r\n\r\n    return total;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using a recursive search.\r\n//  Does NOT include the parent in the results.\r\n\r\nexport function DepthFirstSearchRecursive (parent: IGameObject, output: IGameObject[] = []): IGameObject[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const child = parent.children[i];\r\n\r\n        output.push(child);\r\n\r\n        if (child.numChildren > 0)\r\n        {\r\n            DepthFirstSearchRecursive(child, output);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RemoveChildrenBetween (parent: IGameObject, beginIndex: number = 0, endIndex?: number): IGameObject[]\r\n{\r\n    const children = parent.children;\r\n\r\n    if (endIndex === undefined)\r\n    {\r\n        endIndex = children.length;\r\n    }\r\n\r\n    const range = endIndex - beginIndex;\r\n\r\n    if (range > 0 && range <= endIndex)\r\n    {\r\n        const removed = children.splice(beginIndex, range);\r\n\r\n        removed.forEach(child =>\r\n        {\r\n            child.parent = null;\r\n        });\r\n\r\n        return removed;\r\n    }\r\n    else\r\n    {\r\n        return [];\r\n    }\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildrenBetween } from './RemoveChildrenBetween';\r\n\r\nexport function DestroyChildren (parent: IGameObject, beginIndex: number = 0, endIndex?: number): void\r\n{\r\n    const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n\r\n    removed.forEach(child =>\r\n    {\r\n        child.destroy();\r\n    });\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function FindChildByName (parent: IGameObject, searchString: string): IGameObject | undefined\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n\r\n    for (let i = 0; i < children.length; i++)\r\n    {\r\n        const child = children[i];\r\n\r\n        if (regex.test(child.name))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function FindChildrenByName (parent: IGameObject, searchString: string): IGameObject[]\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n\r\n    const results: IGameObject[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        if (regex.test(child.name))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetAllChildren (parent: IGameObject, property?: string | symbol, value?: never): IGameObject[]\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n\r\n    //  Fast path out of here\r\n    if (!property)\r\n    {\r\n        return children;\r\n    }\r\n\r\n    const results: IGameObject[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetChildAt (parent: IGameObject, index: number): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    if (index < 0 || index > children.length)\r\n    {\r\n        throw new Error(`Index out of bounds: ${index}`);\r\n    }\r\n\r\n    return children[index];\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\n/**\r\n * Get all children from the given parent to one layer deep. Does not go any lower (see GetAllChildren)\r\n *\r\n * The children are returned in a new array. Therefore, modifying this array will not\r\n * mutate the parent.\r\n *\r\n * You can optionally provide a property and value to match against.\r\n *\r\n * @export\r\n * @param {IGameObject} parent\r\n * @param {string} [property]\r\n * @param {never} [value]\r\n * @returns {IGameObject[]}\r\n */\r\nexport function GetChildren (parent: IGameObject, property?: string | symbol, value?: never): IGameObject[]\r\n{\r\n    const children = parent.children;\r\n\r\n    //  Fast path out of here\r\n    if (!property)\r\n    {\r\n        return [ ...children ];\r\n    }\r\n\r\n    const results: IGameObject[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IVec2 } from '../vec2/IVec2';\r\n\r\n/**\r\n * Calculate the distance between two points.\r\n *\r\n * @function Phaser.Math.Distance.BetweenPoints\r\n * @since 3.22.0\r\n *\r\n * @param {IVec2} a - The first point.\r\n * @param {IVec2} b - The second point.\r\n *\r\n * @return {number} The distance between the points.\r\n */\r\nexport function DistanceBetweenPoints (a: IVec2, b: IVec2): number\r\n{\r\n    const dx = a.x - b.x;\r\n    const dy = a.y - b.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n","import { DistanceBetweenPoints } from '../math/distance/DistanceBetweenPoints';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { IVec2 } from '../math/vec2/IVec2';\r\n\r\nexport function GetClosestChild (parent: IGameObject, point: IVec2): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    let closest: IGameObject = null;\r\n    let distance: number = 0;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const childDistance = DistanceBetweenPoints(point, child.transform.position);\r\n\r\n        if (!closest || childDistance < distance)\r\n        {\r\n            closest = child;\r\n            distance = childDistance;\r\n        }\r\n\r\n    });\r\n\r\n    return closest;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetFirstChild (parent: IGameObject, property: string | symbol, value?: never): IGameObject | undefined\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = 0; i < children.length; i++)\r\n    {\r\n        const child = children[i];\r\n\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { DistanceBetweenPoints } from '../math/distance/DistanceBetweenPoints';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { IVec2 } from '../math/vec2/IVec2';\r\n\r\nexport function GetFurthestChild (parent: IGameObject, point: IVec2): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    let furthest: IGameObject = null;\r\n    let distance: number = 0;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const childDistance = DistanceBetweenPoints(point, child.transform.position);\r\n\r\n        if (!furthest || childDistance > distance)\r\n        {\r\n            furthest = child;\r\n            distance = childDistance;\r\n        }\r\n\r\n    });\r\n\r\n    return furthest;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetLastChild (parent: IGameObject, property: string | symbol, value?: never): IGameObject | undefined\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = children.length - 1; i >= 0; i--)\r\n    {\r\n        const child = children[i];\r\n\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetParents (child: IGameObject): IGameObject[]\r\n{\r\n    const parents: IGameObject[] = [];\r\n\r\n    while (child.parent)\r\n    {\r\n        parents.push(child.parent);\r\n\r\n        child = child.parent;\r\n    }\r\n\r\n    return parents;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetRandomChild (parent: IGameObject, startIndex: number = 0, length?: number): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    if (!length)\r\n    {\r\n        length = children.length;\r\n    }\r\n\r\n    const randomIndex = startIndex + Math.floor(Math.random() * length);\r\n\r\n    return children[randomIndex];\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function MoveChildDown <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex > 0)\r\n    {\r\n        const child2 = parentChildren[currentIndex - 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function MoveChildTo <T extends IGameObject> (parent: IGameObject, child: T, index: number): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex === -1 || index < 0 || index >= parentChildren.length)\r\n    {\r\n        throw new Error('Index out of bounds');\r\n    }\r\n\r\n    if (currentIndex !== index)\r\n    {\r\n        //  Remove\r\n        parentChildren.splice(currentIndex, 1);\r\n\r\n        //  Add in new location\r\n        parentChildren.splice(index, 0, child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function MoveChildUp <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex !== -1 && currentIndex > 0)\r\n    {\r\n        //  The child above the one given to this function\r\n        const child2 = parentChildren[currentIndex + 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IRectangle } from '../rectangle/IRectangle';\r\n\r\nexport function RectangleToRectangle (rectA: IRectangle, rectB: IRectangle): boolean\r\n{\r\n    if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RectangleToRectangle } from '../geom/intersects/RectangleToRectangle';\r\n\r\n//  AABB Overlap test using bounds\r\n\r\nexport function Overlap (source: IGameObject, ...targets: IGameObject[]): boolean\r\n{\r\n    const sourceBounds = source.bounds.get();\r\n\r\n    for (let i = 0; i < targets.length; i++)\r\n    {\r\n        const target = targets[i];\r\n        const targetBounds = target.bounds.get();\r\n\r\n        if (RectangleToRectangle(sourceBounds, targetBounds))\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChild } from './RemoveChild';\r\n\r\nexport function RemoveChildren (parent: IGameObject, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        RemoveChild(parent, child);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildAt } from './RemoveChildAt';\r\n\r\nexport function RemoveChildrenAt (parent: IGameObject, ...index: number[]): IGameObject[]\r\n{\r\n    const removed: IGameObject[] = [];\r\n\r\n    //  Sort into numeric order\r\n    index.sort((a, b) => a - b);\r\n\r\n    //  Work through the array in reverse\r\n    index.reverse().forEach(i =>\r\n    {\r\n        const child = RemoveChildAt(parent, i);\r\n\r\n        if (child)\r\n        {\r\n            removed.push(child);\r\n        }\r\n    });\r\n\r\n    return removed;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildrenBetween } from './RemoveChildrenBetween';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function ReparentChildren (parent: IGameObject, newParent: IGameObject, beginIndex: number = 0, endIndex?: number): IGameObject[]\r\n{\r\n    const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n\r\n    SetParent(newParent, ...moved);\r\n\r\n    moved.forEach(child =>\r\n    {\r\n        child.transform.updateWorld();\r\n    });\r\n\r\n    return moved;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RotateChildrenLeft (parent: IGameObject, total: number = 1): IGameObject\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    let child = null;\r\n\r\n    for (let i: number = 0; i < total; i++)\r\n    {\r\n        child = parentChildren.shift();\r\n\r\n        parentChildren.push(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RotateChildrenRight (parent: IGameObject, total: number = 1): IGameObject\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    let child = null;\r\n\r\n    for (let i: number = 0; i < total; i++)\r\n    {\r\n        child = parentChildren.pop();\r\n\r\n        parentChildren.unshift(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SendChildToBack <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex !== -1 && currentIndex > 0)\r\n    {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.unshift(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetBounds (x: number, y: number, width: number, height: number, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.bounds.set(x, y, width, height);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetChildrenValue (parent: IGameObject, property: string | symbol, value: never): IGameObject[]\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor)\r\n        {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetName (name: string, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.name = name;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetOrigin (originX: number, originY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setOrigin(originX, originY);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetPosition (x: number, y: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setPosition(x, y);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetRotation (rotation: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.rotation = rotation;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetScale (scaleX: number, scaleY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setScale(scaleX, scaleY);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetSize (width: number, height: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setSize(width, height);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetSkew (skewX: number, skewY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setSkew(skewX, skewY);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetType (type: string, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.type = type;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetValue (property: string | symbol, value: never, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor)\r\n        {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetVisible (visible: boolean, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.visible = visible;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function ShuffleChildren (parent: IGameObject): IGameObject[]\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = children.length - 1; i > 0; i--)\r\n    {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = children[i];\r\n\r\n        children[i] = children[j];\r\n        children[j] = temp;\r\n\r\n        temp.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SwapChildren (child1: IGameObject, child2: IGameObject): void\r\n{\r\n    if (child1.parent === child2.parent)\r\n    {\r\n        const children = child1.parent.children;\r\n\r\n        const index1 = GetChildIndex(child1.parent, child1);\r\n        const index2 = GetChildIndex(child2.parent, child2);\r\n\r\n        if (index1 !== index2)\r\n        {\r\n            children[index1] = child2;\r\n            children[index2] = child1;\r\n        }\r\n    }\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function ClearEvent (emitter: IEventEmitter, event: string): IEventEmitter\r\n{\r\n    emitter.events.delete(event);\r\n\r\n    return emitter;\r\n}\r\n","import { IEventInstance } from './IEventInstance';\r\n\r\nexport class EventEmitter\r\n{\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    constructor ()\r\n    {\r\n        this.events = new Map();\r\n    }\r\n}\r\n","export class EventInstance\r\n{\r\n    callback: Function;\r\n    context: unknown;\r\n    once: boolean;\r\n\r\n    constructor (callback: Function, context: unknown, once: boolean = false)\r\n    {\r\n        this.callback = callback;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetEventNames (emitter: IEventEmitter): string[]\r\n{\r\n    return [ ...emitter.events.keys() ];\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetListenerCount (emitter: IEventEmitter, event: string): number\r\n{\r\n    const listeners = emitter.events.get(event);\r\n\r\n    return (listeners) ? listeners.size : 0;\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetListeners (emitter: IEventEmitter, event: string): Function[]\r\n{\r\n    const out: Function[] = [];\r\n\r\n    const listeners = emitter.events.get(event);\r\n\r\n    listeners.forEach(listener =>\r\n    {\r\n        out.push(listener.callback);\r\n    });\r\n\r\n    return out;\r\n}\r\n","import { EventInstance } from './EventInstance';\r\nimport { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\n\r\nexport function Off (emitter: IEventEmitter, event: string, callback?: Function | IEventInstance, context?: unknown, once?: boolean): IEventEmitter\r\n{\r\n    const events = emitter.events;\r\n    const listeners = events.get(event);\r\n\r\n    if (!callback)\r\n    {\r\n        //  Remove all events matching the given key\r\n        events.delete(event);\r\n    }\r\n    else if (callback instanceof EventInstance)\r\n    {\r\n        listeners.delete(callback as IEventInstance);\r\n    }\r\n    else\r\n    {\r\n        const hasContext: boolean = !context;\r\n        const hasOnce: boolean = (once !== undefined);\r\n\r\n        for (const listener of listeners)\r\n        {\r\n            if (\r\n                (listener.callback === callback) &&\r\n                (hasContext && listener.context === context) &&\r\n                (hasOnce && listener.once === once)\r\n            )\r\n            {\r\n                listeners.delete(listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (listeners.size === 0)\r\n    {\r\n        events.delete(event);\r\n    }\r\n\r\n    return emitter;\r\n}\r\n","import { EventInstance } from './EventInstance';\r\nimport { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\n\r\nexport function On (emitter: IEventEmitter, event: string, callback: Function, context: unknown = emitter, once: boolean = false): IEventInstance\r\n{\r\n    if (typeof callback !== 'function')\r\n    {\r\n        throw new TypeError('Listener not a function');\r\n    }\r\n\r\n    const listener = new EventInstance(callback, context, once);\r\n    const listeners = emitter.events.get(event);\r\n\r\n    if (!listeners)\r\n    {\r\n        emitter.events.set(event, new Set([ listener ]));\r\n    }\r\n    else\r\n    {\r\n        listeners.add(listener);\r\n    }\r\n\r\n    return listener;\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\nimport { On } from './On';\r\n\r\nexport function Once (emitter: IEventEmitter, event: string, callback: Function, context: unknown = emitter): IEventInstance\r\n{\r\n    return On(emitter, event, callback, context, true);\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function RemoveAllListeners (emitter: IEventEmitter, event?: string): void\r\n{\r\n    if (!event)\r\n    {\r\n        emitter.events.clear();\r\n    }\r\n    else\r\n    {\r\n        emitter.events.delete(event);\r\n    }\r\n}\r\n","import { ITransformComponent } from './ITransformComponent';\r\nimport { VertexSet } from './VertexSet';\r\n\r\nexport function GetVertices (transform: ITransformComponent): VertexSet\r\n{\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y, right, bottom } = transform.extent;\r\n\r\n    const x0 = (x * a) + (y * c) + tx;\r\n    const y0 = (x * b) + (y * d) + ty;\r\n\r\n    const x1 = (x * a) + (bottom * c) + tx;\r\n    const y1 = (x * b) + (bottom * d) + ty;\r\n\r\n    const x2 = (right * a) + (bottom * c) + tx;\r\n    const y2 = (right * b) + (bottom * d) + ty;\r\n\r\n    const x3 = (right * a) + (y * c) + tx;\r\n    const y3 = (right * b) + (y * d) + ty;\r\n\r\n    return { x0, y0, x1, y1, x2, y2, x3, y3 };\r\n}\r\n","import { DIRTY_CONST } from '../../DIRTY_CONST';\r\nimport { GetVertices } from '../transform/GetVertices';\r\nimport { IBoundsComponent } from './IBoundsComponent';\r\nimport { IGameObject } from '../../IGameObject';\r\nimport { Rectangle } from '../../../geom/rectangle/Rectangle';\r\n\r\nexport class BoundsComponent implements IBoundsComponent\r\n{\r\n    entity: IGameObject;\r\n\r\n    //  The bounds of the entity calculated in world space\r\n    private area: Rectangle;\r\n\r\n    fixed: boolean = false;\r\n\r\n    includeChildren: boolean = true;\r\n\r\n    visibleOnly: boolean = true;\r\n\r\n    constructor (entity: IGameObject)\r\n    {\r\n        this.entity = entity;\r\n\r\n        this.area = new Rectangle();\r\n    }\r\n\r\n    set (x: number, y: number, width: number, height: number): void\r\n    {\r\n        this.area.set(x, y, width, height);\r\n    }\r\n\r\n    get (): Rectangle\r\n    {\r\n        if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed)\r\n        {\r\n            this.update();\r\n        }\r\n\r\n        return this.area;\r\n    }\r\n\r\n    updateLocal (): Rectangle\r\n    {\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(this.entity.transform);\r\n\r\n        const x = Math.min(x0, x1, x2, x3);\r\n        const y = Math.min(y0, y1, y2, y3);\r\n        const right = Math.max(x0, x1, x2, x3);\r\n        const bottom = Math.max(y0, y1, y2, y3);\r\n\r\n        return this.area.set(\r\n            x,\r\n            y,\r\n            right - x,\r\n            bottom - y\r\n        );\r\n    }\r\n\r\n    update (): Rectangle\r\n    {\r\n        //  First we get the bounds for this Game Object\r\n        const bounds = this.updateLocal();\r\n\r\n        this.entity.clearDirty(DIRTY_CONST.BOUNDS);\r\n\r\n        if (!this.includeChildren || !this.entity.numChildren)\r\n        {\r\n            return bounds;\r\n        }\r\n\r\n        const visibleOnly = this.visibleOnly;\r\n        const children = this.entity.children;\r\n\r\n        let x = bounds.x;\r\n        let y = bounds.y;\r\n        let right = bounds.right;\r\n        let bottom = bounds.bottom;\r\n\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            const child = children[i];\r\n\r\n            if (!child || (visibleOnly && !child.visible))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            const childBounds = child.bounds.get();\r\n\r\n            if (childBounds.x < x)\r\n            {\r\n                x = childBounds.x;\r\n            }\r\n\r\n            if (childBounds.y < y)\r\n            {\r\n                y = childBounds.y;\r\n            }\r\n\r\n            if (childBounds.right > right)\r\n            {\r\n                right = childBounds.right;\r\n            }\r\n\r\n            if (childBounds.bottom > bottom)\r\n            {\r\n                bottom = childBounds.bottom;\r\n            }\r\n        }\r\n\r\n        return bounds.set(\r\n            x,\r\n            y,\r\n            right - x,\r\n            bottom - y\r\n        );\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.entity = null;\r\n        this.area = null;\r\n    }\r\n}\r\n","import { IGameObject } from '../../IGameObject';\r\nimport { IInputComponent } from './IInputComponent';\r\nimport { IInteractiveArea } from '../../../input/IInteractiveArea';\r\n\r\nexport class InputComponent implements IInputComponent\r\n{\r\n    entity: IGameObject;\r\n    enabled: boolean = false;\r\n    enabledChildren: boolean = true;\r\n    hitArea: IInteractiveArea;\r\n\r\n    constructor (entity: IGameObject)\r\n    {\r\n        this.entity = entity;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.entity = null;\r\n        this.hitArea = null;\r\n    }\r\n}\r\n","export class Vec2\r\n{\r\n    /**\r\n     * X component\r\n     *\r\n     * @type {number}\r\n     * @memberof Vec2\r\n     */\r\n    x: number;\r\n\r\n    /**\r\n     * Y component\r\n     *\r\n     * @type {number}\r\n     * @memberof Vec2\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * Creates an instance of a Vector2.\r\n     *\r\n     * @param {number} [x=0] - X component\r\n     * @param {number} [y=0] - Y component\r\n     * @memberof Vec2\r\n     */\r\n    constructor (x: number = 0, y: number = 0)\r\n    {\r\n        this.set(x, y);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a new array containg the Vector2 component values.\r\n     *\r\n     * @returns {number[]}\r\n     * @memberof Vec2\r\n     */\r\n    getArray (): number[]\r\n    {\r\n        return [ this.x, this.y ];\r\n    }\r\n\r\n    /**\r\n     * Sets the values of this Vector2 based on the given array, or array-like object, such as a Float32.\r\n     *\r\n     * The source must have 2 elements, starting from index 0 through to index 1.\r\n     *\r\n     * @param {number[]} src - The source array to copy the values from.\r\n     * @returns {Vec2}\r\n     * @memberof Vec2\r\n     */\r\n    fromArray (src: number[]): this\r\n    {\r\n        return this.set(src[0], src[1]);\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        return `[x=${this.x}, y=${this.y}]`;\r\n    }\r\n}\r\n","export let originX = 0.5;\r\nexport let originY = 0.5;\r\n\r\nexport function DefaultOrigin (x: number = 0.5, y: number = x): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        originX = x;\r\n        originY = y;\r\n    };\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from './const';\r\n\r\n/**\r\n * Convert the given angle from degrees, to the equivalent angle in radians.\r\n *\r\n * @function Phaser.Math.DegToRad\r\n * @since 3.0.0\r\n *\r\n * @param {number} degrees - The angle (in degrees) to convert to radians.\r\n *\r\n * @return {number} The given angle converted to radians.\r\n */\r\nexport function DegToRad (degrees: number): number\r\n{\r\n    return degrees * MATH_CONST.DEG_TO_RAD;\r\n}\r\n","export function Between (min: number, max: number): number\r\n{\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import { ITransformComponent } from './ITransformComponent';\r\n\r\nexport function UpdateLocalTransform (transform: ITransformComponent): void\r\n{\r\n    const local = transform.local;\r\n\r\n    const x = transform.position.x;\r\n    const y = transform.position.y;\r\n    const rotation = transform.rotation;\r\n    const scaleX = transform.scale.x;\r\n    const scaleY = transform.scale.y;\r\n    const skewX = transform.skew.x;\r\n    const skewY = transform.skew.y;\r\n\r\n    local.set(\r\n        Math.cos(rotation + skewY) * scaleX,\r\n        Math.sin(rotation + skewY) * scaleX,\r\n        -Math.sin(rotation - skewX) * scaleY,\r\n        Math.cos(rotation - skewX) * scaleY,\r\n        x,\r\n        y\r\n    );\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Copy the values from the src Matrix to the target Matrix and return the target Matrix.\r\n\r\nexport function Copy (src: IMatrix2D, target: IMatrix2D): IMatrix2D\r\n{\r\n    return target.set(src.a, src.b, src.c, src.d, src.tx, src.ty);\r\n}\r\n","import { Copy } from '../../../math/matrix2d/Copy';\r\nimport { IGameObject } from '../../IGameObject';\r\n\r\nexport function UpdateWorldTransform (gameObject: IGameObject): void\r\n{\r\n    const parent = gameObject.parent;\r\n    const transform = gameObject.transform;\r\n\r\n    const lt = transform.local;\r\n    const wt = transform.world;\r\n\r\n    if (!parent)\r\n    {\r\n        Copy(lt, wt);\r\n    }\r\n    else if (transform.passthru)\r\n    {\r\n        Copy(parent.transform.world, wt);\r\n    }\r\n    else\r\n    {\r\n        const { a, b, c, d, tx, ty } = lt;\r\n        const { a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty } = parent.transform.world;\r\n\r\n        wt.set(\r\n            a  * pa + b  * pc,\r\n            a  * pb + b  * pd,\r\n            c  * pa + d  * pc,\r\n            c  * pb + d  * pd,\r\n            tx * pa + ty * pc + ptx,\r\n            tx * pb + ty * pd + pty\r\n        );\r\n    }\r\n}\r\n","import { Vec2, Vec2Callback } from '../../../math/vec2';\r\nimport { originX, originY } from '../../../config/DefaultOrigin';\r\n\r\nimport { DIRTY_CONST } from '../../DIRTY_CONST';\r\nimport { IGameObject } from '../../IGameObject';\r\nimport { ITransformComponent } from './ITransformComponent';\r\nimport { Matrix2D } from '../../../math/matrix2d/Matrix2D';\r\nimport { Rectangle } from '../../../geom/rectangle';\r\nimport { UpdateLocalTransform } from './UpdateLocalTransform';\r\nimport { UpdateWorldTransform } from './UpdateWorldTransform';\r\n\r\nexport class TransformComponent implements ITransformComponent\r\n{\r\n    entity: IGameObject;\r\n\r\n    //  This should be treated as read-only, it is always perfectly in sync with the properties in this class\r\n    local: Matrix2D;\r\n\r\n    world: Matrix2D;\r\n\r\n    position: Vec2Callback;\r\n    scale: Vec2Callback;\r\n    skew: Vec2Callback;\r\n    origin: Vec2Callback;\r\n    extent: Rectangle;\r\n\r\n    passthru: boolean = false;\r\n\r\n    private _rotation: number = 0;\r\n\r\n    constructor (entity: IGameObject, x: number = 0, y: number = 0)\r\n    {\r\n        this.entity = entity;\r\n\r\n        this.local = new Matrix2D();\r\n        this.world = new Matrix2D();\r\n\r\n        this.position = new Vec2Callback(() => this.update(), x, y);\r\n        this.scale = new Vec2Callback(() => this.update(), 1, 1, true);\r\n        this.skew = new Vec2Callback(() => this.update(), 0, 0, true);\r\n        this.origin = new Vec2Callback(() => this.updateExtent(), originX, originY);\r\n\r\n        this.extent = new Rectangle();\r\n    }\r\n\r\n    update (): void\r\n    {\r\n        this.updateLocal();\r\n        this.updateWorld();\r\n    }\r\n\r\n    updateLocal (): void\r\n    {\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n\r\n        UpdateLocalTransform(this);\r\n    }\r\n\r\n    updateWorld (): void\r\n    {\r\n        const entity = this.entity;\r\n\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n\r\n        UpdateWorldTransform(entity);\r\n\r\n        if (entity.numChildren)\r\n        {\r\n            this.updateChildren();\r\n        }\r\n    }\r\n\r\n    updateChildren (): void\r\n    {\r\n        //  Sweep all children - by this point our local and world transforms are correct\r\n        const children = this.entity.children;\r\n\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            const child = children[i];\r\n\r\n            child.transform.updateWorld();\r\n        }\r\n    }\r\n\r\n    globalToLocal (x: number, y: number, out: Vec2 = new Vec2()): Vec2\r\n    {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n\r\n        const id: number = 1 / ((a * d) + (c * -b));\r\n\r\n        out.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\r\n        out.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\r\n\r\n        return out;\r\n    }\r\n\r\n    localToGlobal (x: number, y: number, out: Vec2 = new Vec2()): Vec2\r\n    {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n\r\n        out.x = (a * x) + (c * y) + tx;\r\n        out.y = (b * x) + (d * y) + ty;\r\n\r\n        return out;\r\n    }\r\n\r\n    //  The area covered by this transform component + origin + size (usually from a Frame)\r\n    setExtent (x: number, y: number, width: number, height: number): void\r\n    {\r\n        this.extent.set(x, y, width, height);\r\n\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n\r\n    updateExtent (width?: number, height?: number): void\r\n    {\r\n        const extent = this.extent;\r\n        const entity = this.entity;\r\n\r\n        if (width !== undefined)\r\n        {\r\n            extent.width = width;\r\n        }\r\n\r\n        if (height !== undefined)\r\n        {\r\n            extent.height = height;\r\n        }\r\n\r\n        extent.x = -(this.origin.x) * extent.width;\r\n        extent.y = -(this.origin.y) * extent.height;\r\n\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n\r\n    set rotation (value: number)\r\n    {\r\n        if (value !== this._rotation)\r\n        {\r\n            this._rotation = value;\r\n\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get rotation (): number\r\n    {\r\n        return this._rotation;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.skew.destroy();\r\n        this.origin.destroy();\r\n\r\n        this.entity = null;\r\n        this.local = null;\r\n        this.world = null;\r\n        this.position = null;\r\n        this.scale = null;\r\n        this.skew = null;\r\n        this.origin = null;\r\n        this.extent = null;\r\n    }\r\n}\r\n","import { ISprite } from '../../../gameobjects/sprite/ISprite';\r\nimport { IWebGLRenderer } from '../IWebGLRenderer';\r\n\r\nexport function BatchTexturedQuad <T extends ISprite> (sprite: T, renderer: IWebGLRenderer): void\r\n{\r\n    const texture = sprite.texture;\r\n    const shader = renderer.shaders.current;\r\n    const buffer = shader.buffer;\r\n    const binding = texture.binding;\r\n\r\n    if (shader.count === buffer.batchSize)\r\n    {\r\n        renderer.flush();\r\n    }\r\n\r\n    const data = sprite.vertexData;\r\n\r\n    renderer.textures.request(texture);\r\n\r\n    const textureIndex = binding.index;\r\n\r\n    //  Inject the texture ID\r\n    data[4] = textureIndex;\r\n    data[10] = textureIndex;\r\n    data[16] = textureIndex;\r\n    data[22] = textureIndex;\r\n\r\n    const offset = shader.count * buffer.quadElementSize;\r\n\r\n    //  Copy the data to the array buffer\r\n    buffer.vertexViewF32.set(data, offset);\r\n\r\n    const color = sprite.vertexColor;\r\n    const U32 = buffer.vertexViewU32;\r\n\r\n    //  Copy the vertex colors to the Uint32 view (as the data copy above overwrites them)\r\n    U32[offset + 5] = color[0];\r\n    U32[offset + 11] = color[2];\r\n    U32[offset + 17] = color[3];\r\n    U32[offset + 23] = color[1];\r\n\r\n    shader.count++;\r\n}\r\n","import { BoundsComponent, InputComponent, TransformComponent } from './components';\r\n\r\nimport { DIRTY_CONST } from './DIRTY_CONST';\r\nimport { DestroyChildren } from '../display/DestroyChildren';\r\nimport { DestroyEvent } from './events/DestroyEvent';\r\nimport { Emit } from '../events';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { IBaseWorld } from '../world/IBaseWorld';\r\nimport { IBoundsComponent } from './components/bounds/IBoundsComponent';\r\nimport { ICanvasRenderer } from '../renderer/canvas/ICanvasRenderer';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IGameObject } from './IGameObject';\r\nimport { IInputComponent } from './components/input/IInputComponent';\r\nimport { ITransformComponent } from './components/transform/ITransformComponent';\r\nimport { IWebGLRenderer } from '../renderer/webgl1/IWebGLRenderer';\r\nimport { ReparentChildren } from '../display/ReparentChildren';\r\n\r\nexport class GameObject\r\n{\r\n    type: string = 'GameObject';\r\n    name: string = '';\r\n\r\n    //  The World this Game Object belongs to. A Game Object can only belong to one World instance at any one time.\r\n    world: IBaseWorld;\r\n\r\n    //  The direct parent of this Game Object in the scene graph (if any)\r\n    parent: IGameObject;\r\n\r\n    children: IGameObject[];\r\n\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    willUpdate: boolean = true;\r\n    willUpdateChildren: boolean = true;\r\n\r\n    willRender: boolean = true;\r\n    willRenderChildren: boolean = true;\r\n    willCacheChildren: boolean = false;\r\n\r\n    dirty: number = 0;\r\n    dirtyFrame: number = 0;\r\n\r\n    transform: ITransformComponent;\r\n    bounds: IBoundsComponent;\r\n    input: IInputComponent;\r\n\r\n    visible: boolean = true;\r\n\r\n    constructor (x: number = 0, y: number = 0)\r\n    {\r\n        this.children = [];\r\n\r\n        this.events = new Map();\r\n\r\n        this.transform = new TransformComponent(this, x, y);\r\n        this.bounds = new BoundsComponent(this);\r\n        this.input = new InputComponent(this);\r\n\r\n        this.dirty = DIRTY_CONST.DEFAULT;\r\n\r\n        this.transform.update();\r\n    }\r\n\r\n    isRenderable (): boolean\r\n    {\r\n        return (this.visible && this.willRender);\r\n    }\r\n\r\n    isDirty (flag: number): boolean\r\n    {\r\n        return (this.dirty & flag) !== 0;\r\n    }\r\n\r\n    clearDirty (flag: number): this\r\n    {\r\n        if (this.isDirty(flag))\r\n        {\r\n            this.dirty ^= flag;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setDirty (flag: number, flag2?: number): this\r\n    {\r\n        if (!this.isDirty(flag))\r\n        {\r\n            this.dirty ^= flag;\r\n            this.dirtyFrame = GameInstance.getFrame();\r\n        }\r\n\r\n        if (!this.isDirty(flag2))\r\n        {\r\n            this.dirty ^= flag2;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        if (this.willUpdateChildren)\r\n        {\r\n            const children = this.children;\r\n\r\n            for (let i = 0; i < children.length; i++)\r\n            {\r\n                const child = children[i];\r\n\r\n                if (child && child.willUpdate)\r\n                {\r\n                    child.update(delta, time);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.postUpdate(delta, time);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postUpdate (delta: number, time: number): void\r\n    {\r\n        //  Empty for parent classes to use.\r\n        //  Called after this GameObject and all of its children have been updated.\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    renderGL <T extends IWebGLRenderer> (renderer: T): void\r\n    {\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    renderCanvas <T extends ICanvasRenderer> (renderer: T): void\r\n    {\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postRenderGL <T extends IWebGLRenderer> (renderer: T): void\r\n    {\r\n        //  Called after this GameObject and all of its children have been rendered.\r\n        //  If it doesn't have any children, this method is never called.\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postRenderCanvas <T extends ICanvasRenderer> (renderer: T): void\r\n    {\r\n        //  Called after this GameObject and all of its children have been rendered.\r\n        //  If it doesn't have any children, this method is never called.\r\n    }\r\n\r\n    get numChildren (): number\r\n    {\r\n        return this.children.length;\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject): void\r\n    {\r\n        if (reparentChildren)\r\n        {\r\n            ReparentChildren(this, reparentChildren);\r\n        }\r\n        else\r\n        {\r\n            DestroyChildren(this);\r\n        }\r\n\r\n        Emit(this, DestroyEvent, this);\r\n\r\n        this.transform.destroy();\r\n        this.bounds.destroy();\r\n        this.input.destroy();\r\n\r\n        this.events.clear();\r\n\r\n        this.world = null;\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\r\n","import { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { GameObject } from '../GameObject';\r\nimport { IContainer } from './IContainer';\r\n\r\nexport class Container extends GameObject implements IContainer\r\n{\r\n    protected _alpha: number = 1;\r\n\r\n    constructor (x: number = 0, y: number = 0)\r\n    {\r\n        super(x, y);\r\n\r\n        this.type = 'Container';\r\n    }\r\n\r\n    setSize (width: number, height: number = width): this\r\n    {\r\n        this.transform.updateExtent(width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    setPosition (x: number, y: number): this\r\n    {\r\n        this.transform.position.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setOrigin (x: number, y: number = x): this\r\n    {\r\n        this.transform.origin.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setSkew (x: number, y: number = x): this\r\n    {\r\n        this.transform.skew.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setScale (x: number, y: number = x): this\r\n    {\r\n        this.transform.scale.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setRotation (value: number): this\r\n    {\r\n        this.transform.rotation = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    set width (value: number)\r\n    {\r\n        this.transform.updateExtent(value);\r\n    }\r\n\r\n    get width (): number\r\n    {\r\n        return this.transform.extent.width;\r\n    }\r\n\r\n    set height (value: number)\r\n    {\r\n        this.transform.updateExtent(undefined, value);\r\n    }\r\n\r\n    get height (): number\r\n    {\r\n        return this.transform.extent.height;\r\n    }\r\n\r\n    set x (value: number)\r\n    {\r\n        this.transform.position.x = value;\r\n    }\r\n\r\n    get x (): number\r\n    {\r\n        return this.transform.position.x;\r\n    }\r\n\r\n    set y (value: number)\r\n    {\r\n        this.transform.position.y = value;\r\n    }\r\n\r\n    get y (): number\r\n    {\r\n        return this.transform.position.y;\r\n    }\r\n\r\n    set originX (value: number)\r\n    {\r\n        this.transform.origin.x = value;\r\n    }\r\n\r\n    get originX (): number\r\n    {\r\n        return this.transform.origin.x;\r\n    }\r\n\r\n    set originY (value: number)\r\n    {\r\n        this.transform.origin.y = value;\r\n    }\r\n\r\n    get originY (): number\r\n    {\r\n        return this.transform.origin.y;\r\n    }\r\n\r\n    set skewX (value: number)\r\n    {\r\n        this.transform.skew.x = value;\r\n    }\r\n\r\n    get skewX (): number\r\n    {\r\n        return this.transform.skew.x;\r\n    }\r\n\r\n    set skewY (value: number)\r\n    {\r\n        this.transform.skew.y = value;\r\n    }\r\n\r\n    get skewY (): number\r\n    {\r\n        return this.transform.skew.y;\r\n    }\r\n\r\n    set scaleX (value: number)\r\n    {\r\n        this.transform.scale.x = value;\r\n    }\r\n\r\n    get scaleX (): number\r\n    {\r\n        return this.transform.scale.x;\r\n    }\r\n\r\n    set scaleY (value: number)\r\n    {\r\n        this.transform.scale.y = value;\r\n    }\r\n\r\n    get scaleY (): number\r\n    {\r\n        return this.transform.scale.y;\r\n    }\r\n\r\n    set rotation (value: number)\r\n    {\r\n        this.transform.rotation = value;\r\n    }\r\n\r\n    get rotation (): number\r\n    {\r\n        return this.transform.rotation;\r\n    }\r\n\r\n    get alpha (): number\r\n    {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha (value: number)\r\n    {\r\n        if (value !== this._alpha)\r\n        {\r\n            this._alpha = value;\r\n\r\n            //  TODO - Switch to Alpha or Colors dirty flag instead\r\n            this.setDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n}\r\n","import { ICanvasRenderer } from '../ICanvasRenderer';\r\nimport { ISprite } from '../../../gameobjects/sprite/ISprite';\r\n\r\nexport function DrawTexturedQuad <T extends ISprite> (sprite: T, renderer: ICanvasRenderer): void\r\n{\r\n    const frame = sprite.frame;\r\n\r\n    if (!frame)\r\n    {\r\n        return;\r\n    }\r\n\r\n    const ctx = renderer.ctx;\r\n\r\n    const transform = sprite.transform;\r\n\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y } = transform.extent;\r\n\r\n    ctx.save();\r\n\r\n    ctx.setTransform(a, b, c, d, tx, ty);\r\n\r\n    ctx.globalAlpha = sprite.alpha;\r\n\r\n    ctx.drawImage(frame.texture.image as HTMLImageElement, frame.x, frame.y, frame.width, frame.height, x, y, frame.width, frame.height);\r\n\r\n    ctx.restore();\r\n}\r\n","export function PackColor (rgb: number, alpha: number): number\r\n{\r\n    const ua = ((alpha * 255) | 0) & 0xFF;\r\n\r\n    return ((ua << 24) | rgb) >>> 0;\r\n}\r\n","import { ISprite } from '../../../gameobjects/sprite/ISprite';\r\nimport { PackColor } from './PackColor';\r\n\r\nexport function PackColors <T extends ISprite> (sprite: T): T\r\n{\r\n    const alpha = sprite.vertexAlpha;\r\n    const tint = sprite.vertexTint;\r\n    const color = sprite.vertexColor;\r\n\r\n    //  In lots of cases, this *never* changes, so cache it here:\r\n    color[0] = PackColor(tint[0], alpha[0]);\r\n    color[1] = PackColor(tint[1], alpha[1]);\r\n    color[2] = PackColor(tint[2], alpha[2]);\r\n    color[3] = PackColor(tint[3], alpha[3]);\r\n\r\n    return sprite;\r\n}\r\n","import { Frame } from '../../textures/Frame';\r\nimport { ISprite } from './ISprite';\r\nimport { Texture } from '../../textures';\r\n\r\nexport function SetFrame <T extends ISprite> (texture: Texture, key?: string | number | Frame, ...children: T[]): T[]\r\n{\r\n    const frame = texture.getFrame(key);\r\n\r\n    const { u0, u1, v0, v1, pivot } = frame;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        if (!child || frame === child.frame)\r\n        {\r\n            return;\r\n        }\r\n\r\n        child.frame = frame;\r\n\r\n        if (pivot)\r\n        {\r\n            child.setOrigin(pivot.x, pivot.y);\r\n        }\r\n\r\n        child.frame.setExtent(child);\r\n\r\n        child.hasTexture = true;\r\n\r\n        const data = child.vertexData;\r\n\r\n        //  This rarely changes, so we'll set it here, rather than every game step:\r\n\r\n        data[2] = u0;\r\n        data[3] = v0;\r\n\r\n        data[8] = u0;\r\n        data[9] = v1;\r\n\r\n        data[14] = u1;\r\n        data[15] = v1;\r\n\r\n        data[20] = u1;\r\n        data[21] = v0;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { ITexture } from '../textures/ITexture';\r\n\r\nconst queue: ITexture[] = [];\r\n\r\nexport const BindingQueue =\r\n{\r\n    add: (texture: ITexture): void =>\r\n    {\r\n        queue.push(texture);\r\n    },\r\n\r\n    get: (): ITexture[] =>\r\n    {\r\n        return queue;\r\n    },\r\n\r\n    clear: (): void =>\r\n    {\r\n        queue.length = 0;\r\n    }\r\n};\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { Texture } from './Texture';\r\n\r\nexport class Frame\r\n{\r\n    texture: Texture;\r\n    key: string | number;\r\n\r\n    //  This is the actual area of the texture to draw to canvas / webgl, including any extruded data.\r\n    //  This is the same as the 'trimmed' + 'extruded' area from an atlas.\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    trimmed: boolean = false;\r\n\r\n    //  Original size of the image before being trimmed or added to an atlas (which can add extrude data to it).\r\n    sourceSizeWidth: number;\r\n    sourceSizeHeight: number;\r\n\r\n    //  The size of the image having been trimmed, before being added to the atlas (i.e. doesn't have any extrusion values in it)\r\n    spriteSourceSizeX: number;\r\n    spriteSourceSizeY: number;\r\n    spriteSourceSizeWidth: number;\r\n    spriteSourceSizeHeight: number;\r\n\r\n    pivot: { x: number; y: number };\r\n\r\n    u0: number;\r\n    v0: number;\r\n    u1: number;\r\n    v1: number;\r\n\r\n    constructor (texture: Texture, key: string | number, x: number, y: number, width: number, height: number)\r\n    {\r\n        this.texture = texture;\r\n        this.key = key;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n\r\n        this.updateUVs();\r\n    }\r\n\r\n    setPivot (x: number, y: number): void\r\n    {\r\n        this.pivot = { x, y };\r\n    }\r\n\r\n    setSize (width: number, height: number): void\r\n    {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n\r\n        this.updateUVs();\r\n    }\r\n\r\n    setSourceSize (width: number, height: number): void\r\n    {\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n    }\r\n\r\n    setTrim (width: number, height: number, x: number, y: number, w: number, h: number): void\r\n    {\r\n        this.trimmed = true;\r\n\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n\r\n        this.spriteSourceSizeX = x;\r\n        this.spriteSourceSizeY = y;\r\n        this.spriteSourceSizeWidth = w;\r\n        this.spriteSourceSizeHeight = h;\r\n    }\r\n\r\n    getExtent (originX: number, originY: number): { left: number; right: number; top: number; bottom: number }\r\n    {\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n\r\n        let left: number;\r\n        let right: number;\r\n        let top: number;\r\n        let bottom: number;\r\n\r\n        if (this.trimmed)\r\n        {\r\n            left = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            right = left + this.spriteSourceSizeWidth;\r\n\r\n            top = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            bottom = top + this.spriteSourceSizeHeight;\r\n        }\r\n        else\r\n        {\r\n            left = -originX * sourceSizeWidth;\r\n            right = left + sourceSizeWidth;\r\n\r\n            top = -originY * sourceSizeHeight;\r\n            bottom = top + sourceSizeHeight;\r\n        }\r\n\r\n        return { left, right, top, bottom };\r\n    }\r\n\r\n    setExtent (child: IGameObject): void\r\n    {\r\n        const transform = child.transform;\r\n\r\n        const originX = transform.origin.x;\r\n        const originY = transform.origin.y;\r\n\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n\r\n        let x: number;\r\n        let y: number;\r\n        let width: number;\r\n        let height: number;\r\n\r\n        if (this.trimmed)\r\n        {\r\n            x = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            y = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n\r\n            width = this.spriteSourceSizeWidth;\r\n            height = this.spriteSourceSizeHeight;\r\n        }\r\n        else\r\n        {\r\n            x = -originX * sourceSizeWidth;\r\n            y = -originY * sourceSizeHeight;\r\n\r\n            width = sourceSizeWidth;\r\n            height = sourceSizeHeight;\r\n        }\r\n\r\n        transform.setExtent(x, y, width, height);\r\n    }\r\n\r\n    updateUVs (): void\r\n    {\r\n        const { x, y, width, height } = this;\r\n\r\n        const baseTextureWidth = this.texture.width;\r\n        const baseTextureHeight = this.texture.height;\r\n\r\n        this.u0 = x / baseTextureWidth;\r\n        this.v0 = y / baseTextureHeight;\r\n\r\n        this.u1 = (x + width) / baseTextureWidth;\r\n        this.v1 = (y + height) / baseTextureHeight;\r\n    }\r\n}\r\n","import { BindingQueue } from '../renderer/BindingQueue';\r\nimport { Frame } from './Frame';\r\nimport { IGLTextureBinding } from '../renderer/webgl1/textures/IGLTextureBinding';\r\nimport { ITexture } from './ITexture';\r\n\r\nexport class Texture implements ITexture\r\n{\r\n    //  Unique identifier of this Texture, if stored in the Texture Manager\r\n    key: string = '';\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    image: TexImageSource;\r\n\r\n    binding: IGLTextureBinding;\r\n\r\n    firstFrame: Frame;\r\n\r\n    frames: Map<string | number, Frame>;\r\n\r\n    data: unknown;\r\n\r\n    constructor (image?: TexImageSource, width?: number, height?: number)\r\n    {\r\n        if (image)\r\n        {\r\n            width = image.width;\r\n            height = image.height;\r\n        }\r\n\r\n        this.image = image;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.frames = new Map();\r\n\r\n        this.data = {};\r\n\r\n        this.addFrame('__BASE', 0, 0, width, height);\r\n\r\n        BindingQueue.add(this);\r\n    }\r\n\r\n    addFrame (key: string | number, x: number, y: number, width: number, height: number): Frame\r\n    {\r\n        if (this.frames.has(key))\r\n        {\r\n            return null;\r\n        }\r\n\r\n        const frame = new Frame(this, key, x, y, width, height);\r\n\r\n        this.frames.set(key, frame);\r\n\r\n        if (!this.firstFrame || this.firstFrame.key === '__BASE')\r\n        {\r\n            this.firstFrame = frame;\r\n        }\r\n\r\n        return frame;\r\n    }\r\n\r\n    getFrame (key?: string | number | Frame): Frame\r\n    {\r\n        //  null, undefined, empty string, zero\r\n        if (!key)\r\n        {\r\n            return this.firstFrame;\r\n        }\r\n\r\n        if (key instanceof Frame)\r\n        {\r\n            key = key.key;\r\n        }\r\n\r\n        let frame: Frame = this.frames.get(key);\r\n\r\n        if (!frame)\r\n        {\r\n            console.warn(`Frame missing: ${key}`);\r\n\r\n            frame = this.firstFrame;\r\n        }\r\n\r\n        return frame;\r\n    }\r\n\r\n    setSize (width: number, height: number): void\r\n    {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const frame = this.frames.get('__BASE');\r\n\r\n        frame.setSize(width, height);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        if (this.binding)\r\n        {\r\n            this.binding.destroy();\r\n        }\r\n\r\n        this.frames.clear();\r\n\r\n        this.data = null;\r\n        this.image = null;\r\n        this.firstFrame = null;\r\n    }\r\n}\r\n","import { TextureManager } from './TextureManager';\r\n\r\nlet instance: TextureManager;\r\n\r\nexport const TextureManagerInstance =\r\n{\r\n    get: (): TextureManager =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (manager: TextureManager | null): void =>\r\n    {\r\n        instance = manager;\r\n    }\r\n};\r\n","import { Frame } from '../../textures/Frame';\r\nimport { ISprite } from './ISprite';\r\nimport { SetFrame } from './SetFrame';\r\nimport { Texture } from '../../textures/Texture';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\n\r\nexport function SetTexture <T extends ISprite> (key: string | Texture, frame: string | number | Frame, ...children: T[]): T[]\r\n{\r\n    if (!key)\r\n    {\r\n        //  Remove texture from all children\r\n        children.forEach(child =>\r\n        {\r\n            child.texture = null;\r\n            child.frame = null;\r\n            child.hasTexture = false;\r\n        });\r\n    }\r\n    else\r\n    {\r\n        let texture: Texture;\r\n\r\n        if (key instanceof Texture)\r\n        {\r\n            texture = key;\r\n        }\r\n        else\r\n        {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n\r\n        if (!texture)\r\n        {\r\n            console.warn(`Invalid Texture key: ${key as string}`);\r\n        }\r\n        else\r\n        {\r\n            children.forEach(child =>\r\n            {\r\n                child.texture = texture;\r\n            });\r\n\r\n            SetFrame(texture, frame, ...children);\r\n        }\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { GetVertices } from '../components/transform/GetVertices';\r\nimport { ISprite } from './ISprite';\r\n\r\n/*\r\n    vertexData array structure:\r\n\r\n    0 = topLeft.x\r\n    1 = topLeft.y\r\n    2 = frame.u0\r\n    3 = frame.v0\r\n    4 = textureIndex\r\n    5 = topLeft.packedColor\r\n\r\n    6 = bottomLeft.x\r\n    7 = bottomLeft.y\r\n    8 = frame.u0\r\n    9 = frame.v1\r\n    10 = textureIndex\r\n    11 = bottomLeft.packedColor\r\n\r\n    12 = bottomRight.x\r\n    13 = bottomRight.y\r\n    14 = frame.u1\r\n    15 = frame.v1\r\n    16 = textureIndex\r\n    17 = bottomRight.packedColor\r\n\r\n    18 = topRight.x\r\n    19 = topRight.y\r\n    20 = frame.u1\r\n    21 = frame.v0\r\n    22 = textureIndex\r\n    23 = topRight.packedColor\r\n*/\r\n\r\nexport function UpdateVertices <T extends ISprite> (sprite: T): T\r\n{\r\n    const data = sprite.vertexData;\r\n\r\n    const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(sprite.transform);\r\n\r\n    //  top left\r\n    data[0] = x0;\r\n    data[1] = y0;\r\n\r\n    //  bottom left\r\n    data[6] = x1;\r\n    data[7] = y1;\r\n\r\n    //  bottom right\r\n    data[12] = x2;\r\n    data[13] = y2;\r\n\r\n    //  top right\r\n    data[18] = x3;\r\n    data[19] = y3;\r\n\r\n    return sprite;\r\n}\r\n","import { BatchTexturedQuad } from '../../renderer/webgl1/draw/BatchTexturedQuad';\r\nimport { Container } from '../container/Container';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DrawTexturedQuad } from '../../renderer/canvas/draw/DrawTexturedQuad';\r\nimport { Frame } from '../../textures/Frame';\r\nimport { ICanvasRenderer } from '../../renderer/canvas/ICanvasRenderer';\r\nimport { IGameObject } from '../IGameObject';\r\nimport { ISprite } from './ISprite';\r\nimport { IWebGLRenderer } from '../../renderer/webgl1/IWebGLRenderer';\r\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors';\r\nimport { SetFrame } from './SetFrame';\r\nimport { SetTexture } from './SetTexture';\r\nimport { Texture } from '../../textures/Texture';\r\nimport { UpdateVertices } from './UpdateVertices';\r\n\r\nexport class Sprite extends Container implements ISprite\r\n{\r\n    texture: Texture;\r\n    frame: Frame;\r\n    hasTexture: boolean = false;\r\n\r\n    vertexData: Float32Array;\r\n    vertexColor: Uint32Array;\r\n\r\n    vertexAlpha: Float32Array;\r\n    vertexTint: Uint32Array;\r\n\r\n    protected _tint: number = 0xffffff;\r\n\r\n    constructor (x: number, y: number, texture: string | Texture, frame?: string | number)\r\n    {\r\n        super(x, y);\r\n\r\n        this.type = 'Sprite';\r\n\r\n        this.vertexData = new Float32Array(24).fill(0);\r\n        this.vertexColor = new Uint32Array(4).fill(4294967295);\r\n\r\n        this.vertexAlpha = new Float32Array(4).fill(1);\r\n        this.vertexTint = new Uint32Array(4).fill(0xffffff);\r\n\r\n        this.setTexture(texture, frame);\r\n    }\r\n\r\n    setTexture (key: string | Texture, frame?: string | number): this\r\n    {\r\n        SetTexture(key, frame, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    setFrame (key?: string | number | Frame): this\r\n    {\r\n        SetFrame(this.texture, key, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    isRenderable (): boolean\r\n    {\r\n        return (this.visible && this.willRender && this.hasTexture && this.alpha > 0);\r\n    }\r\n\r\n    preRender (): void\r\n    {\r\n        if (this.isDirty(DIRTY_CONST.COLORS))\r\n        {\r\n            PackColors(this);\r\n\r\n            this.clearDirty(DIRTY_CONST.COLORS);\r\n        }\r\n\r\n        if (this.isDirty(DIRTY_CONST.TRANSFORM))\r\n        {\r\n            UpdateVertices(this);\r\n\r\n            this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n\r\n    renderGL <T extends IWebGLRenderer> (renderer: T): void\r\n    {\r\n        this.preRender();\r\n\r\n        BatchTexturedQuad(this, renderer);\r\n    }\r\n\r\n    renderCanvas <T extends ICanvasRenderer> (renderer: T): void\r\n    {\r\n        this.preRender();\r\n\r\n        DrawTexturedQuad(this, renderer);\r\n    }\r\n\r\n    get alpha (): number\r\n    {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha (value: number)\r\n    {\r\n        if (value !== this._alpha)\r\n        {\r\n            this._alpha = value;\r\n\r\n            const vertexAlpha = this.vertexAlpha;\r\n\r\n            vertexAlpha[0] = value;\r\n            vertexAlpha[1] = value;\r\n            vertexAlpha[2] = value;\r\n            vertexAlpha[3] = value;\r\n\r\n            this.setDirty(DIRTY_CONST.ALPHA);\r\n        }\r\n    }\r\n\r\n    get tint (): number\r\n    {\r\n        return this._tint;\r\n    }\r\n\r\n    set tint (value: number)\r\n    {\r\n        if (value !== this._tint)\r\n        {\r\n            this._tint = value;\r\n\r\n            const vertexTint = this.vertexTint;\r\n\r\n            vertexTint[0] = value;\r\n            vertexTint[1] = value;\r\n            vertexTint[2] = value;\r\n            vertexTint[3] = value;\r\n\r\n            this.setDirty(DIRTY_CONST.COLORS);\r\n        }\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        this.texture = null;\r\n        this.frame = null;\r\n        this.hasTexture = false;\r\n        this.vertexData = null;\r\n        this.vertexColor = null;\r\n        this.vertexAlpha = null;\r\n        this.vertexTint = null;\r\n    }\r\n}\r\n","import { Frame } from '../../textures/Frame';\r\nimport { IAnimationData } from './IAnimationData';\r\nimport { IContainer } from '../container/IContainer';\r\nimport { Sprite } from '../sprite/Sprite';\r\n\r\nexport class AnimatedSprite extends Sprite\r\n{\r\n    anims: Map<string, Frame[]>;\r\n    animData: IAnimationData;\r\n\r\n    constructor (x: number, y: number, texture: string, frame?: string | number)\r\n    {\r\n        super(x, y, texture, frame);\r\n\r\n        this.type = 'AnimatedSprite';\r\n\r\n        this.anims = new Map();\r\n\r\n        //  Holds all the data for the current animation only\r\n        this.animData = {\r\n            currentAnim: '',\r\n            currentFrames: [],\r\n            frameIndex: 0,\r\n            animSpeed: 0,\r\n            nextFrameTime: 0,\r\n            repeatCount: 0,\r\n            isPlaying: false,\r\n            yoyo: false,\r\n            pendingStart: false,\r\n            playingForward: true,\r\n            delay: 0,\r\n            repeatDelay: 0,\r\n            onStart: null,\r\n            onRepeat: null,\r\n            onComplete: null\r\n        };\r\n    }\r\n\r\n    private stop (): void\r\n    {\r\n        const data = this.animData;\r\n\r\n        data.isPlaying = false;\r\n        data.currentAnim = '';\r\n\r\n        if (data.onComplete)\r\n        {\r\n            data.onComplete(this, data.currentAnim);\r\n        }\r\n    }\r\n\r\n    nextFrame (): void\r\n    {\r\n        const data = this.animData;\r\n\r\n        data.frameIndex++;\r\n\r\n        //  There are no more frames, do we yoyo or repeat or end?\r\n        if (data.frameIndex === data.currentFrames.length)\r\n        {\r\n            if (data.yoyo)\r\n            {\r\n                data.frameIndex--;\r\n                data.playingForward = false;\r\n            }\r\n            else if (data.repeatCount === -1 || data.repeatCount > 0)\r\n            {\r\n                data.frameIndex = 0;\r\n\r\n                if (data.repeatCount !== -1)\r\n                {\r\n                    data.repeatCount--;\r\n                }\r\n\r\n                if (data.onRepeat)\r\n                {\r\n                    data.onRepeat(this, data.currentAnim);\r\n                }\r\n\r\n                data.nextFrameTime += data.repeatDelay;\r\n            }\r\n            else\r\n            {\r\n                data.frameIndex--;\r\n\r\n                return this.stop();\r\n            }\r\n        }\r\n\r\n        this.setFrame(data.currentFrames[data.frameIndex]);\r\n\r\n        data.nextFrameTime += data.animSpeed;\r\n    }\r\n\r\n    prevFrame (): void\r\n    {\r\n        const data = this.animData;\r\n\r\n        data.frameIndex--;\r\n\r\n        //  There are no more frames, do we repeat or end?\r\n        if (data.frameIndex === -1)\r\n        {\r\n            if (data.repeatCount === -1 || data.repeatCount > 0)\r\n            {\r\n                data.frameIndex = 0;\r\n                data.playingForward = true;\r\n\r\n                if (data.repeatCount !== -1)\r\n                {\r\n                    data.repeatCount--;\r\n                }\r\n\r\n                if (data.onRepeat)\r\n                {\r\n                    data.onRepeat(this, data.currentAnim);\r\n                }\r\n\r\n                data.nextFrameTime += data.repeatDelay;\r\n            }\r\n            else\r\n            {\r\n                data.frameIndex = 0;\r\n\r\n                return this.stop();\r\n            }\r\n        }\r\n\r\n        this.setFrame(data.currentFrames[data.frameIndex]);\r\n\r\n        data.nextFrameTime += data.animSpeed;\r\n    }\r\n\r\n    update (delta: number, now: number): void\r\n    {\r\n        super.update(delta, now);\r\n\r\n        const data = this.animData;\r\n\r\n        if (!data.isPlaying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        data.nextFrameTime -= delta * 1000;\r\n\r\n        //  Clamp to zero, otherwise a huge delta could cause animation playback issues\r\n        data.nextFrameTime = Math.max(data.nextFrameTime, 0);\r\n\r\n        //  It's time for a new frame\r\n        if (data.nextFrameTime === 0)\r\n        {\r\n            //  Is this the start of our animation?\r\n            if (data.pendingStart)\r\n            {\r\n                if (data.onStart)\r\n                {\r\n                    data.onStart(this, data.currentAnim);\r\n                }\r\n\r\n                data.pendingStart = false;\r\n                data.nextFrameTime = data.animSpeed;\r\n            }\r\n            else if (data.playingForward)\r\n            {\r\n                this.nextFrame();\r\n            }\r\n            else\r\n            {\r\n                this.prevFrame();\r\n            }\r\n        }\r\n    }\r\n\r\n    get isPlaying (): boolean\r\n    {\r\n        return this.animData.isPlaying;\r\n    }\r\n\r\n    get isPlayingForward (): boolean\r\n    {\r\n        return (this.animData.isPlaying && this.animData.playingForward);\r\n    }\r\n\r\n    get currentAnimation (): string\r\n    {\r\n        return this.animData.currentAnim;\r\n    }\r\n\r\n    destroy (reparentChildren?: IContainer): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        this.anims.clear();\r\n        this.animData = null;\r\n    }\r\n}\r\n","import { IWebGLRenderer } from '../IWebGLRenderer';\r\n\r\nexport function BatchSingleQuad (renderer: IWebGLRenderer, x: number, y: number, width: number, height: number, u0: number, v0: number, u1: number, v1: number, textureIndex: number = 0, packedColor: number = 4294967295): void\r\n{\r\n    const shader = renderer.shaders.current;\r\n    const buffer = shader.buffer;\r\n\r\n    const F32 = buffer.vertexViewF32;\r\n    const U32 = buffer.vertexViewU32;\r\n\r\n    const offset = shader.count * buffer.quadElementSize;\r\n\r\n    //  top left\r\n    F32[offset + 0] = x;\r\n    F32[offset + 1] = y;\r\n    F32[offset + 2] = u0;\r\n    F32[offset + 3] = v1;\r\n    F32[offset + 4] = textureIndex;\r\n    U32[offset + 5] = packedColor;\r\n\r\n    //  bottom left\r\n    F32[offset + 6] = x;\r\n    F32[offset + 7] = y + height;\r\n    F32[offset + 8] = u0;\r\n    F32[offset + 9] = v0;\r\n    F32[offset + 10] = textureIndex;\r\n    U32[offset + 11] = packedColor;\r\n\r\n    //  bottom right\r\n    F32[offset + 12] = x + width;\r\n    F32[offset + 13] = y + height;\r\n    F32[offset + 14] = u1;\r\n    F32[offset + 15] = v0;\r\n    F32[offset + 16] = textureIndex;\r\n    U32[offset + 17] = packedColor;\r\n\r\n    //  top right\r\n    F32[offset + 18] = x + width;\r\n    F32[offset + 19] = y;\r\n    F32[offset + 20] = u1;\r\n    F32[offset + 21] = v1;\r\n    F32[offset + 22] = textureIndex;\r\n    U32[offset + 23] = packedColor;\r\n\r\n    shader.count++;\r\n}\r\n","import { BatchSingleQuad } from './BatchSingleQuad';\r\nimport { IWebGLRenderer } from '../IWebGLRenderer';\r\n\r\nexport function DrawTexturedQuad (renderer: IWebGLRenderer, x: number, y: number, width: number, height: number, u0: number, v0: number, u1: number, v1: number, textureIndex: number = 0, packedColor: number = 4294967295): void\r\n{\r\n    renderer.shaders.setDefault(textureIndex);\r\n\r\n    BatchSingleQuad(renderer, x, y, width, height, u0, v0, u1, v1, textureIndex, packedColor);\r\n\r\n    renderer.shaders.popAndRebind();\r\n}\r\n","let bgColor = 0;\r\n\r\nfunction BackgroundColor (color: number = 0): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        bgColor = color;\r\n    };\r\n}\r\n\r\nfunction GetBackgroundColor (): number\r\n{\r\n    return bgColor;\r\n}\r\n\r\nexport {\r\n    BackgroundColor,\r\n    GetBackgroundColor\r\n};\r\n","import { GameInstance } from '../GameInstance';\r\n\r\nlet title = 'Phaser';\r\nlet url = 'https://phaser4.io';\r\nlet color = '#fff';\r\nlet background = 'linear-gradient(#3e0081 40%, #00bcc3)';\r\n\r\nfunction Banner (gameTitle: string = '', gameURL: string = '', textColor?: string, textBackground?: string): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        title = gameTitle;\r\n        url = gameURL;\r\n\r\n        if (textColor)\r\n        {\r\n            color = textColor;\r\n        }\r\n\r\n        if (textBackground)\r\n        {\r\n            background = textBackground;\r\n        }\r\n    };\r\n}\r\n\r\nfunction GetBanner (): void\r\n{\r\n    if (title !== '')\r\n    {\r\n        const game = GameInstance.get();\r\n\r\n        const version = (title === 'Phaser') ? ' v' + game.VERSION : '';\r\n\r\n        console.log(\r\n            `%c${title}${version}%c ${url}`,\r\n            `padding: 4px 16px; color: ${color}; background: ${background}`,\r\n            ''\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    Banner,\r\n    GetBanner\r\n};\r\n","let _width = 800;\r\nlet _height = 600;\r\nlet _resolution = 1;\r\n\r\nfunction Size (width: number = 800, height: number = 600, resolution: number = 1): () => void\r\n{\r\n    if (resolution === 0)\r\n    {\r\n        resolution = window.devicePixelRatio;\r\n    }\r\n\r\n    return (): void =>\r\n    {\r\n        _width = width;\r\n        _height = height;\r\n        _resolution = resolution;\r\n\r\n    };\r\n}\r\n\r\nfunction GetWidth (): number\r\n{\r\n    return _width;\r\n}\r\n\r\nfunction GetHeight (): number\r\n{\r\n    return _height;\r\n}\r\n\r\nfunction GetResolution (): number\r\n{\r\n    return _resolution;\r\n}\r\n\r\nexport {\r\n    Size,\r\n    GetWidth,\r\n    GetHeight,\r\n    GetResolution\r\n};\r\n","import { IRendererConstructor } from '../renderer/IRendererConstructor';\r\n\r\nlet instance: IRendererConstructor;\r\n\r\nfunction SetRenderer (renderer: IRendererConstructor): void\r\n{\r\n    instance = renderer;\r\n}\r\n\r\nfunction GetRenderer (): IRendererConstructor\r\n{\r\n    return instance;\r\n}\r\n\r\nexport {\r\n    GetRenderer,\r\n    SetRenderer\r\n};\r\n","let maxTextures = 0;\r\n\r\nfunction MaxTextures (max: number = 0): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        maxTextures = max;\r\n    };\r\n}\r\n\r\nfunction SetMaxTextures (max: number): void\r\n{\r\n    maxTextures = max;\r\n}\r\n\r\nfunction GetMaxTextures (): number\r\n{\r\n    return maxTextures;\r\n}\r\n\r\nexport {\r\n    MaxTextures,\r\n    GetMaxTextures,\r\n    SetMaxTextures\r\n};\r\n","import { ISceneConstructor } from '../scenes/ISceneConstructor';\r\n\r\nlet _scenes: ISceneConstructor[] = [];\r\n\r\nfunction Scenes (scenes?: ISceneConstructor | Array<ISceneConstructor>): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        _scenes = [].concat(scenes);\r\n    };\r\n}\r\n\r\nfunction GetScenes (): ISceneConstructor[]\r\n{\r\n    return _scenes;\r\n}\r\n\r\nexport {\r\n    Scenes,\r\n    GetScenes\r\n};\r\n","let _contextAttributes: WebGLContextAttributes = {\r\n    alpha: false,\r\n    antialias: false,\r\n    depth: false,\r\n    premultipliedAlpha: false\r\n};\r\n\r\nfunction WebGLContext (contextAttributes: WebGLContextAttributes): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        _contextAttributes = contextAttributes;\r\n    };\r\n}\r\n\r\nfunction GetWebGLContext (): WebGLContextAttributes\r\n{\r\n    return _contextAttributes;\r\n}\r\n\r\nexport {\r\n    WebGLContext,\r\n    GetWebGLContext\r\n};\r\n","import { IWebGLRenderer } from '../IWebGLRenderer';\r\n\r\nexport type FBOStackEntry = {\r\n    framebuffer: WebGLFramebuffer;\r\n    width: number;\r\n    height: number;\r\n};\r\n\r\nexport class FBOSystem\r\n{\r\n    renderer: IWebGLRenderer;\r\n\r\n    stack: FBOStackEntry[] = [];\r\n\r\n    current: WebGLFramebuffer = null;\r\n\r\n    constructor (renderer: IWebGLRenderer)\r\n    {\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        this.stack = [];\r\n\r\n        this.current = null;\r\n\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, renderer.width, renderer.height);\r\n    }\r\n\r\n    add (framebuffer: WebGLFramebuffer, clear: boolean = true, width: number = 0, height: number = 0): void\r\n    {\r\n        this.stack.push({ framebuffer, width, height });\r\n\r\n        this.set(framebuffer, clear, width, height);\r\n    }\r\n\r\n    set (framebuffer: WebGLFramebuffer, clear: boolean = true, width: number = 0, height: number = 0): void\r\n    {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        if (clear)\r\n        {\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n\r\n        if (width > 0)\r\n        {\r\n            gl.viewport(0, 0, width, height);\r\n        }\r\n\r\n        this.current = framebuffer;\r\n    }\r\n\r\n    pop (): void\r\n    {\r\n        this.stack.pop();\r\n\r\n        const len = this.stack.length;\r\n\r\n        if (len > 0)\r\n        {\r\n            const entry = this.stack[len - 1];\r\n\r\n            this.set(entry.framebuffer, false, entry.width, entry.height);\r\n        }\r\n        else\r\n        {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    rebind (): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.current);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.stack = [];\r\n    }\r\n}\r\n","let gl: WebGLRenderingContext;\r\n\r\nexport const GL =\r\n{\r\n    get: (): WebGLRenderingContext =>\r\n    {\r\n        return gl;\r\n    },\r\n\r\n    set: (context: WebGLRenderingContext | undefined): void =>\r\n    {\r\n        gl = context;\r\n    }\r\n};\r\n","export function GetRGBArray (color: number, output: number[] = []): number[]\r\n{\r\n    const r: number = color >> 16 & 0xFF;\r\n    const g: number = color >> 8 & 0xFF;\r\n    const b: number = color & 0xFF;\r\n    const a: number = (color > 16777215) ? color >>> 24 : 255;\r\n\r\n    output[0] = r / 255;\r\n    output[1] = g / 255;\r\n    output[2] = b / 255;\r\n    output[3] = a / 255;\r\n\r\n    return output;\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\n\r\n//  Compares the a and b matrix and returns if they are equal.\r\n\r\nexport function ExactEquals (a: IMatrix2D, b: IMatrix2D): boolean\r\n{\r\n    return (\r\n        a.a === b.a &&\r\n        a.b === b.b &&\r\n        a.c === b.c &&\r\n        a.d === b.d &&\r\n        a.tx === b.tx &&\r\n        a.ty === b.ty\r\n    );\r\n}\r\n","import { GL } from '../GL';\r\n\r\nexport function CreateFramebuffer (texture: WebGLTexture, attachment?: GLenum): WebGLFramebuffer\r\n{\r\n    const gl = GL.get();\r\n\r\n    if (!attachment)\r\n    {\r\n        attachment = gl.COLOR_ATTACHMENT0;\r\n    }\r\n\r\n    const framebuffer = gl.createFramebuffer();\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n    return framebuffer;\r\n}\r\n","import { GL } from '../GL';\r\nimport { IGLTextureBinding } from './IGLTextureBinding';\r\n\r\nexport function CreateGLTexture <T extends IGLTextureBinding> (binding: T): WebGLTexture\r\n{\r\n    const gl = GL.get();\r\n\r\n    if (!gl)\r\n    {\r\n        return;\r\n    }\r\n\r\n    const { parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT } = binding;\r\n\r\n    const source = parent.image;\r\n\r\n    let width = parent.width;\r\n    let height = parent.height;\r\n\r\n    const glTexture: WebGLTexture = gl.createTexture();\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\r\n\r\n    if (source)\r\n    {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n\r\n        width = source.width;\r\n        height = source.height;\r\n    }\r\n    else\r\n    {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n\r\n    if (generateMipmap && isPOT)\r\n    {\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n    }\r\n\r\n    binding.texture = glTexture;\r\n\r\n    return glTexture;\r\n}\r\n","import { GL } from '../GL';\r\n\r\nexport function DeleteFramebuffer (framebuffer: WebGLFramebuffer): void\r\n{\r\n    const gl = GL.get();\r\n\r\n    if (gl && gl.isFramebuffer(framebuffer))\r\n    {\r\n        gl.deleteFramebuffer(framebuffer);\r\n    }\r\n}\r\n","import { GL } from '../GL';\r\n\r\nexport function DeleteGLTexture (texture: WebGLTexture): void\r\n{\r\n    const gl = GL.get();\r\n\r\n    if (!gl)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if (gl.isTexture(texture))\r\n    {\r\n        gl.deleteTexture(texture);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if the given `width` and `height` are a power of two.\r\n * Useful for checking texture dimensions.\r\n *\r\n * @function Phaser.Math.Pow2.IsSize\r\n * @since 3.0.0\r\n *\r\n * @param {number} width - The width.\r\n * @param {number} height - The height.\r\n *\r\n * @return {boolean} `true` if `width` and `height` are a power of two, otherwise `false`.\r\n */\r\nexport function IsSizePowerOfTwo (width: number, height: number): boolean\r\n{\r\n    if (width < 1 || height < 1)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return ((width & (width - 1)) === 0) && ((height & (height - 1)) === 0);\r\n}\r\n","import { GL } from '../GL';\r\n\r\nexport function SetGLTextureFilterMode (texture: WebGLTexture, linear: boolean = true): void\r\n{\r\n    const gl = GL.get();\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\r\n}\r\n","import { GL } from '../GL';\r\nimport { IGLTextureBinding } from './IGLTextureBinding';\r\n\r\nexport function UpdateGLTexture <T extends IGLTextureBinding> (binding: T): WebGLTexture\r\n{\r\n    const gl = GL.get();\r\n\r\n    const source = binding.parent.image;\r\n    const width = source.width;\r\n    const height = source.height;\r\n\r\n    if (width > 0 && height > 0)\r\n    {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n    }\r\n\r\n    return binding.texture;\r\n}\r\n","import { CreateGLTexture } from './CreateGLTexture';\r\nimport { DeleteFramebuffer } from '../fbo/DeleteFramebuffer';\r\nimport { DeleteGLTexture } from './DeleteGLTexture';\r\nimport { GL } from '../GL';\r\nimport { IGLTextureBinding } from './IGLTextureBinding';\r\nimport { IGLTextureBindingConfig } from './IGLTextureBindingConfig';\r\nimport { ITexture } from '../../../textures/ITexture';\r\nimport { IsSizePowerOfTwo } from '../../../math/pow2/IsSizePowerOfTwo';\r\nimport { SetGLTextureFilterMode } from './SetGLTextureFilterMode';\r\nimport { UpdateGLTexture } from './UpdateGLTexture';\r\n\r\nexport class GLTextureBinding implements IGLTextureBinding\r\n{\r\n    parent: ITexture;\r\n\r\n    texture: WebGLTexture;\r\n    framebuffer: WebGLFramebuffer;\r\n\r\n    index: number = 0;\r\n    indexCounter: number = -1;\r\n\r\n    dirtyIndex: boolean = true;\r\n    unpackPremultiplyAlpha: boolean = true;\r\n\r\n    minFilter: GLenum;\r\n    magFilter: GLenum;\r\n    wrapS: GLenum;\r\n    wrapT: GLenum;\r\n\r\n    flipY: boolean = false;\r\n    isPOT: boolean = false;\r\n    generateMipmap: boolean = false;\r\n\r\n    constructor (parent: ITexture, config: IGLTextureBindingConfig = {})\r\n    {\r\n        const gl = GL.get();\r\n\r\n        this.parent = parent;\r\n\r\n        this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\r\n\r\n        const {\r\n            texture = null,\r\n            framebuffer = null,\r\n            unpackPremultiplyAlpha = true,\r\n            minFilter = gl.LINEAR,\r\n            magFilter = gl.LINEAR,\r\n            wrapS = gl.CLAMP_TO_EDGE,\r\n            wrapT = gl.CLAMP_TO_EDGE,\r\n            generateMipmap = this.isPOT,\r\n            flipY = false\r\n        } = config;\r\n\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.generateMipmap = generateMipmap;\r\n        this.flipY = flipY;\r\n        this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\r\n\r\n        if (framebuffer)\r\n        {\r\n            this.framebuffer = framebuffer;\r\n        }\r\n\r\n        if (texture)\r\n        {\r\n            this.texture = texture;\r\n        }\r\n        else\r\n        {\r\n            CreateGLTexture(this);\r\n        }\r\n    }\r\n\r\n    //  Needed?\r\n    setFilter (linear: boolean): void\r\n    {\r\n        if (this.texture)\r\n        {\r\n            SetGLTextureFilterMode(this.texture, linear);\r\n        }\r\n    }\r\n\r\n    create (): WebGLTexture\r\n    {\r\n        const texture = this.texture;\r\n\r\n        if (texture)\r\n        {\r\n            DeleteGLTexture(texture);\r\n        }\r\n\r\n        return CreateGLTexture(this);\r\n    }\r\n\r\n    update (): WebGLTexture\r\n    {\r\n        const texture = this.texture;\r\n\r\n        if (!texture)\r\n        {\r\n            return CreateGLTexture(this);\r\n        }\r\n        else\r\n        {\r\n            return UpdateGLTexture(this);\r\n        }\r\n    }\r\n\r\n    setIndex (index: number): void\r\n    {\r\n        this.dirtyIndex = (index !== this.index);\r\n        this.index = index;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        DeleteGLTexture(this.texture);\r\n        DeleteFramebuffer(this.framebuffer);\r\n\r\n        this.parent = null;\r\n        this.texture = null;\r\n        this.framebuffer = null;\r\n    }\r\n}\r\n","import { GL } from '../GL';\r\n\r\nexport class IndexedBuffer\r\n{\r\n    /**\r\n     * Maximum number of quads per batch before a flush takes place.\r\n     *\r\n     * @type {number}\r\n     */\r\n    batchSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, per entry in the array buffer.\r\n     *\r\n     * @type {number}\r\n     */\r\n    dataSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, per entry in the element index array.\r\n     *\r\n     * @type {number}\r\n     */\r\n    indexSize: number;\r\n\r\n    /**\r\n     * The amount of elements / floats a single vertex consists of.\r\n     *\r\n     * The default is 6:\r\n     *\r\n     * position (x,y - 2 floats)\r\n     * texture coord (x,y - 2 floats)\r\n     * texture index (uint)\r\n     * packed color (uint)\r\n     *\r\n     * @type {number}\r\n     */\r\n    vertexElementSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, of a single vertex in the array buffer.\r\n     *\r\n     * This is `vertexElementSize * dataSize`.\r\n     *\r\n     * @type {number}\r\n     */\r\n    vertexByteSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, of a single quad in the array buffer.\r\n     *\r\n     * This is `vertexByteSize * 4`.\r\n     *\r\n     * @type {number}\r\n     */\r\n    quadByteSize: number;\r\n\r\n    /**\r\n     * The size, in quantity of elements, of a single quad in the element index array.\r\n     *\r\n     * This is `vertexElementSize * 4`.\r\n     *\r\n     * @type {number}\r\n     */\r\n    quadElementSize: number;\r\n\r\n    /**\r\n     * The total number of entries per quad in the element index array.\r\n     *\r\n     * The IBO contains 6 entries per quad:\r\n     *\r\n     * 0, 1, 2\r\n     * 2, 3, 0\r\n     *\r\n     * @type {number}\r\n     */\r\n    quadIndexSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, of the Array Buffer.\r\n     *\r\n     * This is `batchSize * quadByteSize`\r\n     *\r\n     * @type {number}\r\n     */\r\n    bufferByteSize: number;\r\n\r\n    /**\r\n     * The Array Buffer.\r\n     *\r\n     * @type {ArrayBuffer}\r\n     */\r\n    data: ArrayBuffer;\r\n\r\n    /**\r\n     * Float32 View of the Array Buffer.\r\n     *\r\n     * @type {Float32Array}\r\n     */\r\n    vertexViewF32: Float32Array;\r\n\r\n    /**\r\n     * Uint32 View of the Array Buffer.\r\n     *\r\n     * @type {Uint32Array}\r\n     */\r\n    vertexViewU32: Uint32Array;\r\n\r\n    /**\r\n     * The Element Array Buffer.\r\n     *\r\n     * @type {Uint16Array}\r\n     */\r\n    index: Uint16Array;\r\n\r\n    /**\r\n     * The data array buffer.\r\n     *\r\n     * @type {WebGLBuffer}\r\n     */\r\n    vertexBuffer: WebGLBuffer;\r\n\r\n    /**\r\n     * The element array buffer.\r\n     *\r\n     * @type {WebGLBuffer}\r\n     */\r\n    indexBuffer: WebGLBuffer;\r\n\r\n    constructor (batchSize: number, dataSize: number, indexSize: number, vertexElementSize: number, quadIndexSize: number)\r\n    {\r\n        this.batchSize = batchSize;\r\n        this.dataSize = dataSize;\r\n        this.indexSize = indexSize;\r\n        this.vertexElementSize = vertexElementSize;\r\n        this.quadIndexSize = quadIndexSize;\r\n\r\n        //  Derive the remaining values\r\n        this.vertexByteSize = vertexElementSize * dataSize;\r\n        this.quadByteSize = this.vertexByteSize * 4;\r\n        this.quadElementSize = vertexElementSize * 4;\r\n        this.bufferByteSize = batchSize * this.quadByteSize;\r\n\r\n        this.create();\r\n    }\r\n\r\n    create (): void\r\n    {\r\n        let ibo: number[] = [];\r\n\r\n        //  Seed the index buffer\r\n        for (let i = 0; i < (this.batchSize * this.indexSize); i += this.indexSize)\r\n        {\r\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\r\n        }\r\n\r\n        this.data = new ArrayBuffer(this.bufferByteSize);\r\n        this.index = new Uint16Array(ibo);\r\n\r\n        this.vertexViewF32 = new Float32Array(this.data);\r\n        this.vertexViewU32 = new Uint32Array(this.data);\r\n\r\n        const gl = GL.get();\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\r\n\r\n        this.indexBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\r\n\r\n        //  Tidy-up\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        ibo = [];\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n\r\n    }\r\n}\r\n","import { WebGLRenderer } from './WebGLRenderer';\r\n\r\nexport let instance: WebGLRenderer;\r\n\r\nexport const WebGLRendererInstance =\r\n{\r\n    get: (): WebGLRenderer =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (renderer: WebGLRenderer | undefined): void =>\r\n    {\r\n        instance = renderer;\r\n    }\r\n};\r\n","import { GetHeight, GetResolution, GetWidth } from '../../../config/Size';\r\n\r\nimport { CreateFramebuffer } from '../fbo/CreateFramebuffer';\r\nimport { GLTextureBinding } from '../textures/GLTextureBinding';\r\nimport { IShader } from './IShader';\r\nimport { IShaderAttributes } from './IShaderAttributes';\r\nimport { IShaderConfig } from './IShaderConfig';\r\nimport { IShaderUniforms } from './IShaderUniforms';\r\nimport { IWebGLRenderer } from '../IWebGLRenderer';\r\nimport { IndexedBuffer } from '../buffers/IndexedBuffer';\r\nimport { Texture } from '../../../textures/Texture';\r\nimport { WebGLRendererInstance } from '../WebGLRendererInstance';\r\n\r\nconst shaderSource = {\r\n\r\n    fragmentShader: `\r\n#define SHADER_NAME SINGLE_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture;\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color = texture2D(uTexture, vTextureCoord);\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`,\r\n\r\n    vertexShader: `\r\n#define SHADER_NAME SINGLE_QUAD_VERT\r\n\r\nprecision highp float;\r\n\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute float aTextureId;\r\nattribute vec4 aTintColor;\r\n\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uCameraMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nvoid main (void)\r\n{\r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vTintColor = aTintColor;\r\n\r\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\r\n}`\r\n};\r\n\r\nexport class SingleTextureQuadShader implements IShader\r\n{\r\n    renderer: IWebGLRenderer;\r\n\r\n    program: WebGLProgram;\r\n\r\n    attribs: IShaderAttributes = { aVertexPosition: 0, aTextureCoord: 0, aTextureId: 0, aTintColor: 0 };\r\n    uniforms: IShaderUniforms = { uProjectionMatrix: 0, uCameraMatrix: 0, uTexture: 0, uTime: 0, uResolution: 0 };\r\n\r\n    buffer: IndexedBuffer;\r\n\r\n    /**\r\n     * The total number of quads added to the batch so far.\r\n     * Reset every bind and flush.\r\n     *\r\n     * @type {number}\r\n     */\r\n    count: number;\r\n\r\n    /**\r\n     * The total number of quads previously flushed.\r\n     *\r\n     * @type {number}\r\n     */\r\n    prevCount: number;\r\n\r\n    texture: Texture;\r\n    framebuffer: WebGLFramebuffer;\r\n\r\n    renderToFBO: boolean = false;\r\n\r\n    constructor (config: IShaderConfig = {})\r\n    {\r\n        this.renderer = WebGLRendererInstance.get();\r\n\r\n        const {\r\n            batchSize = 4096,\r\n            dataSize = 4,\r\n            indexSize = 4,\r\n            vertexElementSize = 6,\r\n            quadIndexSize = 6,\r\n            fragmentShader = shaderSource.fragmentShader,\r\n            vertexShader = shaderSource.vertexShader,\r\n            width = GetWidth(),\r\n            height = GetHeight(),\r\n            resolution = GetResolution(),\r\n            renderToFBO = false\r\n        } = config;\r\n\r\n        this.buffer = new IndexedBuffer(batchSize, dataSize, indexSize, vertexElementSize, quadIndexSize);\r\n\r\n        this.createShaders(fragmentShader, vertexShader);\r\n\r\n        this.count = 0;\r\n\r\n        this.renderToFBO = renderToFBO;\r\n\r\n        const texture = new Texture(null, width * resolution, height * resolution);\r\n        const binding = new GLTextureBinding(texture);\r\n\r\n        texture.binding = binding;\r\n\r\n        binding.framebuffer = CreateFramebuffer(binding.texture);\r\n\r\n        this.texture = texture;\r\n        this.framebuffer = binding.framebuffer;\r\n    }\r\n\r\n    createShaders (fragmentShaderSource: string, vertexShaderSource: string): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n\r\n        //  Create the shaders\r\n\r\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n\r\n        gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n        gl.compileShader(fragmentShader);\r\n\r\n        let failed = false;\r\n        let message = gl.getShaderInfoLog(fragmentShader);\r\n\r\n        if (message.length > 0)\r\n        {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n\r\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n\r\n        gl.shaderSource(vertexShader, vertexShaderSource);\r\n        gl.compileShader(vertexShader);\r\n\r\n        message = gl.getShaderInfoLog(fragmentShader);\r\n\r\n        if (message.length > 0)\r\n        {\r\n            failed = true;\r\n            console.error(message);\r\n        }\r\n\r\n        if (failed)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const program = gl.createProgram();\r\n\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n\r\n        gl.useProgram(program);\r\n\r\n        this.program = program;\r\n\r\n        for (const key of Object.keys(this.attribs) as Array<keyof IShaderAttributes>)\r\n        {\r\n            const location = gl.getAttribLocation(program, key);\r\n\r\n            gl.enableVertexAttribArray(location);\r\n\r\n            this.attribs[key] = location;\r\n        }\r\n\r\n        for (const key of Object.keys(this.uniforms) as Array<keyof IShaderUniforms>)\r\n        {\r\n            this.uniforms[key] = gl.getUniformLocation(program, key);\r\n        }\r\n    }\r\n\r\n    bind (projectionMatrix: Float32Array, cameraMatrix: Float32Array, textureID: number): boolean\r\n    {\r\n        if (!this.program)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n\r\n        gl.useProgram(this.program);\r\n\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n\r\n        //  0\r\n        gl.uniform1i(uniforms.uTexture, renderer.textures.textureIndex[textureID]);\r\n\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n\r\n        return true;\r\n    }\r\n\r\n    bindBuffers (indexBuffer: WebGLBuffer, vertexBuffer: WebGLBuffer): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n        const stride = this.buffer.vertexByteSize;\r\n        const attribs = this.attribs;\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n\r\n        //  attributes must be reset whenever you change buffers\r\n\r\n        gl.vertexAttribPointer(attribs.aVertexPosition, 2, gl.FLOAT, false, stride, 0);     // size = 8\r\n        gl.vertexAttribPointer(attribs.aTextureCoord, 2, gl.FLOAT, false, stride, 8);       // size = 8, offset = position\r\n        gl.vertexAttribPointer(attribs.aTextureId, 1, gl.FLOAT, false, stride, 16);         // size = 4, offset = position + tex coord\r\n        gl.vertexAttribPointer(attribs.aTintColor, 4, gl.UNSIGNED_BYTE, true, stride, 20);  // size = 4, offset = position + tex coord + index\r\n\r\n        this.count = 0;\r\n    }\r\n\r\n    draw (count: number): void\r\n    {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const buffer = this.buffer;\r\n\r\n        if (count === buffer.batchSize)\r\n        {\r\n            gl.bufferData(gl.ARRAY_BUFFER, buffer.data, gl.DYNAMIC_DRAW);\r\n        }\r\n        else\r\n        {\r\n            const view = buffer.vertexViewF32.subarray(0, count * buffer.quadElementSize);\r\n\r\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\r\n        }\r\n\r\n        if (this.renderToFBO)\r\n        {\r\n            renderer.fbo.add(this.framebuffer, true);\r\n        }\r\n\r\n        gl.drawElements(gl.TRIANGLES, count * buffer.quadIndexSize, gl.UNSIGNED_SHORT, 0);\r\n\r\n        if (this.renderToFBO)\r\n        {\r\n            renderer.fbo.pop();\r\n        }\r\n    }\r\n\r\n    flush (): boolean\r\n    {\r\n        const count = this.count;\r\n\r\n        if (count === 0)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        this.draw(count);\r\n\r\n        this.prevCount = count;\r\n\r\n        this.count = 0;\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { GetMaxTextures } from '../../../config/MaxTextures';\r\nimport { IShader } from './IShader';\r\nimport { IShaderConfig } from './IShaderConfig';\r\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader';\r\n\r\nconst fragmentShader = `\r\n#define SHADER_NAME MULTI_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture[%count%];\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color;\r\n\r\n    %forloop%\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`;\r\n\r\nexport class MultiTextureQuadShader extends SingleTextureQuadShader implements IShader\r\n{\r\n    constructor (config: IShaderConfig = { fragmentShader })\r\n    {\r\n        super(config);\r\n    }\r\n\r\n    createShaders (fragmentShaderSource: string, vertexShaderSource: string): void\r\n    {\r\n        const maxTextures = GetMaxTextures();\r\n\r\n        let src = '';\r\n\r\n        for (let i = 1; i < maxTextures; i++)\r\n        {\r\n            if (i > 1)\r\n            {\r\n                src += '\\n\\telse ';\r\n            }\r\n\r\n            if (i < maxTextures - 1)\r\n            {\r\n                src += `if (vTextureId < ${i}.5)`;\r\n            }\r\n\r\n            src += '\\n\\t{';\r\n            src += `\\n\\t\\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\r\n            src += '\\n\\t}';\r\n        }\r\n\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\r\n\r\n        // console.log(fragmentShaderSource);\r\n\r\n        super.createShaders(fragmentShaderSource, vertexShaderSource);\r\n    }\r\n\r\n    bind (projectionMatrix: Float32Array, cameraMatrix: Float32Array): boolean\r\n    {\r\n        if (!this.program)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n        const uniforms = this.uniforms;\r\n\r\n        gl.useProgram(this.program);\r\n\r\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\r\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\r\n        gl.uniform1iv(uniforms.uTexture, renderer.textures.textureIndex);\r\n        gl.uniform1f(uniforms.uTime, performance.now());\r\n        gl.uniform2f(uniforms.uResolution, renderer.width, renderer.height);\r\n\r\n        this.bindBuffers(this.buffer.indexBuffer, this.buffer.vertexBuffer);\r\n\r\n        return true;\r\n    }\r\n}\r\n","export function Ortho (width: number, height: number, near: number = -1, far: number = 1): Float32Array\r\n{\r\n    const m00: number = -2 * (1 / -width);\r\n    const m11: number = -2 * (1 / height);\r\n    const m22: number = 2 * (1 / (near - far));\r\n\r\n    return new Float32Array([ m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, -1, 1, 0, 1 ]);\r\n}\r\n","import { IShader } from './IShader';\r\nimport { IShaderConstructor } from './IShaderConstructor';\r\nimport { IWebGLRenderer } from '../IWebGLRenderer';\r\nimport { SingleTextureQuadShader } from './SingleTextureQuadShader';\r\n\r\nexport type ShaderStackEntry = {\r\n    shader: IShader;\r\n    textureID?: number;\r\n};\r\n\r\nexport class ShaderSystem\r\n{\r\n    renderer: IWebGLRenderer;\r\n\r\n    singleQuadShader: SingleTextureQuadShader;\r\n\r\n    currentEntry: ShaderStackEntry;\r\n    current: IShader;\r\n\r\n    stack: ShaderStackEntry[];\r\n\r\n    constructor (renderer: IWebGLRenderer, currentShader: IShaderConstructor)\r\n    {\r\n        this.renderer = renderer;\r\n\r\n        const stackEntry = {\r\n            shader: new currentShader()\r\n        };\r\n\r\n        this.stack = [ stackEntry ];\r\n        this.currentEntry = stackEntry;\r\n        this.current = stackEntry.shader;\r\n\r\n        this.singleQuadShader = new SingleTextureQuadShader();\r\n    }\r\n\r\n    add (shader: IShader, textureID?: number): ShaderStackEntry\r\n    {\r\n        const stackEntry = { shader, textureID };\r\n\r\n        this.stack.push(stackEntry);\r\n\r\n        return stackEntry;\r\n    }\r\n\r\n    set (shader: IShader, textureID?: number): boolean\r\n    {\r\n        this.flush();\r\n\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n\r\n        const success = shader.bind(projectionMatrix, cameraMatrix, textureID);\r\n\r\n        if (success)\r\n        {\r\n            const entry = this.add(shader, textureID);\r\n\r\n            this.currentEntry = entry;\r\n            this.current = shader;\r\n        }\r\n\r\n        return success;\r\n    }\r\n\r\n    setDefault (textureID: number): void\r\n    {\r\n        this.set(this.singleQuadShader, textureID);\r\n    }\r\n\r\n    pop (): void\r\n    {\r\n        this.flush();\r\n\r\n        const stack = this.stack;\r\n\r\n        if (stack.length > 1)\r\n        {\r\n            //  We never pop the default shader off the stack\r\n            stack.pop();\r\n        }\r\n\r\n        this.currentEntry = stack[stack.length - 1];\r\n        this.current = this.currentEntry.shader;\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n\r\n    flush (): boolean\r\n    {\r\n        if (this.current.flush())\r\n        {\r\n            this.renderer.flushTotal++;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    rebind (): void\r\n    {\r\n        const renderer = this.renderer;\r\n        const projectionMatrix = renderer.projectionMatrix;\r\n        const cameraMatrix = renderer.currentCamera.matrix;\r\n\r\n        const current = this.currentEntry;\r\n\r\n        current.shader.bind(projectionMatrix, cameraMatrix, current.textureID);\r\n    }\r\n\r\n    popAndRebind (): void\r\n    {\r\n        this.pop();\r\n        this.rebind();\r\n    }\r\n\r\n    clear (): void\r\n    {\r\n        //  TODO\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        //  TODO\r\n    }\r\n}\r\n","//  From Pixi v5\r\n\r\nconst fragTemplate = [\r\n    'precision mediump float;',\r\n    'void main(void){',\r\n    'float test = 0.1;',\r\n    '%forloop%',\r\n    'gl_FragColor = vec4(0.0);',\r\n    '}'\r\n].join('\\n');\r\n\r\nfunction GenerateSrc (maxIfs: number): string\r\n{\r\n    let src = '';\r\n\r\n    for (let i = 0; i < maxIfs; ++i)\r\n    {\r\n        if (i > 0)\r\n        {\r\n            src += '\\nelse ';\r\n        }\r\n\r\n        if (i < maxIfs - 1)\r\n        {\r\n            src += `if(test == ${i}.0){}`;\r\n        }\r\n    }\r\n\r\n    return src;\r\n}\r\n\r\nexport function CheckShaderMaxIfStatements (maxIfs: number, gl: WebGLRenderingContext): number\r\n{\r\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true)\r\n    {\r\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\r\n\r\n        gl.shaderSource(shader, fragmentSrc);\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\r\n        {\r\n            maxIfs = (maxIfs / 2) | 0;\r\n        }\r\n        else\r\n        {\r\n            // valid!\r\n            break;\r\n        }\r\n    }\r\n\r\n    return maxIfs;\r\n}\r\n","import { GetMaxTextures, SetMaxTextures } from '../../../config/MaxTextures';\r\n\r\nimport { BindingQueue } from '../../BindingQueue';\r\nimport { CheckShaderMaxIfStatements } from '../shaders/CheckShaderMaxIfStatements';\r\nimport { GLTextureBinding } from './GLTextureBinding';\r\nimport { IWebGLRenderer } from '../IWebGLRenderer';\r\nimport { Texture } from '../../../textures/Texture';\r\n\r\nexport class TextureSystem\r\n{\r\n    renderer: IWebGLRenderer;\r\n\r\n    //  The maximum number of combined image units the GPU supports\r\n    //  Accordingly to the WebGL spec the minimum is 8\r\n    maxTextures: number;\r\n\r\n    currentActiveTexture: number;\r\n\r\n    startActiveTexture: number = 0;\r\n\r\n    tempTextures: WebGLTexture[];\r\n\r\n    textureIndex: number[];\r\n\r\n    constructor (renderer: IWebGLRenderer)\r\n    {\r\n        this.renderer = renderer;\r\n\r\n        this.tempTextures = [];\r\n        this.textureIndex = [];\r\n    }\r\n\r\n    //  As per the WebGL spec, the browser should always support at least 8 texture units\r\n    init (): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n\r\n        let maxGPUTextures: number = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), gl);\r\n\r\n        const maxConfigTextures = GetMaxTextures();\r\n\r\n        if (maxConfigTextures === 0 || (maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures))\r\n        {\r\n            //  Insert gpu limit into config value\r\n            SetMaxTextures(maxGPUTextures);\r\n        }\r\n        else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures)\r\n        {\r\n            //  Limit to config setting, or 8, whichever is higher\r\n            maxGPUTextures = Math.max(8, maxConfigTextures);\r\n        }\r\n\r\n        const tempTextures = this.tempTextures;\r\n\r\n        if (tempTextures.length)\r\n        {\r\n            tempTextures.forEach(texture =>\r\n            {\r\n                gl.deleteTexture(texture);\r\n            });\r\n        }\r\n\r\n        const index = [];\r\n\r\n        //  Create temp textures to stop WebGL errors on mac os\r\n        for (let texturesIndex: number = 0; texturesIndex < maxGPUTextures; texturesIndex++)\r\n        {\r\n            const tempTexture = gl.createTexture();\r\n\r\n            gl.activeTexture(gl.TEXTURE0 + texturesIndex);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, tempTexture);\r\n\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([ 0, 0, 255, 255 ]));\r\n\r\n            tempTextures[texturesIndex] = tempTexture;\r\n\r\n            index.push(texturesIndex);\r\n        }\r\n\r\n        this.maxTextures = maxGPUTextures;\r\n\r\n        this.textureIndex = index;\r\n\r\n        //  ID Zero is reserved for FBO Textures\r\n        this.currentActiveTexture = 1;\r\n    }\r\n\r\n    update (): void\r\n    {\r\n        const queue = BindingQueue.get();\r\n\r\n        for (let i = 0; i < queue.length; i++)\r\n        {\r\n            const texture = queue[i];\r\n\r\n            if (!texture.binding)\r\n            {\r\n                texture.binding = new GLTextureBinding(texture);\r\n            }\r\n        }\r\n\r\n        BindingQueue.clear();\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n        const temp = this.tempTextures;\r\n\r\n        for (let i: number = 0; i < temp.length; i++)\r\n        {\r\n            gl.activeTexture(gl.TEXTURE0 + i);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, temp[i]);\r\n        }\r\n\r\n        this.currentActiveTexture = 1;\r\n\r\n        this.startActiveTexture++;\r\n    }\r\n\r\n    //  directly bind a texture to an index slot\r\n    bind (texture: Texture, index: number = 0): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n\r\n        binding.setIndex(index);\r\n\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n    }\r\n\r\n    //  unbind the given texture index\r\n    unbind (index: number = 0): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n\r\n        gl.activeTexture(gl.TEXTURE0 + index);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.tempTextures[index]);\r\n\r\n        if (index > 0)\r\n        {\r\n            this.startActiveTexture++;\r\n        }\r\n    }\r\n\r\n    //  request the next available texture and bind it\r\n    //  returns true if the texture was assigned a new index, otherwise false\r\n    request (texture: Texture): boolean\r\n    {\r\n        const gl = this.renderer.gl;\r\n        const binding = texture.binding;\r\n        const currentActiveTexture = this.currentActiveTexture;\r\n\r\n        if (binding.indexCounter >= this.startActiveTexture)\r\n        {\r\n            //  This texture was already bound this step, so we're good to go\r\n\r\n            return false;\r\n        }\r\n\r\n        binding.indexCounter = this.startActiveTexture;\r\n\r\n        if (currentActiveTexture < this.maxTextures)\r\n        {\r\n            binding.setIndex(currentActiveTexture);\r\n\r\n            gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n\r\n            this.currentActiveTexture++;\r\n        }\r\n        else\r\n        {\r\n            //  We're out of textures, so flush the batch and reset back to 1\r\n            this.renderer.flush();\r\n\r\n            this.startActiveTexture++;\r\n\r\n            binding.indexCounter = this.startActiveTexture;\r\n\r\n            binding.setIndex(1);\r\n\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n\r\n            this.currentActiveTexture = 2;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { GetHeight, GetResolution, GetWidth } from '../../config/Size';\r\n\r\nimport { FBOSystem } from './fbo/FBOSystem';\r\nimport { GL } from './GL';\r\nimport { GetBackgroundColor } from '../../config/BackgroundColor';\r\nimport { GetRGBArray } from './colors/GetRGBArray';\r\nimport { GetWebGLContext } from '../../config/WebGLContext';\r\nimport { IBaseCamera } from '../../camera/IBaseCamera';\r\nimport { ISceneRenderData } from '../../scenes/ISceneRenderData';\r\nimport { ExactEquals as Matrix2dEqual } from '../../math/matrix2d-funcs/ExactEquals';\r\nimport { MultiTextureQuadShader } from './shaders/MultiTextureQuadShader';\r\nimport { Ortho } from './cameras/Ortho';\r\nimport { SearchEntry } from '../../display/DepthFirstSearchRecursiveNested';\r\nimport { ShaderSystem } from './shaders/ShaderSystem';\r\nimport { TextureSystem } from './textures/TextureSystem';\r\nimport { WebGLRendererInstance } from './WebGLRendererInstance';\r\n\r\nexport class WebGLRenderer\r\n{\r\n    canvas: HTMLCanvasElement;\r\n    gl: WebGLRenderingContext;\r\n\r\n    fbo: FBOSystem;\r\n    textures: TextureSystem;\r\n    shaders: ShaderSystem;\r\n\r\n    clearColor = [ 0, 0, 0, 1 ];\r\n\r\n    width: number;\r\n    height: number;\r\n    resolution: number;\r\n\r\n    projectionMatrix: Float32Array;\r\n\r\n    //  TODO - Move to stats object, so we can track texture creation, shader swaps, etc\r\n    flushTotal: number = 0;\r\n\r\n    clearBeforeRender: boolean = true;\r\n    optimizeRedraw: boolean = false;\r\n    autoResize: boolean = true;\r\n\r\n    contextLost: boolean = false;\r\n\r\n    currentCamera: IBaseCamera = null;\r\n\r\n    constructor ()\r\n    {\r\n        this.width = GetWidth();\r\n        this.height = GetHeight();\r\n        this.resolution = GetResolution();\r\n\r\n        this.setBackgroundColor(GetBackgroundColor());\r\n\r\n        const canvas = document.createElement('canvas');\r\n\r\n        canvas.addEventListener('webglcontextlost', (event) => this.onContextLost(event), false);\r\n        canvas.addEventListener('webglcontextrestored', () => this.onContextRestored(), false);\r\n\r\n        this.canvas = canvas;\r\n\r\n        this.fbo = new FBOSystem(this);\r\n        this.textures = new TextureSystem(this);\r\n\r\n        this.initContext();\r\n\r\n        WebGLRendererInstance.set(this);\r\n\r\n        //  Shaders need reference to the renderer, so create after the instance is set\r\n        this.shaders = new ShaderSystem(this, MultiTextureQuadShader);\r\n    }\r\n\r\n    initContext (): void\r\n    {\r\n        const gl = this.canvas.getContext('webgl', GetWebGLContext());\r\n\r\n        GL.set(gl);\r\n\r\n        this.gl = gl;\r\n\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.CULL_FACE);\r\n\r\n        this.resize(this.width, this.height, this.resolution);\r\n\r\n        this.textures.init();\r\n    }\r\n\r\n    resize (width: number, height: number, resolution: number = 1): void\r\n    {\r\n        this.width = width * resolution;\r\n        this.height = height * resolution;\r\n        this.resolution = resolution;\r\n\r\n        const canvas = this.canvas;\r\n\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n\r\n        if (this.autoResize)\r\n        {\r\n            canvas.style.width = (this.width / resolution).toString() + 'px';\r\n            canvas.style.height = (this.height / resolution).toString() + 'px';\r\n        }\r\n\r\n        this.gl.viewport(0, 0, this.width, this.height);\r\n\r\n        this.projectionMatrix = Ortho(width, height);\r\n    }\r\n\r\n    onContextLost (event: Event): void\r\n    {\r\n        event.preventDefault();\r\n\r\n        this.contextLost = true;\r\n    }\r\n\r\n    onContextRestored (): void\r\n    {\r\n        this.contextLost = false;\r\n\r\n        this.initContext();\r\n    }\r\n\r\n    setBackgroundColor (color: number): this\r\n    {\r\n        GetRGBArray(color, this.clearColor);\r\n\r\n        return this;\r\n    }\r\n\r\n    reset (framebuffer: WebGLFramebuffer = null, width: number = this.width, height: number = this.height): void\r\n    {\r\n        const gl = this.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        this.flushTotal = 0;\r\n        this.currentCamera = null;\r\n\r\n        this.textures.update();\r\n    }\r\n\r\n    render (renderData: ISceneRenderData): void\r\n    {\r\n        if (this.contextLost)\r\n        {\r\n            return;\r\n        }\r\n\r\n        //  This is only here because if we don't do _something_ with the context, GL Spector can't see it.\r\n        //  Technically, we could move it below the dirty bail-out below.\r\n        this.reset();\r\n\r\n        //  Cache 1 - Nothing dirty? Display the previous frame\r\n        if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const gl = this.gl;\r\n\r\n        if (this.clearBeforeRender)\r\n        {\r\n            const cls = this.clearColor;\r\n\r\n            gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n\r\n        //  Cache 2 - Only one dirty camera and one flush? We can re-use the buffers\r\n        //  TODO - Per shader\r\n\r\n        /*\r\n        const flushTotal = this.flushTotal;\r\n        if (dirtyCameras === 1 && dirtyFrame === 0 && flushTotal === 1)\r\n        {\r\n            const projectionMatrix = this.projectionMatrix;\r\n\r\n            //  Total items rendered in the previous frame\r\n            const count = shader.prevCount;\r\n\r\n            shader.bind(projectionMatrix, sceneList[0].matrix);\r\n\r\n            shader.draw(count);\r\n\r\n            shader.prevCount = count;\r\n\r\n            this.flushTotal = 1;\r\n\r\n            return;\r\n        }\r\n        */\r\n\r\n        const worlds = renderData.worldData;\r\n\r\n        for (let i: number = 0; i < worlds.length; i++)\r\n        {\r\n            const { camera, renderList } = worlds[i];\r\n\r\n            //  This only needs rebinding if the camera matrix is different to before\r\n            if (!this.currentCamera || !Matrix2dEqual(camera.worldTransform, this.currentCamera.worldTransform))\r\n            {\r\n                this.flush();\r\n\r\n                this.currentCamera = camera;\r\n\r\n                this.shaders.rebind();\r\n            }\r\n\r\n            //  Process the render list\r\n            renderList.forEach(entry =>\r\n            {\r\n                if (entry.children.length)\r\n                {\r\n                    this.renderNode(entry);\r\n                }\r\n                else\r\n                {\r\n                    entry.node.renderGL(this);\r\n                }\r\n            });\r\n        }\r\n\r\n        //  One final sweep\r\n        this.flush();\r\n    }\r\n\r\n    renderNode (entry: SearchEntry): void\r\n    {\r\n        entry.node.renderGL(this);\r\n\r\n        entry.children.forEach(child =>\r\n        {\r\n            if (child.children.length > 0)\r\n            {\r\n                this.renderNode(child);\r\n            }\r\n            else\r\n            {\r\n                child.node.renderGL(this);\r\n            }\r\n        });\r\n\r\n        entry.node.postRenderGL(this);\r\n    }\r\n\r\n    flush (): void\r\n    {\r\n        this.shaders.flush();\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        WebGLRendererInstance.set(undefined);\r\n    }\r\n}\r\n","import { GameObject } from '../GameObject';\r\n\r\n//  A Layer is a way of grouping Game Objects together, without impacting their\r\n//  transforms. Children of a Layer do not inherit the layers transform, however\r\n//  you are able to control the visibility of the layers children in a single pass.\r\n\r\nexport class Layer extends GameObject\r\n{\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.type = 'Layer';\r\n        this.transform.passthru = true;\r\n        this.willRender = false;\r\n    }\r\n}\r\n","import { GetHeight, GetResolution, GetWidth } from '../../config';\r\n\r\nimport { CreateFramebuffer } from '../../renderer/webgl1/fbo/CreateFramebuffer';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DrawTexturedQuad } from '../../renderer/webgl1/draw/DrawTexturedQuad';\r\nimport { GLTextureBinding } from '../../renderer/webgl1/textures/GLTextureBinding';\r\nimport { IRenderLayer } from './IRenderLayer';\r\nimport { IWebGLRenderer } from '../../renderer/webgl1/IWebGLRenderer';\r\nimport { Layer } from '../layer/Layer';\r\nimport { Texture } from '../../textures/Texture';\r\n\r\n//  The RenderLayer works like a normal Layer, except it automatically caches\r\n//  all of its renderable children to its own texture. The children are drawn\r\n//  to the RenderLayers texture and then the RenderLayer texture is drawn to\r\n//  the WebGL Renderer. You should use a RenderLayer if you've got a complex or\r\n//  large set of Game Objects that don't update very often, where you would\r\n//  benefit from not having to re-render every single child, every frame.\r\n\r\nexport class RenderLayer extends Layer implements IRenderLayer\r\n{\r\n    texture: Texture;\r\n    framebuffer: WebGLFramebuffer;\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.type = 'RenderLayer';\r\n\r\n        this.willRender = true;\r\n        this.willRenderChildren = true;\r\n        this.willCacheChildren = true;\r\n\r\n        this.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n\r\n        const width = GetWidth();\r\n        const height = GetHeight();\r\n        const resolution = GetResolution();\r\n\r\n        //  TODO: Allow them to set this via a filterArea\r\n        const texture = new Texture(null, width * resolution, height * resolution);\r\n\r\n        texture.binding = new GLTextureBinding(texture);\r\n\r\n        texture.binding.framebuffer = CreateFramebuffer(texture.binding.texture);\r\n\r\n        this.texture = texture;\r\n        this.framebuffer = texture.binding.framebuffer;\r\n    }\r\n\r\n    renderGL <T extends IWebGLRenderer> (renderer: T): void\r\n    {\r\n        if (this.numChildren > 0)\r\n        {\r\n            renderer.flush();\r\n\r\n            if (this.isDirty(DIRTY_CONST.CHILD_CACHE))\r\n            {\r\n                //  This RenderLayer has dirty children\r\n                renderer.fbo.add(this.framebuffer, true);\r\n\r\n                this.clearDirty(DIRTY_CONST.CHILD_CACHE);\r\n            }\r\n            else\r\n            {\r\n                //  This RenderLayer doesn't have any dirty children, so we'll use the previous fbo contents\r\n                renderer.fbo.add(this.framebuffer, false);\r\n\r\n                this.postRenderGL(renderer);\r\n            }\r\n        }\r\n    }\r\n\r\n    postRenderGL <T extends IWebGLRenderer> (renderer: T): void\r\n    {\r\n        const texture = this.texture;\r\n\r\n        renderer.flush();\r\n\r\n        renderer.fbo.pop();\r\n\r\n        const { u0, v0, u1, v1 } = texture.firstFrame;\r\n\r\n        renderer.textures.bind(texture);\r\n\r\n        DrawTexturedQuad(renderer, 0, 0, texture.width, texture.height, u0, v0, u1, v1);\r\n\r\n        renderer.textures.unbind();\r\n\r\n        this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n}\r\n","import { BatchSingleQuad } from '../../renderer/webgl1/draw/BatchSingleQuad';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DrawTexturedQuad } from '../../renderer/webgl1/draw/DrawTexturedQuad';\r\nimport { IEffectLayer } from './IEffectLayer';\r\nimport { IShader } from '../../renderer/webgl1/shaders/IShader';\r\nimport { IWebGLRenderer } from '../../renderer/webgl1/IWebGLRenderer';\r\nimport { RenderLayer } from '../renderlayer/RenderLayer';\r\n\r\n//  A WebGL specific EffectLayer\r\n//  EffectLayerCanvas is a canvas alternative\r\n\r\nexport class EffectLayer extends RenderLayer implements IEffectLayer\r\n{\r\n    shaders: IShader[] = [];\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.type = 'EffectLayer';\r\n    }\r\n\r\n    postRender <T extends IWebGLRenderer> (renderer: T): void\r\n    {\r\n        const shaders = this.shaders;\r\n        const texture = this.texture;\r\n\r\n        renderer.flush();\r\n\r\n        renderer.fbo.pop();\r\n\r\n        //  this.framebuffer contains a texture with all of this layers sprites drawn to it\r\n\r\n        if (shaders.length === 0)\r\n        {\r\n            const { u0, v0, u1, v1 } = texture.firstFrame;\r\n\r\n            renderer.textures.bind(texture);\r\n\r\n            DrawTexturedQuad(renderer, 0, 0, texture.width, texture.height, u0, v0, u1, v1);\r\n\r\n            renderer.textures.unbind();\r\n        }\r\n        else\r\n        {\r\n            let prevTexture = texture;\r\n\r\n            for (let i: number = 0; i < shaders.length; i++)\r\n            {\r\n                const shader = shaders[i];\r\n\r\n                const { u0, v0, u1, v1 } = prevTexture.firstFrame;\r\n\r\n                if (renderer.shaders.set(shader, 0))\r\n                {\r\n                    shader.renderToFBO = true;\r\n\r\n                    //  The shaders input texture\r\n                    renderer.textures.bind(prevTexture);\r\n\r\n                    BatchSingleQuad(renderer, 0, 0, prevTexture.width, prevTexture.height, u0, v0, u1, v1);\r\n\r\n                    renderer.shaders.pop();\r\n\r\n                    renderer.textures.unbind();\r\n\r\n                    prevTexture = shader.texture;\r\n                }\r\n            }\r\n\r\n            const { u0, v0, u1, v1 } = prevTexture.firstFrame;\r\n\r\n            renderer.textures.bind(prevTexture);\r\n\r\n            DrawTexturedQuad(renderer, 0, 0, prevTexture.width, prevTexture.height, u0, v0, u1, v1);\r\n\r\n            renderer.textures.unbind();\r\n        }\r\n\r\n        this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n}\r\n","import { ISpriteBatch } from '../../../gameobjects/spritebatch/ISpriteBatch';\r\nimport { IWebGLRenderer } from '../IWebGLRenderer';\r\n\r\nexport function BatchTexturedQuadBuffer <T extends ISpriteBatch> (batch: T, renderer: IWebGLRenderer): void\r\n{\r\n    const texture = batch.texture;\r\n    const shader = renderer.shaders.current;\r\n    const buffer = shader.buffer;\r\n\r\n    renderer.flush();\r\n\r\n    renderer.textures.request(texture);\r\n\r\n    batch.updateTextureIndex();\r\n\r\n    const gl = renderer.gl;\r\n\r\n    shader.bindBuffers(batch.indexBuffer, batch.vertexBuffer);\r\n\r\n    gl.bufferData(gl.ARRAY_BUFFER, batch.data, gl.STATIC_DRAW);\r\n\r\n    gl.drawElements(gl.TRIANGLES, batch.count * buffer.quadIndexSize, gl.UNSIGNED_SHORT, 0);\r\n\r\n    shader.prevCount = batch.count;\r\n\r\n    renderer.flushTotal++;\r\n\r\n    //  Restore\r\n    shader.bindBuffers(buffer.indexBuffer, buffer.vertexBuffer);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Force a value within the boundaries by clamping it to the range `min`, `max`.\r\n *\r\n * @function Phaser.Math.Clamp\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to be clamped.\r\n * @param {number} min - The minimum bounds.\r\n * @param {number} max - The maximum bounds.\r\n *\r\n * @return {number} The clamped value.\r\n */\r\nexport function Clamp (value: number, min: number, max: number): number\r\n{\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\n","import { VertexSet } from './VertexSet';\r\n\r\nexport function GetVerticesFromValues (\r\n    left: number,\r\n    right: number,\r\n    top: number,\r\n    bottom: number,\r\n    x: number,\r\n    y: number,\r\n    rotation: number = 0,\r\n    scaleX: number = 1,\r\n    scaleY: number = 1,\r\n    skewX: number = 0,\r\n    skewY: number = 0): VertexSet\r\n{\r\n    const a = Math.cos(rotation + skewY) * scaleX;\r\n    const b = Math.sin(rotation + skewY) * scaleX;\r\n    const c = -Math.sin(rotation - skewX) * scaleY;\r\n    const d = Math.cos(rotation - skewX) * scaleY;\r\n\r\n    const x0 = (left * a) + (top * c) + x;\r\n    const y0 = (left * b) + (top * d) + y;\r\n\r\n    const x1 = (left * a) + (bottom * c) + x;\r\n    const y1 = (left * b) + (bottom * d) + y;\r\n\r\n    const x2 = (right * a) + (bottom * c) + x;\r\n    const y2 = (right * b) + (bottom * d) + y;\r\n\r\n    const x3 = (right * a) + (top * c) + x;\r\n    const y3 = (right * b) + (top * d) + y;\r\n\r\n    return { x0, y0, x1, y1, x2, y2, x3, y3 };\r\n}\r\n","import { BatchTexturedQuadBuffer } from '../../renderer/webgl1/draw/BatchTexturedQuadBuffer';\r\nimport { Clamp } from '../../math/Clamp';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DeleteFramebuffer } from '../../renderer/webgl1/fbo/DeleteFramebuffer';\r\nimport { Frame } from '../../textures';\r\nimport { GL } from '../../renderer/webgl1/GL';\r\nimport { GetVerticesFromValues } from '../components/transform/GetVerticesFromValues';\r\nimport { ISpriteBatch } from './ISpriteBatch';\r\nimport { IWebGLRenderer } from '../../renderer/webgl1/IWebGLRenderer';\r\nimport { Layer } from '../layer/Layer';\r\nimport { PackColor } from '../../renderer/webgl1/colors/PackColor';\r\nimport { SpriteBatchAddConfig } from './SpriteBatchAddConfig';\r\nimport { Texture } from '../../textures/Texture';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\n\r\nexport class SpriteBatch extends Layer implements ISpriteBatch\r\n{\r\n    data: ArrayBuffer;\r\n    vertexViewF32: Float32Array;\r\n    vertexViewU32: Uint32Array;\r\n    index: Uint16Array;\r\n\r\n    vertexBuffer: WebGLBuffer;\r\n    indexBuffer: WebGLBuffer;\r\n\r\n    count: number;\r\n    maxSize: number;\r\n    glTextureIndex: number = 0;\r\n\r\n    texture: Texture;\r\n    hasTexture: boolean = false;\r\n\r\n    constructor (maxSize: number, texture: string | Texture)\r\n    {\r\n        super();\r\n\r\n        this.type = 'SpriteBatch';\r\n        this.willRender = true;\r\n\r\n        this.setTexture(texture);\r\n        this.setMaxSize(maxSize);\r\n    }\r\n\r\n    resetBuffers (): void\r\n    {\r\n        let ibo: number[] = [];\r\n\r\n        //  Seed the index buffer\r\n        for (let i = 0; i < (this.maxSize * 4); i += 4)\r\n        {\r\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\r\n        }\r\n\r\n        //  96 = The size, in bytes, of a single quad in the array buffer\r\n        this.data = new ArrayBuffer(this.maxSize * 96);\r\n        this.index = new Uint16Array(ibo);\r\n\r\n        this.vertexViewF32 = new Float32Array(this.data);\r\n        this.vertexViewU32 = new Uint32Array(this.data);\r\n\r\n        const gl = GL.get();\r\n\r\n        if (gl)\r\n        {\r\n            DeleteFramebuffer(this.vertexBuffer);\r\n            DeleteFramebuffer(this.indexBuffer);\r\n\r\n            this.vertexBuffer = gl.createBuffer();\r\n            this.indexBuffer = gl.createBuffer();\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.STATIC_DRAW);\r\n\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        }\r\n\r\n        //  Tidy-up\r\n        ibo = [];\r\n\r\n        this.count = 0;\r\n    }\r\n\r\n    setMaxSize (value: number): this\r\n    {\r\n        this.maxSize = Clamp(value, 0, 65535);\r\n\r\n        this.resetBuffers();\r\n\r\n        return this;\r\n    }\r\n\r\n    setTexture (key: string | Texture): this\r\n    {\r\n        let texture: Texture;\r\n\r\n        if (key instanceof Texture)\r\n        {\r\n            texture = key;\r\n        }\r\n        else\r\n        {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n\r\n        if (!texture)\r\n        {\r\n            console.warn(`Invalid Texture key: ${key as string}`);\r\n        }\r\n        else\r\n        {\r\n            this.texture = texture;\r\n\r\n            this.hasTexture = true;\r\n\r\n            this.glTextureIndex = -1;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    isRenderable (): boolean\r\n    {\r\n        return (this.visible && this.willRender && this.hasTexture && this.count > 0);\r\n    }\r\n\r\n    clear (): this\r\n    {\r\n        this.count = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    private addToBatch (frame: Frame, color: number, x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number): this\r\n    {\r\n        if (this.count >= this.maxSize)\r\n        {\r\n            console.warn('SpriteBatch full');\r\n            return this;\r\n        }\r\n\r\n        const { u0, u1, v0, v1 } = frame;\r\n\r\n        const F32 = this.vertexViewF32;\r\n        const U32 = this.vertexViewU32;\r\n        const offset = this.count * 24;\r\n        const textureIndex = (this.texture.binding) ? this.texture.binding.index : 0;\r\n\r\n        //  top left\r\n        F32[offset + 0] = x0;\r\n        F32[offset + 1] = y0;\r\n        F32[offset + 2] = u0;\r\n        F32[offset + 3] = v0;\r\n        F32[offset + 4] = textureIndex;\r\n        U32[offset + 5] = color;\r\n\r\n        //  bottom left\r\n        F32[offset + 6] = x1;\r\n        F32[offset + 7] = y1;\r\n        F32[offset + 8] = u0;\r\n        F32[offset + 9] = v1;\r\n        F32[offset + 10] = textureIndex;\r\n        U32[offset + 11] = color;\r\n\r\n        //  bottom right\r\n        F32[offset + 12] = x2;\r\n        F32[offset + 13] = y2;\r\n        F32[offset + 14] = u1;\r\n        F32[offset + 15] = v1;\r\n        F32[offset + 16] = textureIndex;\r\n        U32[offset + 17] = color;\r\n\r\n        //  top right\r\n        F32[offset + 18] = x3;\r\n        F32[offset + 19] = y3;\r\n        F32[offset + 20] = u1;\r\n        F32[offset + 21] = v0;\r\n        F32[offset + 22] = textureIndex;\r\n        U32[offset + 23] = color;\r\n\r\n        this.setDirty(DIRTY_CONST.TRANSFORM);\r\n\r\n        this.count++;\r\n\r\n        return this;\r\n    }\r\n\r\n    add (config: SpriteBatchAddConfig): this\r\n    {\r\n        const {\r\n            frame = null,\r\n            x = 0,\r\n            y = 0,\r\n            rotation = 0,\r\n            scaleX = 1,\r\n            scaleY = 1,\r\n            skewX = 0,\r\n            skewY = 0,\r\n            originX = 0,\r\n            originY = 0,\r\n            alpha = 1,\r\n            tint = 0xffffff\r\n        } = config;\r\n\r\n        const textureFrame = this.texture.getFrame(frame);\r\n\r\n        const { left, right, top, bottom } = textureFrame.getExtent(originX, originY);\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVerticesFromValues(left, right, top, bottom, x, y, rotation, scaleX, scaleY, skewX, skewY);\r\n\r\n        const packedColor = PackColor(tint, alpha);\r\n\r\n        return this.addToBatch(textureFrame, packedColor, x0, y0, x1, y1, x2, y2, x3, y3);\r\n    }\r\n\r\n    addXY (x: number, y: number, frame?: string | number): this\r\n    {\r\n        const textureFrame = this.texture.getFrame(frame);\r\n\r\n        const { left, right, top, bottom } = textureFrame.getExtent(0, 0);\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVerticesFromValues(left, right, top, bottom, x, y);\r\n\r\n        return this.addToBatch(textureFrame, 4294967295, x0, y0, x1, y1, x2, y2, x3, y3);\r\n    }\r\n\r\n    updateTextureIndex (): void\r\n    {\r\n        const textureIndex = this.texture.binding.index;\r\n\r\n        if (textureIndex === this.glTextureIndex)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const F32 = this.vertexViewF32;\r\n\r\n        this.glTextureIndex = textureIndex;\r\n\r\n        for (let i = 0; i < this.count; i++)\r\n        {\r\n            F32[(i * 24) + 4] = textureIndex;\r\n            F32[(i * 24) + 10] = textureIndex;\r\n            F32[(i * 24) + 16] = textureIndex;\r\n            F32[(i * 24) + 22] = textureIndex;\r\n        }\r\n    }\r\n\r\n    renderGL <T extends IWebGLRenderer> (renderer: T): void\r\n    {\r\n        BatchTexturedQuadBuffer(this, renderer);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        super.destroy();\r\n\r\n        DeleteFramebuffer(this.vertexBuffer);\r\n        DeleteFramebuffer(this.indexBuffer);\r\n\r\n        this.data = null;\r\n        this.vertexViewF32 = null;\r\n        this.vertexViewU32 = null;\r\n        this.index = null;\r\n        this.texture = null;\r\n        this.hasTexture = false;\r\n    }\r\n}\r\n","export function CreateCanvas (width: number, height: number): CanvasRenderingContext2D\r\n{\r\n    const canvas = document.createElement('canvas');\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    return canvas.getContext('2d');\r\n}\r\n","import { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function CanvasTexture (width: number = 32, height: number = 32): Texture\r\n{\r\n    const ctx = CreateCanvas(width, height);\r\n\r\n    return new Texture(ctx.canvas);\r\n}\r\n","import { CanvasTexture } from '../../textures/types/CanvasTexture';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { GameInstance } from '../../GameInstance';\r\nimport { IContainer } from '../container/IContainer';\r\nimport { Sprite } from '../sprite/Sprite';\r\n\r\nexport type VerticalTextAlignment = 'ascent' | 'lineheight';\r\n\r\nexport class Text extends Sprite\r\n{\r\n    private _text: string;\r\n\r\n    preRenderCallback: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void;\r\n    wordWrapCallback: (text: string) => string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n    splitRegExp: RegExp = /(?:\\r\\n|\\r|\\n)/;\r\n    padding = { left: 0, right: 0, top: 0, bottom: 0 };\r\n    verticalAlign: VerticalTextAlignment = 'ascent';\r\n    lineSpacing: number = 0;\r\n    resolution: number;\r\n    font: string = '16px monospace';\r\n    fillStyle: string | CanvasGradient | CanvasPattern = '#fff';\r\n    strokeStyle: string | CanvasGradient | CanvasPattern = '';\r\n    backgroundStyle: string | CanvasGradient | CanvasPattern = '';\r\n    cornerRadius: number = 0;\r\n    textAlign: CanvasTextAlign = 'left';\r\n    textBaseline: CanvasTextBaseline = 'alphabetic';\r\n    lineWidth: number = 0;\r\n    lineDash: number[] = [];\r\n    fixedWidth: number;\r\n    fixedHeight: number;\r\n    antialias: boolean = false;\r\n\r\n    constructor (x: number, y: number, text: string | string[] = '', font?: string, fillStyle?: string | CanvasGradient | CanvasPattern)\r\n    {\r\n        super(x, y, CanvasTexture());\r\n\r\n        this.type = 'Text';\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.resolution = game.renderer.resolution;\r\n\r\n        this.canvas = this.texture.image as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        // this.texture.glTexture = CreateGLTexture(this.canvas, 32, 32, false, this.antialias);\r\n\r\n        if (font)\r\n        {\r\n            this.font = font;\r\n        }\r\n\r\n        if (fillStyle)\r\n        {\r\n            this.fillStyle = fillStyle;\r\n        }\r\n\r\n        this.setText(text);\r\n    }\r\n\r\n    private syncContext (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D): void\r\n    {\r\n        if (this.preRenderCallback)\r\n        {\r\n            this.preRenderCallback(canvas, ctx);\r\n        }\r\n\r\n        ctx.font = this.font;\r\n        ctx.textBaseline = this.textBaseline;\r\n        ctx.textAlign = this.textAlign;\r\n        ctx.fillStyle = this.fillStyle;\r\n        ctx.strokeStyle = this.strokeStyle;\r\n        ctx.lineWidth = this.lineWidth;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineJoin = 'round';\r\n        ctx.setLineDash(this.lineDash);\r\n        ctx.imageSmoothingEnabled = this.antialias;\r\n\r\n        //  TODO Shadows\r\n    }\r\n\r\n    updateText (): this\r\n    {\r\n        const canvas = this.canvas;\r\n        const ctx = this.context;\r\n        const resolution = this.resolution;\r\n\r\n        const lines = this._text.split(this.splitRegExp);\r\n\r\n        const padding = this.padding;\r\n        const fillStyle = this.fillStyle;\r\n        const strokeStyle = this.strokeStyle;\r\n        const strokeWidth = this.lineWidth;\r\n        const lineSpacing = this.lineSpacing;\r\n        const strokeWidthHalf = (strokeWidth > 0) ? strokeWidth / 2 : 0;\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        this.syncContext(canvas, ctx);\r\n\r\n        //  Use specifically for measureText\r\n        ctx.textAlign = 'start';\r\n\r\n        //  Measure each line and add them together (note: measure text excludes stroke style!)\r\n\r\n        let maxWidth = 0;\r\n        let maxHeight = 0;\r\n        let y = 0;\r\n\r\n        const lineMetrics = [];\r\n\r\n        const vAlignAscent: boolean = (this.verticalAlign === 'ascent');\r\n\r\n        //  Work out an average line height for this font\r\n        const metrics = ctx.measureText('|MÉq');\r\n\r\n        const averageLineHeight: number = Math.ceil(Math.abs(metrics.actualBoundingBoxAscent) + Math.abs(metrics.actualBoundingBoxDescent)) + strokeWidth;\r\n\r\n        for (let i = 0; i < lines.length; i++)\r\n        {\r\n            const metrics = ctx.measureText(lines[i]);\r\n\r\n            const left = metrics.actualBoundingBoxLeft;\r\n            const right = metrics.actualBoundingBoxRight;\r\n            let ascent = metrics.actualBoundingBoxAscent;\r\n            let descent = metrics.actualBoundingBoxDescent;\r\n\r\n            //  Zero for a carriage-return, but we still need to add in the space\r\n            if ((!ascent && !descent) || lines[i] === '')\r\n            {\r\n                ascent = averageLineHeight;\r\n                descent = 0;\r\n            }\r\n\r\n            const lineWidth = Math.ceil(Math.abs(left) + Math.abs(right)) + strokeWidth;\r\n            const lineHeight = Math.ceil(Math.abs(ascent) + Math.abs(descent)) + strokeWidth;\r\n\r\n            if (vAlignAscent)\r\n            {\r\n                y += ascent + strokeWidthHalf;\r\n\r\n                if (i > 0)\r\n                {\r\n                    y += lineSpacing + strokeWidthHalf;\r\n                }\r\n\r\n                maxHeight = y + descent + strokeWidthHalf;\r\n            }\r\n            else\r\n            {\r\n                y = maxHeight + ((lineHeight - descent) - strokeWidthHalf);\r\n\r\n                maxHeight += lineHeight;\r\n\r\n                if (i < lines.length - 1)\r\n                {\r\n                    maxHeight += lineSpacing;\r\n                }\r\n            }\r\n\r\n            maxWidth = Math.max(maxWidth, lineWidth);\r\n\r\n            lineMetrics.push({ lineWidth, lineHeight, ascent, descent, left, right, y });\r\n        }\r\n\r\n        //  Account for lineSpacing + padding\r\n        maxWidth += padding.left + padding.right;\r\n        maxHeight += padding.top + padding.bottom;\r\n\r\n        const displayWidth = (this.fixedWidth) ? this.fixedWidth : maxWidth;\r\n        const displayHeight = (this.fixedHeight) ? this.fixedHeight : maxHeight;\r\n\r\n        const canvasWidth = Math.ceil(displayWidth * resolution);\r\n        const canvasHeight = Math.ceil(displayHeight * resolution);\r\n\r\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight)\r\n        {\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n\r\n            this.texture.setSize(displayWidth, displayHeight);\r\n            this.setSize(displayWidth, displayHeight);\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.scale(resolution, resolution);\r\n\r\n        this.syncContext(canvas, ctx);\r\n\r\n        const backgroundStyle = this.backgroundStyle;\r\n\r\n        if (backgroundStyle)\r\n        {\r\n            ctx.save();\r\n\r\n            ctx.fillStyle = backgroundStyle;\r\n            ctx.strokeStyle = backgroundStyle;\r\n\r\n            const cornerRadius = this.cornerRadius;\r\n            const halfRadius = (cornerRadius > 0) ? cornerRadius / 2 : 0;\r\n\r\n            if (cornerRadius)\r\n            {\r\n                ctx.lineWidth = cornerRadius;\r\n\r\n                ctx.strokeRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\r\n            }\r\n\r\n            ctx.fillRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\r\n\r\n            ctx.restore();\r\n        }\r\n\r\n        //  Text Alignment\r\n        const textAlign = this.textAlign;\r\n        const isCenter: boolean = (textAlign === 'center');\r\n        const isRight: boolean = (textAlign === 'right' || textAlign === 'end');\r\n\r\n        const yOffset = ((displayHeight - maxHeight) / 2) + padding.top;\r\n\r\n        for (let i = 0; i < lines.length; i++)\r\n        {\r\n            const line = lines[i];\r\n            const metrics = lineMetrics[i];\r\n\r\n            let tx = padding.left + metrics.left + strokeWidthHalf;\r\n            const ty = yOffset + metrics.y;\r\n\r\n            if (isCenter)\r\n            {\r\n                tx = displayWidth / 2;\r\n            }\r\n            else if (isRight)\r\n            {\r\n                tx = displayWidth - strokeWidthHalf;\r\n            }\r\n\r\n            if (strokeStyle)\r\n            {\r\n                ctx.strokeText(line, tx, ty);\r\n            }\r\n\r\n            if (fillStyle)\r\n            {\r\n                ctx.fillText(line, tx, ty);\r\n            }\r\n        }\r\n\r\n        ctx.restore();\r\n\r\n        if (this.texture.binding)\r\n        {\r\n            this.texture.binding.update();\r\n        }\r\n\r\n        this.setDirty(DIRTY_CONST.TEXTURE);\r\n\r\n        return this;\r\n    }\r\n\r\n    get text (): string | string[]\r\n    {\r\n        return this._text;\r\n    }\r\n\r\n    set text (value: string | string[])\r\n    {\r\n        this.setText(value);\r\n    }\r\n\r\n    setText (value: string | string[] = ''): this\r\n    {\r\n        if (Array.isArray(value))\r\n        {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text)\r\n        {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    destroy (reparentChildren?: IContainer): void\r\n    {\r\n        this.texture.destroy();\r\n\r\n        this.fillStyle = null;\r\n        this.strokeStyle = null;\r\n        this.backgroundStyle = null;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        super.destroy(reparentChildren);\r\n    }\r\n}\r\n","import { IKey } from './IKey';\r\n\r\nexport class Key implements IKey\r\n{\r\n    //  The KeyEvent.key identifier\r\n    readonly value: string;\r\n\r\n    //  Will it invoke preventDefault?\r\n    capture: boolean = true;\r\n\r\n    //  Is it currently down?\r\n    isDown: boolean = false;\r\n\r\n    //  Process this key?\r\n    enabled: boolean = true;\r\n\r\n    //  rate of repeats in ms\r\n    repeatRate: number = 0;\r\n\r\n    //  Can this key repeat, or do you have to release it before pressing again\r\n    canRepeat: boolean = true;\r\n\r\n    //  The game time this key was last pressed down\r\n    timeDown: number = 0;\r\n\r\n    //  The game time this key was last updated (i.e. if down and repeating)\r\n    timeUpdated: number = 0;\r\n\r\n    //  The game time this key was last released\r\n    timeUp: number = 0;\r\n\r\n    downCallback: (key: IKey) => void;\r\n    upCallback: (key: IKey) => void;\r\n\r\n    constructor (value: string)\r\n    {\r\n        this.value = value;\r\n    }\r\n\r\n    getValue (): string\r\n    {\r\n        return this.value;\r\n    }\r\n\r\n    down (event: KeyboardEvent): void\r\n    {\r\n        if (!this.enabled)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.capture)\r\n        {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.isDown && this.canRepeat)\r\n        {\r\n            this.timeUpdated = event.timeStamp;\r\n\r\n            const delay = this.timeUpdated - this.timeDown;\r\n\r\n            //  Key is repeating\r\n            if (this.downCallback && delay >= this.repeatRate)\r\n            {\r\n                this.downCallback(this);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            //  Key is first down\r\n            this.isDown = true;\r\n            this.timeDown = event.timeStamp;\r\n            this.timeUpdated = event.timeStamp;\r\n\r\n            if (this.downCallback)\r\n            {\r\n                this.downCallback(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    up (event: KeyboardEvent): void\r\n    {\r\n        if (!this.enabled)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.capture)\r\n        {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.isDown)\r\n        {\r\n            //  Key is up\r\n            this.isDown = false;\r\n            this.timeUp = event.timeStamp;\r\n            this.timeUpdated = event.timeStamp;\r\n\r\n            if (this.upCallback)\r\n            {\r\n                this.upCallback(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        this.isDown = false;\r\n        this.timeUpdated = this.timeDown;\r\n        this.timeUp = this.timeDown;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.downCallback = null;\r\n        this.upCallback = null;\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\nimport { Keyboard } from '../Keyboard';\r\n\r\nexport type ArrowKeysConfig = {\r\n    left: boolean;\r\n    right: boolean;\r\n    up: boolean;\r\n    down: boolean;\r\n    space: boolean;\r\n};\r\n\r\nexport class ArrowKeys\r\n{\r\n    left: Key;\r\n    right: Key;\r\n    up: Key;\r\n    down: Key;\r\n    space: Key;\r\n\r\n    constructor (keyboardManager: Keyboard, config?: ArrowKeysConfig)\r\n    {\r\n        const {\r\n            left = true,\r\n            right = true,\r\n            up = true,\r\n            down = true,\r\n            space = true\r\n        } = config;\r\n\r\n        const keys = keyboardManager.keys;\r\n\r\n        if (left)\r\n        {\r\n            this.left = new Key('ArrowLeft');\r\n\r\n            keys.set(this.left.value, this.left);\r\n        }\r\n\r\n        if (right)\r\n        {\r\n            this.right = new Key('ArrowRight');\r\n\r\n            keys.set(this.right.value, this.right);\r\n        }\r\n\r\n        if (up)\r\n        {\r\n            this.up = new Key('ArrowUp');\r\n\r\n            keys.set(this.up.value, this.up);\r\n        }\r\n\r\n        if (down)\r\n        {\r\n            this.down = new Key('ArrowDown');\r\n\r\n            keys.set(this.down.value, this.down);\r\n        }\r\n\r\n        if (space)\r\n        {\r\n            this.space = new Key(' ');\r\n\r\n            keys.set(this.space.value, this.space);\r\n        }\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class DownKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowDown');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class LeftKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowLeft');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class RightKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowRight');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class SpaceKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super(' ');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class UpKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowUp');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\nimport { Keyboard } from '../Keyboard';\r\n\r\nexport type WASDKeysConfig = {\r\n    W: boolean;\r\n    A: boolean;\r\n    S: boolean;\r\n    D: boolean;\r\n    space: boolean;\r\n};\r\n\r\nexport class WASDKeys\r\n{\r\n    W: Key;\r\n    A: Key;\r\n    S: Key;\r\n    D: Key;\r\n    space: Key;\r\n\r\n    constructor (keyboardManager: Keyboard, config?: WASDKeysConfig)\r\n    {\r\n        const {\r\n            W = true,\r\n            A = true,\r\n            S = true,\r\n            D = true,\r\n            space = true\r\n        } = config;\r\n\r\n        const keys = keyboardManager.keys;\r\n\r\n        if (W)\r\n        {\r\n            this.W = new Key('w');\r\n\r\n            keys.set(this.W.value, this.W);\r\n        }\r\n\r\n        if (A)\r\n        {\r\n            this.A = new Key('a');\r\n\r\n            keys.set(this.A.value, this.A);\r\n        }\r\n\r\n        if (S)\r\n        {\r\n            this.S = new Key('s');\r\n\r\n            keys.set(this.S.value, this.S);\r\n        }\r\n\r\n        if (D)\r\n        {\r\n            this.D = new Key('d');\r\n\r\n            keys.set(this.D.value, this.D);\r\n        }\r\n\r\n        if (space)\r\n        {\r\n            this.space = new Key(' ');\r\n\r\n            keys.set(this.space.value, this.space);\r\n        }\r\n    }\r\n}\r\n","import { IKey } from './IKey';\r\n\r\nexport function GetKeyDownDuration (key: IKey): number\r\n{\r\n    if (key.isDown)\r\n    {\r\n        return key.timeUpdated - key.timeDown;\r\n    }\r\n    else\r\n    {\r\n        return key.timeUp - key.timeDown;\r\n    }\r\n}\r\n","import { Emit, EventEmitter } from '../../events';\r\n\r\nimport { IKey } from './IKey';\r\n\r\nexport class Keyboard extends EventEmitter\r\n{\r\n    keys: Map<string, IKey>;\r\n\r\n    private keydownHandler: { (event: KeyboardEvent): void; (this: Window, ev: KeyboardEvent): void };\r\n    private keyupHandler: { (event: KeyboardEvent): void; (this: Window, ev: KeyboardEvent): void };\r\n    private blurHandler: { (): void; (this: Window, ev: FocusEvent): void };\r\n\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    keyConversion: { [ key: string ]: string } = {\r\n        Up: 'ArrowUp',\r\n        Down: 'ArrowDown',\r\n        Left: 'ArrowLeft',\r\n        Right: 'ArrowRight',\r\n        Spacebar: ' ',\r\n        Win: 'Meta',\r\n        Scroll: 'ScrollLock',\r\n        Del: 'Delete',\r\n        Apps: 'ContextMenu',\r\n        Esc: 'Escape',\r\n        Add: '+',\r\n        Subtract: '-',\r\n        Multiply: '*',\r\n        Decimal: '.',\r\n        Divide: '/'\r\n    };\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.keydownHandler = (event: KeyboardEvent): void => this.onKeyDown(event);\r\n        this.keyupHandler = (event: KeyboardEvent): void => this.onKeyUp(event);\r\n        this.blurHandler = (): void => this.onBlur();\r\n\r\n        window.addEventListener('keydown', this.keydownHandler);\r\n        window.addEventListener('keyup', this.keyupHandler);\r\n        window.addEventListener('blur', this.blurHandler);\r\n\r\n        this.keys = new Map();\r\n    }\r\n\r\n    addKeys (...keys: IKey[]): void\r\n    {\r\n        keys.forEach(key =>\r\n        {\r\n            this.keys.set(key.getValue(), key);\r\n        });\r\n    }\r\n\r\n    clearKeys (): void\r\n    {\r\n        this.keys.clear();\r\n    }\r\n\r\n    private onBlur (): void\r\n    {\r\n        //  Iterate Keys and reset their state\r\n        this.keys.forEach(key =>\r\n        {\r\n            key.reset();\r\n        });\r\n    }\r\n\r\n    private getKeyValue (key: string): string\r\n    {\r\n        if (this.keyConversion.hasOwnProperty(key))\r\n        {\r\n            return this.keyConversion[key];\r\n        }\r\n        else\r\n        {\r\n            return key;\r\n        }\r\n    }\r\n\r\n    private onKeyDown (event: KeyboardEvent): void\r\n    {\r\n        const value = this.getKeyValue(event.key);\r\n\r\n        if (this.keys.has(value))\r\n        {\r\n            const key = this.keys.get(value);\r\n\r\n            key.down(event);\r\n        }\r\n\r\n        //  Key specific event\r\n        Emit(this, 'keydown-' + value, event);\r\n\r\n        //  Global keydown event\r\n        Emit(this, 'keydown', event);\r\n    }\r\n\r\n    private onKeyUp (event: KeyboardEvent): void\r\n    {\r\n        const value = this.getKeyValue(event.key);\r\n\r\n        if (this.keys.has(value))\r\n        {\r\n            const key = this.keys.get(value);\r\n\r\n            key.up(event);\r\n        }\r\n\r\n        //  Key specific event\r\n        Emit(this, 'keyup-' + value, event);\r\n\r\n        //  Global keyup event\r\n        Emit(this, 'keyup', event);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        window.removeEventListener('keydown', this.keydownHandler);\r\n        window.removeEventListener('keyup', this.keyupHandler);\r\n        window.removeEventListener('blur', this.blurHandler);\r\n\r\n        Emit(this, 'destroy');\r\n    }\r\n}\r\n","import { IKey } from './IKey';\r\n\r\nexport function SetKeyRepeatRate (rate: number, ...keys: IKey[]): IKey[]\r\n{\r\n    keys.forEach(key =>\r\n    {\r\n        key.repeatRate = rate;\r\n    });\r\n\r\n    return keys;\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Append (mat1: IMatrix2D, mat2: IMatrix2D, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = mat1;\r\n    const { a: a2, b: b2, c: c2, d: d2, tx: tx2, ty: ty2 } = mat2;\r\n\r\n    return out.set(\r\n        (a2 * a1) + (b2 * c1),\r\n        (a2 * b1) + (b2 * d1),\r\n        (c2 * a1) + (d2 * c1),\r\n        (c2 * b1) + (d2 * d1),\r\n        (tx2 * a1) + (ty2 * c1) + tx1,\r\n        (tx2 * b1) + (ty2 * d1) + ty1\r\n    );\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\nimport { Vec2 } from '../vec2/Vec2';\r\n\r\nexport function GlobalToLocal (mat: IMatrix2D, x: number, y: number, outPoint: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { a, b, c, d, tx, ty } = mat;\r\n\r\n    const id: number = 1 / ((a * d) + (c * -b));\r\n\r\n    outPoint.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\r\n    outPoint.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\r\n\r\n    return outPoint;\r\n}\r\n","import { Emit, EventEmitter } from '../../events';\r\n\r\nimport { Append as AppendMatrix2d } from '../../math/matrix2d-funcs/Append';\r\nimport { GameInstance } from '../../GameInstance';\r\nimport { GlobalToLocal } from '../../math/matrix2d/GlobalToLocal';\r\nimport { IGameObject } from '../../gameobjects/IGameObject';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\nexport class Mouse extends EventEmitter\r\n{\r\n    primaryDown: boolean = false;\r\n    auxDown: boolean = false;\r\n    secondaryDown: boolean = false;\r\n\r\n    localPoint: Vec2;\r\n    hitPoint: Vec2;\r\n\r\n    private target: HTMLElement;\r\n    private resolution: number = 1;\r\n\r\n    private mousedownHandler: { (event: MouseEvent): void; (this: Window, ev: MouseEvent): void };\r\n    private mouseupHandler: { (event: MouseEvent): void; (this: Window, ev: MouseEvent): void };\r\n    private mousemoveHandler: { (event: MouseEvent): void; (this: Window, ev: MouseEvent): void };\r\n    private blurHandler: { (): void; (this: Window, ev: FocusEvent): void };\r\n\r\n    private transPoint: Vec2;\r\n\r\n    constructor (target?: HTMLElement)\r\n    {\r\n        super();\r\n\r\n        this.mousedownHandler = (event: MouseEvent): void => this.onMouseDown(event);\r\n        this.mouseupHandler = (event: MouseEvent): void => this.onMouseUp(event);\r\n        this.mousemoveHandler = (event: MouseEvent): void => this.onMouseMove(event);\r\n        this.blurHandler = (): void => this.onBlur();\r\n\r\n        this.localPoint = new Vec2();\r\n        this.hitPoint = new Vec2();\r\n        this.transPoint = new Vec2();\r\n\r\n        if (!target)\r\n        {\r\n            target = GameInstance.get().renderer.canvas;\r\n        }\r\n\r\n        target.addEventListener('mousedown', this.mousedownHandler);\r\n        target.addEventListener('mouseup', this.mouseupHandler);\r\n\r\n        window.addEventListener('mouseup', this.mouseupHandler);\r\n        window.addEventListener('mousemove', this.mousemoveHandler);\r\n        window.addEventListener('blur', this.blurHandler);\r\n\r\n        this.target = target;\r\n    }\r\n\r\n    private onBlur (): void\r\n    {\r\n    }\r\n\r\n    private onMouseDown (event: MouseEvent): void\r\n    {\r\n        this.positionToPoint(event);\r\n\r\n        this.primaryDown = (event.button === 0);\r\n        this.auxDown = (event.button === 1);\r\n        this.secondaryDown = (event.button === 2);\r\n\r\n        Emit(this, 'pointerdown', this.localPoint.x, this.localPoint.y, event.button, event);\r\n    }\r\n\r\n    private onMouseUp (event: MouseEvent): void\r\n    {\r\n        this.positionToPoint(event);\r\n\r\n        this.primaryDown = !(event.button === 0);\r\n        this.auxDown = !(event.button === 1);\r\n        this.secondaryDown = !(event.button === 2);\r\n\r\n        Emit(this, 'pointerup', this.localPoint.x, this.localPoint.y, event.button, event);\r\n    }\r\n\r\n    private onMouseMove (event: MouseEvent): void\r\n    {\r\n        this.positionToPoint(event);\r\n\r\n        Emit(this, 'pointermove', this.localPoint.x, this.localPoint.y, event);\r\n    }\r\n\r\n    positionToPoint (event: MouseEvent): Vec2\r\n    {\r\n        return this.localPoint.set(event.offsetX, event.offsetY);\r\n    }\r\n\r\n    getInteractiveChildren <T extends IGameObject> (parent: T, results: IGameObject[]): void\r\n    {\r\n        const children = parent.children;\r\n\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            const child = children[i];\r\n\r\n            if (!child.visible || !child.input.enabled)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            results.push(child);\r\n\r\n            if (child.input.enabledChildren && child.numChildren)\r\n            {\r\n                this.getInteractiveChildren(child, results);\r\n            }\r\n        }\r\n    }\r\n\r\n    checkHitArea <T extends IGameObject> (entity: T, px: number, py: number): boolean\r\n    {\r\n        if (entity.input.hitArea)\r\n        {\r\n            if (entity.input.hitArea.contains(px, py))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            return entity.transform.extent.contains(px, py);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hitTest <T extends IGameObject> (...entities: T[]): boolean\r\n    {\r\n        const localX = this.localPoint.x;\r\n        const localY = this.localPoint.y;\r\n        const point = this.transPoint;\r\n\r\n        for (let i: number = 0; i < entities.length; i++)\r\n        {\r\n            const entity = entities[i];\r\n\r\n            if (!entity.world)\r\n            {\r\n                //  Can't hit test an entity if it hasn't been added to a World yet\r\n                continue;\r\n            }\r\n\r\n            const mat = AppendMatrix2d(entity.world.camera.worldTransform, entity.transform.world);\r\n\r\n            GlobalToLocal(mat, localX, localY, point);\r\n\r\n            if (this.checkHitArea(entity, point.x, point.y))\r\n            {\r\n                this.hitPoint.set(point.x, point.y);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hitTestChildren <T extends IGameObject> (parent: T, topOnly: boolean = true): IGameObject[]\r\n    {\r\n        const output: IGameObject[] = [];\r\n\r\n        if (!parent.visible)\r\n        {\r\n            return output;\r\n        }\r\n\r\n        //  Build a list of potential input candidates\r\n        const candidates: IGameObject[] = [];\r\n        const parentInput = parent.input;\r\n\r\n        if (parentInput && parentInput.enabled)\r\n        {\r\n            candidates.push(parent);\r\n        }\r\n\r\n        if (parentInput.enabledChildren && parent.numChildren)\r\n        {\r\n            this.getInteractiveChildren(parent, candidates);\r\n        }\r\n\r\n        for (let i: number = candidates.length - 1; i >= 0; i--)\r\n        {\r\n            const entity = candidates[i];\r\n\r\n            if (this.hitTest(entity))\r\n            {\r\n                output.push(entity);\r\n\r\n                if (topOnly)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    shutdown (): void\r\n    {\r\n        this.target.addEventListener('mousedown', this.mousedownHandler);\r\n        this.target.addEventListener('mouseup', this.mouseupHandler);\r\n\r\n        window.addEventListener('mouseup', this.mouseupHandler);\r\n        window.addEventListener('mousemove', this.mousemoveHandler);\r\n        window.addEventListener('blur', this.blurHandler);\r\n    }\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetInteractive <T extends IGameObject> (...children: T[]): T[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.input.enabled = true;\r\n    });\r\n\r\n    return children;\r\n}\r\n","/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the Chebyshev distance between two sets of coordinates (points).\r\n *\r\n * Chebyshev distance (or chessboard distance) is the maximum of the horizontal and vertical distances.\r\n * It's the effective distance when movement can be horizontal, vertical, or diagonal.\r\n *\r\n * @function Phaser.Math.Distance.Chebyshev\r\n * @since 3.22.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The distance between each point.\r\n */\r\nexport function ChebyshevDistance (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    return Math.max(Math.abs(x1 - x2), Math.abs(y1 - y2));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the distance between two sets of coordinates (points).\r\n *\r\n * @function Phaser.Math.Distance.Between\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The distance between each point.\r\n */\r\nexport function DistanceBetween (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    const dx = x1 - x2;\r\n    const dy = y1 - y2;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n","/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IVec2 } from '../vec2/IVec2';\r\n\r\n/**\r\n * Calculate the squared distance between two points.\r\n *\r\n * @function Phaser.Math.Distance.BetweenPointsSquared\r\n * @since 3.22.0\r\n *\r\n * @param {IVec2} a - The first point.\r\n * @param {IVec2} b - The second point.\r\n *\r\n * @return {number} The squared distance between the points.\r\n */\r\nexport function DistanceBetweenPointsSquared (a: IVec2, b: IVec2): number\r\n{\r\n    const dx = a.x - b.x;\r\n    const dy = a.y - b.y;\r\n\r\n    return dx * dx + dy * dy;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the distance between two sets of coordinates (points) to the power of `pow`.\r\n *\r\n * @function Phaser.Math.Distance.Power\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n * @param {number} [pow=2] - The exponent.\r\n *\r\n * @return {number} The distance between each point.\r\n */\r\nexport function DistancePower (x1: number, y1: number, x2: number, y2: number, pow: number = 2): number\r\n{\r\n    return Math.sqrt(Math.pow(x2 - x1, pow) + Math.pow(y2 - y1, pow));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the distance between two sets of coordinates (points), squared.\r\n *\r\n * @function Phaser.Math.Distance.Squared\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The distance between each point, squared.\r\n */\r\nexport function DistanceSquared (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    const dx = x1 - x2;\r\n    const dy = y1 - y2;\r\n\r\n    return dx * dx + dy * dy;\r\n}\r\n","/**\r\n * @author       samme\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the snake distance between two sets of coordinates (points).\r\n *\r\n * Snake distance (rectilinear distance, Manhattan distance) is the sum of the horizontal and vertical distances.\r\n * It's the effective distance when movement is allowed only horizontally or vertically (but not both).\r\n *\r\n * @function Phaser.Math.Distance.Snake\r\n * @since 3.22.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The distance between each point.\r\n */\r\nexport function SnakeDistance (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    return Math.abs(x1 - x2) + Math.abs(y1 - y2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the fuzzy ceiling of the given value.\r\n *\r\n * @function Phaser.Math.Fuzzy.Ceil\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {number} The fuzzy ceiling of the value.\r\n */\r\nexport function FuzzyCeil (value: number, epsilon: number = 0.0001): number\r\n{\r\n    return Math.ceil(value - epsilon);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether the given values are fuzzily equal.\r\n *\r\n * Two numbers are fuzzily equal if their difference is less than `epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.Equal\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if the values are fuzzily equal, otherwise `false`.\r\n */\r\nexport function FuzzyEqual (a: number, b: number, epsilon: number = 0.0001): boolean\r\n{\r\n    return Math.abs(a - b) < epsilon;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the fuzzy floor of the given value.\r\n *\r\n * @function Phaser.Math.Fuzzy.Floor\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {number} The floor of the value.\r\n */\r\nexport function FuzzyFloor (value: number, epsilon: number = 0.0001): number\r\n{\r\n    return Math.floor(value + epsilon);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether `a` is fuzzily greater than `b`.\r\n *\r\n * `a` is fuzzily greater than `b` if it is more than `b - epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.GreaterThan\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if `a` is fuzzily greater than than `b`, otherwise `false`.\r\n */\r\nexport function FuzzyGreaterThan (a: number, b: number, epsilon: number = 0.0001): boolean\r\n{\r\n    return a > b - epsilon;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether `a` is fuzzily less than `b`.\r\n *\r\n * `a` is fuzzily less than `b` if it is less than `b + epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.LessThan\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if `a` is fuzzily less than `b`, otherwise `false`.\r\n */\r\nexport function FuzzyLessThan (a: number, b: number, epsilon: number = 0.0001): boolean\r\n{\r\n    return a < b + epsilon;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates the factorial of a given number for integer values greater than 0.\r\n *\r\n * @function Phaser.Math.Factorial\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - A positive integer to calculate the factorial of.\r\n *\r\n * @return {number} The factorial of the given number.\r\n */\r\nexport function Factorial (value: number): number\r\n{\r\n    if (value === 0)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    let res = value;\r\n\r\n    while (--value)\r\n    {\r\n        res *= value;\r\n    }\r\n\r\n    return res;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Factorial } from './Factorial';\r\n\r\n/**\r\n * Calculates the Bernstein basis from the three factorial coefficients.\r\n *\r\n * @function Phaser.Math.Bernstein\r\n * @since 3.0.0\r\n *\r\n * @param {number} n - The first value.\r\n * @param {number} i - The second value.\r\n *\r\n * @return {number} The Bernstein basis of Factorial(n) / Factorial(i) / Factorial(n - i)\r\n */\r\nexport function Bernstein (n: number, i: number): number\r\n{\r\n    return Factorial(n) / Factorial(i) / Factorial(n - i);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Bernstein } from '../Bernstein';\r\n\r\n/**\r\n * A bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Bezier\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function BezierInterpolation (v: number[], k: number): number\r\n{\r\n    let b = 0;\r\n    const n = v.length - 1;\r\n\r\n    for (let i = 0; i <= n; i++)\r\n    {\r\n        b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\r\n    }\r\n\r\n    return b;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates a Catmull-Rom value from the given points, based on an alpha of 0.5.\r\n *\r\n * @function Phaser.Math.CatmullRom\r\n * @since 3.0.0\r\n *\r\n * @param {number} t - The amount to interpolate by.\r\n * @param {number} p0 - The first control point.\r\n * @param {number} p1 - The second control point.\r\n * @param {number} p2 - The third control point.\r\n * @param {number} p3 - The fourth control point.\r\n *\r\n * @return {number} The Catmull-Rom value.\r\n */\r\nexport function CatmullRom (t: number, p0: number, p1: number, p2: number, p3: number): number\r\n{\r\n    const v0 = (p2 - p0) * 0.5;\r\n    const v1 = (p3 - p1) * 0.5;\r\n    const t2 = t * t;\r\n    const t3 = t * t2;\r\n\r\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CatmullRom } from '../CatmullRom';\r\n\r\n/**\r\n * A Catmull-Rom interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.CatmullRom\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function CatmullRomInterpolation (v: number[], k: number): number\r\n{\r\n    const m = v.length - 1;\r\n    let f = m * k;\r\n    let i = Math.floor(f);\r\n\r\n    if (v[0] === v[m])\r\n    {\r\n        if (k < 0)\r\n        {\r\n            i = Math.floor(f = m * (1 + k));\r\n        }\r\n\r\n        return CatmullRom(f - i, v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m]);\r\n    }\r\n    else\r\n    {\r\n        if (k < 0)\r\n        {\r\n            return v[0] - (CatmullRom(-f, v[0], v[0], v[1], v[1]) - v[0]);\r\n        }\r\n\r\n        if (k > 1)\r\n        {\r\n            return v[m] - (CatmullRom(f - m, v[m], v[m], v[m - 1], v[m - 1]) - v[m]);\r\n        }\r\n\r\n        return CatmullRom(f - i, v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2]);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P0 (t: number, p: number): number\r\n{\r\n    const k = 1 - t;\r\n\r\n    return k * k * k * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P1 (t: number, p: number): number\r\n{\r\n    const k = 1 - t;\r\n\r\n    return 3 * k * k * t * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P2 (t: number, p: number): number\r\n{\r\n    return 3 * (1 - t) * t * t * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P3 (t: number, p: number): number\r\n{\r\n    return t * t * t * p;\r\n}\r\n\r\n/**\r\n * A cubic bezier interpolation method.\r\n *\r\n * https://medium.com/@adrian_cooney/bezier-interpolation-13b68563313a\r\n *\r\n * @function Phaser.Math.Interpolation.CubicBezier\r\n * @since 3.0.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The first control point.\r\n * @param {number} p2 - The second control point.\r\n * @param {number} p3 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function CubicBezierInterpolation (t: number, p0: number, p1: number, p2: number, p3: number): number\r\n{\r\n    return P0(t, p0) + P1(t, p1) + P2(t, p2) + P3(t, p3);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates a linear (interpolation) value over t.\r\n *\r\n * @function Phaser.Math.Linear\r\n * @since 3.0.0\r\n *\r\n * @param {number} p0 - The first point.\r\n * @param {number} p1 - The second point.\r\n * @param {number} t - The percentage between p0 and p1 to return, represented as a number between 0 and 1.\r\n *\r\n * @return {number} The step t% of the way between p0 and p1.\r\n */\r\nexport function Linear (p0: number, p1: number, t: number): number\r\n{\r\n    return (p1 - p0) * t + p0;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Linear } from '../Linear';\r\n\r\n/**\r\n * A linear interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Linear\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Linear_interpolation}\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {!number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {!number} The interpolated value.\r\n */\r\nexport function LinearInterpolation (v: number[], k: number): number\r\n{\r\n    const m = v.length - 1;\r\n    const f = m * k;\r\n    const i = Math.floor(f);\r\n\r\n    if (k < 0)\r\n    {\r\n        return Linear(v[0], v[1], f);\r\n    }\r\n    else if (k > 1)\r\n    {\r\n        return Linear(v[m], v[m - 1], m - f);\r\n    }\r\n    else\r\n    {\r\n        return Linear(v[i], v[(i + 1 > m) ? m : i + 1], f - i);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P0 (t: number, p: number): number\r\n{\r\n    const k = 1 - t;\r\n\r\n    return k * k * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P1 (t: number, p: number): number\r\n{\r\n    return 2 * (1 - t) * t * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P2 (t: number, p: number): number\r\n{\r\n    return t * t * p;\r\n}\r\n\r\n// https://github.com/mrdoob/three.js/blob/master/src/extras/core/Interpolations.js\r\n\r\n/**\r\n * A quadratic bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.QuadraticBezier\r\n * @since 3.2.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The control point.\r\n * @param {number} p2 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function QuadraticBezierInterpolation (t: number, p0: number, p1: number, p2: number): number\r\n{\r\n    return P0(t, p0) + P1(t, p1) + P2(t, p2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate a smooth interpolation percentage of `x` between `min` and `max`.\r\n *\r\n * The function receives the number `x` as an argument and returns 0 if `x` is less than or equal to the left edge,\r\n * 1 if `x` is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial,\r\n * between 0 and 1 otherwise.\r\n *\r\n * @function Phaser.Math.SmoothStep\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep}\r\n *\r\n * @param {number} x - The input value.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The percentage of interpolation, between 0 and 1.\r\n */\r\nexport function SmoothStep (x: number, min: number, max: number): number\r\n{\r\n    if (x <= min)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    if (x >= max)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    x = (x - min) / (max - min);\r\n\r\n    return x * x * (3 - 2 * x);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { SmoothStep } from '../SmoothStep';\r\n\r\n/**\r\n * A Smooth Step interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.SmoothStep\r\n * @since 3.9.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep}\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function SmoothStepInterpolation (t: number, min: number, max: number): number\r\n{\r\n    return min + (max - min) * SmoothStep(t, 0, 1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate a smoother interpolation percentage of `x` between `min` and `max`.\r\n *\r\n * The function receives the number `x` as an argument and returns 0 if `x` is less than or equal to the left edge,\r\n * 1 if `x` is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial,\r\n * between 0 and 1 otherwise.\r\n *\r\n * Produces an even smoother interpolation than {@link Phaser.Math.SmoothStep}.\r\n *\r\n * @function Phaser.Math.SmootherStep\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n *\r\n * @param {number} x - The input value.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The percentage of interpolation, between 0 and 1.\r\n */\r\nexport function SmootherStep (x: number, min: number, max: number): number\r\n{\r\n    x = Math.max(0, Math.min(1, (x - min) / (max - min)));\r\n\r\n    return x * x * x * (x * (x * 6 - 15) + 10);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { SmootherStep } from '../SmootherStep';\r\n\r\n/**\r\n * A Smoother Step interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.SmootherStep\r\n * @since 3.9.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function SmootherStepInterpolation (t: number, min: number, max: number): number\r\n{\r\n    return min + (max - min) * SmootherStep(t, 0, 1);\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Adds the src Matrix to the target Matrix and returns the target.\r\n\r\nexport function Add (target: IMatrix2D, src: IMatrix2D): IMatrix2D\r\n{\r\n    target.a += src.a;\r\n    target.b += src.b;\r\n    target.c += src.c;\r\n    target.d += src.d;\r\n    target.tx += src.tx;\r\n    target.ty += src.ty;\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n// Copy the values from src Matrix to the given Canvas Rendering Context.\r\n// This will use the Context.transform method.\r\n\r\nexport function CopyToContext (src: IMatrix2D, context: CanvasRenderingContext2D): CanvasRenderingContext2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    context.transform(a, b, c, d, tx, ty);\r\n\r\n    return context;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Return the determinant for the src Matrix.\r\n\r\nexport function Determinant (src: IMatrix2D): number\r\n{\r\n    const { a, b, c, d } = src;\r\n\r\n    return (a * d) - (b * c);\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\nexport function Frobenius (src: IMatrix2D): number\r\n{\r\n    return (Math.hypot(src.a, src.b, src.c, src.d, src.tx, src.ty, 1));\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Apply the identity, translate, rotate and scale operations on the target Matrix then returns it.\r\n\r\nexport function ITRS (target: IMatrix2D, x: number, y: number, angle: number, scaleX: number, scaleY: number): IMatrix2D\r\n{\r\n    if (angle === 0)\r\n    {\r\n        return target.set(1, 0, 0, 1, x, y);\r\n    }\r\n    else\r\n    {\r\n        const sin = Math.sin(angle);\r\n        const cos = Math.cos(angle);\r\n\r\n        return target.set(\r\n            cos * scaleX,\r\n            sin * scaleX,\r\n            -sin * scaleY,\r\n            cos * scaleY,\r\n            x,\r\n            y\r\n        );\r\n    }\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Apply the identity, translate, rotate, scale and skew operations on the target Matrix then returns it.\r\n\r\nexport function ITRSS (target: IMatrix2D, x: number, y: number, angle: number = 0, scaleX: number = 1, scaleY: number = 1, skewX: number = 0, skewY: number = 0): IMatrix2D\r\n{\r\n    if (angle === 0)\r\n    {\r\n        return target.set(1, 0, 0, 1, x, y);\r\n    }\r\n    else\r\n    {\r\n        return target.set(\r\n            Math.cos(angle + skewY) * scaleX,\r\n            Math.sin(angle + skewY) * scaleX,\r\n            -Math.sin(angle - skewX) * scaleY,\r\n            Math.cos(angle - skewX) * scaleY,\r\n            x,\r\n            y\r\n        );\r\n    }\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Inverts the target Matrix and then returns it\r\n\r\nexport function Invert (target: IMatrix2D): IMatrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    let determinant: number = a * d - b * c;\r\n\r\n    if (determinant)\r\n    {\r\n        determinant = 1 / determinant;\r\n  \r\n        target.set(\r\n            d * determinant,\r\n            -b * determinant,\r\n            -c * determinant,\r\n            a * determinant,\r\n            (c * ty - d * tx) * determinant,\r\n            (b * tx - a * ty) * determinant\r\n        );\r\n    }\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\nimport { Vec2 } from '../vec2/Vec2';\r\n\r\nexport function LocalToGlobal (mat: IMatrix2D, x: number, y: number, outPoint: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { a, b, c, d, tx, ty } = mat;\r\n\r\n    outPoint.x = (a * x) + (c * y) + tx;\r\n    outPoint.y = (b * x) + (d * y) + ty;\r\n\r\n    return outPoint;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Multiplies the target Matrix by the src Matrix and returns the target.\r\n\r\nexport function Multiply (target: IMatrix2D, src: IMatrix2D): IMatrix2D\r\n{\r\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = target;\r\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = src;\r\n    \r\n    target.a = a0 * a1 + c0 * b1;\r\n    target.b = b0 * a1 + d0 * b1;\r\n    target.c = a0 * c1 + c0 * d1;\r\n    target.d = b0 * c1 + d0 * d1;\r\n    target.tx = a0 * tx1 + c0 * ty1 + tx0;\r\n    target.ty = b0 * tx1 + d0 * ty1 + ty0;\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Multiplies the target Matrix by the given amount, then returns the target Matrix.\r\n\r\nexport function MultiplyScalar (target: IMatrix2D, scale: number): IMatrix2D\r\n{\r\n    target.a *= scale;\r\n    target.b *= scale;\r\n    target.c *= scale;\r\n    target.d *= scale;\r\n    target.tx *= scale;\r\n    target.ty *= scale;\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Multiplies the target Matrix by the given amount, then returns the target Matrix.\r\n\r\nexport function MultiplyScalarAndAdd (target: IMatrix2D, src: IMatrix2D, scale: number): IMatrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    target.a += (a * scale);\r\n    target.b += (b * scale);\r\n    target.c += (c * scale);\r\n    target.d += (d * scale);\r\n    target.tx += (tx * scale);\r\n    target.ty += (ty * scale);\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Rotates the target Matrix by the angle (in radians), then returns the target Matrix.\r\n\r\nexport function Rotate (target: IMatrix2D, angle: number): IMatrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    const sin = Math.sin(angle);\r\n    const cos = Math.cos(angle);\r\n\r\n    return target.set(\r\n        (a * cos) + (c * sin),\r\n        (b * cos) + (d * sin),\r\n        (a * -sin) + (c * cos),\r\n        (b * -sin) + (d * cos),\r\n        tx,\r\n        ty\r\n    );\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Scales the target Matrix by the given amounts, then returns the target Matrix.\r\n\r\nexport function Scale (target: IMatrix2D, scaleX: number, scaleY: number): IMatrix2D\r\n{\r\n    target.a *= scaleX;\r\n    target.b *= scaleX;\r\n    target.c *= scaleY;\r\n    target.d *= scaleY;\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n// Copy the values from the src Matrix to the given Canvas Rendering Context.\r\n// This will use the Context.setTransform method.\r\n\r\nexport function SetToContext (src: IMatrix2D, context: CanvasRenderingContext2D): CanvasRenderingContext2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    context.setTransform(a, b, c, d, tx, ty);\r\n\r\n    return context;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Skews the target Matrix by the given angles (in radians), then returns the target Matrix\r\n\r\nexport function Skew (target: IMatrix2D, angleX: number, angleY: number): IMatrix2D\r\n{\r\n    target.b += Math.tan(angleX);\r\n    target.c += Math.tan(angleY);\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Subtracts the src Matrix from the target Matrix and returns the target.\r\n\r\nexport function Subtract (target: IMatrix2D, src: IMatrix2D): IMatrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    target.a -= a;\r\n    target.b -= b;\r\n    target.c -= c;\r\n    target.d -= d;\r\n    target.tx -= tx;\r\n    target.ty -= ty;\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Translates the target Matrix and returns the target\r\n\r\nexport function Translate (target: IMatrix2D, x: number, y: number): IMatrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    target.tx = (a * x) + (c * y) + tx;\r\n    target.ty = (b * x) + (d * y) + ty;\r\n\r\n    return target;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Zeroes the target Matrix and returns the target\r\n\r\nexport function Zero (target: IMatrix2D): IMatrix2D\r\n{\r\n    return target.set(0, 0, 0, 0, 0, 0);\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\n//  Adds a to b and returns the values in a new Matrix2D\r\n\r\nexport function Add (a: IMatrix2D, b: IMatrix2D): Matrix2D\r\n{\r\n    return new Matrix2D(\r\n        a.a + b.a,\r\n        a.b + b.b,\r\n        a.c + b.c,\r\n        a.c + b.c,\r\n        a.tx + b.tx,\r\n        a.ty + b.ty\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\n//  Clones the src matrix to a new Matrix2D.\r\n\r\nexport function Clone (src: IMatrix2D): Matrix2D\r\n{\r\n    return new Matrix2D(src.a, src.b, src.c, src.d, src.tx, src.ty);\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\n\r\n//  Compares the a and b matrix and returns if they are equal, based on the epsilon.\r\n\r\nexport function Equals (a: IMatrix2D, b: IMatrix2D, epsilon: number = 0.000001): boolean\r\n{\r\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = a;\r\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = b;\r\n\r\n    return (\r\n        Math.abs(a0 - a1) <= epsilon * Math.max(1, Math.abs(a0), Math.abs(a1)) &&\r\n        Math.abs(b0 - b1) <= epsilon * Math.max(1, Math.abs(b0), Math.abs(b1)) &&\r\n        Math.abs(c0 - c1) <= epsilon * Math.max(1, Math.abs(c0), Math.abs(c1)) &&\r\n        Math.abs(d0 - d1) <= epsilon * Math.max(1, Math.abs(d0), Math.abs(d1)) &&\r\n        Math.abs(tx0 - tx1) <= epsilon * Math.max(1, Math.abs(tx0), Math.abs(tx1)) &&\r\n        Math.abs(ty0 - ty1) <= epsilon * Math.max(1, Math.abs(ty0), Math.abs(ty1))\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Rotate (src: IMatrix2D, angle: number): Matrix2D\r\n{\r\n    const { a, b, c, d } = src;\r\n\r\n    const sin = Math.sin(angle);\r\n    const cos = Math.cos(angle);\r\n\r\n    return new Matrix2D(\r\n        a * cos + c * sin,\r\n        b * cos + d * sin,\r\n        a * -sin + c * cos,\r\n        b * -sin + d * cos\r\n    );\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\nimport { Rotate } from './Rotate';\r\n\r\nexport function FromRotation (angle: number): Matrix2D\r\n{\r\n    return Rotate(new Matrix2D(), angle);\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Scale (src: IMatrix2D, scaleX: number, scaleY: number): Matrix2D\r\n{\r\n    return new Matrix2D(\r\n        src.a * scaleX,\r\n        src.b * scaleX,\r\n        src.c * scaleY,\r\n        src.d * scaleY\r\n    );\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\nimport { Scale } from './Scale';\r\n\r\nexport function FromScaling (scaleX: number, scaleY: number = scaleX): Matrix2D\r\n{\r\n    return Scale(new Matrix2D(), scaleX, scaleY);\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Translate (src: IMatrix2D, x: number, y: number): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    const dtx = a * x + c * y + tx;\r\n    const dty = b * x + d * y + ty;\r\n\r\n    return new Matrix2D(1, 0, 0, 1, dtx, dty);\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\nimport { Translate } from './Translate';\r\n\r\nexport function FromTranslation (x: number, y: number): Matrix2D\r\n{\r\n    return Translate(new Matrix2D(), x, y);\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Identity (): Matrix2D\r\n{\r\n    return new Matrix2D();\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\n//  Inverts the src Matrix and returns the result in a new Matrix, or null.\r\n\r\nexport function Invert (src: IMatrix2D): Matrix2D | null\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    let determinant: number = (a * d) - (b * c);\r\n\r\n    if (!determinant)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    determinant = 1 / determinant;\r\n  \r\n    return new Matrix2D(\r\n        d * determinant,\r\n        -b * determinant,\r\n        -c * determinant,\r\n        a * determinant,\r\n        (c * ty - d * tx) * determinant,\r\n        (b * tx - a * ty) * determinant\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\n//  Multiplies matrix a by b and returns the result in a new Matrix2D.\r\n\r\nexport function Multiply (a: IMatrix2D, b: IMatrix2D): Matrix2D\r\n{\r\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = a;\r\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = b;\r\n    \r\n    return new Matrix2D(\r\n        a0 * a1 + c0 * b1,\r\n        b0 * a1 + d0 * b1,\r\n        a0 * c1 + c0 * d1,\r\n        b0 * c1 + d0 * d1,\r\n        a0 * tx1 + c0 * ty1 + tx0,\r\n        b0 * tx1 + d0 * ty1 + ty0\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function MultiplyScalar (src: IMatrix2D, scale: number): Matrix2D\r\n{\r\n    return new Matrix2D(\r\n        src.a * scale,\r\n        src.b * scale,\r\n        src.c * scale,\r\n        src.d * scale,\r\n        src.tx * scale,\r\n        src.ty * scale\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function MultiplyScalarAndAdd (a: IMatrix2D, b: IMatrix2D, scale: number): Matrix2D\r\n{\r\n    return new Matrix2D(\r\n        a.a + (b.a * scale),\r\n        a.b + (b.b * scale),\r\n        a.c + (b.c * scale),\r\n        a.d + (b.d * scale),\r\n        a.tx + (b.tx * scale),\r\n        a.ty + (b.ty * scale)\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Subtract (a: IMatrix2D, b: IMatrix2D): Matrix2D\r\n{\r\n    return new Matrix2D(\r\n        a.a - b.a,\r\n        a.b - b.b,\r\n        a.c - b.c,\r\n        a.c - b.c,\r\n        a.tx - b.tx,\r\n        a.ty - b.ty\r\n    );\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Zero (): Matrix2D\r\n{\r\n    return new Matrix2D(0, 0, 0, 0, 0, 0);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns the nearest power of 2 to the given `value`.\r\n *\r\n * @function Phaser.Math.Pow2.GetNext\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value.\r\n *\r\n * @return {number} The nearest power of 2 to `value`.\r\n */\r\nexport function GetPowerOfTwo (value: number): number\r\n{\r\n    const index = Math.log(value) / 0.6931471805599453;\r\n\r\n    return (1 << Math.ceil(index));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Tests the value and returns `true` if it is a power of two.\r\n *\r\n * @function Phaser.Math.Pow2.IsValue\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to check if it's a power of two.\r\n *\r\n * @return {boolean} Returns `true` if `value` is a power of two, otherwise `false`.\r\n */\r\nexport function IsValuePowerOfTwo (value: number): boolean\r\n{\r\n    return (value > 0 && (value & (value - 1)) === 0);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using ceil.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `15`.\r\n * As will `14` snap to `15`... but `16` will snap to `20`.\r\n *\r\n * @function Phaser.Math.Snap.Ceil\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nexport function SnapCeil (value: number, gap: number, start: number = 0, divide: boolean = false): number\r\n{\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.ceil(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using floor.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10`.\r\n * As will `14` snap to `10`... but `16` will snap to `15`.\r\n *\r\n * @function Phaser.Math.Snap.Floor\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nexport function SnapFloor (value: number, gap: number, start: number = 0, divide: boolean = false): number\r\n{\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.floor(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using rounding.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10` whereas `14` will snap to `15`.\r\n *\r\n * @function Phaser.Math.Snap.To\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nexport function SnapTo (value: number, gap: number, start: number = 0, divide: boolean = false): number\r\n{\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.round(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the mean average of the given values.\r\n *\r\n * @function Phaser.Math.Average\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} values - The values to average.\r\n *\r\n * @return {number} The average value.\r\n */\r\nexport function Average (values: number[]): number\r\n{\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < values.length; i++)\r\n    {\r\n        sum += (+values[i]);\r\n    }\r\n\r\n    return sum / values.length;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Ceils to some place comparative to a `base`, default is 10 for decimal place.\r\n *\r\n * The `place` is represented by the power applied to `base` to get that place.\r\n *\r\n * @function Phaser.Math.CeilTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to round.\r\n * @param {number} [place=0] - The place to round to.\r\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\r\n *\r\n * @return {number} The rounded value.\r\n */\r\nexport function CeilTo (value: number, place: number = 0, base: number = 10): number\r\n{\r\n    const p = Math.pow(base, -place);\r\n\r\n    return Math.ceil(value * p) / p;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates the positive difference of two given numbers.\r\n *\r\n * @function Phaser.Math.Difference\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first number in the calculation.\r\n * @param {number} b - The second number in the calculation.\r\n *\r\n * @return {number} The positive difference of the two given numbers.\r\n */\r\nexport function Difference (a: number, b: number): number\r\n{\r\n    return Math.abs(a - b);\r\n}\r\n","export function FloatBetween (min: number, max: number): number\r\n{\r\n    return Math.random() * (max - min) + min;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Floors to some place comparative to a `base`, default is 10 for decimal place.\r\n *\r\n * The `place` is represented by the power applied to `base` to get that place.\r\n *\r\n * @function Phaser.Math.FloorTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to round.\r\n * @param {number} [place=0] - The place to round to.\r\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\r\n *\r\n * @return {number} The rounded value.\r\n */\r\nexport function FloorTo (value: number, place: number = 0, base: number = 10): number\r\n{\r\n    const p = Math.pow(base, -place);\r\n\r\n    return Math.floor(value * p) / p;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Clamp } from './Clamp';\r\n\r\n/**\r\n * Return a value based on the range between `min` and `max` and the percentage given.\r\n *\r\n * @function Phaser.Math.FromPercent\r\n * @since 3.0.0\r\n *\r\n * @param {number} percent - A value between 0 and 1 representing the percentage.\r\n * @param {number} min - The minimum value.\r\n * @param {number} [max] - The maximum value.\r\n *\r\n * @return {number} The value that is `percent` percent between `min` and `max`.\r\n */\r\nexport function FromPercent (percent: number, min: number, max?: number): number\r\n{\r\n    percent = Clamp(percent, 0, 1);\r\n\r\n    return (max - min) * percent;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate a per-ms speed from a distance and time (given in seconds).\r\n *\r\n * @function Phaser.Math.GetSpeed\r\n * @since 3.0.0\r\n *\r\n * @param {number} distance - The distance.\r\n * @param {number} time - The time, in seconds.\r\n *\r\n * @return {number} The speed, in distance per ms.\r\n */\r\nexport function GetSpeed (distance: number, time: number): number\r\n{\r\n    return (distance / time) / 1000;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Add an `amount` to a `value`, limiting the maximum result to `max`.\r\n *\r\n * @function Phaser.Math.MaxAdd\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to add to.\r\n * @param {number} amount - The amount to add.\r\n * @param {number} max - The maximum value to return.\r\n *\r\n * @return {number} The resulting value.\r\n */\r\nexport function MaxAdd (value: number, amount: number, max: number): number\r\n{\r\n    return Math.min(value + amount, max);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Subtract an `amount` from `value`, limiting the minimum result to `min`.\r\n *\r\n * @function Phaser.Math.MinSub\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to subtract from.\r\n * @param {number} amount - The amount to subtract.\r\n * @param {number} min - The minimum value to return.\r\n *\r\n * @return {number} The resulting value.\r\n */\r\nexport function MinSub (value: number, amount: number, min: number): number\r\n{\r\n    return Math.max(value - amount, min);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Work out what percentage `value` is of the range between `min` and `max`.\r\n * If `max` isn't given then it will return the percentage of `value` to `min`.\r\n *\r\n * You can optionally specify an `upperMax` value, which is a mid-way point in the range that represents 100%, after which the % starts to go down to zero again.\r\n *\r\n * @function Phaser.Math.Percent\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to determine the percentage of.\r\n * @param {number} min - The minimum value.\r\n * @param {number} [max] - The maximum value.\r\n * @param {number} [upperMax] - The mid-way point in the range that represents 100%.\r\n *\r\n * @return {number} A value between 0 and 1 representing the percentage.\r\n */\r\nexport function Percent (value: number, min: number, max?: number, upperMax?: number): number\r\n{\r\n    if (max === undefined) { max = min + 1; }\r\n\r\n    let percentage = (value - min) / (max - min);\r\n\r\n    if (percentage > 1)\r\n    {\r\n        if (upperMax !== undefined)\r\n        {\r\n            percentage = ((upperMax - value)) / (upperMax - max);\r\n\r\n            if (percentage < 0)\r\n            {\r\n                percentage = 0;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            percentage = 1;\r\n        }\r\n    }\r\n    else if (percentage < 0)\r\n    {\r\n        percentage = 0;\r\n    }\r\n\r\n    return percentage;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from './const';\r\n\r\n/**\r\n * Convert the given angle in radians, to the equivalent angle in degrees.\r\n *\r\n * @function Phaser.Math.RadToDeg\r\n * @since 3.0.0\r\n *\r\n * @param {number} radians - The angle in radians to convert ot degrees.\r\n *\r\n * @return {number} The given angle converted to degrees.\r\n */\r\nexport function RadToDeg (radians: number): number\r\n{\r\n    return radians * MATH_CONST.RAD_TO_DEG;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Round a given number so it is further away from zero. That is, positive numbers are rounded up, and negative numbers are rounded down.\r\n *\r\n * @function Phaser.Math.RoundAwayFromZero\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The number to round.\r\n *\r\n * @return {number} The rounded number, rounded away from zero.\r\n */\r\nexport function RoundAwayFromZero (value: number): number\r\n{\r\n    // \"Opposite\" of truncate.\r\n    return (value > 0) ? Math.ceil(value) : Math.floor(value);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Round a value to the given precision.\r\n * \r\n * For example:\r\n * \r\n * ```javascript\r\n * RoundTo(123.456, 0) = 123\r\n * RoundTo(123.456, 1) = 120\r\n * RoundTo(123.456, 2) = 100\r\n * ```\r\n * \r\n * To round the decimal, i.e. to round to precision, pass in a negative `place`:\r\n * \r\n * ```javascript\r\n * RoundTo(123.456789, 0) = 123\r\n * RoundTo(123.456789, -1) = 123.5\r\n * RoundTo(123.456789, -2) = 123.46\r\n * RoundTo(123.456789, -3) = 123.457\r\n * ```\r\n *\r\n * @function Phaser.Math.RoundTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to round.\r\n * @param {number} [place=0] - The place to round to. Positive to round the units, negative to round the decimal.\r\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\r\n *\r\n * @return {number} The rounded value.\r\n */\r\nexport function RoundTo (value: number, place: number = 0, base: number = 10): number\r\n{\r\n    const p = Math.pow(base, -place);\r\n\r\n    return Math.round(value * p) / p;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @typedef {object} Phaser.Types.Math.SinCosTable\r\n * @since 3.0.0\r\n *\r\n * @property {number[]} sin - The sine values.\r\n * @property {number[]} cos - The cosine values.\r\n * @property {number} length - The length.\r\n */\r\n\r\ntype SinCosTable = { sin: number[]; cos: number[]; length: number };\r\n\r\n/**\r\n * Generate a series of sine and cosine values.\r\n *\r\n * @function Phaser.Math.SinCosTableGenerator\r\n * @since 3.0.0\r\n *\r\n * @param {number} length - The number of values to generate.\r\n * @param {number} [sinAmp=1] - The sine value amplitude.\r\n * @param {number} [cosAmp=1] - The cosine value amplitude.\r\n * @param {number} [frequency=1] - The frequency of the values.\r\n *\r\n * @return {SinCosTable} The generated values.\r\n */\r\nexport function SinCosTableGenerator (length: number, sinAmp: number = 1, cosAmp: number = 1, frequency: number = 1): SinCosTable\r\n{\r\n    frequency *= Math.PI / length;\r\n\r\n    const cos = [];\r\n    const sin = [];\r\n\r\n    for (let c = 0; c < length; c++)\r\n    {\r\n        cosAmp -= sinAmp * frequency;\r\n        sinAmp += cosAmp * frequency;\r\n\r\n        cos[c] = cosAmp;\r\n        sin[c] = sinAmp;\r\n    }\r\n\r\n    return {\r\n        sin,\r\n        cos,\r\n        length\r\n    };\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Vec2 } from './vec2/Vec2';\r\n\r\n/**\r\n * Returns a Vector2 containing the x and y position of the given index in a `width` x `height` sized grid.\r\n * \r\n * For example, in a 6 x 4 grid, index 16 would equal x: 4 y: 2.\r\n * \r\n * If the given index is out of range an empty Vector2 is returned.\r\n *\r\n * @function Phaser.Math.ToXY\r\n * @since 3.19.0\r\n *\r\n * @param {number} index - The position within the grid to get the x/y value for.\r\n * @param {number} width - The width of the grid.\r\n * @param {number} height - The height of the grid.\r\n * @param {Vec2} [out] - An optional Vector2 to store the result in. If not given, a new Vector2 instance will be created.\r\n *\r\n * @return {Vec2} A Vector2 where the x and y properties contain the given grid index.\r\n */\r\nexport function ToXY (index: number, width: number, height: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    let x = 0;\r\n    let y = 0;\r\n    const total = width * height;\r\n\r\n    if (index > 0 && index <= total)\r\n    {\r\n        if (index > width - 1)\r\n        {\r\n            y = Math.floor(index / width);\r\n            x = index - (y * width);\r\n        }\r\n        else\r\n        {\r\n            x = index;\r\n        }\r\n\r\n        out.set(x, y);\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Vec2 } from './vec2/Vec2';\r\n\r\n/**\r\n * Takes the `x` and `y` coordinates and transforms them into the same space as\r\n * defined by the position, rotation and scale values.\r\n *\r\n * @function Phaser.Math.TransformXY\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The x coordinate to be transformed.\r\n * @param {number} y - The y coordinate to be transformed.\r\n * @param {number} positionX - Horizontal position of the transform point.\r\n * @param {number} positionY - Vertical position of the transform point.\r\n * @param {number} rotation - Rotation of the transform point, in radians.\r\n * @param {number} scaleX - Horizontal scale of the transform point.\r\n * @param {number} scaleY - Vertical scale of the transform point.\r\n * @param {Vec2} [output] - The output vector, point or object for the translated coordinates.\r\n *\r\n * @return {Vec2} The translated point.\r\n */\r\nexport function TransformXY (x: number, y: number, positionX: number, positionY: number, rotation: number, scaleX: number, scaleY: number, output: Vec2 = new Vec2()): Vec2\r\n{\r\n    const radianSin = Math.sin(rotation);\r\n    const radianCos = Math.cos(rotation);\r\n\r\n    // Rotate and Scale\r\n    const a = radianCos * scaleX;\r\n    const b = radianSin * scaleX;\r\n    const c = -radianSin * scaleY;\r\n    const d = radianCos * scaleY;\r\n\r\n    //  Invert\r\n    const id = 1 / ((a * d) + (c * -b));\r\n\r\n    output.x = (d * id * x) + (-c * id * y) + (((positionY * c) - (positionX * d)) * id);\r\n    output.y = (a * id * y) + (-b * id * x) + (((-positionY * a) + (positionX * b)) * id);\r\n\r\n    return output;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if the two values are within the given `tolerance` of each other.\r\n *\r\n * @function Phaser.Math.Within\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value to use in the calculation.\r\n * @param {number} b - The second value to use in the calculation.\r\n * @param {number} tolerance - The tolerance. Anything equal to or less than this value is considered as being within range.\r\n *\r\n * @return {boolean} Returns `true` if `a` is less than or equal to the tolerance of `b`.\r\n */\r\nexport function Within (a: number, b: number, tolerance: number): boolean\r\n{\r\n    return (Math.abs(a - b) <= tolerance);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n */\r\nexport const Arne16 = [\r\n    '#000',\r\n    '#9D9D9D',\r\n    '#FFF',\r\n    '#BE2633',\r\n    '#E06F8B',\r\n    '#493C2B',\r\n    '#A46422',\r\n    '#EB8931',\r\n    '#F7E26B',\r\n    '#2F484E',\r\n    '#44891A',\r\n    '#A3CE27',\r\n    '#1B2632',\r\n    '#005784',\r\n    '#31A2F2',\r\n    '#B2DCEF'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette inspired by the Commodore 64.\r\n */\r\nexport const C64 = [\r\n    '#000',\r\n    '#fff',\r\n    '#8b4131',\r\n    '#7bbdc5',\r\n    '#8b41ac',\r\n    '#6aac41',\r\n    '#3931a4',\r\n    '#d5de73',\r\n    '#945a20',\r\n    '#5a4100',\r\n    '#bd736a',\r\n    '#525252',\r\n    '#838383',\r\n    '#acee8b',\r\n    '#7b73de',\r\n    '#acacac'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color CGA inspired palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n */\r\nexport const CGA = [\r\n    '#000',\r\n    '#2234d1',\r\n    '#0c7e45',\r\n    '#44aacc',\r\n    '#8a3622',\r\n    '#5c2e78',\r\n    '#aa5c3d',\r\n    '#b5b5b5',\r\n    '#5e606e',\r\n    '#4c81fb',\r\n    '#6cd947',\r\n    '#7be2f9',\r\n    '#eb8a60',\r\n    '#e23d69',\r\n    '#ffd93f',\r\n    '#fff'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color JMP palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n */\r\nexport const JMP = [\r\n    '#000',\r\n    '#191028',\r\n    '#46af45',\r\n    '#a1d685',\r\n    '#453e78',\r\n    '#7664fe',\r\n    '#833129',\r\n    '#9ec2e8',\r\n    '#dc534b',\r\n    '#e18d79',\r\n    '#d6b97b',\r\n    '#e9d8a1',\r\n    '#216c4b',\r\n    '#d365c8',\r\n    '#afaab9',\r\n    '#f5f4eb'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette inspired by Japanese computers like the MSX.\r\n */\r\nexport const MSX = [\r\n    '#000',\r\n    '#191028',\r\n    '#46af45',\r\n    '#a1d685',\r\n    '#453e78',\r\n    '#7664fe',\r\n    '#833129',\r\n    '#9ec2e8',\r\n    '#dc534b',\r\n    '#e18d79',\r\n    '#d6b97b',\r\n    '#e9d8a1',\r\n    '#216c4b',\r\n    '#d365c8',\r\n    '#afaab9',\r\n    '#fff'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette as used in Pico8. */\r\nexport const PICO8 = [\r\n    '#000',\r\n    '#1D2B53',\r\n    '#7E2553',\r\n    '#008751',\r\n    '#AB5236',\r\n    '#5F574F',\r\n    '#C2C3C7',\r\n    '#FFF1E8',\r\n    '#FF004D',\r\n    '#FFA300',\r\n    '#FFEC27',\r\n    '#00E436',\r\n    '#29ADFF',\r\n    '#83769C',\r\n    '#FF77A8',\r\n    '#FFCCAA'\r\n];\r\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { Frame } from '../Frame';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function AtlasParser (texture: Texture, data: any): void\r\n{\r\n    let frames;\r\n\r\n    if (Array.isArray(data.textures))\r\n    {\r\n        //  TP3 Format\r\n        frames = data.textures[0].frames;\r\n    }\r\n    else if (Array.isArray(data.frames))\r\n    {\r\n        //  TP2 Format Array\r\n        frames = data.frames;\r\n    }\r\n    else if (data.hasOwnProperty('frames'))\r\n    {\r\n        //  TP2 Format Hash\r\n        frames = Object.values(data.frames);\r\n    }\r\n    else\r\n    {\r\n        console.warn('Invalid Texture Atlas JSON');\r\n    }\r\n\r\n    if (frames)\r\n    {\r\n        let newFrame: Frame;\r\n\r\n        for (let i = 0; i < frames.length; i++)\r\n        {\r\n            const src = frames[i];\r\n\r\n            //  The frame values are the exact coordinates to cut the frame out of the atlas from\r\n            newFrame = texture.addFrame(src.filename, src.frame.x, src.frame.y, src.frame.w, src.frame.h);\r\n\r\n            //  These are the original (non-trimmed) sprite values\r\n            if (src.trimmed)\r\n            {\r\n                newFrame.setTrim(\r\n                    src.sourceSize.w,\r\n                    src.sourceSize.h,\r\n                    src.spriteSourceSize.x,\r\n                    src.spriteSourceSize.y,\r\n                    src.spriteSourceSize.w,\r\n                    src.spriteSourceSize.h\r\n                );\r\n            }\r\n            else\r\n            {\r\n                newFrame.setSourceSize(src.sourceSize.w, src.sourceSize.h);\r\n            }\r\n\r\n            if (src.rotated)\r\n            {\r\n                // newFrame.rotated = true;\r\n                // newFrame.updateUVsInverted();\r\n            }\r\n\r\n            if (src.anchor)\r\n            {\r\n                newFrame.setPivot(src.anchor.x, src.anchor.y);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Frame } from '../Frame';\r\nimport { Texture } from '../Texture';\r\n\r\n/**\r\n * Read an integer value from an XML Node.\r\n *\r\n * @function getValue\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Node} node - The XML Node.\r\n * @param {string} attribute - The attribute to read.\r\n *\r\n * @return {integer} The parsed value.\r\n */\r\nfunction GetValue (node: any, attribute: string): number\r\n{\r\n    return parseInt(node.getAttribute(attribute), 10);\r\n}\r\n\r\ntype BitmapCharacter = {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    // centerX: number;\r\n    // centerY: number,\r\n    xOffset: number;\r\n    yOffset: number;\r\n    xAdvance: number;\r\n    // data: {};\r\n    kerning: Record<number, number>;\r\n};\r\n\r\ntype BitmapData = {\r\n    font: string;\r\n    size: number;\r\n    lineHeight: number;\r\n    chars: Record<number, BitmapCharacter>;\r\n};\r\n\r\nexport function BitmapTextParser (texture: Texture, xml: XMLDocument, frame?: Frame): BitmapData\r\n{\r\n    const xSpacing = 0;\r\n    const ySpacing = 0;\r\n\r\n    const info = xml.getElementsByTagName('info')[0];\r\n    const common = xml.getElementsByTagName('common')[0];\r\n\r\n    const data: BitmapData = {\r\n        font: info.getAttribute('face'),\r\n        size: GetValue(info, 'size'),\r\n        lineHeight: GetValue(common, 'lineHeight') + ySpacing,\r\n        chars: {}\r\n    };\r\n\r\n    const letters = xml.getElementsByTagName('char');\r\n\r\n    // var adjustForTrim = (frame !== undefined && frame.trimmed);\r\n\r\n    // if (adjustForTrim)\r\n    // {\r\n    //     var top = frame.height;\r\n    //     var left = frame.width;\r\n    // }\r\n\r\n    for (let i: number = 0; i < letters.length; i++)\r\n    {\r\n        const node = letters[i];\r\n\r\n        const charCode = GetValue(node, 'id');\r\n        const x = GetValue(node, 'x');\r\n        const y = GetValue(node, 'y');\r\n        const width = GetValue(node, 'width');\r\n        const height = GetValue(node, 'height');\r\n\r\n        //  Handle frame trim issues\r\n\r\n        // if (adjustForTrim)\r\n        // {\r\n        //     if (gx < left)\r\n        //     {\r\n        //         left = gx;\r\n        //     }\r\n\r\n        //     if (gy < top)\r\n        //     {\r\n        //         top = gy;\r\n        //     }\r\n        // }\r\n\r\n        data.chars[charCode] =\r\n        {\r\n            x,\r\n            y,\r\n            width,\r\n            height,\r\n            // centerX: Math.floor(width / 2),\r\n            // centerY: Math.floor(height / 2),\r\n            xOffset: GetValue(node, 'xoffset'),\r\n            yOffset: GetValue(node, 'yoffset'),\r\n            xAdvance: GetValue(node, 'xadvance') + xSpacing,\r\n            // data: {},\r\n            kerning: {}\r\n        };\r\n\r\n        texture.addFrame(charCode, x, y, width, height);\r\n    }\r\n\r\n    /*\r\n    if (adjustForTrim && top !== 0 && left !== 0)\r\n    {\r\n        //  Now we know the top and left coordinates of the glyphs in the original data\r\n        //  so we can work out how much to adjust the glyphs by\r\n\r\n        for (var code in data.chars)\r\n        {\r\n            var glyph = data.chars[code];\r\n\r\n            glyph.x -= frame.x;\r\n            glyph.y -= frame.y;\r\n        }\r\n    }\r\n    */\r\n\r\n    const kernings = xml.getElementsByTagName('kerning');\r\n\r\n    for (let i: number = 0; i < kernings.length; i++)\r\n    {\r\n        const kern = kernings[i];\r\n\r\n        const first = GetValue(kern, 'first');\r\n        const second = GetValue(kern, 'second');\r\n        const amount = GetValue(kern, 'amount');\r\n\r\n        data.chars[second].kerning[first] = amount;\r\n    }\r\n\r\n    return data;\r\n}\r\n","import { IFrameConfig } from '../IFrameConfig';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function SpriteSheetParser (texture: Texture, x: number, y: number, width: number, height: number, frameConfig: IFrameConfig): void\r\n{\r\n    const {\r\n        frameWidth = null,\r\n        endFrame = -1,\r\n        margin = 0,\r\n        spacing = 0\r\n    } = frameConfig;\r\n\r\n    let {\r\n        frameHeight = null,\r\n        startFrame = 0\r\n    } = frameConfig;\r\n\r\n    if (!frameHeight)\r\n    {\r\n        frameHeight = frameWidth;\r\n    }\r\n\r\n    //  If missing we can't proceed\r\n    if (frameWidth === null)\r\n    {\r\n        throw new Error('SpriteSheetParser: Invalid frameWidth');\r\n    }\r\n\r\n    const row: number = Math.floor((width - margin + spacing) / (frameWidth + spacing));\r\n    const column: number = Math.floor((height - margin + spacing) / (frameHeight + spacing));\r\n    let total: number = row * column;\r\n\r\n    if (total === 0)\r\n    {\r\n        console.warn('SpriteSheetParser: Frame config will result in zero frames');\r\n    }\r\n\r\n    if (startFrame > total || startFrame < -total)\r\n    {\r\n        startFrame = 0;\r\n    }\r\n\r\n    if (startFrame < 0)\r\n    {\r\n        //  Allow negative skipframes.\r\n        startFrame = total + startFrame;\r\n    }\r\n\r\n    if (endFrame !== -1)\r\n    {\r\n        total = startFrame + (endFrame + 1);\r\n    }\r\n\r\n    let fx: number = margin;\r\n    let fy: number = margin;\r\n    let ax: number = 0;\r\n    let ay: number = 0;\r\n\r\n    for (let i: number = 0; i < total; i++)\r\n    {\r\n        ax = 0;\r\n        ay = 0;\r\n\r\n        const w: number = fx + frameWidth;\r\n        const h: number = fy + frameHeight;\r\n\r\n        if (w > width)\r\n        {\r\n            ax = w - width;\r\n        }\r\n\r\n        if (h > height)\r\n        {\r\n            ay = h - height;\r\n        }\r\n\r\n        texture.addFrame(i, x + fx, y + fy, frameWidth - ax, frameHeight - ay);\r\n\r\n        fx += frameWidth + spacing;\r\n\r\n        if (fx + frameWidth > width)\r\n        {\r\n            fx = margin;\r\n            fy += frameHeight + spacing;\r\n        }\r\n    }\r\n}\r\n","import { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function GridTexture (color1: string, color2: string, width: number = 32, height: number = 32, cols: number = 2, rows: number = 2): Texture\r\n{\r\n    const ctx = CreateCanvas(width, height);\r\n\r\n    const colWidth = width / cols;\r\n    const rowHeight = height / rows;\r\n\r\n    ctx.fillStyle = color1;\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    ctx.fillStyle = color2;\r\n\r\n    for (let y: number = 0; y < rows; y++)\r\n    {\r\n        for (let x: number = (y % 2); x < cols; x += 2)\r\n        {\r\n            ctx.fillRect(x * colWidth, y * rowHeight, colWidth, rowHeight);\r\n        }\r\n    }\r\n\r\n    return new Texture(ctx.canvas);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Arne16 } from '../palettes/Arne16';\r\nimport { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\n/**\r\n * @callback Phaser.Types.Create.GenerateTextureCallback\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLCanvasElement} canvas - The HTML Canvas element to operate on.\r\n * @param {CanvasRenderingContext2D} context - The context of the HTML Canvas element.\r\n */\r\n\r\n/**\r\n * @typedef {object} Phaser.Types.Create.GenerateTextureConfig\r\n * @since 3.0.0\r\n *\r\n * @property {array} [data=[]] - An array of data, where each row is a string of single values 0-9A-F, or the period character.\r\n * @property {HTMLCanvasElement} [canvas=null] - The HTML Canvas to draw the texture to.\r\n * @property {Phaser.Types.Create.Palette} [palette=Arne16] - The indexed palette that the data cell values map to.\r\n * @property {number} [pixelWidth=1] - The width of each 'pixel' in the generated texture.\r\n * @property {number} [pixelHeight=1] - The height of each 'pixel' in the generated texture.\r\n * @property {boolean} [resizeCanvas=true] - Should the canvas be resized before the texture is drawn?\r\n * @property {boolean} [clearCanvas=true] - Should the canvas be cleared before the texture is drawn?\r\n * @property {Phaser.Types.Create.GenerateTextureCallback} [preRender] - A callback to send the canvas to prior to the texture being drawn.\r\n * @property {Phaser.Types.Create.GenerateTextureCallback} [postRender] - A callback to send the canvas to after the texture has been drawn.\r\n */\r\n\r\nexport type PixelTextureConfig = {\r\n    data: string[];\r\n    canvas?: HTMLCanvasElement;\r\n    palette?: string[];\r\n    pixelWidth?: number;\r\n    pixelHeight?: number;\r\n    resizeCanvas?: boolean;\r\n    clearCanvas?: boolean;\r\n    preRender?: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void;\r\n    postRender?: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void;\r\n};\r\n\r\n/**\r\n * Generates a texture based on the given Create configuration object.\r\n *\r\n * The texture is drawn using a fixed-size indexed palette of 16 colors, where the hex value in the\r\n * data cells map to a single color. For example, if the texture config looked like this:\r\n *\r\n * ```javascript\r\n * var star = [\r\n *   '.....828.....',\r\n *   '....72227....',\r\n *   '....82228....',\r\n *   '...7222227...',\r\n *   '2222222222222',\r\n *   '8222222222228',\r\n *   '.72222222227.',\r\n *   '..787777787..',\r\n *   '..877777778..',\r\n *   '.78778887787.',\r\n *   '.27887.78872.',\r\n *   '.787.....787.'\r\n * ];\r\n *\r\n * this.textures.generate('star', { data: star, pixelWidth: 4 });\r\n * ```\r\n *\r\n * Then it would generate a texture that is 52 x 48 pixels in size, because each cell of the data array\r\n * represents 1 pixel multiplied by the `pixelWidth` value. The cell values, such as `8`, maps to color\r\n * number 8 in the palette. If a cell contains a period character `.` then it is transparent.\r\n *\r\n * The default palette is Arne16, but you can specify your own using the `palette` property.\r\n *\r\n * @function Phaser.Create.GenerateTexture\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Create.GenerateTextureConfig} config - The Generate Texture Configuration object.\r\n *\r\n * @return {Texture} An HTMLCanvasElement which contains the generated texture drawn to it.\r\n */\r\nexport function PixelTexture (config: PixelTextureConfig): Texture\r\n{\r\n    const {\r\n        data = [],\r\n        palette = Arne16,\r\n        pixelWidth = 1,\r\n        pixelHeight = pixelWidth,\r\n        preRender = null,\r\n        postRender = null\r\n    } = config;\r\n\r\n    let {\r\n        canvas = null,\r\n        resizeCanvas = true,\r\n        clearCanvas = true\r\n    } = config;\r\n\r\n    const width = Math.floor(Math.abs(data[0].length * pixelWidth));\r\n    const height = Math.floor(Math.abs(data.length * pixelHeight));\r\n\r\n    if (!canvas)\r\n    {\r\n        canvas = CreateCanvas(width, height).canvas;\r\n        resizeCanvas = false;\r\n        clearCanvas = false;\r\n    }\r\n\r\n    if (resizeCanvas)\r\n    {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (clearCanvas)\r\n    {\r\n        ctx.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    //  preRender Callback?\r\n    if (preRender)\r\n    {\r\n        preRender(canvas, ctx);\r\n    }\r\n\r\n    //  Draw it\r\n    for (let y = 0; y < data.length; y++)\r\n    {\r\n        const row = data[y];\r\n\r\n        for (let x = 0; x < row.length; x++)\r\n        {\r\n            const d: string = row[x];\r\n\r\n            if (d !== '.' && d !== ' ')\r\n            {\r\n                ctx.fillStyle = palette[parseInt('0x' + d.toUpperCase())];\r\n                ctx.fillRect(x * pixelWidth, y * pixelHeight, pixelWidth, pixelHeight);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  postRender Callback?\r\n    if (postRender)\r\n    {\r\n        postRender(canvas, ctx);\r\n    }\r\n\r\n    return new Texture(canvas);\r\n}\r\n","import { CreateFramebuffer } from '../../renderer/webgl1/fbo/CreateFramebuffer';\r\nimport { GLTextureBinding } from '../../renderer/webgl1/textures/GLTextureBinding';\r\nimport { ISprite } from '../../gameobjects/sprite/ISprite';\r\nimport { Ortho } from '../../renderer/webgl1/cameras/Ortho';\r\nimport { Texture } from '../Texture';\r\nimport { WebGLRenderer } from '../../renderer/webgl1/WebGLRenderer';\r\n\r\nexport class RenderTexture extends Texture\r\n{\r\n    renderer: WebGLRenderer;\r\n    cameraMatrix: Float32Array;\r\n    projectionMatrix: Float32Array;\r\n\r\n    constructor (renderer: WebGLRenderer, width: number = 256, height: number = width)\r\n    {\r\n        super(null, width, height);\r\n\r\n        this.renderer = renderer;\r\n\r\n        /*\r\n        const [ texture, framebuffer ] = CreateFramebuffer(width, height);\r\n\r\n        this.binding = new GLTextureBinding(this);\r\n\r\n        this.binding.texture = texture;\r\n        this.binding.framebuffer = framebuffer;\r\n\r\n        this.projectionMatrix = Ortho(width, height);\r\n        this.cameraMatrix = new Float32Array([ 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, height, 0, 1 ]);\r\n        */\r\n    }\r\n\r\n    cls (): this\r\n    {\r\n        const renderer = this.renderer;\r\n        const gl = renderer.gl;\r\n\r\n        renderer.reset(this.binding.framebuffer, this.width, this.height);\r\n\r\n        gl.clearColor(0, 0, 0, 0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        renderer.reset();\r\n\r\n        return this;\r\n    }\r\n\r\n    batchStart (): this\r\n    {\r\n        // const renderer = this.renderer;\r\n\r\n        // renderer.reset(this.binding.framebuffer, this.width, this.height);\r\n\r\n        // renderer.currentShader.bind(this.projectionMatrix, this.cameraMatrix);\r\n\r\n        return this;\r\n    }\r\n\r\n    batchDraw (sprites: ISprite[]): this\r\n    {\r\n        const renderer = this.renderer;\r\n\r\n        for (let i = 0, len = sprites.length; i < len; i++)\r\n        {\r\n            sprites[i].renderGL(renderer);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    batchEnd (): this\r\n    {\r\n        const renderer = this.renderer;\r\n\r\n        renderer.flush();\r\n\r\n        renderer.reset();\r\n\r\n        return this;\r\n    }\r\n\r\n    draw (...sprites: ISprite[]): this\r\n    {\r\n        this.batchStart();\r\n        this.batchDraw(sprites);\r\n        this.batchEnd();\r\n\r\n        return this;\r\n    }\r\n}\r\n","import { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function SolidColorTexture (color: string = 'rgba(0,0,0,0)', width: number = 32, height: number = 32): Texture\r\n{\r\n    const ctx = CreateCanvas(width, height);\r\n\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    return new Texture(ctx.canvas);\r\n}\r\n","import { Frame } from './Frame';\r\nimport { ITexture } from './ITexture';\r\n\r\nexport function GetFrames (texture: ITexture, frames: string[] | number[]): Frame[]\r\n{\r\n    const output: Frame[] = [];\r\n\r\n    frames.forEach((key: string | number) =>\r\n    {\r\n        output.push(texture.getFrame(key));\r\n    });\r\n\r\n    return output;\r\n}\r\n","import { Frame } from './Frame';\r\nimport { ITexture } from './ITexture';\r\n\r\nexport type GetFramesInRangeConfig =\r\n{\r\n    prefix?: string;\r\n    start?: number;\r\n    end: number;\r\n    zeroPad?: number;\r\n    suffix?: string;\r\n};\r\n\r\nexport function GetFramesInRange (texture: ITexture, config: GetFramesInRangeConfig): Frame[]\r\n{\r\n    const {\r\n        prefix = '',\r\n        start = 0,\r\n        zeroPad = 0,\r\n        suffix = ''\r\n    } = config;\r\n\r\n    let end = config.end;\r\n\r\n    const output: Frame[] = [];\r\n\r\n    const diff: number = (start < end) ? 1 : -1;\r\n\r\n    //  Adjust because we use i !== end in the for loop\r\n    end += diff;\r\n\r\n    for (let i: number = start; i !== end; i += diff)\r\n    {\r\n        const frameKey = (prefix + i.toString().padStart(zeroPad, '0') + suffix);\r\n\r\n        output.push(texture.getFrame(frameKey));\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { Texture } from './Texture';\r\n\r\nexport function SetFilter (linear: boolean, ...textures: Texture[]): Texture[]\r\n{\r\n    textures.forEach(texture =>\r\n    {\r\n        if (texture.binding)\r\n        {\r\n            texture.binding.setFilter(linear);\r\n        }\r\n    });\r\n\r\n    return textures;\r\n}\r\n","import { CreateCanvas } from './CreateCanvas';\r\nimport { Texture } from './Texture';\r\nimport { TextureManagerInstance } from './TextureManagerInstance';\r\n\r\nexport class TextureManager\r\n{\r\n    textures: Map<string, Texture>;\r\n\r\n    constructor ()\r\n    {\r\n        this.textures = new Map();\r\n\r\n        this.createDefaultTextures();\r\n\r\n        TextureManagerInstance.set(this);\r\n    }\r\n\r\n    private createDefaultTextures (): void\r\n    {\r\n        this.add('__BLANK', new Texture(CreateCanvas(32, 32).canvas));\r\n\r\n        const missing = CreateCanvas(32, 32);\r\n\r\n        missing.strokeStyle = '#0f0';\r\n        missing.moveTo(0, 0);\r\n        missing.lineTo(32, 32);\r\n        missing.stroke();\r\n        missing.strokeRect(0.5, 0.5, 31, 31);\r\n\r\n        this.add('__MISSING', new Texture(missing.canvas));\r\n    }\r\n\r\n    get (key: string): Texture\r\n    {\r\n        const textures = this.textures;\r\n\r\n        if (textures.has(key))\r\n        {\r\n            return textures.get(key);\r\n        }\r\n        else\r\n        {\r\n            return textures.get('__MISSING');\r\n        }\r\n    }\r\n\r\n    has (key: string): boolean\r\n    {\r\n        return this.textures.has(key);\r\n    }\r\n\r\n    add (key: string, source: Texture | HTMLImageElement): Texture\r\n    {\r\n        let texture: Texture;\r\n        const textures = this.textures;\r\n\r\n        if (!textures.has(key))\r\n        {\r\n            if (source instanceof Texture)\r\n            {\r\n                texture = source;\r\n            }\r\n            else\r\n            {\r\n                texture = new Texture(source);\r\n            }\r\n\r\n            texture.key = key;\r\n\r\n            textures.set(key, texture);\r\n        }\r\n\r\n        return texture;\r\n    }\r\n}\r\n","export function NOOP (): void\r\n{\r\n\r\n}\r\n","import { Clock } from './Clock';\r\nimport { ITimerEvent } from './ITimerEvent';\r\nimport { ITimerEventConfig } from './ITimerEventConfig';\r\nimport { NOOP } from './NOOP';\r\n\r\nexport function AddTimer (clock: Clock, config: ITimerEventConfig): void\r\n{\r\n    const {\r\n        duration = 0,\r\n        repeat = 0,\r\n        delay = -1,\r\n        onStart = NOOP,\r\n        onUpdate = NOOP,\r\n        onRepeat = NOOP,\r\n        onComplete = NOOP\r\n    } = config;\r\n\r\n    const timer: ITimerEvent = {\r\n        elapsed: duration,\r\n        duration,\r\n        repeat,\r\n        delay,\r\n        update: null,\r\n        onStart,\r\n        onUpdate,\r\n        onRepeat,\r\n        onComplete\r\n    };\r\n\r\n    timer.update = (delta: number): boolean =>\r\n    {\r\n        if (timer.delay > 0)\r\n        {\r\n            timer.delay -= delta;\r\n\r\n            if (timer.delay < 0)\r\n            {\r\n                timer.delay = 0;\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (timer.delay === 0)\r\n        {\r\n            timer.onStart();\r\n            timer.delay = -1;\r\n        }\r\n\r\n        if (timer.delay === -1)\r\n        {\r\n            timer.elapsed -= delta;\r\n\r\n            timer.onUpdate(delta, timer.elapsed / timer.duration);\r\n\r\n            if (timer.elapsed <= 0)\r\n            {\r\n                if (timer.repeat > 0)\r\n                {\r\n                    timer.repeat--;\r\n\r\n                    timer.elapsed = timer.duration;\r\n\r\n                    timer.onRepeat(timer.repeat);\r\n                }\r\n                else\r\n                {\r\n                    timer.elapsed = 0;\r\n\r\n                    timer.onComplete();\r\n                }\r\n            }\r\n        }\r\n\r\n        return (timer.elapsed === 0);\r\n    };\r\n\r\n    clock.events.add(timer);\r\n}\r\n","import { AddTimer } from './AddTimer';\r\nimport { Clock } from './Clock';\r\n\r\nexport function AddDelayedCall (clock: Clock, delay: number, callback: () => void): void\r\n{\r\n    AddTimer(clock,\r\n        {\r\n            duration: 0,\r\n            delay,\r\n            onComplete: callback\r\n        }\r\n    );\r\n}\r\n","import { IBaseWorld } from '../world/IBaseWorld';\r\nimport { ITimerEvent } from './ITimerEvent';\r\n\r\nexport class Clock\r\n{\r\n    world: IBaseWorld;\r\n\r\n    /**\r\n     * The current time of the Clock, in milliseconds.\r\n     *\r\n     * If accessed externally, this is equivalent to the `time` parameter normally passed to a Scene's `update` method.\r\n     */\r\n    now: number;\r\n\r\n    /**\r\n     * The scale of the Clock's time delta.\r\n     *\r\n     * The time delta is the time elapsed between two consecutive frames and influences the speed of time for this Clock and anything which uses it, such as its Timer Events. Values higher than 1 increase the speed of time, while values smaller than 1 decrease it. A value of 0 freezes time and is effectively equivalent to pausing the Clock.\r\n     */\r\n    timeScale: number;\r\n\r\n    events: Set<ITimerEvent>;\r\n\r\n    constructor (world: IBaseWorld)\r\n    {\r\n        this.world = world;\r\n\r\n        this.timeScale = 1;\r\n\r\n        this.events = new Set();\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        this.now = time;\r\n\r\n        delta *= this.timeScale;\r\n\r\n        this.events.forEach(timer =>\r\n        {\r\n            if (timer.update(delta))\r\n            {\r\n                this.events.delete(timer);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { GL } from '../GL';\r\n\r\nexport function DeleteGLBuffer (buffer: WebGLBuffer): void\r\n{\r\n    const gl = GL.get();\r\n\r\n    if (gl.isBuffer(buffer))\r\n    {\r\n        gl.deleteBuffer(buffer);\r\n    }\r\n}\r\n","import { IBaseWorld } from '../IBaseWorld';\r\nimport { IWorldRenderData } from '../IWorldRenderData';\r\n\r\nexport const WorldRenderEvent: string = 'worldrender';\r\n\r\nexport type WorldRenderEventHandler = (renderData: IWorldRenderData, world: IBaseWorld) => void;\r\n","import { IBaseWorld } from '../IBaseWorld';\r\n\r\nexport const WorldShutdownEvent: string = 'worldshutdown';\r\n\r\nexport type WorldShutdownEventHandler = (world: IBaseWorld) => void;\r\n","import { IWorldRenderData } from './IWorldRenderData';\r\nimport { SearchEntry } from '../display/DepthFirstSearchRecursiveNested';\r\n\r\nexport function CalculateTotalRenderable (entry: SearchEntry, renderData: IWorldRenderData): void\r\n{\r\n    renderData.numRendered++;\r\n    renderData.numRenderable++;\r\n\r\n    if (entry.node.dirtyFrame >= renderData.gameFrame)\r\n    {\r\n        renderData.dirtyFrame++;\r\n    }\r\n\r\n    entry.children.forEach(child =>\r\n    {\r\n        if (child.children.length > 0)\r\n        {\r\n            CalculateTotalRenderable(child, renderData);\r\n        }\r\n    });\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { SearchEntry } from '../display/DepthFirstSearchRecursiveNested';\r\n\r\nexport function HasDirtyChildren (parent: SearchEntry): boolean\r\n{\r\n    if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    const stack = [ parent ];\r\n\r\n    while (stack.length > 0)\r\n    {\r\n        const entry = stack.pop();\r\n\r\n        if (entry.node.isDirty(DIRTY_CONST.TRANSFORM))\r\n        {\r\n            return true;\r\n        }\r\n\r\n        const numChildren = entry.children.length;\r\n\r\n        if (numChildren > 0)\r\n        {\r\n            for (let i = 0; i < numChildren; i++)\r\n            {\r\n                stack.push(entry.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    stack.length = 0;\r\n\r\n    return false;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { HasDirtyChildren } from './HasDirtyChildren';\r\nimport { SearchEntry } from '../display/DepthFirstSearchRecursiveNested';\r\n\r\nexport function UpdateCachedLayers (cachedLayers: SearchEntry[], dirtyCamera: boolean): void\r\n{\r\n    cachedLayers.forEach(layer =>\r\n    {\r\n        if (dirtyCamera || HasDirtyChildren(layer))\r\n        {\r\n            //  Camera is dirty, or layer has at least one dirty child\r\n            layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n        }\r\n        else\r\n        {\r\n            //  Camera is clean and no dirty children, so we can re-use layer cache\r\n            //  So let's remove the children for this layer\r\n            layer.children.length = 0;\r\n        }\r\n    });\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SearchEntry } from '../display/DepthFirstSearchRecursiveNested';\r\n\r\nexport function WorldDepthFirstSearch (cachedLayers: SearchEntry[], parent: IGameObject, output: SearchEntry[] = []): SearchEntry[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const node = parent.children[i];\r\n\r\n        if (node.isRenderable())\r\n        {\r\n            const children: SearchEntry[] = [];\r\n\r\n            const entry = { node, children };\r\n\r\n            output.push(entry);\r\n\r\n            if (node.willRenderChildren && node.numChildren > 0)\r\n            {\r\n                if (node.willCacheChildren)\r\n                {\r\n                    cachedLayers.push(entry);\r\n                }\r\n\r\n                WorldDepthFirstSearch(cachedLayers, node, children);\r\n            }\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { CalculateTotalRenderable } from './CalculateTotalRenderable';\r\nimport { IBaseWorld } from './IBaseWorld';\r\nimport { SearchEntry } from '../display/DepthFirstSearchRecursiveNested';\r\nimport { UpdateCachedLayers } from './UpdateCachedLayers';\r\nimport { WorldDepthFirstSearch } from './WorldDepthFirstSearch';\r\n\r\nexport function BuildRenderList (world: IBaseWorld): void\r\n{\r\n    const cachedLayers: SearchEntry[] = [];\r\n    const stack: SearchEntry[] = [];\r\n\r\n    //  entries is now populated with the n-tree search results, only containing nodes that will actually render\r\n    const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\r\n\r\n    const renderData = world.renderData;\r\n\r\n    //  We can now sweep through the entries and purge non-dirty children of cached layers,\r\n    //  before finally building the render list. We can only do this if the camera is clean.\r\n\r\n    if (cachedLayers.length > 0)\r\n    {\r\n        UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\r\n    }\r\n\r\n    //  TODO: numRenderable probably needs to move to the search function\r\n    entries.forEach(entry =>\r\n    {\r\n        if (entry.children.length)\r\n        {\r\n            CalculateTotalRenderable(entry, renderData);\r\n        }\r\n        else\r\n        {\r\n            renderData.numRendered++;\r\n            renderData.numRenderable++;\r\n\r\n            if (entry.node.dirtyFrame >= renderData.gameFrame)\r\n            {\r\n                renderData.dirtyFrame++;\r\n            }\r\n        }\r\n    });\r\n\r\n    renderData.renderList = entries;\r\n\r\n    if (world.forceRefresh)\r\n    {\r\n        renderData.dirtyFrame++;\r\n\r\n        world.forceRefresh = false;\r\n    }\r\n\r\n    // console.log(entries);\r\n    // eslint-disable-next-line no-debugger\r\n    // debugger;\r\n}\r\n","import { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\n\r\nexport function MergeRenderData (sceneRenderData: ISceneRenderData, worldRenderData: IWorldRenderData): void\r\n{\r\n    sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\r\n    sceneRenderData.numTotalFrames += worldRenderData.numRendered;\r\n\r\n    if (worldRenderData.camera.dirtyRender)\r\n    {\r\n        sceneRenderData.numDirtyCameras++;\r\n    }\r\n\r\n    sceneRenderData.worldData.push(worldRenderData);\r\n}\r\n","import { IWorldRenderData } from './IWorldRenderData';\r\n\r\nexport function ResetWorldRenderData (renderData: IWorldRenderData, gameFrame: number): void\r\n{\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.dirtyFrame = 0;\r\n    renderData.numRendered = 0;\r\n    renderData.numRenderable = 0;\r\n    renderData.renderList.length = 0;\r\n}\r\n","import * as GameObjectEvents from '../gameobjects/events';\r\nimport * as WorldEvents from './events';\r\n\r\nimport { Emit, Off, On, Once } from '../events';\r\n\r\nimport { BuildRenderList } from './BuildRenderList';\r\nimport { GameObject } from '../gameobjects';\r\nimport { IBaseCamera } from '../camera/IBaseCamera';\r\nimport { IBaseWorld } from './IBaseWorld';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\nimport { MergeRenderData } from './MergeRenderData';\r\nimport { RemoveChildren } from '../display';\r\nimport { ResetWorldRenderData } from './ResetWorldRenderData';\r\n\r\nexport class BaseWorld extends GameObject implements IBaseWorld\r\n{\r\n    scene: IScene;\r\n\r\n    camera: IBaseCamera;\r\n    renderData: IWorldRenderData;\r\n    forceRefresh: boolean = false;\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    private _updateListener: IEventInstance;\r\n    private _renderListener: IEventInstance;\r\n    private _shutdownListener: IEventInstance;\r\n\r\n    constructor (scene: IScene)\r\n    {\r\n        super();\r\n\r\n        this.type = 'BaseWorld';\r\n        this.scene = scene;\r\n        this.world = this;\r\n\r\n        this.events = new Map();\r\n\r\n        this._updateListener = On(scene, 'update', (delta: number, time: number) => this.update(delta, time));\r\n        this._renderListener = On(scene, 'render', (renderData: ISceneRenderData) => this.render(renderData));\r\n        this._shutdownListener = On(scene, 'shutdown', () => this.shutdown());\r\n        Once(scene, 'destroy', () => this.destroy());\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        if (!this.willUpdate)\r\n        {\r\n            return;\r\n        }\r\n\r\n        Emit(this, GameObjectEvents.UpdateEvent, delta, time, this);\r\n\r\n        super.update(delta, time);\r\n    }\r\n\r\n    postUpdate (delta: number, time: number): void\r\n    {\r\n        Emit(this, GameObjectEvents.PostUpdateEvent, delta, time, this);\r\n    }\r\n\r\n    render (sceneRenderData: ISceneRenderData): void\r\n    {\r\n        const renderData = this.renderData;\r\n\r\n        ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\r\n\r\n        if (!this.willRender || !this.visible)\r\n        {\r\n            return;\r\n        }\r\n\r\n        BuildRenderList(this);\r\n\r\n        Emit(this, WorldEvents.WorldRenderEvent, renderData, this);\r\n\r\n        MergeRenderData(sceneRenderData, renderData);\r\n\r\n        if (this.camera)\r\n        {\r\n            this.camera.dirtyRender = false;\r\n        }\r\n    }\r\n\r\n    shutdown (): void\r\n    {\r\n        const scene = this.scene;\r\n\r\n        Off(scene, 'update', this._updateListener);\r\n        Off(scene, 'render', this._renderListener);\r\n        Off(scene, 'shutdown', this._shutdownListener);\r\n\r\n        //  Clear the display list and reset the camera, but leave\r\n        //  everything in place so we can return to this World again\r\n        //  at a later stage\r\n\r\n        RemoveChildren(this);\r\n\r\n        Emit(this, WorldEvents.WorldShutdownEvent, this);\r\n\r\n        ResetWorldRenderData(this.renderData, 0);\r\n\r\n        if (this.camera)\r\n        {\r\n            this.camera.reset();\r\n        }\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        Emit(this, GameObjectEvents.DestroyEvent, this);\r\n\r\n        ResetWorldRenderData(this.renderData, 0);\r\n\r\n        if (this.camera)\r\n        {\r\n            this.camera.destroy();\r\n        }\r\n\r\n        this.events.clear();\r\n\r\n        this.camera = null;\r\n        this.renderData = null;\r\n        this.events = null;\r\n    }\r\n}\r\n","import { IBaseCamera } from '../camera/IBaseCamera';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\n\r\nexport function CreateWorldRenderData (camera: IBaseCamera): IWorldRenderData\r\n{\r\n    return {\r\n        camera,\r\n        gameFrame: 0,\r\n        dirtyFrame: 0,\r\n        numRendered: 0,\r\n        numRenderable: 0,\r\n        renderList: []\r\n    };\r\n}\r\n","import { BaseWorld } from './BaseWorld';\r\nimport { CreateWorldRenderData } from './CreateWorldRenderData';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { IStaticCamera } from '../camera/IStaticCamera';\r\nimport { IStaticWorld } from './IStaticWorld';\r\nimport { StaticCamera } from '../camera/StaticCamera';\r\n\r\n//  A Static World is designed specifically to have a bounds of a fixed size\r\n//  and a camera that doesn't move at all (no scrolling, rotation, etc)\r\n//  Because it has a fixed size, there is no camera culling enabled.\r\n//  Games that use this kind of world include Pacman, Bejeweled and 2048.\r\n\r\nexport class StaticWorld extends BaseWorld implements IStaticWorld\r\n{\r\n    camera: IStaticCamera;\r\n\r\n    constructor (scene: IScene)\r\n    {\r\n        super(scene);\r\n\r\n        this.type = 'StaticWorld';\r\n\r\n        this.camera = new StaticCamera();\r\n\r\n        this.renderData = CreateWorldRenderData(this.camera);\r\n    }\r\n}\r\n","import { BaseWorld } from './BaseWorld';\r\nimport { Camera } from '../camera/Camera';\r\nimport { CreateWorldRenderData } from './CreateWorldRenderData';\r\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { ICamera } from '../camera/ICamera';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorld } from './IWorld';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\nimport { RectangleToRectangle } from '../geom/intersects';\r\n\r\nexport class World extends BaseWorld implements IWorld\r\n{\r\n    camera: ICamera;\r\n\r\n    enableCameraCull: boolean = true;\r\n\r\n    constructor (scene: IScene)\r\n    {\r\n        super(scene);\r\n\r\n        this.type = 'World';\r\n\r\n        this.camera = new Camera();\r\n\r\n        this.renderData = CreateWorldRenderData(this.camera);\r\n    }\r\n\r\n    //  TODO: An out-of-bounds parent with in-bounds children will be cull checked against in postRender, stop this.\r\n    //  TODO: Use circle-circle check when camera is rotated.\r\n    /*\r\n    addNode (node: IGameObject, renderData: IWorldRenderData): boolean\r\n    {\r\n        const cull = this.enableCameraCull;\r\n\r\n        if (node.isRenderable())\r\n        {\r\n            if (node.isDirty(DIRTY_CONST.PENDING_RENDER) || node === this)\r\n            {\r\n                //  Already been cull checked once, so add to renderList and return\r\n                renderData.renderList.push(node);\r\n            }\r\n            else if (!cull || (cull && RectangleToRectangle(node.bounds.get(), this.camera.bounds)))\r\n            {\r\n                renderData.renderList.push(node);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    */\r\n}\r\n","import { ISceneRenderData } from './ISceneRenderData';\r\n\r\nexport function CreateSceneRenderData (): ISceneRenderData\r\n{\r\n    return {\r\n        gameFrame: 0,\r\n        numTotalFrames: 0,\r\n        numDirtyFrames: 0,\r\n        numDirtyCameras: 0,\r\n        worldData: []\r\n    };\r\n}\r\n","import { ISceneRenderData } from './ISceneRenderData';\r\n\r\nexport function ResetSceneRenderData (renderData: ISceneRenderData, gameFrame: number = 0): void\r\n{\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.numTotalFrames = 0;\r\n    renderData.numDirtyFrames = 0;\r\n    renderData.numDirtyCameras = 0;\r\n    renderData.worldData.length = 0;\r\n}\r\n","import { SceneManager } from './SceneManager';\r\n\r\nlet instance: SceneManager;\r\n\r\nexport const SceneManagerInstance =\r\n{\r\n    get: (): SceneManager =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (manager: SceneManager | null): void =>\r\n    {\r\n        instance = manager;\r\n    }\r\n};\r\n","import { Emit, Once } from '../events';\r\n\r\nimport { CreateSceneRenderData } from './CreateSceneRenderData';\r\nimport { Game } from '../Game';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { GetScenes } from '../config';\r\nimport { IScene } from './IScene';\r\nimport { ISceneRenderData } from './ISceneRenderData';\r\nimport { ResetSceneRenderData } from './ResetSceneRenderData';\r\nimport { SceneManagerInstance } from './SceneManagerInstance';\r\n\r\nexport class SceneManager\r\n{\r\n    game: Game;\r\n\r\n    scenes: Map<string, IScene>  = new Map();\r\n\r\n    //  Used by Install to assign default scene keys when not specified\r\n    sceneIndex: number = 0;\r\n\r\n    //  Flush the cache\r\n    flush: boolean = false;\r\n\r\n    renderResult: ISceneRenderData = CreateSceneRenderData();\r\n\r\n    constructor ()\r\n    {\r\n        this.game = GameInstance.get();\r\n\r\n        SceneManagerInstance.set(this);\r\n\r\n        Once(this.game, 'boot', () => this.boot());\r\n    }\r\n\r\n    boot (): void\r\n    {\r\n        GetScenes().forEach(scene => new scene());\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        for (const scene of this.scenes.values())\r\n        {\r\n            Emit(scene, 'update', delta, time);\r\n        }\r\n    }\r\n\r\n    render (gameFrame: number): ISceneRenderData\r\n    {\r\n        const results = this.renderResult;\r\n\r\n        ResetSceneRenderData(results, gameFrame);\r\n\r\n        for (const scene of this.scenes.values())\r\n        {\r\n            Emit(scene, 'render', results);\r\n        }\r\n\r\n        if (this.flush)\r\n        {\r\n            //  Invalidate the renderer cache\r\n            results.numDirtyFrames++;\r\n\r\n            //  And reset\r\n            this.flush = false;\r\n        }\r\n\r\n        return results;\r\n    }\r\n}\r\n","import { AddToDOM, DOMContentLoaded } from './dom';\r\nimport { Emit, EventEmitter } from './events';\r\nimport { GetBanner, GetParent, GetRenderer } from './config';\r\n\r\nimport { GameInstance } from './GameInstance';\r\nimport { IRenderer } from './renderer/IRenderer';\r\nimport { SceneManager } from './scenes/SceneManager';\r\nimport { TextureManager } from './textures/TextureManager';\r\n\r\nexport class Game extends EventEmitter\r\n{\r\n    readonly VERSION: string = '4.0.0-beta1';\r\n\r\n    isBooted: boolean = false;\r\n    isPaused: boolean = false;\r\n\r\n    willUpdate: boolean = true;\r\n    willRender: boolean = true;\r\n\r\n    lastTick: number = 0;\r\n    elapsed: number = 0;\r\n\r\n    //  The current game frame\r\n    frame: number = 0;\r\n\r\n    renderer: IRenderer;\r\n    textureManager: TextureManager;\r\n    sceneManager: SceneManager;\r\n\r\n    constructor (...settings: { (): void }[])\r\n    {\r\n        super();\r\n\r\n        GameInstance.set(this);\r\n\r\n        DOMContentLoaded(() => this.boot(settings));\r\n    }\r\n\r\n    boot (settings: { (): void }[]): void\r\n    {\r\n        //  Activate the settings post DOM Content Loaded\r\n        settings.forEach(setting => setting());\r\n\r\n        const renderer = GetRenderer();\r\n\r\n        this.renderer = new renderer();\r\n        this.textureManager = new TextureManager();\r\n        this.sceneManager = new SceneManager();\r\n\r\n        //  Only add to the DOM if they either didn't set a Parent, or expressly set it to be non-null\r\n        //  Otherwise we'll let them add the canvas to the DOM themselves\r\n        const parent = GetParent();\r\n\r\n        if (parent)\r\n        {\r\n            AddToDOM(this.renderer.canvas, parent);\r\n        }\r\n\r\n        this.isBooted = true;\r\n\r\n        GetBanner();\r\n\r\n        Emit(this, 'boot');\r\n\r\n        this.lastTick = performance.now();\r\n\r\n        this.step(this.lastTick);\r\n    }\r\n\r\n    pause (): void\r\n    {\r\n        this.isPaused = true;\r\n    }\r\n\r\n    resume (): void\r\n    {\r\n        this.isPaused = false;\r\n\r\n        this.lastTick = performance.now();\r\n    }\r\n\r\n    step (time: number): void\r\n    {\r\n        //  Note that privacy.resistFingerprinting can round this value to 100ms or more!\r\n        const delta = time - this.lastTick;\r\n\r\n        this.lastTick = time;\r\n        this.elapsed += delta;\r\n\r\n        if (!this.isPaused)\r\n        {\r\n            if (this.willUpdate)\r\n            {\r\n                this.sceneManager.update(delta, time);\r\n\r\n                Emit(this, 'update', delta, time);\r\n            }\r\n\r\n            if (this.willRender)\r\n            {\r\n                this.renderer.render(this.sceneManager.render(this.frame));\r\n            }\r\n        }\r\n\r\n        //  The frame always advances by 1 each step (even when paused)\r\n        this.frame++;\r\n\r\n        GameInstance.setFrame(this.frame);\r\n        GameInstance.setElapsed(this.elapsed);\r\n\r\n        requestAnimationFrame(now => this.step(now));\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        //  TODO\r\n    }\r\n}\r\n","import { Emit, EventEmitter } from '../events';\r\n\r\nimport { File } from './File';\r\n\r\nexport class Loader extends EventEmitter\r\n{\r\n    baseURL: string = '';\r\n    path: string = '';\r\n    crossOrigin: string = 'anonymous';\r\n\r\n    //  -1 means load everything at once (only recommended on http/2 servers)\r\n    maxParallelDownloads: number = -1;\r\n\r\n    isLoading: boolean = false;\r\n    progress: number;\r\n\r\n    queue: Set<File>;\r\n    inflight: Set<File>;\r\n    completed: Set<File>;\r\n\r\n    onComplete: Function;\r\n    onError: Function;\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        this.isLoading = false;\r\n\r\n        this.queue = new Set();\r\n        this.inflight = new Set();\r\n        this.completed = new Set();\r\n\r\n        this.progress = 0;\r\n    }\r\n\r\n    add (...file: File[]): this\r\n    {\r\n        file.forEach(entity =>\r\n        {\r\n            entity.loader = this;\r\n\r\n            this.queue.add(entity);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    start (): Promise<Loader>\r\n    {\r\n        if (this.isLoading)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            this.completed.clear();\r\n            this.progress = 0;\r\n\r\n            if (this.queue.size > 0)\r\n            {\r\n                this.isLoading = true;\r\n\r\n                this.onComplete = resolve;\r\n                this.onError = reject;\r\n\r\n                // console.log('Loader.start');\r\n\r\n                Emit(this, 'start');\r\n\r\n                this.nextFile();\r\n            }\r\n            else\r\n            {\r\n                this.progress = 1;\r\n\r\n                Emit(this, 'complete');\r\n\r\n                resolve();\r\n                // onComplete();\r\n            }\r\n        });\r\n\r\n        /*\r\n        if (this.isLoading)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        this.completed.clear();\r\n        this.progress = 0;\r\n\r\n        if (this.queue.size > 0)\r\n        {\r\n            this.isLoading = true;\r\n\r\n            this.onComplete = onComplete;\r\n\r\n            // console.log('Loader.start');\r\n\r\n            Emit(this, 'start');\r\n\r\n            this.nextFile();\r\n        }\r\n        else\r\n        {\r\n            this.progress = 1;\r\n\r\n            Emit(this, 'complete');\r\n\r\n            onComplete();\r\n        }\r\n\r\n        return this;\r\n        */\r\n    }\r\n\r\n    nextFile (): void\r\n    {\r\n        let limit = this.queue.size;\r\n\r\n        if (this.maxParallelDownloads !== -1)\r\n        {\r\n            limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\r\n        }\r\n\r\n        // console.log('Loader.nextFile', limit);\r\n\r\n        if (limit)\r\n        {\r\n            // console.log('Batching', limit, 'files to download');\r\n\r\n            const iterator = this.queue.values();\r\n\r\n            while (limit > 0)\r\n            {\r\n                const file = iterator.next().value;\r\n\r\n                // console.log('Loader.nextFile', file.key, '=>', file.url);\r\n\r\n                this.inflight.add(file);\r\n\r\n                this.queue.delete(file);\r\n\r\n                file.load()\r\n                    .then(\r\n                        (file: File) => this.fileComplete(file)\r\n                    )\r\n                    .catch(\r\n                        (file: File) => this.fileError(file)\r\n                    );\r\n\r\n                limit--;\r\n            }\r\n        }\r\n        else if (this.inflight.size === 0)\r\n        {\r\n            // console.log('Loader inflight zero');\r\n\r\n            this.stop();\r\n\r\n            // window.setTimeout(() => this.stop(), 0);\r\n        }\r\n    }\r\n\r\n    stop (): void\r\n    {\r\n        if (!this.isLoading)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.isLoading = false;\r\n\r\n        Emit(this, 'complete', this.completed);\r\n\r\n        this.onComplete();\r\n\r\n        this.completed.clear();\r\n    }\r\n\r\n    private updateProgress (file: File): void\r\n    {\r\n        this.inflight.delete(file);\r\n        this.completed.add(file);\r\n\r\n        const totalCompleted = this.completed.size;\r\n        const totalQueued = this.queue.size + this.inflight.size;\r\n\r\n        if (totalCompleted > 0)\r\n        {\r\n            this.progress = totalCompleted / (totalCompleted + totalQueued);\r\n        }\r\n\r\n        Emit(this, 'progress', this.progress, totalCompleted, totalQueued);\r\n\r\n        this.nextFile();\r\n    }\r\n\r\n    private fileComplete (file: File): void\r\n    {\r\n        Emit(this, 'filecomplete', file);\r\n\r\n        this.updateProgress(file);\r\n    }\r\n\r\n    private fileError (file: File): void\r\n    {\r\n        Emit(this, 'fileerror', file);\r\n\r\n        this.updateProgress(file);\r\n    }\r\n\r\n    totalFilesToLoad (): number\r\n    {\r\n        return this.queue.size + this.inflight.size;\r\n    }\r\n\r\n    setBaseURL (url: string = ''): this\r\n    {\r\n        if (url !== '' && url.substr(-1) !== '/')\r\n        {\r\n            url = url.concat('/');\r\n        }\r\n\r\n        this.baseURL = url;\r\n\r\n        return this;\r\n    }\r\n\r\n    setPath (path: string = ''): this\r\n    {\r\n        if (path !== '' && path.substr(-1) !== '/')\r\n        {\r\n            path = path.concat('/');\r\n        }\r\n\r\n        this.path = path;\r\n\r\n        return this;\r\n    }\r\n\r\n    setCORS (crossOrigin: string): this\r\n    {\r\n        this.crossOrigin = crossOrigin;\r\n\r\n        return this;\r\n    }\r\n\r\n    setMaxParallelDownloads (max: number): this\r\n    {\r\n        this.maxParallelDownloads = max;\r\n\r\n        return this;\r\n    }\r\n}\r\n","import { ISceneConfig } from './ISceneConfig';\r\n\r\nexport function GetConfigValue<Property extends keyof ISceneConfig> (config: ISceneConfig, property: Property, defaultValue: ISceneConfig[Property]): ISceneConfig[Property]\r\n{\r\n    if (Object.prototype.hasOwnProperty.call(config, property))\r\n    {\r\n        return config[property];\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n}\r\n","import { GetConfigValue } from './GetConfigValue';\r\nimport { IScene } from './IScene';\r\nimport { ISceneConfig } from './ISceneConfig';\r\nimport { SceneManagerInstance } from './SceneManagerInstance';\r\n\r\nexport function Install (scene: IScene, config: string | ISceneConfig = {}): void\r\n{\r\n    const sceneManager = SceneManagerInstance.get();\r\n\r\n    const size = sceneManager.scenes.size;\r\n    const sceneIndex = sceneManager.sceneIndex;\r\n    const firstScene = (size === 0);\r\n\r\n    if (typeof config === 'string')\r\n    {\r\n        scene.key = config;\r\n    }\r\n    else if (config || (!config && firstScene))\r\n    {\r\n        scene.key = GetConfigValue(config, 'key', 'scene' + sceneIndex.toString());\r\n    }\r\n\r\n    if (sceneManager.scenes.has(scene.key))\r\n    {\r\n        console.warn('Scene key already in use: ' + scene.key);\r\n    }\r\n    else\r\n    {\r\n        sceneManager.scenes.set(scene.key, scene);\r\n\r\n        sceneManager.flush = true;\r\n\r\n        sceneManager.sceneIndex++;\r\n    }\r\n}\r\n","// import { Emit } from '../events/Emit';\r\n\r\nimport { Game } from '../Game';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { IEventEmitter } from '../events/IEventEmitter';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IScene } from './IScene';\r\nimport { ISceneConfig } from './ISceneConfig';\r\nimport { Install } from './Install';\r\n\r\nexport class Scene implements IScene, IEventEmitter\r\n{\r\n    key: string;\r\n    game: Game;\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    constructor (config?: string | ISceneConfig)\r\n    {\r\n        this.game = GameInstance.get();\r\n        this.events = new Map();\r\n\r\n        Install(this, config);\r\n    }\r\n\r\n    // shutdown (): void\r\n    // {\r\n    //     Emit(this, 'shutdown');\r\n    // }\r\n\r\n    // destroy (): void\r\n    // {\r\n    //     Emit(this, 'destroy');\r\n\r\n    //     this.events.clear();\r\n\r\n    //     this.game = null;\r\n    //     this.events = null;\r\n    // }\r\n}\r\n"],"names":["CONST","instance","DrawTexturedQuad","Matrix2dEqual","AppendMatrix2d","P0","P1","P2","Add","Rotate","Scale","Translate","Invert","Multiply","MultiplyScalar","MultiplyScalarAndAdd","Subtract","Zero","NOOP","GameObjectEvents.UpdateEvent","GameObjectEvents.PostUpdateEvent","WorldEvents.WorldRenderEvent","WorldEvents.WorldShutdownEvent","GameObjectEvents.DestroyEvent"],"mappings":"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"}