{"version":3,"file":"Phaser4.js","sources":["../src/GameInstance.ts","../src/math/RoundAwayFromZero.ts","../src/utils/base64/Base64ToArrayBuffer.ts","../src/utils/NOOP.ts","../src/math/mat4/Matrix4.ts","../src/math/mat4/Add.ts","../src/math/mat4/AddTranslationFromFloats.ts","../src/math/mat4/Adjoint.ts","../src/math/mat4/Clone.ts","../src/math/mat4/CopyFrom.ts","../src/math/mat4/CopyPosition.ts","../src/math/mat4/Determinant.ts","../src/math/mat4/Equals.ts","../src/math/mat4/Frobenius.ts","../src/math/mat4/FromQuat.ts","../src/math/mat4/FromRotation.ts","../src/math/mat4/FromRotationTranslation.ts","../src/math/mat4/FromRotationTranslationScale.ts","../src/math/mat4/FromRotationTranslationScaleOrigin.ts","../src/math/mat4/FromRotationXYTranslation.ts","../src/math/mat4/FromScaling.ts","../src/math/mat4/FromTranslation.ts","../src/math/mat4/FromXRotation.ts","../src/math/mat4/FromYRotation.ts","../src/math/mat4/FromZRotation.ts","../src/math/mat4/Frustum.ts","../src/math/vec3/Vec3.ts","../src/math/mat4/GetScaling.ts","../src/math/quaternion/Quaternion.ts","../src/math/mat4/GetRotation.ts","../src/math/mat4/GetTranslation.ts","../src/math/mat4/Identity.ts","../src/math/mat4/Invert.ts","../src/math/mat4/LookAt.ts","../src/math/mat4/Multiply.ts","../src/math/mat4/MultiplyScalar.ts","../src/math/mat4/MultiplyScalarAndAdd.ts","../src/math/mat4/Ortho.ts","../src/math/mat4/Perspective.ts","../src/math/mat4/PerspectiveFromFieldOfView.ts","../src/math/mat4/Rotate.ts","../src/math/mat4/RotateX.ts","../src/math/mat4/RotateY.ts","../src/math/mat4/RotateZ.ts","../src/math/mat4/Scale.ts","../src/math/mat4/SetTranslation.ts","../src/math/mat4/SetTranslationFromFloats.ts","../src/math/mat4/Subtract.ts","../src/math/mat4/TargetTo.ts","../src/math/mat4/Translate.ts","../src/math/mat4/TranslateFromFloats.ts","../src/math/mat4/Transpose.ts","../src/math/mat4/Zero.ts","../src/math/matrix2d/Matrix2D.ts","../src/geom/rectangle/Contains.ts","../src/geom/rectangle/Rectangle.ts","../src/math/vec2/Vec2.ts","../src/math/vec2/Vec2Callback.ts","../src/math/angle/AngleBetween.ts","../src/math/angle/AngleBetweenY.ts","../src/math/const.ts","../src/math/angle/CounterClockwise.ts","../src/math/angle/NormalizeAngle.ts","../src/math/angle/ReverseAngle.ts","../src/math/angle/RotateAngleTo.ts","../src/math/angle/ShortestAngleBetween.ts","../src/math/Wrap.ts","../src/math/angle/WrapAngle.ts","../src/math/angle/WrapAngleDegrees.ts","../src/camera/Camera.ts","../src/camera/StaticCamera.ts","../src/math/vec3/Backward.ts","../src/math/vec3/Down.ts","../src/math/vec3/Forward.ts","../src/math/vec3/Left.ts","../src/math/vec3/Right.ts","../src/math/vec3/Up.ts","../src/math/vec3/Zero.ts","../src/math/vec3/const.ts","../src/math/vec3/Abs.ts","../src/math/vec3/Add.ts","../src/math/vec3/AddScalar.ts","../src/math/vec3/Dot.ts","../src/math/vec3/Angle.ts","../src/math/Bezier.ts","../src/math/vec3/Bezier.ts","../src/math/CatmullRom.ts","../src/math/vec3/CatmullRom.ts","../src/math/vec3/Ceil.ts","../src/math/vec3/Scale.ts","../src/math/vec3/Center.ts","../src/math/Clamp.ts","../src/math/vec3/Clamp.ts","../src/math/vec3/DivideScalar.ts","../src/math/vec3/Length.ts","../src/math/vec3/ClampLength.ts","../src/math/vec3/ClampScalar.ts","../src/math/vec3/Clone.ts","../src/math/vec3/CopyFrom.ts","../src/math/vec3/Cross.ts","../src/math/vec3/CrossNormalize.ts","../src/math/vec3/DistanceSquared.ts","../src/math/vec3/Distance.ts","../src/math/vec3/Divide.ts","../src/math/vec3/Equals.ts","../src/math/vec3/Floor.ts","../src/math/vec3/Fract.ts","../src/math/fuzzy/FuzzyEqual.ts","../src/math/vec3/FuzzyEquals.ts","../src/math/Hermite.ts","../src/math/vec3/Hermite.ts","../src/math/vec3/Inverse.ts","../src/math/vec3/IsNonUniform.ts","../src/math/vec3/LengthSquared.ts","../src/math/vec3/Lerp.ts","../src/math/vec3/ManhattanDistance.ts","../src/math/vec3/ManhattanLength.ts","../src/math/vec3/Max.ts","../src/math/vec3/Min.ts","../src/math/vec3/Multiply.ts","../src/math/vec3/MultiplyByFloats.ts","../src/math/vec3/Negate.ts","../src/math/vec3/Normalize.ts","../src/math/vec3/One.ts","../src/math/vec3/TransformMat4.ts","../src/math/vec3/Project.ts","../src/math/vec3/Vec3Callback.ts","../src/math/vec3/RGBCallback.ts","../src/math/vec3/Random.ts","../src/math/vec3/Subtract.ts","../src/math/vec3/Reflect.ts","../src/math/vec3/RotateX.ts","../src/math/vec3/RotateY.ts","../src/math/vec3/RotateZ.ts","../src/math/vec3/Round.ts","../src/math/vec3/RoundToZero.ts","../src/math/vec3/ScaleAndAdd.ts","../src/math/vec3/SetFromCylindricalCoords.ts","../src/math/vec3/SetFromSphericalCoords.ts","../src/math/vec3/SetLength.ts","../src/math/vec3/SubtractScalar.ts","../src/math/vec3/TransformMat4Zero.ts","../src/math/vec3/TransformQuat.ts","../src/math/vec3/Unproject.ts","../src/math/quaternion/Add.ts","../src/math/quaternion/AddScalar.ts","../src/math/quaternion/Dot.ts","../src/math/quaternion/AngleTo.ts","../src/math/quaternion/AreClose.ts","../src/math/quaternion/Clone.ts","../src/math/quaternion/Conjugate.ts","../src/math/quaternion/CopyFrom.ts","../src/math/quaternion/Equals.ts","../src/math/quaternion/RotationYawPitchRoll.ts","../src/math/quaternion/FromEulerAngles.ts","../src/math/quaternion/FromEulerVector.ts","../src/math/quaternion/FromRotationAxis.ts","../src/math/quaternion/FromRotationMatrix.ts","../src/math/quaternion/FuzzyEquals.ts","../src/math/quaternion/GetAngle.ts","../src/math/quaternion/GetAxisAngle.ts","../src/math/quaternion/Hermite.ts","../src/math/quaternion/Invert.ts","../src/math/quaternion/Length.ts","../src/math/quaternion/LengthSquared.ts","../src/math/quaternion/Multiply.ts","../src/math/quaternion/MultiplyByFloats.ts","../src/math/quaternion/Scale.ts","../src/math/quaternion/Normalize.ts","../src/math/quaternion/Slerp.ts","../src/math/quaternion/RotateTowards.ts","../src/math/quaternion/RotateX.ts","../src/math/quaternion/RotateY.ts","../src/math/quaternion/RotateZ.ts","../src/math/quaternion/RotationAlphaBetaGamma.ts","../src/math/quaternion/ScaleAndAdd.ts","../src/math/quaternion/SetAxisAngle.ts","../src/math/quaternion/SetFromUnitVectors.ts","../src/math/quaternion/Subtract.ts","../src/math/quaternion/SubtractScalar.ts","../src/math/quaternion/ToEulerAngles.ts","../src/math/quaternion/Zero.ts","../src/math/easing/back/In.ts","../src/math/easing/back/InOut.ts","../src/math/easing/back/Out.ts","../src/math/easing/bounce/In.ts","../src/math/easing/bounce/InOut.ts","../src/math/easing/bounce/Out.ts","../src/math/easing/circular/In.ts","../src/math/easing/circular/InOut.ts","../src/math/easing/circular/Out.ts","../src/math/easing/cubic/In.ts","../src/math/easing/cubic/InOut.ts","../src/math/easing/cubic/Out.ts","../src/math/easing/elastic/In.ts","../src/math/easing/elastic/InOut.ts","../src/math/easing/elastic/Out.ts","../src/math/easing/expo/In.ts","../src/math/easing/expo/InOut.ts","../src/math/easing/expo/Out.ts","../src/math/easing/quadratic/In.ts","../src/math/easing/quadratic/InOut.ts","../src/math/easing/quadratic/Out.ts","../src/math/easing/quartic/In.ts","../src/math/easing/quartic/InOut.ts","../src/math/easing/quartic/Out.ts","../src/math/easing/quintic/In.ts","../src/math/easing/quintic/InOut.ts","../src/math/easing/quintic/Out.ts","../src/math/easing/sine/In.ts","../src/math/easing/sine/InOut.ts","../src/math/easing/sine/Out.ts","../src/math/easing/Linear.ts","../src/math/easing/Stepped.ts","../src/math/easing/GetEase.ts","../src/math/fuzzy/FuzzyCeil.ts","../src/math/fuzzy/FuzzyFloor.ts","../src/math/fuzzy/FuzzyGreaterThan.ts","../src/math/fuzzy/FuzzyLessThan.ts","../src/math/Factorial.ts","../src/math/Bernstein.ts","../src/math/interpolation/BezierInterpolation.ts","../src/math/interpolation/CatmullRomInterpolation.ts","../src/math/interpolation/CubicBezierInterpolation.ts","../src/math/Linear.ts","../src/math/interpolation/LinearInterpolation.ts","../src/math/interpolation/QuadraticBezierInterpolation.ts","../src/math/SmoothStep.ts","../src/math/interpolation/SmoothStepInterpolation.ts","../src/math/SmootherStep.ts","../src/math/interpolation/SmootherStepInterpolation.ts","../src/math/matrix2d/Add.ts","../src/math/matrix2d/Append.ts","../src/math/matrix2d/Clone.ts","../src/math/matrix2d/CopyFrom.ts","../src/math/matrix2d/CopyToContext.ts","../src/math/matrix2d/Determinant.ts","../src/math/matrix2d/Equals.ts","../src/math/matrix2d/ExactEquals.ts","../src/math/matrix2d/Frobenius.ts","../src/math/matrix2d/Rotate.ts","../src/math/matrix2d/FromRotation.ts","../src/math/matrix2d/Scale.ts","../src/math/matrix2d/FromScaling.ts","../src/math/matrix2d/Translate.ts","../src/math/matrix2d/FromTranslation.ts","../src/math/matrix2d/GlobalToLocal.ts","../src/math/matrix2d/ITRS.ts","../src/math/matrix2d/ITRSS.ts","../src/math/matrix2d/Identity.ts","../src/math/matrix2d/Invert.ts","../src/math/matrix2d/LocalToGlobal.ts","../src/math/matrix2d/Multiply.ts","../src/math/matrix2d/MultiplyScalar.ts","../src/math/matrix2d/MultiplyScalarAndAdd.ts","../src/math/matrix2d/SetToContext.ts","../src/math/matrix2d/Skew.ts","../src/math/matrix2d/Subtract.ts","../src/math/matrix2d/Zero.ts","../src/math/pow2/GetPowerOfTwo.ts","../src/math/pow2/IsSizePowerOfTwo.ts","../src/math/pow2/IsValuePowerOfTwo.ts","../src/math/snap/SnapCeil.ts","../src/math/snap/SnapFloor.ts","../src/math/snap/SnapTo.ts","../src/math/vec2/Abs.ts","../src/math/vec2/Add.ts","../src/math/vec2/AddScalar.ts","../src/math/vec2/Angle.ts","../src/math/vec2/AngleY.ts","../src/math/vec2/Bezier.ts","../src/math/vec2/CatmullRom.ts","../src/math/vec2/Ceil.ts","../src/math/vec2/Scale.ts","../src/math/vec2/Center.ts","../src/math/vec2/ChebyshevDistance.ts","../src/math/vec2/Clamp.ts","../src/math/vec2/ClampScalar.ts","../src/math/vec2/Clone.ts","../src/math/vec2/CopyFrom.ts","../src/math/vec2/Cross.ts","../src/math/vec2/DistanceSquared.ts","../src/math/vec2/Distance.ts","../src/math/vec2/Dot.ts","../src/math/vec2/MultiplyByFloats.ts","../src/math/vec2/Subtract.ts","../src/math/vec2/DistanceFromSegment.ts","../src/math/vec2/DistancePower.ts","../src/math/vec2/Divide.ts","../src/math/vec2/DivideScalar.ts","../src/math/vec2/Equals.ts","../src/math/vec2/Floor.ts","../src/math/vec2/Fract.ts","../src/math/vec2/FromGridIndex.ts","../src/math/vec2/FromTransform.ts","../src/math/vec2/FuzzyEquals.ts","../src/math/vec2/Hermite.ts","../src/math/vec2/Inverse.ts","../src/math/vec2/Length.ts","../src/math/vec2/LengthSquared.ts","../src/math/vec2/Lerp.ts","../src/math/vec2/ManhattanDistance.ts","../src/math/vec2/ManhattanLength.ts","../src/math/vec2/Max.ts","../src/math/vec2/Min.ts","../src/math/vec2/Multiply.ts","../src/math/vec2/Negate.ts","../src/math/vec2/Normalize.ts","../src/math/vec2/One.ts","../src/math/vec2/PerpDot.ts","../src/math/vec2/Random.ts","../src/math/vec2/Rotate.ts","../src/math/vec2/Round.ts","../src/math/vec2/RoundToZero.ts","../src/math/vec2/ScaleAndAdd.ts","../src/math/vec2/SetLength.ts","../src/math/vec2/SubtractScalar.ts","../src/math/vec2/Transform.ts","../src/math/vec2/TransformMat2d.ts","../src/math/vec2/TransformMat4.ts","../src/math/vec2/Zero.ts","../src/math/vec4/Vec4.ts","../src/math/vec4/Abs.ts","../src/math/vec4/Add.ts","../src/math/vec4/AddScalar.ts","../src/math/vec4/Bezier.ts","../src/math/vec4/CatmullRom.ts","../src/math/vec4/Ceil.ts","../src/math/vec4/Scale.ts","../src/math/vec4/Center.ts","../src/math/vec4/Clamp.ts","../src/math/vec4/DivideScalar.ts","../src/math/vec4/Length.ts","../src/math/vec4/ClampLength.ts","../src/math/vec4/ClampScalar.ts","../src/math/vec4/Clone.ts","../src/math/vec4/CopyFrom.ts","../src/math/vec4/Cross.ts","../src/math/vec4/DistanceSquared.ts","../src/math/vec4/Distance.ts","../src/math/vec4/Divide.ts","../src/math/vec4/Dot.ts","../src/math/vec4/Equals.ts","../src/math/vec4/Floor.ts","../src/math/vec4/Fract.ts","../src/math/vec4/FuzzyEquals.ts","../src/math/vec4/Hermite.ts","../src/math/vec4/LengthSquared.ts","../src/math/vec4/Lerp.ts","../src/math/vec4/ManhattanDistance.ts","../src/math/vec4/ManhattanLength.ts","../src/math/vec4/Max.ts","../src/math/vec4/Min.ts","../src/math/vec4/Multiply.ts","../src/math/vec4/MultiplyByFloats.ts","../src/math/vec4/Negate.ts","../src/math/vec4/Normalize.ts","../src/math/vec4/One.ts","../src/math/vec4/Vec4Callback.ts","../src/math/vec4/RGBACallback.ts","../src/math/vec4/Random.ts","../src/math/vec4/Round.ts","../src/math/vec4/RoundToZero.ts","../src/math/vec4/ScaleAndAdd.ts","../src/math/vec4/SetLength.ts","../src/math/vec4/Subtract.ts","../src/math/vec4/SubtractScalar.ts","../src/math/vec4/TransformMat4.ts","../src/math/vec4/Zero.ts","../src/math/Average.ts","../src/math/Between.ts","../src/math/CeilTo.ts","../src/math/DegToRad.ts","../src/math/Difference.ts","../src/math/FloatBetween.ts","../src/math/FloorTo.ts","../src/math/FromPercent.ts","../src/math/GetSpeed.ts","../src/math/MaxAdd.ts","../src/math/MinSub.ts","../src/math/Percent.ts","../src/math/RadToDeg.ts","../src/math/RoundTo.ts","../src/math/SinCosTableGenerator.ts","../src/math/Within.ts","../src/camera3d/Camera3D.ts","../src/dom/GetElement.ts","../src/dom/AddToDOM.ts","../src/dom/DOMContentLoaded.ts","../src/dom/ParseXML.ts","../src/dom/RemoveFromDOM.ts","../src/device/audio/CanPlayAudioType.ts","../src/device/audio/CanPlayM4A.ts","../src/device/audio/CanPlayMP3.ts","../src/device/audio/CanPlayOGG.ts","../src/device/audio/CanPlayOpus.ts","../src/device/audio/CanPlayWAV.ts","../src/device/audio/CanPlayWebM.ts","../src/device/audio/HasAudio.ts","../src/device/audio/HasWebAudio.ts","../src/device/audio/GetAudio.ts","../src/device/browser/IsChrome.ts","../src/device/browser/IsEdge.ts","../src/device/browser/IsFirefox.ts","../src/device/browser/IsMSIE.ts","../src/device/os/IsiOS.ts","../src/device/browser/IsMobileSafari.ts","../src/device/browser/IsOpera.ts","../src/device/os/IsWindowsPhone.ts","../src/device/browser/IsSafari.ts","../src/device/browser/IsSilk.ts","../src/device/browser/IsTrident.ts","../src/device/browser/GetBrowser.ts","../src/device/os/IsAndroid.ts","../src/device/os/IsChromeOS.ts","../src/device/os/IsCordova.ts","../src/device/os/IsCrosswalk.ts","../src/device/os/IsEjecta.ts","../src/device/os/IsKindle.ts","../src/device/os/IsLinux.ts","../src/device/os/IsMacOS.ts","../src/device/os/IsNode.ts","../src/device/os/IsNodeWebkit.ts","../src/device/os/IsWebApp.ts","../src/device/os/IsWindows.ts","../src/device/os/GetOS.ts","../src/device/video/CanPlayVideoType.ts","../src/device/video/CanPlayH264Video.ts","../src/device/video/CanPlayHLSVideo.ts","../src/device/video/CanPlayOGGVideo.ts","../src/device/video/CanPlayVP9Video.ts","../src/device/video/CanPlayWebMVideo.ts","../src/device/video/GetVideo.ts","../src/display/DepthFirstSearch.ts","../src/display/GetChildIndex.ts","../src/display/RemoveChildAt.ts","../src/display/RemoveChild.ts","../src/gameobjects/events/AddedToWorldEvent.ts","../src/gameobjects/events/DestroyEvent.ts","../src/gameobjects/events/PostUpdateEvent.ts","../src/gameobjects/events/RemovedFromWorldEvent.ts","../src/gameobjects/events/UpdateEvent.ts","../src/events/Emit.ts","../src/display/SetWorld.ts","../src/display/SetParent.ts","../src/display/AddChild.ts","../src/display/AddChildAt.ts","../src/display/AddChildren.ts","../src/display/AddChildrenAt.ts","../src/display/AddPosition.ts","../src/display/AddRotation.ts","../src/display/AddScale.ts","../src/display/AddSkew.ts","../src/gameobjects/DIRTY_CONST.ts","../src/display/BringChildToTop.ts","../src/display/DepthFirstSearchRecursiveNested.ts","../src/display/ConsoleTreeChildren.ts","../src/display/CountMatchingChildren.ts","../src/display/DepthFirstSearchRecursive.ts","../src/display/RemoveChildrenBetween.ts","../src/display/DestroyChildren.ts","../src/display/FindChildByName.ts","../src/display/FindChildrenByName.ts","../src/display/GetAllChildren.ts","../src/display/GetChildAt.ts","../src/display/GetChildren.ts","../src/display/GetClosestChild.ts","../src/display/GetFirstChild.ts","../src/display/GetFurthestChild.ts","../src/display/GetLastChild.ts","../src/display/GetParents.ts","../src/display/GetRandomChild.ts","../src/display/MoveChildDown.ts","../src/display/MoveChildTo.ts","../src/display/MoveChildUp.ts","../src/geom/intersects/RectangleToRectangle.ts","../src/display/Overlap.ts","../src/display/RemoveChildren.ts","../src/display/RemoveChildrenAt.ts","../src/display/ReparentChildren.ts","../src/display/RotateChildrenLeft.ts","../src/display/RotateChildrenRight.ts","../src/display/SendChildToBack.ts","../src/display/SetBounds.ts","../src/display/SetChildrenValue.ts","../src/display/SetName.ts","../src/display/SetOrigin.ts","../src/display/SetPosition.ts","../src/display/SetRotation.ts","../src/display/SetScale.ts","../src/display/SetSize.ts","../src/display/SetSkew.ts","../src/display/SetType.ts","../src/display/SetValue.ts","../src/display/SetVisible.ts","../src/display/ShuffleChildren.ts","../src/display/SwapChildren.ts","../src/display3d/DepthFirstSearch3D.ts","../src/display3d/GetChild3DIndex.ts","../src/display3d/RemoveChild3DAt.ts","../src/display3d/RemoveChild3D.ts","../src/display3d/SetWorld3D.ts","../src/display3d/SetParent3D.ts","../src/display3d/AddChild3D.ts","../src/display3d/AddChild3DAt.ts","../src/display3d/AddChildren3D.ts","../src/display3d/AddChildren3DAt.ts","../src/display3d/DepthFirstSearchRecursiveNested3D.ts","../src/display3d/ConsoleTreeChildren3D.ts","../src/display3d/CountMatchingChildren3D.ts","../src/display3d/DepthFirstSearchRecursive3D.ts","../src/display3d/RemoveChildren3DBetween.ts","../src/display3d/DestroyChildren3D.ts","../src/display3d/FindChild3DByName.ts","../src/display3d/FindChildren3DByName.ts","../src/display3d/GetAllChildren3D.ts","../src/display3d/GetChild3DAt.ts","../src/display3d/GetChildren3D.ts","../src/display3d/GetFirstChild3D.ts","../src/display3d/GetLastChild3D.ts","../src/display3d/GetParents3D.ts","../src/display3d/GetRandomChild3D.ts","../src/display3d/MoveChild3DTo.ts","../src/display3d/RemoveChildren3D.ts","../src/display3d/RemoveChildren3DAt.ts","../src/display3d/ReparentChildren3D.ts","../src/display3d/ReplaceChild3D.ts","../src/display3d/SetChildren3DValue.ts","../src/display3d/SwapChildren3D.ts","../src/events/ClearEvent.ts","../src/events/EventEmitter.ts","../src/events/EventInstance.ts","../src/events/GetEventNames.ts","../src/events/GetListenerCount.ts","../src/events/GetListeners.ts","../src/events/Off.ts","../src/events/On.ts","../src/events/Once.ts","../src/events/RemoveAllListeners.ts","../src/gameobjects/components/transform/GetVertices.ts","../src/gameobjects/components/bounds/BoundsComponent.ts","../src/gameobjects/components/input/InputComponent.ts","../src/config/DefaultOrigin.ts","../src/geom/rectangle/Area.ts","../src/geom/rectangle/Ceil.ts","../src/geom/rectangle/CeilAll.ts","../src/geom/rectangle/CenterOn.ts","../src/geom/rectangle/CenterX.ts","../src/geom/rectangle/CenterY.ts","../src/geom/rectangle/Clone.ts","../src/geom/rectangle/ContainsPoint.ts","../src/geom/rectangle/ContainsRect.ts","../src/geom/rectangle/CopyFrom.ts","../src/geom/rectangle/Decompose.ts","../src/geom/rectangle/Equals.ts","../src/geom/rectangle/GetAspectRatio.ts","../src/geom/rectangle/FitInside.ts","../src/geom/rectangle/FitOutside.ts","../src/geom/rectangle/Floor.ts","../src/geom/rectangle/FloorAll.ts","../src/geom/rectangle/FromPoints.ts","../src/geom/rectangle/GetCenter.ts","../src/geom/line/Line.ts","../src/geom/rectangle/GetEdges.ts","../src/geom/rectangle/Perimeter.ts","../src/geom/rectangle/GetPoint.ts","../src/geom/rectangle/GetPoints.ts","../src/geom/rectangle/GetSize.ts","../src/geom/rectangle/Inflate.ts","../src/geom/rectangle/Intersection.ts","../src/geom/rectangle/MarchingAnts.ts","../src/geom/rectangle/MergePoints.ts","../src/geom/rectangle/MergeRect.ts","../src/geom/rectangle/MergeXY.ts","../src/geom/rectangle/Offset.ts","../src/geom/rectangle/OffsetPoint.ts","../src/geom/rectangle/Overlaps.ts","../src/geom/rectangle/PerimeterPoint.ts","../src/geom/rectangle/Random.ts","../src/geom/rectangle/RandomOutside.ts","../src/geom/rectangle/SameDimensions.ts","../src/geom/rectangle/Scale.ts","../src/geom/rectangle/Union.ts","../src/gameobjects/components/transform/UpdateLocalTransform.ts","../src/gameobjects/components/transform/UpdateWorldTransform.ts","../src/gameobjects/components/transform/TransformComponent.ts","../src/renderer/webgl1/colors/PackColor.ts","../src/gameobjects/components/Vertex.ts","../src/renderer/webgl1/renderpass/AddViewport.ts","../src/renderer/webgl1/GL.ts","../src/renderer/webgl1/renderpass/BindViewport.ts","../src/renderer/webgl1/renderpass/SetViewport.ts","../src/renderer/webgl1/renderpass/BindFramebuffer.ts","../src/renderer/webgl1/renderpass/PopViewport.ts","../src/renderer/webgl1/renderpass/PopFramebuffer.ts","../src/renderer/webgl1/renderpass/AddFramebuffer.ts","../src/renderer/webgl1/renderpass/SetFramebuffer.ts","../src/renderer/webgl1/renderpass/Draw.ts","../src/renderer/webgl1/renderpass/Flush.ts","../src/renderer/webgl1/renderpass/GetVertexBufferEntry.ts","../src/renderer/webgl1/renderpass/SetTexture.ts","../src/renderer/webgl1/draw/BatchTexturedQuad.ts","../src/gameobjects/GameObject.ts","../src/gameobjects/container/Container.ts","../src/renderer/canvas/draw/DrawTexturedQuad.ts","../src/renderer/webgl1/colors/PackColors.ts","../src/gameobjects/sprite/SetFrame.ts","../src/renderer/BindingQueue.ts","../src/textures/Frame.ts","../src/textures/Texture.ts","../src/textures/TextureManagerInstance.ts","../src/gameobjects/sprite/SetTexture.ts","../src/gameobjects/sprite/UpdateVertices.ts","../src/gameobjects/sprite/Sprite.ts","../src/gameobjects/animatedsprite/AnimatedSprite.ts","../src/renderer/webgl1/renderpass/AddShader.ts","../src/renderer/webgl1/renderpass/AddVertexBuffer.ts","../src/renderer/webgl1/renderpass/BindShader.ts","../src/renderer/webgl1/renderpass/Begin.ts","../src/renderer/webgl1/renderpass/BindBlendMode.ts","../src/renderer/webgl1/renderpass/BindTexture.ts","../src/renderer/webgl1/renderpass/BindVertexBuffer.ts","../src/config/MaxTextures.ts","../src/renderer/webgl1/shaders/CheckShaderMaxIfStatements.ts","../src/renderer/webgl1/renderpass/CreateTempTextures.ts","../src/renderer/webgl1/renderpass/End.ts","../src/renderer/webgl1/renderpass/PopVertexBuffer.ts","../src/renderer/webgl1/renderpass/SetVertexBuffer.ts","../src/renderer/webgl1/renderpass/FlushBuffer.ts","../src/renderer/webgl1/renderpass/PopShader.ts","../src/renderer/webgl1/textures/CreateGLTexture.ts","../src/renderer/webgl1/fbo/DeleteFramebuffer.ts","../src/renderer/webgl1/textures/DeleteGLTexture.ts","../src/renderer/webgl1/textures/SetGLTextureFilterMode.ts","../src/renderer/webgl1/textures/UpdateGLTexture.ts","../src/renderer/webgl1/textures/GLTextureBinding.ts","../src/renderer/webgl1/renderpass/ProcessBindingQueue.ts","../src/renderer/webgl1/buffers/DeleteGLBuffer.ts","../src/renderer/webgl1/buffers/VertexBuffer.ts","../src/renderer/webgl1/buffers/IndexedVertexBuffer.ts","../src/renderer/webgl1/shaders/CreateAttributes.ts","../src/renderer/webgl1/shaders/DeleteShaders.ts","../src/renderer/webgl1/shaders/CreateProgram.ts","../src/renderer/webgl1/shaders/CreateShader.ts","../src/renderer/webgl1/shaders/CreateUniformSetter.ts","../src/renderer/webgl1/shaders/CreateUniforms.ts","../src/renderer/webgl1/GL_CONST.ts","../src/renderer/webgl1/shaders/DefaultQuadAttributes.ts","../src/renderer/webgl1/shaders/DefaultQuadUniforms.ts","../src/config/Size.ts","../src/renderer/webgl1/fbo/CreateDepthBuffer.ts","../src/renderer/webgl1/fbo/CreateFramebuffer.ts","../src/renderer/webgl1/glsl/SINGLE_QUAD_FRAG.ts","../src/renderer/webgl1/glsl/SINGLE_QUAD_VERT.ts","../src/renderer/webgl1/shaders/Shader.ts","../src/renderer/webgl1/shaders/QuadShader.ts","../src/renderer/webgl1/glsl/MULTI_QUAD_FRAG.ts","../src/renderer/webgl1/shaders/MultiTextureQuadShader.ts","../src/renderer/webgl1/renderpass/SetDefaultBlendMode.ts","../src/renderer/webgl1/renderpass/SetDefaultFramebuffer.ts","../src/renderer/webgl1/renderpass/SetDefaultShader.ts","../src/renderer/webgl1/renderpass/SetDefaultVertexBuffer.ts","../src/renderer/webgl1/renderpass/SetDefaultViewport.ts","../src/config/BatchSize.ts","../src/renderer/webgl1/renderpass/RenderPass.ts","../src/renderer/webgl1/renderpass/SetShader.ts","../src/renderer/webgl1/renderpass/Start.ts","../src/renderer/webgl1/renderpass/UnbindTexture.ts","../src/renderer/webgl1/draw/BatchSingleQuad.ts","../src/renderer/webgl1/draw/DrawTexturedQuad.ts","../src/config/BackgroundColor.ts","../src/config/Banner.ts","../src/config/SetRenderer.ts","../src/config/Scenes.ts","../src/config/WebGLContext.ts","../src/renderer/webgl1/colors/GetRGBArray.ts","../src/renderer/webgl1/WebGLRendererInstance.ts","../src/renderer/webgl1/WebGLRenderer.ts","../src/gameobjects/layer/Layer.ts","../src/gameobjects/renderlayer/RenderLayer.ts","../src/gameobjects/effectlayer/EffectLayer.ts","../src/gameobjects/components/transform/GetVerticesFromValues.ts","../src/gameobjects/spritebatch/SpriteBatch.ts","../src/textures/CreateCanvas.ts","../src/textures/types/CanvasTexture.ts","../src/gameobjects/text/Text.ts","../src/gameobjects3d/components/transform3d/Transform3DComponent.ts","../src/gameobjects3d/geometry/CreateVertexSet.ts","../src/gameobjects3d/geometry/FaceUVNormalTexture.ts","../src/gameobjects3d/geometry/GetBufferFromVertexSet.ts","../src/gameobjects3d/geometry/Geometry.ts","../src/gameobjects3d/geometry/ParseObj.ts","../src/gameobjects3d/geometry/GetBufferFromObj.ts","../src/gameobjects3d/geometry/GetFacesFromVertexSet.ts","../src/geom3d/PlaneGeometry.ts","../src/geom3d/BoxGeometry.ts","../src/gameobjects3d/GameObject3D.ts","../src/gameobjects3d/material/Material.ts","../src/gameobjects3d/mesh/SetFrame.ts","../src/gameobjects3d/mesh/SetTexture.ts","../src/gameobjects3d/mesh/Mesh.ts","../src/gameobjects3d/box/Box.ts","../src/geom3d/CylinderGeometry.ts","../src/geom3d/ConeGeometry.ts","../src/gameobjects3d/cone/Cone.ts","../src/gameobjects3d/light/Light.ts","../src/gameobjects3d/plane/Plane.ts","../src/gameobjects3d/renderlayer3d/RenderLayer3D.ts","../src/geom3d/SphereGeometry.ts","../src/gameobjects3d/sphere/Sphere.ts","../src/geom/circle/Area.ts","../src/geom/circle/Contains.ts","../src/geom/circle/Circle.ts","../src/geom/circle/Circumference.ts","../src/geom/circle/CircumferencePoint.ts","../src/geom/circle/Clone.ts","../src/geom/circle/ContainsPoint.ts","../src/geom/circle/ContainsRect.ts","../src/geom/circle/CopyFrom.ts","../src/geom/circle/Equals.ts","../src/geom/circle/GetBounds.ts","../src/geom/circle/GetPoint.ts","../src/geom/circle/GetPoints.ts","../src/geom/circle/Offset.ts","../src/geom/circle/OffsetPoint.ts","../src/geom/circle/Random.ts","../src/geom/ellipse/Area.ts","../src/geom/ellipse/Circumference.ts","../src/geom/ellipse/CircumferencePoint.ts","../src/geom/ellipse/Contains.ts","../src/geom/ellipse/Ellipse.ts","../src/geom/ellipse/Clone.ts","../src/geom/ellipse/ContainsPoint.ts","../src/geom/ellipse/ContainsRect.ts","../src/geom/ellipse/CopyFrom.ts","../src/geom/ellipse/Equals.ts","../src/geom/ellipse/GetBounds.ts","../src/geom/ellipse/GetPoint.ts","../src/geom/ellipse/GetPoints.ts","../src/geom/ellipse/Offset.ts","../src/geom/ellipse/OffsetPoint.ts","../src/geom/ellipse/Random.ts","../src/geom/intersects/CircleToCircle.ts","../src/geom/intersects/CircleToRectangle.ts","../src/geom/intersects/GetCircleToCircle.ts","../src/geom/intersects/LineToCircle.ts","../src/geom/intersects/GetLineToCircle.ts","../src/geom/intersects/GetCircleToRectangle.ts","../src/geom/intersects/LineToLine.ts","../src/geom/intersects/LineToRectangle.ts","../src/geom/intersects/GetLineToRectangle.ts","../src/geom/intersects/GetRectangleIntersection.ts","../src/geom/intersects/GetRectangleToRectangle.ts","../src/geom/triangle/GetEdges.ts","../src/geom/triangle/Contains.ts","../src/geom/triangle/ContainsArray.ts","../src/geom/intersects/RectangleToTriangle.ts","../src/geom/intersects/GetRectangleToTriangle.ts","../src/geom/intersects/TriangleToCircle.ts","../src/geom/intersects/GetTriangleToCircle.ts","../src/geom/intersects/TriangleToLine.ts","../src/geom/intersects/GetTriangleToLine.ts","../src/geom/triangle/Decompose.ts","../src/geom/intersects/TriangleToTriangle.ts","../src/geom/intersects/GetTriangleToTriangle.ts","../src/geom/intersects/PointToLine.ts","../src/geom/intersects/PointToLineSegment.ts","../src/geom/line/Angle.ts","../src/geom/line/BresenhamPoints.ts","../src/geom/line/CenterOn.ts","../src/geom/line/Clone.ts","../src/geom/line/CopyFrom.ts","../src/geom/line/Equals.ts","../src/geom/line/Length.ts","../src/geom/line/Extend.ts","../src/geom/line/GetMidPoint.ts","../src/geom/line/GetNearestPoint.ts","../src/geom/line/GetNormal.ts","../src/geom/line/GetPoint.ts","../src/geom/line/GetPoints.ts","../src/geom/line/GetShortestDistance.ts","../src/geom/line/Height.ts","../src/geom/line/NormalAngle.ts","../src/geom/line/NormalX.ts","../src/geom/line/NormalY.ts","../src/geom/line/Offset.ts","../src/geom/line/PerpSlope.ts","../src/geom/line/Random.ts","../src/geom/line/ReflectAngle.ts","../src/geom/line/RotateAroundXY.ts","../src/geom/line/Rotate.ts","../src/geom/line/RotateAroundPoint.ts","../src/geom/line/SetToAngle.ts","../src/geom/line/Slope.ts","../src/geom/line/Width.ts","../src/geom/triangle/Area.ts","../src/geom/triangle/Triangle.ts","../src/geom/triangle/BuildEquilateral.ts","../src/geom/triangle/BuildRight.ts","../src/geom/triangle/Centroid.ts","../src/geom/triangle/Offset.ts","../src/geom/triangle/CenterOn.ts","../src/geom/triangle/CircumCenter.ts","../src/geom/Circle/Contains.ts","../src/geom/Circle/Circle.ts","../src/geom/triangle/CircumCircle.ts","../src/geom/triangle/Clone.ts","../src/geom/triangle/ContainsPoint.ts","../src/geom/triangle/CopyFrom.ts","../src/geom/triangle/Equals.ts","../src/geom/triangle/GetPoint.ts","../src/geom/triangle/GetPoints.ts","../src/geom/triangle/InCenter.ts","../src/geom/triangle/Perimeter.ts","../src/geom/triangle/Random.ts","../src/geom/triangle/RotateAroundXY.ts","../src/geom/triangle/Rotate.ts","../src/geom/triangle/RotateAroundPoint.ts","../src/geom3d/TorusGeometry.ts","../src/input/keyboard/Key.ts","../src/input/keyboard/keys/AKey.ts","../src/input/keyboard/keys/ArrowKeys.ts","../src/input/keyboard/keys/BKey.ts","../src/input/keyboard/keys/CKey.ts","../src/input/keyboard/keys/DKey.ts","../src/input/keyboard/keys/DownKey.ts","../src/input/keyboard/keys/EKey.ts","../src/input/keyboard/keys/FKey.ts","../src/input/keyboard/keys/GKey.ts","../src/input/keyboard/keys/HKey.ts","../src/input/keyboard/keys/IKey.ts","../src/input/keyboard/keys/JKey.ts","../src/input/keyboard/keys/KKey.ts","../src/input/keyboard/keys/LKey.ts","../src/input/keyboard/keys/LeftKey.ts","../src/input/keyboard/keys/MKey.ts","../src/input/keyboard/keys/NKey.ts","../src/input/keyboard/keys/OKey.ts","../src/input/keyboard/keys/PKey.ts","../src/input/keyboard/keys/QKey.ts","../src/input/keyboard/keys/RKey.ts","../src/input/keyboard/keys/RightKey.ts","../src/input/keyboard/keys/SKey.ts","../src/input/keyboard/keys/SpaceKey.ts","../src/input/keyboard/keys/TKey.ts","../src/input/keyboard/keys/UKey.ts","../src/input/keyboard/keys/UpKey.ts","../src/input/keyboard/keys/VKey.ts","../src/input/keyboard/keys/WASDKeys.ts","../src/input/keyboard/keys/WKey.ts","../src/input/keyboard/keys/XKey.ts","../src/input/keyboard/keys/YKey.ts","../src/input/keyboard/keys/ZKey.ts","../src/input/keyboard/GetKeyDownDuration.ts","../src/input/keyboard/Keyboard.ts","../src/input/keyboard/SetKeyRepeatRate.ts","../src/input/mouse/Mouse.ts","../src/input/SetInteractive.ts","../src/textures/parsers/AtlasParser.ts","../src/loader/File.ts","../src/loader/GetURL.ts","../src/loader/ImageTagLoader.ts","../src/loader/files/ImageFile.ts","../src/cache/Cache.ts","../src/loader/XHRLoader.ts","../src/loader/files/JSONFile.ts","../src/loader/files/AtlasFile.ts","../src/textures/parsers/BitmapTextParser.ts","../src/loader/files/XMLFile.ts","../src/loader/files/BitmapTextFile.ts","../src/loader/files/CSVFile.ts","../src/loader/files/JSONGeometryFile.ts","../src/loader/files/OBJFile.ts","../src/loader/files/OBJGeometryFile.ts","../src/textures/parsers/SpriteSheetParser.ts","../src/loader/files/SpriteSheetFile.ts","../src/loader/Loader.ts","../src/materials3d/BlackPlastic.ts","../src/materials3d/BlackRubber.ts","../src/materials3d/Brass.ts","../src/materials3d/Bronze.ts","../src/materials3d/Chrome.ts","../src/materials3d/Copper.ts","../src/materials3d/CyanPlastic.ts","../src/materials3d/CyanRubber.ts","../src/materials3d/Emerald.ts","../src/materials3d/Gold.ts","../src/materials3d/GreenPlastic.ts","../src/materials3d/GreenRubber.ts","../src/materials3d/Jade.ts","../src/materials3d/Obsidian.ts","../src/materials3d/Pearl.ts","../src/materials3d/RedPlastic.ts","../src/materials3d/RedRubber.ts","../src/materials3d/Ruby.ts","../src/materials3d/Silver.ts","../src/materials3d/Turquoise.ts","../src/materials3d/WhitePlastic.ts","../src/materials3d/WhiteRubber.ts","../src/materials3d/YellowPlastic.ts","../src/materials3d/YellowRubber.ts","../src/textures/palettes/Arne16.ts","../src/textures/palettes/C64.ts","../src/textures/palettes/CGA.ts","../src/textures/palettes/JMP.ts","../src/textures/palettes/MSX.ts","../src/textures/palettes/PICO8.ts","../src/textures/types/GridTexture.ts","../src/textures/types/PixelTexture.ts","../src/textures/types/RenderTexture.ts","../src/textures/types/SolidColorTexture.ts","../src/textures/GetFrames.ts","../src/textures/GetFramesInRange.ts","../src/textures/SetFilter.ts","../src/textures/TextureManager.ts","../src/time/NOOP.ts","../src/time/AddTimer.ts","../src/time/AddDelayedCall.ts","../src/time/Clock.ts","../src/world/events/WorldRenderEvent.ts","../src/world/events/WorldShutdownEvent.ts","../src/world/CalculateTotalRenderable.ts","../src/world/HasDirtyChildren.ts","../src/world/UpdateCachedLayers.ts","../src/world/WorldDepthFirstSearch.ts","../src/world/BuildRenderList.ts","../src/world/MergeRenderData.ts","../src/world/ResetWorldRenderData.ts","../src/world/BaseWorld.ts","../src/world/CreateWorldRenderData.ts","../src/world/StaticWorld.ts","../src/world/World.ts","../src/world3d/events/World3DRenderEvent.ts","../src/world3d/events/World3DShutdownEvent.ts","../src/world3d/CalculateTotalRenderable.ts","../src/world3d/HasDirtyChildren.ts","../src/world3d/UpdateCachedLayers.ts","../src/world3d/WorldDepthFirstSearch.ts","../src/world3d/BuildRenderList.ts","../src/world3d/MergeRenderData.ts","../src/world3d/ResetWorld3DRenderData.ts","../src/world3d/BaseWorld3D.ts","../src/world3d/CreateWorld3DRenderData.ts","../src/renderer/webgl1/glsl/AMBIENT_LIGHT_FRAG.ts","../src/renderer/webgl1/glsl/AMBIENT_LIGHT_VERT.ts","../src/renderer/webgl1/shaders/AmbientLightShader.ts","../src/camera3d/NewCamera3D.ts","../src/world3d/World3D.ts","../src/scenes/CreateSceneRenderData.ts","../src/scenes/ResetSceneRenderData.ts","../src/scenes/SceneManagerInstance.ts","../src/scenes/SceneManager.ts","../src/Game.ts","../src/scenes/GetConfigValue.ts","../src/scenes/Install.ts","../src/scenes/Scene.ts"],"sourcesContent":["import { Game } from './Game';\r\n\r\nexport let instance: Game;\r\nexport let frame: number = 0;\r\nexport let elapsed: number = 0;\r\n\r\nexport const GameInstance =\r\n{\r\n    get: (): Game =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (game: Game | undefined): void =>\r\n    {\r\n        instance = game;\r\n    },\r\n\r\n    getFrame: (): number =>\r\n    {\r\n        return frame;\r\n    },\r\n\r\n    setFrame: (current: number): void =>\r\n    {\r\n        frame = current;\r\n    },\r\n\r\n    getElapsed: (): number =>\r\n    {\r\n        return elapsed;\r\n    },\r\n\r\n    setElapsed: (current: number): void =>\r\n    {\r\n        elapsed = current;\r\n    }\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Round a given number so it is further away from zero. That is, positive numbers are rounded up, and negative numbers are rounded down.\r\n *\r\n * @function Phaser.Math.RoundAwayFromZero\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The number to round.\r\n *\r\n * @return {number} The rounded number, rounded away from zero.\r\n */\r\nexport function RoundAwayFromZero (value: number): number\r\n{\r\n    // \"Opposite\" of truncate.\r\n    return (value > 0) ? Math.ceil(value) : Math.floor(value);\r\n}\r\n","/**\r\n * @author       Niklas von Hertzen (https://github.com/niklasvh/base64-arraybuffer)\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n//  Use a lookup table to find the index.\r\nconst lookup = new Uint8Array(256);\r\n\r\nfor (let i = 0; i < chars.length; i++)\r\n{\r\n    lookup[chars.charCodeAt(i)] = i;\r\n}\r\n\r\n/**\r\n * Converts a base64 string, either with or without a data uri, into an Array Buffer.\r\n *\r\n * @function Phaser.Utils.Base64.Base64ToArrayBuffer\r\n * @since 3.18.0\r\n *\r\n * @param {string} base64 - The base64 string to be decoded. Can optionally contain a data URI header, which will be stripped out prior to decoding.\r\n *\r\n * @return {ArrayBuffer} An ArrayBuffer decoded from the base64 data.\r\n */\r\nexport function Base64ToArrayBuffer (base64: string): ArrayBuffer\r\n{\r\n    //  Is it a data uri? if so, strip the header away\r\n    base64 = base64.substr(base64.indexOf(',') + 1);\r\n\r\n    const len = base64.length;\r\n    let bufferLength = len * 0.75;\r\n    let p = 0;\r\n    let encoded1;\r\n    let encoded2;\r\n    let encoded3;\r\n    let encoded4;\r\n\r\n    if (base64[len - 1] === '=')\r\n    {\r\n        bufferLength--;\r\n\r\n        if (base64[len - 2] === '=')\r\n        {\r\n            bufferLength--;\r\n        }\r\n    }\r\n\r\n    const arrayBuffer = new ArrayBuffer(bufferLength);\r\n    const bytes = new Uint8Array(arrayBuffer);\r\n\r\n    for (let i = 0; i < len; i += 4)\r\n    {\r\n        encoded1 = lookup[base64.charCodeAt(i)];\r\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n\r\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arrayBuffer;\r\n}\r\n","export function NOOP (): void\r\n{\r\n    //  No-op\r\n}\r\n","import { NOOP } from '../../utils';\r\n\r\n//  4x4 Matrix in column-major format\r\n\r\n/**\r\n * data[0] = m00\r\n * data[1] = m01\r\n * data[2] = m02\r\n * data[3] = m03\r\n * data[4] = m10\r\n * data[5] = m11\r\n * data[6] = m12\r\n * data[7] = m13\r\n * data[8] = m20\r\n * data[9] = m21\r\n * data[10] = m22\r\n * data[11] = m23\r\n * data[12] = m30\r\n * data[13] = m31\r\n * data[14] = m32\r\n * data[15] = m33\r\n */\r\n\r\nexport class Matrix4\r\n{\r\n    data: Float32Array;\r\n\r\n    onChange: (mat4: Matrix4) => void;\r\n\r\n    constructor (src?: Matrix4 | Float32List)\r\n    {\r\n        const data = new Float32Array(16);\r\n\r\n        this.data = data;\r\n        this.onChange = NOOP;\r\n\r\n        if (src)\r\n        {\r\n            if (Array.isArray(src))\r\n            {\r\n                this.fromArray(src);\r\n            }\r\n            else\r\n            {\r\n                this.fromArray((src as Matrix4).data);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            data[0] = 1;\r\n            data[5] = 1;\r\n            data[10] = 1;\r\n            data[15] = 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param m00 - 1st value of 1st row\r\n     * @param m01 - 2nd value of 1st row\r\n     * @param m02 - 3rd value of 1st row\r\n     * @param m03 - 4th value of 1st row\r\n     * @param m10 - 1st value of 2nd row\r\n     * @param m11 - 2nd value of 2nd row\r\n     * @param m12 - 3rd value of 2nd row\r\n     * @param m13 - 4th value of 2nd row\r\n     * @param m20 - 1st value of 3rd row\r\n     * @param m21 - 2nd value of 3rd row\r\n     * @param m22 - 3rd value of 3rd row\r\n     * @param m23 - 4th value of 3rd row\r\n     * @param m30 - 1st value of 4th row\r\n     * @param m31 - 2nd value of 4th row\r\n     * @param m32 - 3rd value of 4th row\r\n     * @param m33 - 4th value of 4th row\r\n     */\r\n    set (m00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number, m20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number): this\r\n    {\r\n        const data = this.data;\r\n\r\n        data[ 0 ] = m00;\r\n        data[ 1 ] = m01;\r\n        data[ 2 ] = m02;\r\n        data[ 3 ] = m03;\r\n\r\n        data[ 4 ] = m10;\r\n        data[ 5 ] = m11;\r\n        data[ 6 ] = m12;\r\n        data[ 7 ] = m13;\r\n\r\n        data[ 8 ] = m20;\r\n        data[ 9 ] = m21;\r\n        data[ 10 ] = m22;\r\n        data[ 11 ] = m23;\r\n\r\n        data[ 12 ] = m30;\r\n        data[ 13 ] = m31;\r\n        data[ 14 ] = m32;\r\n        data[ 15 ] = m33;\r\n\r\n        this.onChange(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    toArray (dst: Float32List = [], index: number = 0): Float32List\r\n    {\r\n        const data = this.data;\r\n\r\n        for (let i = 0; i < 16; i++)\r\n        {\r\n            dst[ index + i ] = data[i];\r\n        }\r\n\r\n        return dst;\r\n    }\r\n\r\n    fromArray (src: Float32List, index: number = 0): this\r\n    {\r\n        const data = this.data;\r\n\r\n        for (let i = 0; i < 16; i++)\r\n        {\r\n            data[i] = src[ index + i ];\r\n        }\r\n\r\n        this.onChange(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        return '[ mat4=' + this.data.join(', ') + ' ]';\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.onChange = NOOP;\r\n        this.data = null;\r\n    }\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Adds two mat4's\r\n\r\nexport function Add (a: Matrix4, b: Matrix4, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = a.data;\r\n    const [ b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33 ] = b.data;\r\n\r\n    return out.set(\r\n        a00 + b00,\r\n        a01 + b01,\r\n        a02 + b02,\r\n        a03 + b03,\r\n        a10 + b10,\r\n        a11 + b11,\r\n        a12 + b12,\r\n        a13 + b13,\r\n        a20 + b20,\r\n        a21 + b21,\r\n        a22 + b22,\r\n        a23 + b23,\r\n        a30 + b30,\r\n        a31 + b31,\r\n        a32 + b32,\r\n        a33 + b33\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function AddTranslationFromFloats (matrix: Matrix4, x: number, y: number, z: number): Matrix4\r\n{\r\n    const data = matrix.data;\r\n\r\n    data[12] += x;\r\n    data[13] += y;\r\n    data[14] += z;\r\n\r\n    matrix.onChange(matrix);\r\n\r\n    return matrix;\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function Adjoint (matrix: Matrix4, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = matrix.data;\r\n\r\n    const b00 = a00 * a11 - a01 * a10;\r\n    const b01 = a00 * a12 - a02 * a10;\r\n    const b02 = a00 * a13 - a03 * a10;\r\n    const b03 = a01 * a12 - a02 * a11;\r\n    const b04 = a01 * a13 - a03 * a11;\r\n    const b05 = a02 * a13 - a03 * a12;\r\n    const b06 = a20 * a31 - a21 * a30;\r\n    const b07 = a20 * a32 - a22 * a30;\r\n    const b08 = a20 * a33 - a23 * a30;\r\n    const b09 = a21 * a32 - a22 * a31;\r\n    const b10 = a21 * a33 - a23 * a31;\r\n    const b11 = a22 * a33 - a23 * a32;\r\n\r\n    return out.set(\r\n        a11 * b11 - a12 * b10 + a13 * b09,\r\n        a02 * b10 - a01 * b11 - a03 * b09,\r\n        a31 * b05 - a32 * b04 + a33 * b03,\r\n        a22 * b04 - a21 * b05 - a23 * b03,\r\n        a12 * b08 - a10 * b11 - a13 * b07,\r\n        a00 * b11 - a02 * b08 + a03 * b07,\r\n        a32 * b02 - a30 * b05 - a33 * b01,\r\n        a20 * b05 - a22 * b02 + a23 * b01,\r\n        a10 * b10 - a11 * b08 + a13 * b06,\r\n        a01 * b08 - a00 * b10 - a03 * b06,\r\n        a30 * b04 - a31 * b02 + a33 * b00,\r\n        a21 * b02 - a20 * b04 - a23 * b00,\r\n        a11 * b07 - a10 * b09 - a12 * b06,\r\n        a00 * b09 - a01 * b07 + a02 * b06,\r\n        a31 * b01 - a30 * b03 - a32 * b00,\r\n        a20 * b03 - a21 * b01 + a22 * b00\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function Clone (src: Matrix4): Matrix4\r\n{\r\n    return new Matrix4(src);\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function CopyFrom (src: Matrix4, dest: Matrix4): Matrix4\r\n{\r\n    return dest.fromArray(src.data);\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function CopyPosition (src: Matrix4, dest: Matrix4): Matrix4\r\n{\r\n    const srcData = src.data;\r\n    const destData = dest.data;\r\n\r\n    destData[12] = srcData[12];\r\n    destData[13] = srcData[13];\r\n    destData[14] = srcData[14];\r\n\r\n    dest.onChange(dest);\r\n\r\n    return dest;\r\n}\r\n","import { IMatrix4 } from './IMatrix4';\r\n\r\nexport function Determinant (matrix: IMatrix4): number\r\n{\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33 ] = matrix.data;\r\n\r\n    // https://en.wikipedia.org/wiki/Laplace_expansion\r\n    // to compute the deterrminant of a 4x4 Matrix we compute the cofactors of any row or column,\r\n    // then we multiply each Cofactor by its corresponding matrix value and sum them all to get the determinant\r\n    // Cofactor(i, j) = sign(i,j) * det(Minor(i, j))\r\n    // where\r\n    //  - sign(i,j) = (i+j) % 2 === 0 ? 1 : -1\r\n    //  - Minor(i, j) is the 3x3 matrix we get by removing row i and column j from current Matrix\r\n    //\r\n    // Here we do that for the 1st row.\r\n\r\n    const det22x33 = m22 * m33 - m32 * m23;\r\n    const det21x33 = m21 * m33 - m31 * m23;\r\n    const det21x32 = m21 * m32 - m31 * m22;\r\n    const det20x33 = m20 * m33 - m30 * m23;\r\n    const det20x32 = m20 * m32 - m22 * m30;\r\n    const det20x31 = m20 * m31 - m30 * m21;\r\n\r\n    const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\r\n    const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\r\n    const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\r\n    const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\r\n\r\n    return m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\r\n}\r\n","import { IMatrix4 } from './IMatrix4';\r\n\r\n// Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n\r\nexport function Equals (a: IMatrix4, b: IMatrix4): boolean\r\n{\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = a.data;\r\n    const [ b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33 ] = b.data;\r\n\r\n    return (\r\n        a00 === b00 &&\r\n        a01 === b01 &&\r\n        a02 === b02 &&\r\n        a03 === b03 &&\r\n        a10 === b10 &&\r\n        a11 === b11 &&\r\n        a12 === b12 &&\r\n        a13 === b13 &&\r\n        a20 === b20 &&\r\n        a21 === b21 &&\r\n        a22 === b22 &&\r\n        a23 === b23 &&\r\n        a30 === b30 &&\r\n        a31 === b31 &&\r\n        a32 === b32 &&\r\n        a33 === b33\r\n    );\r\n}\r\n","import { IMatrix4 } from './IMatrix4';\r\n\r\nexport function Frobenius (matrix: IMatrix4): number\r\n{\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33 ] = matrix.data;\r\n\r\n    return Math.hypot(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\r\n}\r\n","import { IQuaternionLike } from '../quaternion/IQuaternionLike';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\n// Calculates a 4x4 matrix from the given quaternion\r\n\r\nexport function FromQuat (q: IQuaternionLike, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const { x, y, z, w } = q;\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const yx = y * x2;\r\n    const yy = y * y2;\r\n    const zx = z * x2;\r\n    const zy = z * y2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n\r\n    return out.set(\r\n        1 - yy - zz,\r\n        yx + wz,\r\n        zx - wy,\r\n        0,\r\n        yx - wz,\r\n        1 - xx - zz,\r\n        zy + wx,\r\n        0,\r\n        zx + wy,\r\n        zy - wx,\r\n        1 - xx - yy,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        1\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function FromRotation (angle: number, axis: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    let { x, y, z } = axis;\r\n\r\n    let len = Math.hypot(x, y, z);\r\n\r\n    if (len < 0.00001)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    len = 1 / len;\r\n\r\n    x *= len;\r\n    y *= len;\r\n    z *= len;\r\n\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n    const t = 1 - c;\r\n\r\n    return out.set(\r\n        x * x * t + c,\r\n        y * x * t + z * s,\r\n        z * x * t - y * s,\r\n        0,\r\n        x * y * t - z * s,\r\n        y * y * t + c,\r\n        z * y * t + x * s,\r\n        0,\r\n        x * z * t + y * s,\r\n        y * z * t - x * s,\r\n        z * z * t + c,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        1\r\n    );\r\n}\r\n","import { IQuaternionLike } from '../quaternion/IQuaternionLike';\r\nimport { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function FromRotationTranslation (q: IQuaternionLike, v: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    // Quaternion math\r\n    const { x, y, z, w } = q;\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n\r\n    const { x: vx, y: vy, z: vz } = v;\r\n\r\n    return out.set(\r\n        1 - (yy + zz),\r\n        xy + wz,\r\n        xz - wy,\r\n        0,\r\n        xy - wz,\r\n        1 - (xx + zz),\r\n        yz + wx,\r\n        0,\r\n        xz + wy,\r\n        yz - wx,\r\n        1 - (xx + yy),\r\n        0,\r\n        vx,\r\n        vy,\r\n        vz,\r\n        1\r\n    );\r\n}\r\n","import { IQuaternionLike } from '../quaternion/IQuaternionLike';\r\nimport { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\n// Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n\r\nexport function FromRotationTranslationScale (q: IQuaternionLike, v: IVec3Like, s: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    // Quaternion math\r\n    const { x, y, z, w } = q;\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n\r\n    const { x: sx, y: sy, z: sz } = s;\r\n    const { x: vx, y: vy, z: vz } = v;\r\n\r\n    return out.set(\r\n        (1 - (yy + zz)) * sx,\r\n        (xy + wz) * sx,\r\n        (xz - wy) * sx,\r\n        0,\r\n        (xy - wz) * sy,\r\n        (1 - (xx + zz)) * sy,\r\n        (yz + wx) * sy,\r\n        0,\r\n        (xz + wy) * sz,\r\n        (yz - wx) * sz,\r\n        (1 - (xx + yy)) * sz,\r\n        0,\r\n        vx,\r\n        vy,\r\n        vz,\r\n        1\r\n    );\r\n}\r\n","import { IQuaternionLike } from '../quaternion/IQuaternionLike';\r\nimport { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\n//  Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n\r\nexport function FromRotationTranslationScaleOrigin (q: IQuaternionLike, v: IVec3Like, s: IVec3Like, o: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    // Quaternion math\r\n    const { x, y, z, w } = q;\r\n\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n\r\n    const { x: sx, y: sy, z: sz } = s;\r\n    const { x: ox, y: oy, z: oz } = o;\r\n    const { x: vx, y: vy, z: vz } = v;\r\n\r\n    const out0 = (1 - (yy + zz)) * sx;\r\n    const out1 = (xy + wz) * sx;\r\n    const out2 = (xz - wy) * sx;\r\n    const out4 = (xy - wz) * sy;\r\n    const out5 = (1 - (xx + zz)) * sy;\r\n    const out6 = (yz + wx) * sy;\r\n    const out8 = (xz + wy) * sz;\r\n    const out9 = (yz - wx) * sz;\r\n    const out10 = (1 - (xx + yy)) * sz;\r\n\r\n    return out.set(\r\n        out0,\r\n        out1,\r\n        out2,\r\n        0,\r\n        out4,\r\n        out5,\r\n        out6,\r\n        0,\r\n        out8,\r\n        out9,\r\n        out10,\r\n        0,\r\n        vx + ox - (out0 * ox + out4 * oy + out8 * oz),\r\n        vy + oy - (out1 * ox + out5 * oy + out9 * oz),\r\n        vz + oz - (out2 * ox + out6 * oy + out10 * oz),\r\n        1\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function FromRotationXYTranslation (rotation: IVec3Like, position: IVec3Like, translateFirst: boolean = true, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const { x, y, z } = position;\r\n\r\n    const sx = Math.sin(rotation.x);\r\n    const cx = Math.cos(rotation.x);\r\n\r\n    const sy = Math.sin(rotation.y);\r\n    const cy = Math.cos(rotation.y);\r\n\r\n    let a30 = x;\r\n    let a31 = y;\r\n    let a32 = z;\r\n\r\n    //  Rotate X\r\n\r\n    const b21 = -sx;\r\n\r\n    //  Rotate Y\r\n\r\n    const c01 = 0 - b21 * sy;\r\n\r\n    const c02 = 0 - cx * sy;\r\n\r\n    const c21 = b21 * cy;\r\n\r\n    const c22 = cx * cy;\r\n\r\n    //  Translate\r\n    if (!translateFirst)\r\n    {\r\n        // a30 = cy * x + 0 * y + sy * z;\r\n        a30 = cy * x + sy * z;\r\n        a31 = c01 * x + cx * y + c21 * z;\r\n        a32 = c02 * x + sx * y + c22 * z;\r\n    }\r\n\r\n    return out.set(\r\n        cy,\r\n        c01,\r\n        c02,\r\n        0,\r\n        0,\r\n        cx,\r\n        sx,\r\n        0,\r\n        sy,\r\n        c21,\r\n        c22,\r\n        0,\r\n        a30,\r\n        a31,\r\n        a32,\r\n        1\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function FromScaling (vec3: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const { x, y, z } = vec3;\r\n\r\n    return out.set(\r\n        x, 0, 0, 0,\r\n        0, y, 0, 0,\r\n        0, 0, z, 0,\r\n        0, 0, 0, 1\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function FromTranslation (vec3: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const { x, y, z } = vec3;\r\n\r\n    return out.set(\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        x, y, z, 1\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function FromXRotation (angle: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n\r\n    return out.set(\r\n        1, 0, 0, 0,\r\n        0, c, s, 0,\r\n        0, -s, c, 0,\r\n        0, 0, 0, 1\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function FromYRotation (angle: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n\r\n    return out.set(\r\n        c, 0, -s, 0,\r\n        0, 1, 0, 0,\r\n        s, 0, c, 0,\r\n        0, 0, 0, 1\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function FromZRotation (angle: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n\r\n    return out.set(\r\n        c, s, 0, 0,\r\n        -s, c, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Generates a frustum matrix with the given bounds\r\n\r\nexport function Frustum (left: number, right: number, bottom: number, top: number, near: number, far: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const rl = 1 / (right - left);\r\n    const tb = 1 / (top - bottom);\r\n    const nf = 1 / (near - far);\r\n\r\n    return out.set(\r\n        near * 2 * rl,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        near * 2 * tb,\r\n        0,\r\n        0,\r\n        (right + left) * rl,\r\n        (top + bottom) * tb,\r\n        (far + near) * nf,\r\n        -1,\r\n        0,\r\n        0,\r\n        far * near * 2 * nf,\r\n        0\r\n    );\r\n}\r\n","export class Vec3\r\n{\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, z: number = 0)\r\n    {\r\n        this.set(x, y, z);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, z: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        return this;\r\n    }\r\n\r\n    toArray (dst: Float32List = [], index: number = 0): Float32List\r\n    {\r\n        const { x, y, z } = this;\r\n\r\n        dst[ index ] = x;\r\n        dst[ index + 1 ] = y;\r\n        dst[ index + 2 ] = z;\r\n\r\n        return dst;\r\n    }\r\n\r\n    fromArray (src: Float32List, index: number = 0): this\r\n    {\r\n        return this.set(\r\n            src[ index ],\r\n            src[ index + 1 ],\r\n            src[ index + 2 ]\r\n        );\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        const { x, y, z } = this;\r\n\r\n        return `{ x=${x}, y=${y}, z=${z} }`;\r\n    }\r\n}\r\n","import { IMatrix4 } from './IMatrix4';\r\nimport { Vec3 } from '../vec3/Vec3';\r\n\r\nexport function GetScaling (matrix: IMatrix4, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22 ] = matrix.data;\r\n\r\n    return out.set(\r\n        Math.hypot(m00, m01, m02),\r\n        Math.hypot(m10, m11, m12),\r\n        Math.hypot(m20, m21, m22)\r\n    );\r\n}\r\n","import { NOOP } from '../../utils';\r\n\r\nexport class Quaternion\r\n{\r\n    private _x: number;\r\n    private _y: number;\r\n    private _z: number;\r\n    private _w: number;\r\n\r\n    onChange: (quat: Quaternion) => void;\r\n\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, w: number = 1)\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._w = w;\r\n\r\n        this.onChange = NOOP;\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, z: number = 0, w: number = 1): this\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._w = w;\r\n\r\n        this.onChange(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    set x (value: number)\r\n    {\r\n        const prev = this._x;\r\n\r\n        this._x = value;\r\n\r\n        if (value !== prev)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get x (): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    set y (value: number)\r\n    {\r\n        const prev = this._y;\r\n\r\n        this._y = value;\r\n\r\n        if (value !== prev)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get y (): number\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    set z (value: number)\r\n    {\r\n        const prev = this._z;\r\n\r\n        this._z = value;\r\n\r\n        if (value !== prev)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get z (): number\r\n    {\r\n        return this._z;\r\n    }\r\n\r\n    set w (value: number)\r\n    {\r\n        const prev = this._w;\r\n\r\n        this._w = value;\r\n\r\n        if (value !== prev)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get w (): number\r\n    {\r\n        return this._w;\r\n    }\r\n\r\n    toArray (dst: Float32List = [], index: number = 0): Float32List\r\n    {\r\n        const { x, y, z, w } = this;\r\n\r\n        dst[ index ] = x;\r\n        dst[ index + 1 ] = y;\r\n        dst[ index + 2 ] = z;\r\n        dst[ index + 3 ] = w;\r\n\r\n        return dst;\r\n    }\r\n\r\n    fromArray (src: Float32List, index: number = 0): this\r\n    {\r\n        return this.set(\r\n            src[ index ],\r\n            src[ index + 1 ],\r\n            src[ index + 2 ],\r\n            src[ index + 3 ]\r\n        );\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.onChange = NOOP;\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        const { x, y, z, w } = this;\r\n\r\n        return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\r\n    }\r\n}\r\n","import { GetScaling } from './GetScaling';\r\nimport { IMatrix4 } from './IMatrix4';\r\nimport { Quaternion } from '../quaternion/Quaternion';\r\n\r\nexport function GetRotation (matrix: IMatrix4, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const scaling = GetScaling(matrix);\r\n\r\n    const is1 = 1 / scaling.x;\r\n    const is2 = 1 / scaling.y;\r\n    const is3 = 1 / scaling.z;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22 ] = matrix.data;\r\n\r\n    const sm11 = m00 * is1;\r\n    const sm12 = m01 * is2;\r\n    const sm13 = m02 * is3;\r\n    const sm21 = m10 * is1;\r\n    const sm22 = m11 * is2;\r\n    const sm23 = m12 * is3;\r\n    const sm31 = m20 * is1;\r\n    const sm32 = m21 * is2;\r\n    const sm33 = m22 * is3;\r\n\r\n    const trace = sm11 + sm22 + sm33;\r\n\r\n    let S = 0;\r\n\r\n    if (trace > 0)\r\n    {\r\n        S = Math.sqrt(trace + 1) * 2;\r\n\r\n        return out.set(\r\n            (sm23 - sm32) / S,\r\n            (sm31 - sm13) / S,\r\n            (sm12 - sm21) / S,\r\n            0.25 * S\r\n        );\r\n    }\r\n    else if (sm11 > sm22 && sm11 > sm33)\r\n    {\r\n        S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\r\n\r\n        return out.set(\r\n            0.25 * S,\r\n            (sm12 + sm21) / S,\r\n            (sm31 + sm13) / S,\r\n            (sm23 - sm32) / S\r\n        );\r\n    }\r\n    else if (sm22 > sm33)\r\n    {\r\n        S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\r\n\r\n        return out.set(\r\n            (sm12 + sm21) / S,\r\n            0.25 * S,\r\n            (sm23 + sm32) / S,\r\n            (sm31 - sm13) / S\r\n        );\r\n    }\r\n    else\r\n    {\r\n        S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\r\n\r\n        return out.set(\r\n            (sm31 + sm13) / S,\r\n            (sm23 + sm32) / S,\r\n            0.25 * S,\r\n            (sm12 - sm21) / S\r\n        );\r\n    }\r\n}\r\n","import { IMatrix4 } from './IMatrix4';\r\nimport { Vec3 } from '../vec3/Vec3';\r\n\r\nexport function GetTranslation (matrix: IMatrix4, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const data = matrix.data;\r\n\r\n    return out.set(data[12], data[13], data[14]);\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function Identity (matrix: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    return matrix.set(\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function Invert (matrix: Matrix4, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33 ] = matrix.data;\r\n\r\n    // the inverse of a Matrix is the transpose of cofactor matrix divided by the determinant\r\n    const det22x33 = m22 * m33 - m32 * m23;\r\n    const det21x33 = m21 * m33 - m31 * m23;\r\n    const det21x32 = m21 * m32 - m31 * m22;\r\n    const det20x33 = m20 * m33 - m30 * m23;\r\n    const det20x32 = m20 * m32 - m22 * m30;\r\n    const det20x31 = m20 * m31 - m30 * m21;\r\n\r\n    const cofact00 = +(m11 * det22x33 - m12 * det21x33 + m13 * det21x32);\r\n    const cofact01 = -(m10 * det22x33 - m12 * det20x33 + m13 * det20x32);\r\n    const cofact02 = +(m10 * det21x33 - m11 * det20x33 + m13 * det20x31);\r\n    const cofact03 = -(m10 * det21x32 - m11 * det20x32 + m12 * det20x31);\r\n\r\n    const det = m00 * cofact00 + m01 * cofact01 + m02 * cofact02 + m03 * cofact03;\r\n\r\n    if (det === 0)\r\n    {\r\n        //  Not invertible\r\n        return out;\r\n    }\r\n\r\n    const detInv = 1 / det;\r\n\r\n    const det12x33 = m12 * m33 - m32 * m13;\r\n    const det11x33 = m11 * m33 - m31 * m13;\r\n    const det11x32 = m11 * m32 - m31 * m12;\r\n    const det10x33 = m10 * m33 - m30 * m13;\r\n    const det10x32 = m10 * m32 - m30 * m12;\r\n    const det10x31 = m10 * m31 - m30 * m11;\r\n    const det12x23 = m12 * m23 - m22 * m13;\r\n    const det11x23 = m11 * m23 - m21 * m13;\r\n    const det11x22 = m11 * m22 - m21 * m12;\r\n    const det10x23 = m10 * m23 - m20 * m13;\r\n    const det10x22 = m10 * m22 - m20 * m12;\r\n    const det10x21 = m10 * m21 - m20 * m11;\r\n\r\n    const cofact10 = -(m01 * det22x33 - m02 * det21x33 + m03 * det21x32);\r\n    const cofact11 = +(m00 * det22x33 - m02 * det20x33 + m03 * det20x32);\r\n    const cofact12 = -(m00 * det21x33 - m01 * det20x33 + m03 * det20x31);\r\n    const cofact13 = +(m00 * det21x32 - m01 * det20x32 + m02 * det20x31);\r\n\r\n    const cofact20 = +(m01 * det12x33 - m02 * det11x33 + m03 * det11x32);\r\n    const cofact21 = -(m00 * det12x33 - m02 * det10x33 + m03 * det10x32);\r\n    const cofact22 = +(m00 * det11x33 - m01 * det10x33 + m03 * det10x31);\r\n    const cofact23 = -(m00 * det11x32 - m01 * det10x32 + m02 * det10x31);\r\n\r\n    const cofact30 = -(m01 * det12x23 - m02 * det11x23 + m03 * det11x22);\r\n    const cofact31 = +(m00 * det12x23 - m02 * det10x23 + m03 * det10x22);\r\n    const cofact32 = -(m00 * det11x23 - m01 * det10x23 + m03 * det10x21);\r\n    const cofact33 = +(m00 * det11x22 - m01 * det10x22 + m02 * det10x21);\r\n\r\n    return out.set(\r\n        cofact00 * detInv, cofact10 * detInv, cofact20 * detInv, cofact30 * detInv,\r\n        cofact01 * detInv, cofact11 * detInv, cofact21 * detInv, cofact31 * detInv,\r\n        cofact02 * detInv, cofact12 * detInv, cofact22 * detInv, cofact32 * detInv,\r\n        cofact03 * detInv, cofact13 * detInv, cofact23 * detInv, cofact33 * detInv\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Identity } from './Identity';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\n// Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n// If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n\r\nexport function LookAt (eye: IVec3Like, center: IVec3Like, up: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const { x: eyex, y: eyey, z: eyez } = eye;\r\n    const { x: upx, y: upy, z: upz } = up;\r\n    const { x: centerx, y: centery, z: centerz } = center;\r\n\r\n    if (Math.abs(eyex - centerx) < 0.00001 && Math.abs(eyey - centery) < 0.00001 && Math.abs(eyez - centerz) < 0.00001)\r\n    {\r\n        return Identity(out);\r\n    }\r\n\r\n    let z0 = eyex - centerx;\r\n    let z1 = eyey - centery;\r\n    let z2 = eyez - centerz;\r\n\r\n    let len = 1 / Math.hypot(z0, z1, z2);\r\n\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n\r\n    let x0 = upy * z2 - upz * z1;\r\n    let x1 = upz * z0 - upx * z2;\r\n    let x2 = upx * z1 - upy * z0;\r\n\r\n    len = Math.hypot(x0, x1, x2);\r\n\r\n    if (!len)\r\n    {\r\n        x0 = 0;\r\n        x1 = 0;\r\n        x2 = 0;\r\n    }\r\n    else\r\n    {\r\n        len = 1 / len;\r\n        x0 *= len;\r\n        x1 *= len;\r\n        x2 *= len;\r\n    }\r\n\r\n    let y0 = z1 * x2 - z2 * x1;\r\n    let y1 = z2 * x0 - z0 * x2;\r\n    let y2 = z0 * x1 - z1 * x0;\r\n\r\n    len = Math.hypot(y0, y1, y2);\r\n\r\n    if (!len)\r\n    {\r\n        y0 = 0;\r\n        y1 = 0;\r\n        y2 = 0;\r\n    }\r\n    else\r\n    {\r\n        len = 1 / len;\r\n        y0 *= len;\r\n        y1 *= len;\r\n        y2 *= len;\r\n    }\r\n\r\n    return out.set(\r\n        x0,\r\n        y0,\r\n        z0,\r\n        0,\r\n        x1,\r\n        y1,\r\n        z1,\r\n        0,\r\n        x2,\r\n        y2,\r\n        z2,\r\n        0,\r\n        -(x0 * eyex + x1 * eyey + x2 * eyez),\r\n        -(y0 * eyex + y1 * eyey + y2 * eyez),\r\n        -(z0 * eyex + z1 * eyey + z2 * eyez),\r\n        1\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Multiplies two mat4s\r\n\r\nexport function Multiply (a: Matrix4, b: Matrix4, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = a.data;\r\n    const [ b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33 ] = b.data;\r\n\r\n    return out.set(\r\n        b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n        b01 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n        b02 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n        b03 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n\r\n        b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n        b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n        b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n        b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n\r\n        b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n        b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n        b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n        b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n\r\n        b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n        b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n        b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n        b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Multiply each element of the matrix by a scalar.\r\n\r\nexport function MultiplyScalar (matrix: Matrix4, scalar: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = matrix.data;\r\n\r\n    return out.set(\r\n        a00 * scalar,\r\n        a01 * scalar,\r\n        a02 * scalar,\r\n        a03 * scalar,\r\n        a10 * scalar,\r\n        a11 * scalar,\r\n        a12 * scalar,\r\n        a13 * scalar,\r\n        a20 * scalar,\r\n        a21 * scalar,\r\n        a22 * scalar,\r\n        a23 * scalar,\r\n        a30 * scalar,\r\n        a31 * scalar,\r\n        a32 * scalar,\r\n        a33 * scalar\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n\r\nexport function MultiplyScalarAndAdd (a: Matrix4, b: Matrix4, scalar: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = a.data;\r\n    const [ b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33 ] = b.data;\r\n\r\n    return out.set(\r\n        a00 + b00 * scalar,\r\n        a01 + b01 * scalar,\r\n        a02 + b02 * scalar,\r\n        a03 + b03 * scalar,\r\n        a10 + b10 * scalar,\r\n        a11 + b11 * scalar,\r\n        a12 + b12 * scalar,\r\n        a13 + b13 * scalar,\r\n        a20 + b20 * scalar,\r\n        a21 + b21 * scalar,\r\n        a22 + b22 * scalar,\r\n        a23 + b23 * scalar,\r\n        a30 + b30 * scalar,\r\n        a31 + b31 * scalar,\r\n        a32 + b32 * scalar,\r\n        a33 + b33 * scalar\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Generates a orthogonal projection matrix with the given bounds\r\n\r\nexport function Ortho (left: number, right: number, bottom: number, top: number, near: number, far: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const lr = 1 / (left - right);\r\n    const bt = 1 / (bottom - top);\r\n    const nf = 1 / (near - far);\r\n\r\n    return out.set(\r\n        -2 * lr,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        -2 * bt,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        2 * nf,\r\n        0,\r\n        (left + right) * lr,\r\n        (top + bottom) * bt,\r\n        (far + near) * nf,\r\n        1\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n//  Generates a perspective projection matrix with the given bounds.\r\n//  Passing null/undefined/no value for far will generate infinite projection matrix.\r\n\r\nexport function Perspective (fovY: number, aspect: number, near: number, far: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const f = 1 / Math.tan(fovY / 2);\r\n\r\n    let m22 = -1;\r\n    let m32 = -2 * near;\r\n\r\n    if (far !== null && far !== Infinity)\r\n    {\r\n        const nf = 1 / (near - far);\r\n        m22 = (far + near) * nf;\r\n        m32 = 2 * far * near * nf;\r\n    }\r\n\r\n    return out.set(\r\n        f / aspect,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        f,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        m22,\r\n        -1,\r\n        0,\r\n        0,\r\n        m32,\r\n        0\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n//  Generates a perspective projection matrix with the given bounds.\r\n//  Passing null/undefined/no value for far will generate infinite projection matrix.\r\n\r\nexport type FOV = {\r\n    upDegrees: number,\r\n    downDegrees: number,\r\n    leftDegrees: number,\r\n    rightDegrees: number\r\n};\r\n\r\nexport function PerspectiveFromFieldOfView (fov: FOV, near: number, far: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const upTan = Math.tan((fov.upDegrees * Math.PI) / 180);\r\n    const downTan = Math.tan((fov.downDegrees * Math.PI) / 180);\r\n    const leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180);\r\n    const rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180);\r\n    const xScale = 2 / (leftTan + rightTan);\r\n    const yScale = 2 / (upTan + downTan);\r\n\r\n    return out.set(\r\n        xScale,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        yScale,\r\n        0,\r\n        0,\r\n        -((leftTan - rightTan) * xScale * 0.5),\r\n        (upTan - downTan) * yScale * 0.5,\r\n        far / (near - far),\r\n        -1,\r\n        0,\r\n        0,\r\n        (far * near) / (near - far),\r\n        0\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function Rotate (matrix: Matrix4, angle: number, axis: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    let { x, y, z } = axis;\r\n\r\n    let len = Math.hypot(x, y, z);\r\n\r\n    if (len < 0.00001)\r\n    {\r\n        return null;\r\n    }\r\n\r\n    len = 1 / len;\r\n\r\n    x *= len;\r\n    y *= len;\r\n    z *= len;\r\n\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n    const t = 1 - c;\r\n\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = matrix.data;\r\n\r\n    // Construct the elements of the rotation matrix\r\n    const b00 = x * x * t + c;\r\n    const b01 = y * x * t + z * s;\r\n    const b02 = z * x * t - y * s;\r\n    const b10 = x * y * t - z * s;\r\n    const b11 = y * y * t + c;\r\n    const b12 = z * y * t + x * s;\r\n    const b20 = x * z * t + y * s;\r\n    const b21 = y * z * t - x * s;\r\n    const b22 = z * z * t + c;\r\n\r\n    // Perform rotation-specific matrix multiplication\r\n\r\n    return out.set(\r\n        a00 * b00 + a10 * b01 + a20 * b02,\r\n        a01 * b00 + a11 * b01 + a21 * b02,\r\n        a02 * b00 + a12 * b01 + a22 * b02,\r\n        a03 * b00 + a13 * b01 + a23 * b02,\r\n        a00 * b10 + a10 * b11 + a20 * b12,\r\n        a01 * b10 + a11 * b11 + a21 * b12,\r\n        a02 * b10 + a12 * b11 + a22 * b12,\r\n        a03 * b10 + a13 * b11 + a23 * b12,\r\n        a00 * b20 + a10 * b21 + a20 * b22,\r\n        a01 * b20 + a11 * b21 + a21 * b22,\r\n        a02 * b20 + a12 * b21 + a22 * b22,\r\n        a03 * b20 + a13 * b21 + a23 * b22,\r\n        a30,\r\n        a31,\r\n        a32,\r\n        a33\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Rotates a matrix by the given angle around the X axis\r\n\r\nexport function RotateX (matrix: Matrix4, angle: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = matrix.data;\r\n\r\n    return out.set(\r\n        a00,\r\n        a01,\r\n        a02,\r\n        a03,\r\n        a10 * c + a20 * s,\r\n        a11 * c + a21 * s,\r\n        a12 * c + a22 * s,\r\n        a13 * c + a23 * s,\r\n        a20 * c - a10 * s,\r\n        a21 * c - a11 * s,\r\n        a22 * c - a12 * s,\r\n        a23 * c - a13 * s,\r\n        a30,\r\n        a31,\r\n        a32,\r\n        a33\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Rotates a matrix by the given angle around the Y axis\r\n\r\nexport function RotateY (matrix: Matrix4, angle: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = matrix.data;\r\n\r\n    return out.set(\r\n        a00 * c - a20 * s,\r\n        a01 * c - a21 * s,\r\n        a02 * c - a22 * s,\r\n        a03 * c - a23 * s,\r\n        a10,\r\n        a11,\r\n        a12,\r\n        a13,\r\n        a00 * s + a20 * c,\r\n        a01 * s + a21 * c,\r\n        a02 * s + a22 * c,\r\n        a03 * s + a23 * c,\r\n        a30,\r\n        a31,\r\n        a32,\r\n        a33\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Rotates a matrix by the given angle around the Z axis\r\n\r\nexport function RotateZ (matrix: Matrix4, angle: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = matrix.data;\r\n\r\n    return out.set(\r\n        a00 * c + a10 * s,\r\n        a01 * c + a11 * s,\r\n        a02 * c + a12 * s,\r\n        a03 * c + a13 * s,\r\n        a10 * c - a00 * s,\r\n        a11 * c - a01 * s,\r\n        a12 * c - a02 * s,\r\n        a13 * c - a03 * s,\r\n        a20,\r\n        a21,\r\n        a22,\r\n        a23,\r\n        a30,\r\n        a31,\r\n        a32,\r\n        a33\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\n// Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n\r\nexport function Scale (matrix: Matrix4, v: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33 ] = matrix.data;\r\n    const { x, y, z } = v;\r\n\r\n    return out.set(\r\n        m00 * x,\r\n        m01 * x,\r\n        m02 * x,\r\n        m03 * x,\r\n        m10 * y,\r\n        m11 * y,\r\n        m12 * y,\r\n        m13 * y,\r\n        m20 * z,\r\n        m21 * z,\r\n        m22 * z,\r\n        m23 * z,\r\n        m30,\r\n        m31,\r\n        m32,\r\n        m33\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function SetTranslation (matrix: Matrix4, vec3: IVec3Like): Matrix4\r\n{\r\n    const data = matrix.data;\r\n    const { x, y, z } = vec3;\r\n\r\n    data[12] = x;\r\n    data[13] = y;\r\n    data[14] = z;\r\n\r\n    matrix.onChange(matrix);\r\n\r\n    return matrix;\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function SetTranslationFromFloats (matrix: Matrix4, x: number, y: number, z: number): Matrix4\r\n{\r\n    const data = matrix.data;\r\n\r\n    data[12] = x;\r\n    data[13] = y;\r\n    data[14] = z;\r\n\r\n    matrix.onChange(matrix);\r\n\r\n    return matrix;\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\n// Subtracts matrix b from matrix a\r\n\r\nexport function Subtract (a: Matrix4, b: Matrix4, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = a.data;\r\n    const [ b00, b01, b02, b03, b10, b11, b12, b13, b20, b21, b22, b23, b30, b31, b32, b33 ] = b.data;\r\n\r\n    return out.set(\r\n        a00 - b00,\r\n        a01 - b01,\r\n        a02 - b02,\r\n        a03 - b03,\r\n        a10 - b10,\r\n        a11 - b11,\r\n        a12 - b12,\r\n        a13 - b13,\r\n        a20 - b20,\r\n        a21 - b21,\r\n        a22 - b22,\r\n        a23 - b23,\r\n        a30 - b30,\r\n        a31 - b31,\r\n        a32 - b32,\r\n        a33 - b33\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\n// Generates a matrix that makes something look at something else.\r\n\r\nexport function TargetTo (eye: IVec3Like, target: IVec3Like, up: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const { x: eyex, y: eyey, z: eyez } = eye;\r\n    const { x: upx, y: upy, z: upz } = up;\r\n    const { x: targetx, y: targety, z: targetz } = target;\r\n\r\n    let z0 = eyex - targetx;\r\n    let z1 = eyey - targety;\r\n    let z2 = eyez - targetz;\r\n\r\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\r\n\r\n    if (len > 0)\r\n    {\r\n        len = 1 / Math.sqrt(len);\r\n        z0 *= len;\r\n        z1 *= len;\r\n        z2 *= len;\r\n    }\r\n\r\n    let x0 = upy * z2 - upz * z1;\r\n    let x1 = upz * z0 - upx * z2;\r\n    let x2 = upx * z1 - upy * z0;\r\n\r\n    len = x0 * x0 + x1 * x1 + x2 * x2;\r\n\r\n    if (len > 0)\r\n    {\r\n        len = 1 / Math.sqrt(len);\r\n        x0 *= len;\r\n        x1 *= len;\r\n        x2 *= len;\r\n    }\r\n\r\n    return out.set(\r\n        x0,\r\n        x1,\r\n        x2,\r\n        0,\r\n        z1 * x2 - z2 * x1,\r\n        z2 * x0 - z0 * x2,\r\n        z0 * x1 - z1 * x0,\r\n        0,\r\n        z0,\r\n        z1,\r\n        z2,\r\n        0,\r\n        eyex,\r\n        eyey,\r\n        eyez,\r\n        1\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Matrix4 } from './Matrix4';\r\n\r\nexport function Translate (matrix: Matrix4, vec3: IVec3Like, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const { x, y, z } = vec3;\r\n\r\n    const data = matrix.data;\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = data;\r\n\r\n    if (matrix === out)\r\n    {\r\n        data[12] = a00 * x + a10 * y + a20 * z + a30;\r\n        data[13] = a01 * x + a11 * y + a21 * z + a31;\r\n        data[14] = a02 * x + a12 * y + a22 * z + a32;\r\n        data[15] = a03 * x + a13 * y + a23 * z + a33;\r\n    }\r\n    else\r\n    {\r\n        out.set(\r\n            a00,\r\n            a01,\r\n            a02,\r\n            a03,\r\n            a10,\r\n            a11,\r\n            a12,\r\n            a13,\r\n            a20,\r\n            a21,\r\n            a22,\r\n            a23,\r\n            a00 * x + a10 * y + a20 * z + a30,\r\n            a01 * x + a11 * y + a21 * z + a31,\r\n            a02 * x + a12 * y + a22 * z + a32,\r\n            a03 * x + a13 * y + a23 * z + a33\r\n        );\r\n    }\r\n\r\n    return out;\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function TranslateFromFloats (matrix: Matrix4, x: number, y: number, z: number, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const data = matrix.data;\r\n    const [ a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33 ] = data;\r\n\r\n    if (matrix === out)\r\n    {\r\n        data[12] = a00 * x + a10 * y + a20 * z + a30;\r\n        data[13] = a01 * x + a11 * y + a21 * z + a31;\r\n        data[14] = a02 * x + a12 * y + a22 * z + a32;\r\n        data[15] = a03 * x + a13 * y + a23 * z + a33;\r\n    }\r\n    else\r\n    {\r\n        out.set(\r\n            a00,\r\n            a01,\r\n            a02,\r\n            a03,\r\n            a10,\r\n            a11,\r\n            a12,\r\n            a13,\r\n            a20,\r\n            a21,\r\n            a22,\r\n            a23,\r\n            a00 * x + a10 * y + a20 * z + a30,\r\n            a01 * x + a11 * y + a21 * z + a31,\r\n            a02 * x + a12 * y + a22 * z + a32,\r\n            a03 * x + a13 * y + a23 * z + a33\r\n        );\r\n    }\r\n\r\n    return out;\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function Transpose (matrix: Matrix4, out: Matrix4 = new Matrix4()): Matrix4\r\n{\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33 ] = matrix.data;\r\n\r\n    return out.set(\r\n        m00,\r\n        m10,\r\n        m20,\r\n        m30,\r\n        m01,\r\n        m11,\r\n        m21,\r\n        m31,\r\n        m02,\r\n        m12,\r\n        m22,\r\n        m32,\r\n        m03,\r\n        m13,\r\n        m23,\r\n        m33\r\n    );\r\n}\r\n","import { Matrix4 } from './Matrix4';\r\n\r\nexport function Zero (matrix: Matrix4): Matrix4\r\n{\r\n    return matrix.set(\r\n        0, 0, 0, 0,\r\n        0, 0, 0, 0,\r\n        0, 0, 0, 0,\r\n        0, 0, 0, 0\r\n    );\r\n}\r\n","//  A Matrix2D contains six elements in a short-form of the 3x3 Matrix, with the last column ignored.\r\n\r\n//  |----|----|----|\r\n//  | a  | b  | 0  |\r\n//  |----|----|----|\r\n//  | c  | d  | 0  |\r\n//  |----|----|----|\r\n//  | tx | ty | 1  |\r\n//  |----|----|----|\r\n\r\nexport class Matrix2D\r\n{\r\n    a: number; // element 0\r\n    b: number; // element 1\r\n    c: number; // element 2\r\n    d: number; // element 3\r\n    tx: number; // element 4\r\n    ty: number; // element 5\r\n\r\n    /**\r\n     * Creates an instance of Matrix2D.\r\n     *\r\n     * @param {number} [a=1] - X scale.\r\n     * @param {number} [b=0] - X skew.\r\n     * @param {number} [c=0] - Y skew.\r\n     * @param {number} [d=1] - Y scale.\r\n     * @param {number} [tx=0] - X translation\r\n     * @param {number} [ty=0] - Y translation\r\n     * @memberof Matrix2D\r\n     */\r\n    constructor (a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0)\r\n    {\r\n        this.set(a, b, c, d, tx, ty);\r\n    }\r\n\r\n    set (a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0): this\r\n    {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n\r\n        return this;\r\n    }\r\n\r\n    identity (): this\r\n    {\r\n        return this.set();\r\n    }\r\n\r\n    toArray (): number[]\r\n    {\r\n        const  { a, b, c, d, tx, ty } = this;\r\n\r\n        return [ a, b, c, d, tx, ty ];\r\n    }\r\n\r\n    fromArray (src: number[]): Matrix2D\r\n    {\r\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Checks if a given point is inside a Rectangle's bounds.\r\n *\r\n * @function Phaser.Geom.Rectangle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to check.\r\n * @param {number} x - The X coordinate of the point to check.\r\n * @param {number} y - The Y coordinate of the point to check.\r\n *\r\n * @return {boolean} `true` if the point is within the Rectangle's bounds, otherwise `false`.\r\n */\r\nexport function Contains (rect: IRectangle, x: number, y: number): boolean\r\n{\r\n    if (rect.width <= 0 || rect.height <= 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return (rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\n\r\nexport class Rectangle\r\n{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, width: number = 0, height: number = 0)\r\n    {\r\n        this.set(x, y, width, height);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, width: number = 0, height: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains (x: number, y: number): boolean\r\n    {\r\n        return Contains(this, x, y);\r\n    }\r\n\r\n    set right (value: number)\r\n    {\r\n        if (value <= this.x)\r\n        {\r\n            this.width = 0;\r\n        }\r\n        else\r\n        {\r\n            this.width = value - this.x;\r\n        }\r\n    }\r\n\r\n    get right (): number\r\n    {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    set bottom (value: number)\r\n    {\r\n        if (value <= this.y)\r\n        {\r\n            this.height = 0;\r\n        }\r\n        else\r\n        {\r\n            this.height = value - this.y;\r\n        }\r\n    }\r\n\r\n    get bottom (): number\r\n    {\r\n        return this.y + this.height;\r\n    }\r\n}\r\n","export class Vec2\r\n{\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor (x: number = 0, y: number = 0)\r\n    {\r\n        this.set(x, y);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    toArray (dst: Float32List = [], index: number = 0): Float32List\r\n    {\r\n        const { x, y } = this;\r\n\r\n        dst[ index ] = x;\r\n        dst[ index + 1 ] = y;\r\n\r\n        return dst;\r\n    }\r\n\r\n    fromArray (src: Float32List, index: number = 0): this\r\n    {\r\n        return this.set(\r\n            src[ index ],\r\n            src[ index + 1 ]\r\n        );\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        const { x, y } = this;\r\n\r\n        return `{ x=${x}, y=${y} }`;\r\n    }\r\n}\r\n","import { NOOP } from '../../utils/NOOP';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport type Vec2CallbackType = (vec2: Vec2Callback) => void;\r\n\r\nexport class Vec2Callback extends Vec2\r\n{\r\n    private _x: number;\r\n    private _y: number;\r\n\r\n    onChange: Vec2CallbackType = NOOP;\r\n\r\n    constructor (onChange: Vec2CallbackType = NOOP, x: number = 0, y: number = 0)\r\n    {\r\n        super(x, y);\r\n\r\n        this.onChange = onChange;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.onChange = NOOP;\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0): this\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n\r\n        this.onChange(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    get x (): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    set x (value: number)\r\n    {\r\n        const prev = this._x;\r\n\r\n        this._x = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get y (): number\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    set y (value: number)\r\n    {\r\n        const prev = this._y;\r\n\r\n        this._y = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Find the angle of a segment from (x1, y1) -> (x2, y2).\r\n *\r\n * @function Phaser.Math.Angle.Between\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The angle in radians.\r\n */\r\nexport function AngleBetween (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    return Math.atan2(y2 - y1, x2 - x1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Find the angle of a segment from (x1, y1) -> (x2, y2).\r\n *\r\n * The difference between this method and {@link Phaser.Math.Angle.Between} is that this assumes the y coordinate\r\n * travels down the screen.\r\n *\r\n * @function Phaser.Math.Angle.BetweenY\r\n * @since 3.0.0\r\n *\r\n * @param {number} x1 - The x coordinate of the first point.\r\n * @param {number} y1 - The y coordinate of the first point.\r\n * @param {number} x2 - The x coordinate of the second point.\r\n * @param {number} y2 - The y coordinate of the second point.\r\n *\r\n * @return {number} The angle in radians.\r\n */\r\nexport function AngleBetweenY (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    return Math.atan2(x2 - x1, y2 - y1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nexport const MATH_CONST = {\r\n\r\n    /**\r\n     * The value of PI * 2.\r\n     *\r\n     * @name Phaser.Math.PI2\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    PI2: Math.PI * 2,\r\n\r\n    /**\r\n     * The value of PI * 2.\r\n     *\r\n     * @name Phaser.Math.HALF_PI\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    HALF_PI: Math.PI * 0.5,\r\n\r\n    /**\r\n     * An epsilon value (1.0e-6)\r\n     *\r\n     * @name Phaser.Math.EPSILON\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    EPSILON: 1.0e-6,\r\n\r\n    /**\r\n     * For converting degrees to radians (PI / 180)\r\n     *\r\n     * @name Phaser.Math.DEG_TO_RAD\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    DEG_TO_RAD: Math.PI / 180,\r\n\r\n    /**\r\n     * For converting radians to degrees (180 / PI)\r\n     *\r\n     * @name Phaser.Math.RAD_TO_DEG\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\r\n    RAD_TO_DEG: 180 / Math.PI,\r\n\r\n    /**\r\n     * The minimum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     *\r\n     * @name Phaser.Math.MIN_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\r\n\r\n    /**\r\n     * The maximum safe integer this browser supports.\r\n     * We use a const for backward compatibility with Internet Explorer.\r\n     *\r\n     * @name Phaser.Math.MAX_SAFE_INTEGER\r\n     * @type {number}\r\n     * @since 3.21.0\r\n     */\r\n    MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\r\n\r\n};\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST as CONST } from '../const';\r\n\r\n/**\r\n * Takes an angle in Phasers default clockwise format and converts it so that\r\n * 0 is North, 90 is West, 180 is South and 270 is East,\r\n * therefore running counter-clockwise instead of clockwise.\r\n * \r\n * You can pass in the angle from a Game Object using:\r\n * \r\n * ```javascript\r\n * var converted = CounterClockwise(gameobject.rotation);\r\n * ```\r\n * \r\n * All values for this function are in radians.\r\n *\r\n * @function Phaser.Math.Angle.CounterClockwise\r\n * @since 3.16.0\r\n *\r\n * @param {number} angle - The angle to convert, in radians.\r\n *\r\n * @return {number} The converted angle, in radians.\r\n */\r\nexport function CounterClockwise (angle: number): number\r\n{\r\n    if (angle > Math.PI)\r\n    {\r\n        angle -= CONST.PI2;\r\n    }\r\n\r\n    return Math.abs((((angle + CONST.HALF_PI) % CONST.PI2) - CONST.PI2) % CONST.PI2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from '../const';\r\n\r\n/**\r\n * Normalize an angle to the [0, 2pi] range.\r\n *\r\n * @function Phaser.Math.Angle.Normalize\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to normalize, in radians.\r\n *\r\n * @return {number} The normalized angle, in radians.\r\n */\r\nexport function NormalizeAngle (angle: number): number\r\n{\r\n    angle = angle % MATH_CONST.PI2;\r\n\r\n    if (angle >= 0)\r\n    {\r\n        return angle;\r\n    }\r\n    else\r\n    {\r\n        return angle + MATH_CONST.PI2;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { NormalizeAngle } from './NormalizeAngle';\r\n\r\n/**\r\n * Reverse the given angle.\r\n *\r\n * @function Phaser.Math.Angle.Reverse\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to reverse, in radians.\r\n *\r\n * @return {number} The reversed angle, in radians.\r\n */\r\nexport function ReverseAngle (angle: number): number\r\n{\r\n    return NormalizeAngle(angle + Math.PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from '../const';\r\n\r\n/**\r\n * Rotates `currentAngle` towards `targetAngle`, taking the shortest rotation distance. The `lerp` argument is the amount to rotate by in this call.\r\n *\r\n * @function Phaser.Math.Angle.RotateTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} currentAngle - The current angle, in radians.\r\n * @param {number} targetAngle - The target angle to rotate to, in radians.\r\n * @param {number} [lerp=0.05] - The lerp value to add to the current angle.\r\n *\r\n * @return {number} The adjusted angle.\r\n */\r\nexport function RotateAngleTo (currentAngle: number, targetAngle: number, lerp: number = 0.05): number\r\n{\r\n    if (currentAngle === targetAngle)\r\n    {\r\n        return currentAngle;\r\n    }\r\n\r\n    if (Math.abs(targetAngle - currentAngle) <= lerp || Math.abs(targetAngle - currentAngle) >= (MATH_CONST.PI2 - lerp))\r\n    {\r\n        currentAngle = targetAngle;\r\n    }\r\n    else\r\n    {\r\n        if (Math.abs(targetAngle - currentAngle) > Math.PI)\r\n        {\r\n            if (targetAngle < currentAngle)\r\n            {\r\n                targetAngle += MATH_CONST.PI2;\r\n            }\r\n            else\r\n            {\r\n                targetAngle -= MATH_CONST.PI2;\r\n            }\r\n        }\r\n\r\n        if (targetAngle > currentAngle)\r\n        {\r\n            currentAngle += lerp;\r\n        }\r\n        else if (targetAngle < currentAngle)\r\n        {\r\n            currentAngle -= lerp;\r\n        }\r\n    }\r\n\r\n    return currentAngle;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Gets the shortest angle between `angle1` and `angle2`.\r\n *\r\n * Both angles must be in the range -180 to 180, which is the same clamped\r\n * range that `sprite.angle` uses, so you can pass in two sprite angles to\r\n * this method and get the shortest angle back between the two of them.\r\n *\r\n * The angle returned will be in the same range. If the returned angle is\r\n * greater than 0 then it's a counter-clockwise rotation, if < 0 then it's\r\n * a clockwise rotation.\r\n *\r\n * TODO: Wrap the angles in this function?\r\n *\r\n * @function Phaser.Math.Angle.ShortestBetween\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle1 - The first angle in the range -180 to 180.\r\n * @param {number} angle2 - The second angle in the range -180 to 180.\r\n *\r\n * @return {number} The shortest angle, in degrees. If greater than zero it's a counter-clockwise rotation.\r\n */\r\nexport function ShortestAngleBetween (angle1: number, angle2: number): number\r\n{\r\n    const difference = angle2 - angle1;\r\n\r\n    if (difference === 0)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    const times = Math.floor((difference - (-180)) / 360);\r\n\r\n    return difference - (times * 360);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Wrap the given `value` between `min` and `max.\r\n *\r\n * @function Phaser.Math.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to wrap.\r\n * @param {number} min - The minimum value.\r\n * @param {number} max - The maximum value.\r\n *\r\n * @return {number} The wrapped value.\r\n */\r\nexport function Wrap (value: number, min: number, max: number): number\r\n{\r\n    const range = max - min;\r\n\r\n    return (min + ((((value - min) % range) + range) % range));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Wrap } from '../Wrap';\r\n\r\n/**\r\n * Wrap an angle.\r\n *\r\n * Wraps the angle to a value in the range of -PI to PI.\r\n *\r\n * @function Phaser.Math.Angle.Wrap\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in radians.\r\n *\r\n * @return {number} The wrapped angle, in radians.\r\n */\r\nexport function WrapAngle (angle: number): number\r\n{\r\n    return Wrap(angle, -Math.PI, Math.PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Wrap } from '../Wrap';\r\n\r\n/**\r\n * Wrap an angle in degrees.\r\n *\r\n * Wraps the angle to a value in the range of -180 to 180.\r\n *\r\n * @function Phaser.Math.Angle.WrapDegrees\r\n * @since 3.0.0\r\n *\r\n * @param {number} angle - The angle to wrap, in degrees.\r\n *\r\n * @return {number} The wrapped angle, in degrees.\r\n */\r\nexport function WrapAngleDegrees (angle: number): number\r\n{\r\n    return Wrap(angle, -180, 180);\r\n}\r\n","import { GameInstance } from '../GameInstance';\r\nimport { ICamera } from './ICamera';\r\nimport { IRenderer } from '../renderer/IRenderer';\r\nimport { IWorld } from '../world/IWorld';\r\nimport { Identity } from '../math/mat4';\r\nimport { Matrix2D } from '../math/matrix2d/Matrix2D';\r\nimport { Matrix4 } from '../math/mat4/Matrix4';\r\nimport { Rectangle } from '../geom/rectangle/Rectangle';\r\nimport { Vec2Callback } from '../math/vec2/Vec2Callback';\r\nimport { WrapAngle } from '../math/angle';\r\n\r\nexport class Camera implements ICamera\r\n{\r\n    world: IWorld;\r\n    matrix: Matrix4;\r\n    renderer: IRenderer;\r\n    type: string;\r\n\r\n    width: number;\r\n    height: number;\r\n    bounds: Rectangle;\r\n\r\n    dirtyRender: boolean;\r\n    worldTransform: Matrix2D;\r\n\r\n    position: Vec2Callback;\r\n    scale: Vec2Callback;\r\n    origin: Vec2Callback;\r\n\r\n    private _rotation: number = 0;\r\n\r\n    constructor ()\r\n    {\r\n        this.type = 'Camera';\r\n\r\n        this.dirtyRender = true;\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.renderer = game.renderer;\r\n\r\n        this.matrix = Identity();\r\n\r\n        this.bounds = new Rectangle();\r\n\r\n        this.worldTransform = new Matrix2D();\r\n\r\n        this.position = new Vec2Callback(() => this.updateTransform(), 0, 0);\r\n        this.scale = new Vec2Callback(() => this.updateTransform(), 1, 1);\r\n        this.origin = new Vec2Callback(() => this.updateTransform(), 0.5, 0.5);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    updateTransform (): void\r\n    {\r\n        const matrix = this.matrix.data;\r\n\r\n        const px = this.position.x;\r\n        const py = this.position.y;\r\n\r\n        const sx = this.scale.x;\r\n        const sy = this.scale.y;\r\n\r\n        const ox = -px + (this.width * this.origin.x);\r\n        const oy = -py + (this.height * this.origin.y);\r\n\r\n        const z = Math.sin(this.rotation);\r\n        const w = Math.cos(this.rotation);\r\n\r\n        const z2 = z + z;\r\n        const zz = z * z2;\r\n        const wz = w * z2;\r\n\r\n        const out0 = (1 - zz) * sx;\r\n        const out1 = wz * sx;\r\n        const out4 = -wz * sy;\r\n        const out5 = (1 - zz) * sy;\r\n\r\n        matrix[0] = out0;\r\n        matrix[1] = out1;\r\n        matrix[4] = out4;\r\n        matrix[5] = out5;\r\n        matrix[12] = px + ox - (out0 * ox + out4 * oy);\r\n        matrix[13] = py + oy - (out1 * ox + out5 * oy);\r\n\r\n        this.worldTransform.set(\r\n            w * sx,\r\n            z * sx,\r\n            -z * sy,\r\n            w * sy,\r\n            -px,\r\n            -py\r\n        );\r\n\r\n        const bw = this.width * (1 / sx);\r\n        const bh = this.height * (1 / sy);\r\n\r\n        this.bounds.set(\r\n            ox - (bw / 2),\r\n            oy - (bh / 2),\r\n            bw,\r\n            bh\r\n        );\r\n\r\n        this.dirtyRender = true;\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        const width = this.renderer.width;\r\n        const height = this.renderer.height;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.bounds.set(0, 0, width, height);\r\n    }\r\n\r\n    set rotation (value: number)\r\n    {\r\n        if (value !== this._rotation)\r\n        {\r\n            this._rotation = WrapAngle(value);\r\n\r\n            this.updateTransform();\r\n        }\r\n    }\r\n\r\n    get rotation (): number\r\n    {\r\n        return this._rotation;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.origin.destroy();\r\n\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\r\n","import { GameInstance } from '../GameInstance';\r\nimport { IRenderer } from '../renderer/IRenderer';\r\nimport { IStaticCamera } from './IStaticCamera';\r\nimport { IStaticWorld } from '../world/IStaticWorld';\r\nimport { Identity } from '../math/mat4';\r\nimport { Matrix2D } from '../math/matrix2d/Matrix2D';\r\nimport { Matrix4 } from '../math/mat4/Matrix4';\r\nimport { Rectangle } from '../geom/rectangle/Rectangle';\r\n\r\nexport class StaticCamera implements IStaticCamera\r\n{\r\n    world: IStaticWorld;\r\n    matrix: Matrix4;\r\n    renderer: IRenderer;\r\n    type: string;\r\n\r\n    width: number;\r\n    height: number;\r\n    bounds: Rectangle;\r\n\r\n    dirtyRender: boolean;\r\n    worldTransform: Matrix2D;\r\n\r\n    constructor ()\r\n    {\r\n        this.type = 'StaticCamera';\r\n\r\n        this.dirtyRender = true;\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.renderer = game.renderer;\r\n\r\n        this.matrix = Identity();\r\n\r\n        this.bounds = new Rectangle();\r\n\r\n        this.worldTransform = new Matrix2D();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        const renderer = this.renderer;\r\n\r\n        if (renderer)\r\n        {\r\n            const width = renderer.width;\r\n            const height = renderer.height;\r\n\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n\r\n        this.bounds.set(0, 0, this.width, this.height);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.world = null;\r\n        this.worldTransform = null;\r\n        this.renderer = null;\r\n        this.matrix = null;\r\n        this.bounds = null;\r\n    }\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Backward (): Vec3\r\n{\r\n    return new Vec3(0, 0, -1);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Down (): Vec3\r\n{\r\n    return new Vec3(0, -1, 0);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Forward (): Vec3\r\n{\r\n    return new Vec3(0, 0, 1);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Left (): Vec3\r\n{\r\n    return new Vec3(-1, 0, 0);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Right (): Vec3\r\n{\r\n    return new Vec3(1, 0, 0);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Up (): Vec3\r\n{\r\n    return new Vec3(0, 1, 0);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Zero (): Vec3\r\n{\r\n    return new Vec3(0, 0, 0);\r\n}\r\n","import { Backward } from './Backward';\r\nimport { Down } from './Down';\r\nimport { Forward } from './Forward';\r\nimport { Left } from './Left';\r\nimport { Right } from './Right';\r\nimport { Up } from './Up';\r\nimport { Zero } from './Zero';\r\n\r\nexport const UP = Up();\r\nexport const DOWN = Down();\r\nexport const LEFT = Left();\r\nexport const RIGHT = Right();\r\nexport const FORWARD = Forward();\r\nexport const BACKWARD = Backward();\r\nexport const ZERO = Zero();\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Abs (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        Math.abs(a.x),\r\n        Math.abs(a.y),\r\n        Math.abs(a.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Add (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x + b.x,\r\n        a.y + b.y,\r\n        a.z + b.z\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function AddScalar (a: Vec3, scalar: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x + scalar,\r\n        a.y + scalar,\r\n        a.z + scalar\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\nexport function Dot (a: IVec3Like, b: IVec3Like): number\r\n{\r\n    return a.x * b.x + a.y * b.y + a.z * b.z;\r\n}\r\n","import { Dot } from './Dot';\r\nimport { IVec3Like } from './IVec3Like';\r\n\r\n// Get the angle between two 3D vectors\r\n\r\nexport function Angle (a: IVec3Like, b: IVec3Like): number\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = b;\r\n\r\n    const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\r\n    const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\r\n    const mag = mag1 * mag2;\r\n    const c = mag && Dot(a, b) / mag;\r\n\r\n    return Math.acos(Math.min(Math.max(c, -1), 1));\r\n}\r\n","/**\r\n * Performs a bezier interpolation with two control points.\r\n *\r\n * @param {number} a the first operand\r\n * @param {number} b the second operand\r\n * @param {number} c the third operand\r\n * @param {number} d the fourth operand\r\n * @param {bumber} t interpolation amount, in the range [0-1], between the two inputs\r\n */\r\nexport function Bezier (a: number, b: number, c: number, d: number, t: number): number\r\n{\r\n    const inverseFactor = 1 - t;\r\n    const inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n    const factorTimes2 = t * t;\r\n    const factor1 = inverseFactorTimesTwo * inverseFactor;\r\n    const factor2 = 3 * t * inverseFactorTimesTwo;\r\n    const factor3 = 3 * factorTimes2 * inverseFactor;\r\n    const factor4 = factorTimes2 * t;\r\n\r\n    return a * factor1 + b * factor2 + c * factor3 + d * factor4;\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { Bezier as MathBezier } from '../Bezier';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function Bezier (a: IVec3Like, b: IVec3Like, c: IVec3Like, d: IVec3Like, t: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        MathBezier(t, a.x, b.x, c.x, d.x),\r\n        MathBezier(t, a.y, b.y, c.y, d.y),\r\n        MathBezier(t, a.z, b.z, c.z, d.z)\r\n    );\r\n}\r\n","/**\r\n * Calculates a Catmull-Rom value from the given points, based on an alpha of 0.5.\r\n *\r\n * @param {number} t - The amount to interpolate by.\r\n * @param {number} p0 - The first control point.\r\n * @param {number} p1 - The second control point.\r\n * @param {number} p2 - The third control point.\r\n * @param {number} p3 - The fourth control point.\r\n *\r\n * @return {number} The Catmull-Rom value.\r\n */\r\nexport function CatmullRom (t: number, p0: number, p1: number, p2: number, p3: number): number\r\n{\r\n    const v0 = (p2 - p0) * 0.5;\r\n    const v1 = (p3 - p1) * 0.5;\r\n    const t2 = t * t;\r\n    const t3 = t * t2;\r\n\r\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { CatmullRom as MathCatmullRom } from '../CatmullRom';\r\nimport { Vec3 } from './Vec3';\r\n\r\n// Gets a new Vector3 for float t on the CatmullRom spline defined by the 4 points\r\n\r\nexport function CatmullRom (p1: IVec3Like, p2: IVec3Like, p3: IVec3Like, p4: IVec3Like, t: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        MathCatmullRom(t, p1.x, p2.x, p3.x, p4.x),\r\n        MathCatmullRom(t, p1.y, p2.y, p3.y, p4.y),\r\n        MathCatmullRom(t, p1.z, p2.z, p3.z, p4.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Ceil (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        Math.ceil(a.x),\r\n        Math.ceil(a.y),\r\n        Math.ceil(a.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Scale (a: Vec3, scalar: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x * scalar,\r\n        a.y * scalar,\r\n        a.z * scalar\r\n    );\r\n}\r\n","import { Add } from './Add';\r\nimport { Scale } from './Scale';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function Center (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    Add(a, b, out);\r\n\r\n    return Scale(out, 0.5, out);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Force a value within the boundaries by clamping it to the range `min`, `max`.\r\n *\r\n * @function Phaser.Math.Clamp\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to be clamped.\r\n * @param {number} min - The minimum bounds.\r\n * @param {number} max - The maximum bounds.\r\n *\r\n * @return {number} The clamped value.\r\n */\r\nexport function Clamp (value: number, min: number, max: number): number\r\n{\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\n","import { Clamp as MathClamp } from '../Clamp';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function Clamp (a: Vec3, min: Vec3, max: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    // assumes min < max, componentwise\r\n\r\n    return out.set(\r\n        MathClamp(a.x, min.x, max.x),\r\n        MathClamp(a.y, min.y, max.y),\r\n        MathClamp(a.z, min.z, max.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function DivideScalar (a: Vec3, scalar: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x, y, z } = a;\r\n\r\n    return out.set(\r\n        x / scalar,\r\n        y / scalar,\r\n        z / scalar\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\nexport function Length (a: IVec3Like): number\r\n{\r\n    const { x, y, z } = a;\r\n\r\n    return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n","import { DivideScalar } from './DivideScalar';\r\nimport { Length } from './Length';\r\nimport { Clamp as MathClamp } from '../Clamp';\r\nimport { Scale } from './Scale';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function ClampLength (a: Vec3, min: number, max: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const length = Length(a);\r\n\r\n    DivideScalar(a, length || 1, out);\r\n\r\n    return Scale(out, MathClamp(min, max, length), out);\r\n}\r\n","import { Clamp as MathClamp } from '../Clamp';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function ClampScalar (a: Vec3, min: number, max: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        MathClamp(a.x, min, max),\r\n        MathClamp(a.y, min, max),\r\n        MathClamp(a.z, min, max)\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function Clone (source: IVec3Like): Vec3\r\n{\r\n    const { x, y, z } = source;\r\n\r\n    return new Vec3(x, y, z);\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function CopyFrom (source: IVec3Like, dest: Vec3): Vec3\r\n{\r\n    const { x, y, z } = source;\r\n\r\n    return dest.set(x, y, z);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Cross (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = b;\r\n\r\n    return out.set(\r\n        ay * bz - az * by,\r\n        az * bx - ax * bz,\r\n        ax * by - ay * bx\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function CrossNormalize (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = b;\r\n\r\n    const x = ay * bz - az * by;\r\n    const y = az * bx - ax * bz;\r\n    const z = ax * by - ay * bx;\r\n\r\n    let len = x * x + y * y + z * z;\r\n\r\n    if (len > 0)\r\n    {\r\n        len = 1 / Math.sqrt(len);\r\n    }\r\n\r\n    return out.set(\r\n        x * len,\r\n        y * len,\r\n        z * len\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\n// Calculates the squared euclidian distance between two vec3s\r\n\r\nexport function DistanceSquared (a: IVec3Like, b: IVec3Like): number\r\n{\r\n    const x = a.x - b.x;\r\n    const y = a.y - b.y;\r\n    const z = a.z - b.z;\r\n\r\n    return (x * x) + (y * y) + (z * z);\r\n}\r\n","import { DistanceSquared } from './DistanceSquared';\r\nimport { IVec3Like } from './IVec3Like';\r\n\r\nexport function Distance (a: IVec3Like, b: IVec3Like): number\r\n{\r\n    return Math.sqrt(DistanceSquared(a, b));\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Divide (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x / b.x,\r\n        a.y / b.y,\r\n        a.z / b.z\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\nexport function Equals (a: IVec3Like, b: IVec3Like): boolean\r\n{\r\n    return a.x === b.x && a.y === b.y && a.z === b.z;\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Floor (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        Math.floor(a.x),\r\n        Math.floor(a.y),\r\n        Math.floor(a.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\n//  Get a Vec3 from a Vec3s floored values\r\n\r\nexport function Fract (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x - Math.floor(a.x),\r\n        a.y - Math.floor(a.y),\r\n        a.z - Math.floor(a.z)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether the given values are fuzzily equal.\r\n *\r\n * Two numbers are fuzzily equal if their difference is less than `epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.Equal\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if the values are fuzzily equal, otherwise `false`.\r\n */\r\nexport function FuzzyEqual (a: number, b: number, epsilon: number = 0.0001): boolean\r\n{\r\n    return Math.abs(a - b) < epsilon;\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { FuzzyEqual as MathFuzzyEqual } from '../fuzzy/FuzzyEqual';\r\n\r\nexport function FuzzyEquals (a: IVec3Like, b: IVec3Like, epsilon: number = 0.0001): boolean\r\n{\r\n    return MathFuzzyEqual(a.x, b.x, epsilon) && MathFuzzyEqual(a.y, b.y, epsilon) && MathFuzzyEqual(a.z, b.z, epsilon);\r\n}\r\n","/**\r\n * Performs a hermite interpolation with two control points.\r\n *\r\n * @param {number} a the first operand\r\n * @param {number} b the second operand\r\n * @param {number} c the third operand\r\n * @param {number} d the fourth operand\r\n * @param {bumber} t interpolation amount, in the range [0-1], between the two inputs\r\n */\r\nexport function Hermite (a: number, b: number, c: number, d: number, t: number): number\r\n{\r\n    const squared = t * t;\r\n\r\n    const factor1 = squared * (2 * t - 3) + 1;\r\n    const factor2 = squared * (t - 2) + t;\r\n    const factor3 = squared * (t - 1);\r\n    const factor4 = squared * (3 - 2 * t);\r\n\r\n    return a * factor1 + b * factor2 + c * factor3 + d * factor4;\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { Hermite as MathHermite } from '../Hermite';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function Hermite (a: IVec3Like, b: IVec3Like, c: IVec3Like, d: IVec3Like, t: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        MathHermite(t, a.x, b.x, c.x, d.x),\r\n        MathHermite(t, a.y, b.y, c.y, d.y),\r\n        MathHermite(t, a.z, b.z, c.z, d.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Inverse (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        1 / a.x,\r\n        1 / a.y,\r\n        1 / a.z\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\n// Returns a boolean indicating that the vector is non uniform meaning x, y or z are not all the same.\r\n\r\nexport function IsNonUniform (a: IVec3Like): boolean\r\n{\r\n    const absX = Math.abs(a.x);\r\n    const absY = Math.abs(a.y);\r\n    const absZ = Math.abs(a.z);\r\n\r\n    return (absX !== absY || absX !== absZ || absY !== absZ);\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\nexport function LengthSquared (a: IVec3Like): number\r\n{\r\n    const { x, y, z } = a;\r\n\r\n    return x * x + y * y + z * z;\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\n// t - interpolation amount, in the range [0-1], between the two inputs\r\n\r\nexport function Lerp (a: Vec3, b: Vec3, t: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x, y, z } = a;\r\n\r\n    return out.set(\r\n        x + t * (b.x - x),\r\n        y + t * (b.y - y),\r\n        z + t * (b.z - z)\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\nexport function ManhattanDistance (a: IVec3Like, b: IVec3Like): number\r\n{\r\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z);\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\n\r\nexport function ManhattanLength (a: IVec3Like): number\r\n{\r\n    return Math.abs(a.x) + Math.abs(a.y) + Math.abs(a.z);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\n// Returns the maximum of two vec3's\r\n\r\nexport function Max (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = b;\r\n\r\n    return out.set(\r\n        Math.max(ax, bx),\r\n        Math.max(ay, by),\r\n        Math.max(az, bz)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\n// Returns the minimum of two vec3's\r\n\r\nexport function Min (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = b;\r\n\r\n    return out.set(\r\n        Math.min(ax, bx),\r\n        Math.min(ay, by),\r\n        Math.min(az, bz)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Multiply (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x * b.x,\r\n        a.y * b.y,\r\n        a.z * b.z\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function MultiplyByFloats (a: Vec3, x: number, y: number, z: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x * x,\r\n        a.y * y,\r\n        a.z * z\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Negate (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        -a.x,\r\n        -a.y,\r\n        -a.z\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Normalize (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x, y, z } = a;\r\n\r\n    let len = x * x + y * y + z * z;\r\n\r\n    if (len > 0)\r\n    {\r\n        len = 1 / Math.sqrt(len);\r\n    }\r\n\r\n    return out.set(\r\n        x * len,\r\n        y * len,\r\n        z * len\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function One (): Vec3\r\n{\r\n    return new Vec3(1, 1, 1);\r\n}\r\n","import { IMatrix4 } from '../mat4/IMatrix4';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function TransformMat4 (a: Vec3, m: IMatrix4, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33 ] = m.data;\r\n    const { x, y, z } = a;\r\n\r\n    let w = m03 * x + m13 * y + m23 * z + m33;\r\n\r\n    w = w || 1;\r\n\r\n    return out.set(\r\n        (m00 * x + m10 * y + m20 * z + m30) / w,\r\n        (m01 * x + m11 * y + m21 * z + m31) / w,\r\n        (m02 * x + m12 * y + m22 * z + m32) / w\r\n    );\r\n}\r\n","import { IRectangle } from '../../geom/rectangle/IRectangle';\r\nimport { Matrix4 } from '../mat4/Matrix4';\r\nimport { Multiply } from '../mat4/Multiply';\r\nimport { TransformMat4 } from './TransformMat4';\r\nimport { Vec3 } from './Vec3';\r\n\r\nconst tempMatrix1 = new Matrix4();\r\nconst tempMatrix2 = new Matrix4();\r\n\r\nexport function Project (v: Vec3, world: Matrix4, transform: Matrix4, viewport: IRectangle, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x, y, width, height } = viewport;\r\n\r\n    tempMatrix1.set(\r\n        width / 2, 0, 0, 0,\r\n        0, -height / 2, 0, 0,\r\n        0, 0, 0.5, 0,\r\n        x + width / 2, height / 2 + y, 0.5, 1\r\n    );\r\n\r\n    Multiply(world, transform, tempMatrix2);\r\n    Multiply(tempMatrix2, tempMatrix1, tempMatrix2);\r\n\r\n    return TransformMat4(v, tempMatrix2, out);\r\n}\r\n","import { NOOP } from '../../utils/NOOP';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport type Vec3CallbackType = (vec3: Vec3Callback) => void;\r\n\r\nexport class Vec3Callback extends Vec3\r\n{\r\n    private _x: number;\r\n    private _y: number;\r\n    private _z: number;\r\n\r\n    onChange: Vec3CallbackType;\r\n\r\n    constructor (onChange: Vec3CallbackType, x: number = 0, y: number = 0, z: number = 0)\r\n    {\r\n        super(x, y, z);\r\n\r\n        this.onChange = onChange;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.onChange = NOOP;\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, z: number = 0): this\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n\r\n        if (this.onChange)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    get x (): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    set x (value: number)\r\n    {\r\n        const prev = this._x;\r\n\r\n        this._x = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get y (): number\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    set y (value: number)\r\n    {\r\n        const prev = this._y;\r\n\r\n        this._y = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get z (): number\r\n    {\r\n        return this._z;\r\n    }\r\n\r\n    set z (value: number)\r\n    {\r\n        const prev = this._z;\r\n\r\n        this._z = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n}\r\n","import { Vec3Callback, Vec3CallbackType } from './Vec3Callback';\r\n\r\nexport class RGBCallback extends Vec3Callback\r\n{\r\n    constructor (onChange: Vec3CallbackType, r: number = 0, g: number = 0, b: number = 0)\r\n    {\r\n        super(onChange, r, g, b);\r\n    }\r\n\r\n    set r (value: number)\r\n    {\r\n        this.x = value;\r\n    }\r\n\r\n    get r (): number\r\n    {\r\n        return this.x;\r\n    }\r\n\r\n    set g (value: number)\r\n    {\r\n        this.y = value;\r\n    }\r\n\r\n    get g (): number\r\n    {\r\n        return this.y;\r\n    }\r\n\r\n    set b (value: number)\r\n    {\r\n        this.z = value;\r\n    }\r\n\r\n    get b (): number\r\n    {\r\n        return this.z;\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        const { x, y, z } = this;\r\n\r\n        return `[ r=${x}, g=${y}, b=${z} ]`;\r\n    }\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Random (a: Vec3, scale: number = 1, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const r = Math.random() * 2 * Math.PI;\r\n    const z = Math.random() * 2 - 1;\r\n    const zScale = Math.sqrt(1 - z * z) * scale;\r\n\r\n    return out.set(\r\n        Math.cos(r) * zScale,\r\n        Math.sin(r) * zScale,\r\n        z * scale\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Subtract (a: Vec3, b: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x - b.x,\r\n        a.y - b.y,\r\n        a.z - b.z\r\n    );\r\n}\r\n","import { Dot } from './Dot';\r\nimport { Scale } from './Scale';\r\nimport { Subtract } from './Subtract';\r\nimport { Vec3 } from './Vec3';\r\n\r\n// reflect incident vector off plane orthogonal to normal\r\n// normal is assumed to have unit length\r\n\r\nexport function Reflect (a: Vec3, normal: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    Scale(normal, 2 * Dot(a, normal), out);\r\n\r\n    return Subtract(a, out, out);\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function RotateX (a: Vec3, origin: IVec3Like, angle: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = origin;\r\n\r\n    const px = ax - bx;\r\n    const py = ay - by;\r\n    const pz = az - bz;\r\n\r\n    const rx = px;\r\n    const ry = py * Math.cos(angle) - pz * Math.sin(angle);\r\n    const rz = py * Math.sin(angle) + pz * Math.cos(angle);\r\n\r\n    return out.set(\r\n        rx + bx,\r\n        ry + by,\r\n        rz + bz\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function RotateY (a: Vec3, origin: IVec3Like, angle: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = origin;\r\n\r\n    const px = ax - bx;\r\n    const py = ay - by;\r\n    const pz = az - bz;\r\n\r\n    const rx = pz * Math.sin(angle) + px * Math.cos(angle);\r\n    const ry = py;\r\n    const rz = pz * Math.cos(angle) - px * Math.sin(angle);\r\n\r\n    return out.set(\r\n        rx + bx,\r\n        ry + by,\r\n        rz + bz\r\n    );\r\n}\r\n","import { IVec3Like } from './IVec3Like';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function RotateZ (a: Vec3, origin: IVec3Like, angle: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: ax, y: ay, z: az } = a;\r\n    const { x: bx, y: by, z: bz } = origin;\r\n\r\n    const px = ax - bx;\r\n    const py = ay - by;\r\n    const pz = az - bz;\r\n\r\n    const rx = px * Math.cos(angle) - py * Math.sin(angle);\r\n    const ry = px * Math.sin(angle) + py * Math.cos(angle);\r\n    const rz = pz;\r\n\r\n    return out.set(\r\n        rx + bx,\r\n        ry + by,\r\n        rz + bz\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function Round (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        Math.round(a.x),\r\n        Math.round(a.y),\r\n        Math.round(a.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function RoundToZero (a: Vec3, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        (a.x < 0) ? Math.ceil(a.x) : Math.floor(a.x),\r\n        (a.y < 0) ? Math.ceil(a.y) : Math.floor(a.y),\r\n        (a.z < 0) ? Math.ceil(a.z) : Math.floor(a.z)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function ScaleAndAdd (a: Vec3, b: Vec3, scalar: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x + b.x * scalar,\r\n        a.y + b.y * scalar,\r\n        a.z + b.z * scalar\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function SetFromCylindricalCoords (radius: number, theta: number, y: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        radius * Math.sin(theta),\r\n        y,\r\n        radius * Math.cos(theta)\r\n    );\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function SetFromSphericalCoords (radius: number, phi: number, theta: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const sinPhiRadius = Math.sin(phi) * radius;\r\n\r\n    return out.set(\r\n        sinPhiRadius * Math.sin(theta),\r\n        Math.cos(phi) * radius,\r\n        sinPhiRadius * Math.cos(theta)\r\n    );\r\n}\r\n","import { Normalize } from './Normalize';\r\nimport { Scale } from './Scale';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function SetLength (a: Vec3, length: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    Normalize(a, out);\r\n\r\n    return Scale(out, length, out);\r\n}\r\n","import { Vec3 } from './Vec3';\r\n\r\nexport function SubtractScalar (a: Vec3, scalar: number, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    return out.set(\r\n        a.x - scalar,\r\n        a.y - scalar,\r\n        a.z - scalar\r\n    );\r\n}\r\n","import { IMatrix4 } from '../mat4/IMatrix4';\r\nimport { Vec3 } from './Vec3';\r\n\r\n//  Transforms a Vec3 by a Matrix4, ignoring the right-most column\r\nexport function TransformMat4Zero (a: Vec3, m: IMatrix4, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22 ] = m.data;\r\n    const { x, y, z } = a;\r\n\r\n    return out.set(\r\n        m00 * x + m10 * y + m20 * z,\r\n        m01 * x + m11 * y + m21 * z,\r\n        m02 * x + m12 * y + m22 * z\r\n    );\r\n}\r\n","import { IQuaternionLike } from '../quaternion/IQuaternionLike';\r\nimport { Vec3 } from './Vec3';\r\n\r\nexport function TransformQuat (a: Vec3, q: IQuaternionLike, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x: qx, y: qy, z: qz, w: qw } = q;\r\n    const { x, y, z } = a;\r\n\r\n    let uvx = qy * z - qz * y;\r\n    let uvy = qz * x - qx * z;\r\n    let uvz = qx * y - qy * x;\r\n\r\n    let uuvx = qy * uvz - qz * uvy;\r\n    let uuvy = qz * uvx - qx * uvz;\r\n    let uuvz = qx * uvy - qy * uvx;\r\n\r\n    const w2 = qw * 2;\r\n\r\n    uvx *= w2;\r\n    uvy *= w2;\r\n    uvz *= w2;\r\n\r\n    uuvx *= 2;\r\n    uuvy *= 2;\r\n    uuvz *= 2;\r\n\r\n    return out.set(\r\n        x + uvx + uuvx,\r\n        y + uvy + uuvy,\r\n        z + uvz + uuvz\r\n    );\r\n}\r\n","import { Invert } from '../mat4/Invert';\r\nimport { Matrix4 } from '../mat4/Matrix4';\r\nimport { Multiply } from '../mat4/Multiply';\r\nimport { Scale } from './Scale';\r\nimport { TransformMat4 } from './TransformMat4';\r\nimport { Vec3 } from './Vec3';\r\n\r\nconst matrix = new Matrix4();\r\nconst screenSource = new Vec3();\r\n\r\nexport function Unproject (v: Vec3, viewportWidth: number, viewportHeight: number, world: Matrix4, view: Matrix4, projection: Matrix4, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    Multiply(world, view, matrix);\r\n    Multiply(matrix, projection, matrix);\r\n    Invert(matrix, matrix);\r\n\r\n    const { x, y, z } = v;\r\n\r\n    screenSource.set(\r\n        x / viewportWidth * 2 - 1,\r\n        -(y / viewportHeight * 2 - 1),\r\n        2 * z - 1\r\n    );\r\n\r\n    TransformMat4(screenSource, matrix, out);\r\n\r\n    const data = matrix.data;\r\n\r\n    const num = screenSource.x * data[3] + screenSource.y * data[7] + screenSource.z * data[11] + data[15];\r\n\r\n    //  if within epsilon?\r\n    return Scale(out, 1 / num, out);\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function Add (a: Quaternion, b: Quaternion, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return out.set(\r\n        a.x + b.x,\r\n        a.y + b.y,\r\n        a.z + b.z,\r\n        a.w + b.w\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function AddScalar (a: Quaternion, scalar: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return out.set(\r\n        a.x + scalar,\r\n        a.y + scalar,\r\n        a.z + scalar,\r\n        a.w + scalar\r\n    );\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\n\r\nexport function Dot (a: IQuaternionLike, b: IQuaternionLike): number\r\n{\r\n    return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\r\n}\r\n","import { Clamp } from '../Clamp';\r\nimport { Dot } from './Dot';\r\nimport { IQuaternionLike } from './IQuaternionLike';\r\n\r\nexport function AngleTo (a: IQuaternionLike, b: IQuaternionLike): number\r\n{\r\n    return 2 * Math.acos(Math.abs(Clamp(Dot(a, b), -1, 1)));\r\n}\r\n","import { Dot } from './Dot';\r\nimport { IQuaternionLike } from './IQuaternionLike';\r\n\r\nexport function AreClose (a: IQuaternionLike, b: IQuaternionLike): boolean\r\n{\r\n    return (Dot(a, b) >= 0);\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\nimport { Quaternion } from './Quaternion';\r\n\r\nexport function Clone (source: IQuaternionLike): Quaternion\r\n{\r\n    const { x, y, z, w } = source;\r\n\r\n    return new Quaternion(x, y, z, w);\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function Conjugate (a: Quaternion, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        x * -1,\r\n        y * -1,\r\n        z * -1,\r\n        w\r\n    );\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\nimport { Quaternion } from './Quaternion';\r\n\r\nexport function CopyFrom (source: IQuaternionLike, dest: Quaternion): Quaternion\r\n{\r\n    const { x, y, z, w } = source;\r\n\r\n    return dest.set(x, y, z, w);\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\n\r\nexport function Equals (a: IQuaternionLike, b: IQuaternionLike): boolean\r\n{\r\n    return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function RotationYawPitchRoll (yaw: number, pitch: number, roll: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    // Produces a quaternion from Euler angles in the z-y-x orientation (Tait-Bryan angles)\r\n    const halfRoll = roll * 0.5;\r\n    const halfPitch = pitch * 0.5;\r\n    const halfYaw = yaw * 0.5;\r\n\r\n    const sinRoll = Math.sin(halfRoll);\r\n    const cosRoll = Math.cos(halfRoll);\r\n    const sinPitch = Math.sin(halfPitch);\r\n    const cosPitch = Math.cos(halfPitch);\r\n    const sinYaw = Math.sin(halfYaw);\r\n    const cosYaw = Math.cos(halfYaw);\r\n\r\n    return out.set(\r\n        (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll),\r\n        (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll),\r\n        (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll),\r\n        (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll)\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\nimport { RotationYawPitchRoll } from './RotationYawPitchRoll';\r\n\r\nexport function FromEulerAngles (x: number, y: number, z: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return RotationYawPitchRoll(y, x, z, out);\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Quaternion } from './Quaternion';\r\nimport { RotationYawPitchRoll } from './RotationYawPitchRoll';\r\n\r\nexport function FromEulerVector (v: IVec3Like, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return RotationYawPitchRoll(v.y, v.x, v.z, out);\r\n}\r\n","import { Normalize, Vec3 } from '../vec3/';\r\n\r\nimport { Quaternion } from './Quaternion';\r\n\r\nexport function FromRotationAxis (axis: Vec3, angle: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const sin = Math.sin(angle / 2);\r\n\r\n    Normalize(axis, axis);\r\n\r\n    const { x, y, z } = axis;\r\n\r\n    return out.set(\r\n        x * sin,\r\n        y * sin,\r\n        z * sin,\r\n        Math.cos(angle / 2)\r\n    );\r\n}\r\n","import { IMatrix4 } from '../mat4/IMatrix4';\r\nimport { Quaternion } from './Quaternion';\r\n\r\nexport function FromRotationMatrix (matrix: IMatrix4, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [ m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33 ] = matrix.data;\r\n\r\n    const trace = m11 + m22 + m33;\r\n\r\n    let s;\r\n\r\n    if (trace > 0)\r\n    {\r\n        s = 0.5 / Math.sqrt(trace + 1);\r\n\r\n        return out.set(\r\n            (m32 - m23) * s,\r\n            (m13 - m31) * s,\r\n            (m21 - m12) * s,\r\n            0.25 / s\r\n        );\r\n    }\r\n    else if (m11 > m22 && m11 > m33)\r\n    {\r\n        s = 2 * Math.sqrt(1 + m11 - m22 - m33);\r\n\r\n        return out.set(\r\n            0.25 * s,\r\n            (m12 + m21) / s,\r\n            (m13 + m31) / s,\r\n            (m32 - m23) / s\r\n        );\r\n    }\r\n    else if (m22 > m33)\r\n    {\r\n        s = 2 * Math.sqrt(1 + m22 - m11 - m33);\r\n\r\n        return out.set(\r\n            (m12 + m21) / s,\r\n            0.25 * s,\r\n            (m23 + m32) / s,\r\n            (m13 - m31) / s\r\n        );\r\n    }\r\n    else\r\n    {\r\n        s = 2 * Math.sqrt(1 + m33 - m11 - m22);\r\n\r\n        return out.set(\r\n            (m13 + m31) / s,\r\n            (m23 + m32) / s,\r\n            0.25 * s,\r\n            (m21 - m12) / s\r\n        );\r\n    }\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\nimport { FuzzyEqual as MathFuzzyEqual } from '../fuzzy/FuzzyEqual';\r\n\r\nexport function FuzzyEquals (a: IQuaternionLike, b: IQuaternionLike, epsilon: number = 0.0001): boolean\r\n{\r\n    return (\r\n        MathFuzzyEqual(a.x, b.x, epsilon) &&\r\n        MathFuzzyEqual(a.y, b.y, epsilon) &&\r\n        MathFuzzyEqual(a.z, b.z, epsilon) &&\r\n        MathFuzzyEqual(a.w, b.w, epsilon)\r\n    );\r\n}\r\n","import { Dot } from './Dot';\r\nimport { IQuaternionLike } from './IQuaternionLike';\r\n\r\n// Gets the angular distance between two unit quaternions\r\n\r\nexport function GetAngle (a: IQuaternionLike, b: IQuaternionLike): number\r\n{\r\n    const dot = Dot(a, b);\r\n\r\n    return Math.acos(2 * dot * dot - 1);\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\nimport { Quaternion } from './Quaternion';\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n */\r\n\r\nexport function GetAxisAngle (a: IQuaternionLike, out: Quaternion = new Quaternion()): number\r\n{\r\n    const rad = Math.acos(a.w) * 2;\r\n    const s = Math.sin(rad / 2);\r\n    const epsilon = 0.000001;\r\n\r\n    if (s > epsilon)\r\n    {\r\n        out.set(\r\n            a.x / s,\r\n            a.y / s,\r\n            a.z / s\r\n        );\r\n    }\r\n    else\r\n    {\r\n        // If s is zero, return any axis (no rotation - axis does not matter)\r\n        out.set(1, 0, 0);\r\n    }\r\n\r\n    return rad;\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\nimport { Hermite as MathHermite } from '../Hermite';\r\nimport { Quaternion } from './Quaternion';\r\n\r\nexport function Hermite (a: IQuaternionLike, b: IQuaternionLike, c: IQuaternionLike, d: IQuaternionLike, t: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return out.set(\r\n        MathHermite(t, a.x, b.x, c.x, d.x),\r\n        MathHermite(t, a.y, b.y, c.y, d.y),\r\n        MathHermite(t, a.z, b.z, c.z, d.z),\r\n        MathHermite(t, a.w, b.w, c.w, d.w)\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function Invert (a: Quaternion, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    const dot = x * x + y * y + z * z + w * w;\r\n    const invDot = dot ? 1 / dot : 0;\r\n\r\n    return out.set(\r\n        -x * invDot,\r\n        -y * invDot,\r\n        -z * invDot,\r\n        w * invDot\r\n    );\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\n\r\nexport function Length (a: IQuaternionLike): number\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\n\r\nexport function LengthSquared (a: IQuaternionLike): number\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return x * x + y * y + z * z + w * w;\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\n//  To premultiply just swap the order of a and b\r\n\r\nexport function Multiply (a: Quaternion, b: Quaternion, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const { x: ax, y: ay, z: az, w: aw } = a;\r\n    const { x: bx, y: by, z: bz, w: bw } = b;\r\n\r\n    return out.set(\r\n        ax * bw + aw * bx + ay * bz - az * by,\r\n        ay * bw + aw * by + az * bx - ax * bz,\r\n        az * bw + aw * bz + ax * by - ay * bx,\r\n        aw * bw - ax * bx - ay * by - az * bz\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function MultiplyByFloats (a: Quaternion, x: number, y: number, z: number, w: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return out.set(\r\n        a.x * x,\r\n        a.y * y,\r\n        a.z * z,\r\n        a.w * w\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function Scale (a: Quaternion, scalar: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        x * scalar,\r\n        y * scalar,\r\n        z * scalar,\r\n        w * scalar\r\n    );\r\n}\r\n","import { Length } from './Length';\r\nimport { Quaternion } from './Quaternion';\r\nimport { Scale } from './Scale';\r\n\r\nexport function Normalize (a: Quaternion, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const length = Length(a);\r\n\r\n    if (length === 0)\r\n    {\r\n        return out.set(0, 0, 0, 1);\r\n    }\r\n    else\r\n    {\r\n        return Scale(a, length, out);\r\n    }\r\n}\r\n","import { CopyFrom } from './CopyFrom';\r\nimport { Normalize } from './Normalize';\r\nimport { Quaternion } from './Quaternion';\r\n\r\n// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\nexport function Slerp (a: Quaternion, b: Quaternion, t: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    if (t === 0)\r\n    {\r\n        return CopyFrom(a, out);\r\n    }\r\n    else if (t === 1)\r\n    {\r\n        return CopyFrom(b, out);\r\n    }\r\n\r\n    const { x, y, z, w } = a;\r\n    const { x: bx, y: by, z: bz, w: bw } = b;\r\n\r\n    let cosHalfTheta = w * bw + x * bx + y * by + z * bz;\r\n\r\n    if (cosHalfTheta < 0)\r\n    {\r\n        out.set(-bx, -by, -bz, -bw);\r\n\r\n        cosHalfTheta = -cosHalfTheta;\r\n    }\r\n    else\r\n    {\r\n        CopyFrom(b, out);\r\n    }\r\n\r\n    if (cosHalfTheta >= 1)\r\n    {\r\n        return out.set(x, y, z, w);\r\n    }\r\n\r\n    const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;\r\n\r\n    if (sqrSinHalfTheta <= Number.EPSILON)\r\n    {\r\n        const s = 1 - t;\r\n\r\n        out.set(\r\n            s * x + t * out.x,\r\n            s * y + t * out.y,\r\n            s * z + t * out.z,\r\n            s * w + t * out.w\r\n        );\r\n\r\n        return Normalize(out, out);\r\n    }\r\n\r\n    const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\r\n    const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\r\n    const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\r\n    const ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\r\n\r\n    return out.set(\r\n        (x * ratioA + out.x * ratioB),\r\n        (y * ratioA + out.y * ratioB),\r\n        (z * ratioA + out.z * ratioB),\r\n        (w * ratioA + out.w * ratioB)\r\n    );\r\n}\r\n","import { CopyFrom } from './CopyFrom';\r\nimport { GetAngle } from './GetAngle';\r\nimport { Quaternion } from './Quaternion';\r\nimport { Slerp } from './Slerp';\r\n\r\nexport function RotateTowards (a: Quaternion, b: Quaternion, step: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const angle = GetAngle(a, b);\r\n\r\n    if (angle === 0)\r\n    {\r\n        return CopyFrom(a, out);\r\n    }\r\n\r\n    const t = Math.min(1, step / angle);\r\n\r\n    return Slerp(a, b, t, out);\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\n// Rotates a quaternion by the given angle about the X axis\r\n\r\nexport function RotateX (a: Quaternion, angle: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    angle *= 0.5;\r\n\r\n    const { x, y, z, w } = a;\r\n\r\n    const bx = Math.sin(angle);\r\n    const bw = Math.cos(angle);\r\n\r\n    return out.set(\r\n        x * bw + w * bx,\r\n        y * bw + z * bx,\r\n        z * bw - y * bx,\r\n        w * bw - x * bx\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\n// Rotates a quaternion by the given angle about the Y axis\r\n\r\nexport function RotateY (a: Quaternion, angle: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    angle *= 0.5;\r\n\r\n    const { x, y, z, w } = a;\r\n\r\n    const by = Math.sin(angle);\r\n    const bw = Math.cos(angle);\r\n\r\n    return out.set(\r\n        x * bw - z * by,\r\n        y * bw + w * by,\r\n        z * bw + x * by,\r\n        w * bw - y * by\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\n// Rotates a quaternion by the given angle about the Z axis\r\n\r\nexport function RotateZ (a: Quaternion, angle: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    angle *= 0.5;\r\n\r\n    const { x, y, z, w } = a;\r\n\r\n    const bz = Math.sin(angle);\r\n    const bw = Math.cos(angle);\r\n\r\n    return out.set(\r\n        x * bw + y * bz,\r\n        y * bw - x * bz,\r\n        z * bw + w * bz,\r\n        w * bw - z * bz\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function RotationAlphaBetaGamma (alpha: number, beta: number, gamma: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    // Produces a quaternion from Euler angles in the z-x-z orientation\r\n    const halfGammaPlusAlpha = (gamma + alpha) * 0.5;\r\n    const halfGammaMinusAlpha = (gamma - alpha) * 0.5;\r\n    const halfBeta = beta * 0.5;\r\n\r\n    return out.set(\r\n        Math.cos(halfGammaMinusAlpha) * Math.sin(halfBeta),\r\n        Math.sin(halfGammaMinusAlpha) * Math.sin(halfBeta),\r\n        Math.sin(halfGammaPlusAlpha) * Math.cos(halfBeta),\r\n        Math.cos(halfGammaPlusAlpha) * Math.cos(halfBeta)\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function ScaleAndAdd (a: Quaternion, b: Quaternion, scalar: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return out.set(\r\n        a.x + b.x * scalar,\r\n        a.y + b.y * scalar,\r\n        a.z + b.z * scalar,\r\n        a.w + b.w * scalar\r\n    );\r\n}\r\n","import { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Quaternion } from './Quaternion';\r\n\r\n// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n// assumes axis is normalized\r\n\r\nexport function SetAxisAngle (axis: IVec3Like, angle: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const { x, y, z } = axis;\r\n\r\n    //  halfAngle\r\n    angle *= 0.5;\r\n\r\n    const s = Math.sin(angle);\r\n\r\n    return out.set(\r\n        x * s,\r\n        y * s,\r\n        z * s,\r\n        Math.cos(angle)\r\n    );\r\n}\r\n","import { Dot } from '../vec3';\r\nimport { IVec3Like } from '../vec3/IVec3Like';\r\nimport { Quaternion } from './Quaternion';\r\n\r\n// assumes direction vectors are normalized\r\n\r\nexport function SetFromUnitVectors (a: Quaternion, from: IVec3Like, to: IVec3Like, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const { x: fx, y: fy, z: fz } = from;\r\n    const { x: tx, y: ty, z: tz } = to;\r\n\r\n    const epsilon = 0.000001;\r\n\r\n    let r = Dot(from, to) + 1;\r\n\r\n    if (r < epsilon)\r\n    {\r\n        r = 0;\r\n\r\n        if (Math.abs(fx) > Math.abs(fz))\r\n        {\r\n            return out.set(\r\n                -fy,\r\n                fx,\r\n                0,\r\n                r\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return out.set(\r\n                0,\r\n                -fz,\r\n                fy,\r\n                r\r\n            );\r\n        }\r\n    }\r\n    else\r\n    {\r\n        // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n        return out.set(\r\n            fy * tz - fz * ty,\r\n            fz * tx - fx * tz,\r\n            fx * ty - fy * tx,\r\n            r\r\n        );\r\n    }\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function Subtract (a: Quaternion, b: Quaternion, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    return out.set(\r\n        a.x - b.x,\r\n        a.y - b.y,\r\n        a.z - b.z,\r\n        a.w - b.w\r\n    );\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function SubtractScalar (a: Quaternion, scalar: number, out: Quaternion = new Quaternion()): Quaternion\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        x - scalar,\r\n        y - scalar,\r\n        z - scalar,\r\n        w - scalar\r\n    );\r\n}\r\n","import { IQuaternionLike } from './IQuaternionLike';\r\nimport { Vec3 } from '../vec3';\r\n\r\n//  Fixed to the YZX order\r\n\r\nexport function ToEulerAngles (q: IQuaternionLike, out: Vec3 = new Vec3()): Vec3\r\n{\r\n    const { x, y, z, w } = q;\r\n\r\n    const sqw = w * w;\r\n    const sqz = z * z;\r\n    const sqx = x * x;\r\n    const sqy = y * y;\r\n\r\n    const zAxisY = y * z - x * w;\r\n    const limit = 0.4999999;\r\n\r\n    if (zAxisY < -limit)\r\n    {\r\n        return out.set(\r\n            Math.PI / 2,\r\n            2 * Math.atan2(y, w),\r\n            0\r\n        );\r\n    }\r\n    else if (zAxisY > limit)\r\n    {\r\n        return out.set(\r\n            -Math.PI / 2,\r\n            2 * Math.atan2(y, w),\r\n            0\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return out.set(\r\n            Math.asin(-2.0 * (z * y - x * w)),\r\n            Math.atan2(2.0 * (z * x + y * w), (sqz - sqx - sqy + sqw)),\r\n            Math.atan2(2.0 * (x * y + z * w), (-sqz - sqx + sqy + sqw))\r\n        );\r\n    }\r\n}\r\n","import { Quaternion } from './Quaternion';\r\n\r\nexport function Zero (): Quaternion\r\n{\r\n    return new Quaternion(0, 0, 0, 0);\r\n}\r\n","export function In (v: number, overshoot: number = 1.70158): number\r\n{\r\n    return v * v * ((overshoot + 1) * v - overshoot);\r\n}\r\n","export function InOut (v: number, overshoot: number = 1.70158): number\r\n{\r\n    const s = overshoot * 1.525;\r\n\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * (v * v * ((s + 1) * v - s));\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * ((v -= 2) * v * ((s + 1) * v + s) + 2);\r\n    }\r\n}\r\n","export function Out (v: number, overshoot: number = 1.70158): number\r\n{\r\n    return --v * v * ((overshoot + 1) * v + overshoot) + 1;\r\n}\r\n","export function In (v: number): number\r\n{\r\n    v = 1 - v;\r\n\r\n    if (v < 1 / 2.75)\r\n    {\r\n        return 1 - (7.5625 * v * v);\r\n    }\r\n    else if (v < 2 / 2.75)\r\n    {\r\n        return 1 - (7.5625 * (v -= 1.5 / 2.75) * v + 0.75);\r\n    }\r\n    else if (v < 2.5 / 2.75)\r\n    {\r\n        return 1 - (7.5625 * (v -= 2.25 / 2.75) * v + 0.9375);\r\n    }\r\n    else\r\n    {\r\n        return 1 - (7.5625 * (v -= 2.625 / 2.75) * v + 0.984375);\r\n    }\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    let reverse = false;\r\n\r\n    if (v < 0.5)\r\n    {\r\n        v = 1 - (v * 2);\r\n        reverse = true;\r\n    }\r\n    else\r\n    {\r\n        v = (v * 2) - 1;\r\n    }\r\n\r\n    if (v < 1 / 2.75)\r\n    {\r\n        v = 7.5625 * v * v;\r\n    }\r\n    else if (v < 2 / 2.75)\r\n    {\r\n        v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\r\n    }\r\n    else if (v < 2.5 / 2.75)\r\n    {\r\n        v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\r\n    }\r\n    else\r\n    {\r\n        v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\r\n    }\r\n\r\n    if (reverse)\r\n    {\r\n        return (1 - v) * 0.5;\r\n    }\r\n    else\r\n    {\r\n        return v * 0.5 + 0.5;\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    if (v < 1 / 2.75)\r\n    {\r\n        return 7.5625 * v * v;\r\n    }\r\n    else if (v < 2 / 2.75)\r\n    {\r\n        return 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\r\n    }\r\n    else if (v < 2.5 / 2.75)\r\n    {\r\n        return 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\r\n    }\r\n    else\r\n    {\r\n        return 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\r\n    }\r\n}\r\n","export function In (v: number): number\r\n{\r\n    return 1 - Math.sqrt(1 - v * v);\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return -0.5 * (Math.sqrt(1 - v * v) - 1);\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * (Math.sqrt(1 - (v -= 2) * v) + 1);\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    return Math.sqrt(1 - (--v * v));\r\n}\r\n","export function In (v: number): number\r\n{\r\n    return v * v * v;\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * v * v * v;\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * ((v -= 2) * v * v + 2);\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    return --v * v * v + 1;\r\n}\r\n","export function In (v: number, amplitude: number = 0.1, period: number = 0.1): number\r\n{\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        let s = period / 4;\r\n\r\n        if (amplitude < 1)\r\n        {\r\n            amplitude = 1;\r\n        }\r\n        else\r\n        {\r\n            s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\r\n        }\r\n\r\n        return -(amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\r\n    }\r\n}\r\n","export function InOut (v: number, amplitude: number = 0.1, period: number = 0.1): number\r\n{\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        let s = period / 4;\r\n\r\n        if (amplitude < 1)\r\n        {\r\n            amplitude = 1;\r\n        }\r\n        else\r\n        {\r\n            s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\r\n        }\r\n\r\n        if ((v *= 2) < 1)\r\n        {\r\n            return -0.5 * (amplitude * Math.pow(2, 10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period));\r\n        }\r\n        else\r\n        {\r\n            return amplitude * Math.pow(2, -10 * (v -= 1)) * Math.sin((v - s) * (2 * Math.PI) / period) * 0.5 + 1;\r\n        }\r\n    }\r\n}\r\n","export function Out (v: number, amplitude: number = 0.1, period: number = 0.1): number\r\n{\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        let s = period / 4;\r\n\r\n        if (amplitude < 1)\r\n        {\r\n            amplitude = 1;\r\n        }\r\n        else\r\n        {\r\n            s = period * Math.asin(1 / amplitude) / (2 * Math.PI);\r\n        }\r\n\r\n        return (amplitude * Math.pow(2, -10 * v) * Math.sin((v - s) * (2 * Math.PI) / period) + 1);\r\n    }\r\n}\r\n","export function In (v: number): number\r\n{\r\n    return Math.pow(2, 10 * (v - 1)) - 0.001;\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    if (v == 0)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    if (v == 1)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * Math.pow(2, 10 * (v - 1));\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * (2 - Math.pow(2, -10 * (v - 1)));\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    return 1 - Math.pow(2, -10 * v);\r\n}\r\n","export function In (v: number): number\r\n{\r\n    return v * v;\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * v * v;\r\n    }\r\n    else\r\n    {\r\n        return -0.5 * (--v * (v - 2) - 1);\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    return v * (2 - v);\r\n}\r\n","export function In (v: number): number\r\n{\r\n    return v * v * v * v;\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * v * v * v * v;\r\n    }\r\n    else\r\n    {\r\n        return -0.5 * ((v -= 2) * v * v * v - 2);\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    return -(--v * v * v * v - 1);\r\n}\r\n","export function In (v: number): number\r\n{\r\n    return v * v * v * v * v;\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    if ((v *= 2) < 1)\r\n    {\r\n        return 0.5 * v * v * v * v * v;\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * ((v -= 2) * v * v * v * v + 2);\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    return (v = v - 1) * v * v * v * v + 1;\r\n}\r\n","export function In (v: number): number\r\n{\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return 1 - Math.cos(v * Math.PI / 2);\r\n    }\r\n}\r\n","export function InOut (v: number): number\r\n{\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return 0.5 * (1 - Math.cos(Math.PI * v));\r\n    }\r\n}\r\n","export function Out (v: number): number\r\n{\r\n    if (v === 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v === 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return Math.sin(v * Math.PI / 2);\r\n    }\r\n}\r\n","export function Linear (v: number): number\r\n{\r\n    return v;\r\n}\r\n","export function Stepped (v: number, steps: number = 1): number\r\n{\r\n    if (v <= 0)\r\n    {\r\n        return 0;\r\n    }\r\n    else if (v >= 1)\r\n    {\r\n        return 1;\r\n    }\r\n    else\r\n    {\r\n        return (((steps * v) | 0) + 1) * (1 / steps);\r\n    }\r\n}\r\n","import * as Back from './back';\r\nimport * as Bounce from './bounce';\r\nimport * as Circular from './circular';\r\nimport * as Cubic from './cubic';\r\nimport * as Elastic from './elastic';\r\nimport * as Expo from './expo';\r\nimport * as Quadratic from './quadratic';\r\nimport * as Quartic from './quartic';\r\nimport * as Quintic from './quintic';\r\nimport * as Sine from './sine';\r\n\r\nimport { Linear } from './Linear';\r\nimport { Stepped } from './Stepped';\r\n\r\nconst EaseMap: Map<string, Function> = new Map([\r\n    [ 'power0', Linear ],\r\n    [ 'power1', Quadratic.Out ],\r\n    [ 'power2', Cubic.Out ],\r\n    [ 'power3', Quartic.Out ],\r\n    [ 'power4', Quintic.Out ],\r\n    [ 'linear', Linear ],\r\n    [ 'quad', Quadratic.Out ],\r\n    [ 'cubic', Cubic.Out ],\r\n    [ 'quart', Quartic.Out ],\r\n    [ 'quint', Quintic.Out ],\r\n    [ 'sine', Sine.Out ],\r\n    [ 'expo', Expo.Out ],\r\n    [ 'circ', Circular.Out ],\r\n    [ 'elastic', Elastic.Out ],\r\n    [ 'back', Back.Out ],\r\n    [ 'bounce', Bounce.Out ],\r\n    [ 'stepped', Stepped ],\r\n    [ 'quad.in', Quadratic.In ],\r\n    [ 'cubic.in', Cubic.In ],\r\n    [ 'quart.in', Quartic.In ],\r\n    [ 'quint.in', Quintic.In ],\r\n    [ 'sine.in', Sine.In ],\r\n    [ 'expo.in', Expo.In ],\r\n    [ 'circ.in', Circular.In ],\r\n    [ 'elastic.in', Elastic.In ],\r\n    [ 'back.in', Back.In ],\r\n    [ 'bounce.in', Bounce.In ],\r\n    [ 'quad.out', Quadratic.Out ],\r\n    [ 'cubic.out', Cubic.Out ],\r\n    [ 'quart.out', Quartic.Out ],\r\n    [ 'quint.out', Quintic.Out ],\r\n    [ 'sine.out', Sine.Out ],\r\n    [ 'expo.out', Expo.Out ],\r\n    [ 'circ.out', Circular.Out ],\r\n    [ 'elastic.out', Elastic.Out ],\r\n    [ 'back.out', Back.Out ],\r\n    [ 'bounce.out', Bounce.Out ],\r\n    [ 'quad.inout', Quadratic.InOut ],\r\n    [ 'cubic.inout', Cubic.InOut ],\r\n    [ 'quart.inout', Quartic.InOut ],\r\n    [ 'quint.inout', Quintic.InOut ],\r\n    [ 'sine.inout', Sine.InOut ],\r\n    [ 'expo.inout', Expo.InOut ],\r\n    [ 'circ.inout', Circular.InOut ],\r\n    [ 'elastic.inout', Elastic.InOut ],\r\n    [ 'back.inout', Back.InOut ],\r\n    [ 'bounce.inout', Bounce.InOut ]\r\n]);\r\n\r\n//  Allows GetEase('Back'), GetEase('Expo.InOut'), GetEase('Export.easeOut') or lower-case\r\n\r\nexport function GetEase (name: string): Function\r\n{\r\n    name = name.toLowerCase();\r\n    name = name.replace('ease', '');\r\n\r\n    if (EaseMap.has(name))\r\n    {\r\n        return EaseMap.get(name);\r\n    }\r\n    else\r\n    {\r\n        return Linear;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the fuzzy ceiling of the given value.\r\n *\r\n * @function Phaser.Math.Fuzzy.Ceil\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {number} The fuzzy ceiling of the value.\r\n */\r\nexport function FuzzyCeil (value: number, epsilon: number = 0.0001): number\r\n{\r\n    return Math.ceil(value - epsilon);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the fuzzy floor of the given value.\r\n *\r\n * @function Phaser.Math.Fuzzy.Floor\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {number} The floor of the value.\r\n */\r\nexport function FuzzyFloor (value: number, epsilon: number = 0.0001): number\r\n{\r\n    return Math.floor(value + epsilon);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether `a` is fuzzily greater than `b`.\r\n *\r\n * `a` is fuzzily greater than `b` if it is more than `b - epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.GreaterThan\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if `a` is fuzzily greater than than `b`, otherwise `false`.\r\n */\r\nexport function FuzzyGreaterThan (a: number, b: number, epsilon: number = 0.0001): boolean\r\n{\r\n    return a > b - epsilon;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Check whether `a` is fuzzily less than `b`.\r\n *\r\n * `a` is fuzzily less than `b` if it is less than `b + epsilon`.\r\n *\r\n * @function Phaser.Math.Fuzzy.LessThan\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value.\r\n * @param {number} b - The second value.\r\n * @param {number} [epsilon=0.0001] - The epsilon.\r\n *\r\n * @return {boolean} `true` if `a` is fuzzily less than `b`, otherwise `false`.\r\n */\r\nexport function FuzzyLessThan (a: number, b: number, epsilon: number = 0.0001): boolean\r\n{\r\n    return a < b + epsilon;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates the factorial of a given number for integer values greater than 0.\r\n *\r\n * @function Phaser.Math.Factorial\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - A positive integer to calculate the factorial of.\r\n *\r\n * @return {number} The factorial of the given number.\r\n */\r\nexport function Factorial (value: number): number\r\n{\r\n    if (value === 0)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    let res = value;\r\n\r\n    while (--value)\r\n    {\r\n        res *= value;\r\n    }\r\n\r\n    return res;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Factorial } from './Factorial';\r\n\r\n/**\r\n * Calculates the Bernstein basis from the three factorial coefficients.\r\n *\r\n * @function Phaser.Math.Bernstein\r\n * @since 3.0.0\r\n *\r\n * @param {number} n - The first value.\r\n * @param {number} i - The second value.\r\n *\r\n * @return {number} The Bernstein basis of Factorial(n) / Factorial(i) / Factorial(n - i)\r\n */\r\nexport function Bernstein (n: number, i: number): number\r\n{\r\n    return Factorial(n) / Factorial(i) / Factorial(n - i);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Bernstein } from '../Bernstein';\r\n\r\n/**\r\n * A bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Bezier\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function BezierInterpolation (v: number[], k: number): number\r\n{\r\n    let b = 0;\r\n    const n = v.length - 1;\r\n\r\n    for (let i = 0; i <= n; i++)\r\n    {\r\n        b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\r\n    }\r\n\r\n    return b;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CatmullRom } from '../CatmullRom';\r\n\r\n/**\r\n * A Catmull-Rom interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.CatmullRom\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function CatmullRomInterpolation (v: number[], k: number): number\r\n{\r\n    const m = v.length - 1;\r\n    let f = m * k;\r\n    let i = Math.floor(f);\r\n\r\n    if (v[0] === v[m])\r\n    {\r\n        if (k < 0)\r\n        {\r\n            i = Math.floor(f = m * (1 + k));\r\n        }\r\n\r\n        return CatmullRom(f - i, v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m]);\r\n    }\r\n    else\r\n    {\r\n        if (k < 0)\r\n        {\r\n            return v[0] - (CatmullRom(-f, v[0], v[0], v[1], v[1]) - v[0]);\r\n        }\r\n\r\n        if (k > 1)\r\n        {\r\n            return v[m] - (CatmullRom(f - m, v[m], v[m], v[m - 1], v[m - 1]) - v[m]);\r\n        }\r\n\r\n        return CatmullRom(f - i, v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2]);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P0 (t: number, p: number): number\r\n{\r\n    const k = 1 - t;\r\n\r\n    return k * k * k * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P1 (t: number, p: number): number\r\n{\r\n    const k = 1 - t;\r\n\r\n    return 3 * k * k * t * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P2 (t: number, p: number): number\r\n{\r\n    return 3 * (1 - t) * t * t * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P3 (t: number, p: number): number\r\n{\r\n    return t * t * t * p;\r\n}\r\n\r\n/**\r\n * A cubic bezier interpolation method.\r\n *\r\n * https://medium.com/@adrian_cooney/bezier-interpolation-13b68563313a\r\n *\r\n * @function Phaser.Math.Interpolation.CubicBezier\r\n * @since 3.0.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The first control point.\r\n * @param {number} p2 - The second control point.\r\n * @param {number} p3 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function CubicBezierInterpolation (t: number, p0: number, p1: number, p2: number, p3: number): number\r\n{\r\n    return P0(t, p0) + P1(t, p1) + P2(t, p2) + P3(t, p3);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates a linear (interpolation) value over t.\r\n *\r\n * @function Phaser.Math.Linear\r\n * @since 3.0.0\r\n *\r\n * @param {number} p0 - The first point.\r\n * @param {number} p1 - The second point.\r\n * @param {number} t - The percentage between p0 and p1 to return, represented as a number between 0 and 1.\r\n *\r\n * @return {number} The step t% of the way between p0 and p1.\r\n */\r\nexport function Linear (p0: number, p1: number, t: number): number\r\n{\r\n    return (p1 - p0) * t + p0;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Linear } from '../Linear';\r\n\r\n/**\r\n * A linear interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.Linear\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Linear_interpolation}\r\n *\r\n * @param {number[]} v - The input array of values to interpolate between.\r\n * @param {!number} k - The percentage of interpolation, between 0 and 1.\r\n *\r\n * @return {!number} The interpolated value.\r\n */\r\nexport function LinearInterpolation (v: number[], k: number): number\r\n{\r\n    const m = v.length - 1;\r\n    const f = m * k;\r\n    const i = Math.floor(f);\r\n\r\n    if (k < 0)\r\n    {\r\n        return Linear(v[0], v[1], f);\r\n    }\r\n    else if (k > 1)\r\n    {\r\n        return Linear(v[m], v[m - 1], m - f);\r\n    }\r\n    else\r\n    {\r\n        return Linear(v[i], v[(i + 1 > m) ? m : i + 1], f - i);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P0 (t: number, p: number): number\r\n{\r\n    const k = 1 - t;\r\n\r\n    return k * k * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P1 (t: number, p: number): number\r\n{\r\n    return 2 * (1 - t) * t * p;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction P2 (t: number, p: number): number\r\n{\r\n    return t * t * p;\r\n}\r\n\r\n// https://github.com/mrdoob/three.js/blob/master/src/extras/core/Interpolations.js\r\n\r\n/**\r\n * A quadratic bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.QuadraticBezier\r\n * @since 3.2.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The control point.\r\n * @param {number} p2 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function QuadraticBezierInterpolation (t: number, p0: number, p1: number, p2: number): number\r\n{\r\n    return P0(t, p0) + P1(t, p1) + P2(t, p2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate a smooth interpolation percentage of `x` between `min` and `max`.\r\n *\r\n * The function receives the number `x` as an argument and returns 0 if `x` is less than or equal to the left edge,\r\n * 1 if `x` is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial,\r\n * between 0 and 1 otherwise.\r\n *\r\n * @function Phaser.Math.SmoothStep\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep}\r\n *\r\n * @param {number} x - The input value.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The percentage of interpolation, between 0 and 1.\r\n */\r\nexport function SmoothStep (x: number, min: number, max: number): number\r\n{\r\n    if (x <= min)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    if (x >= max)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    x = (x - min) / (max - min);\r\n\r\n    return x * x * (3 - 2 * x);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { SmoothStep } from '../SmoothStep';\r\n\r\n/**\r\n * A Smooth Step interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.SmoothStep\r\n * @since 3.9.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep}\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function SmoothStepInterpolation (t: number, min: number, max: number): number\r\n{\r\n    return min + (max - min) * SmoothStep(t, 0, 1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate a smoother interpolation percentage of `x` between `min` and `max`.\r\n *\r\n * The function receives the number `x` as an argument and returns 0 if `x` is less than or equal to the left edge,\r\n * 1 if `x` is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial,\r\n * between 0 and 1 otherwise.\r\n *\r\n * Produces an even smoother interpolation than {@link Phaser.Math.SmoothStep}.\r\n *\r\n * @function Phaser.Math.SmootherStep\r\n * @since 3.0.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n *\r\n * @param {number} x - The input value.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The percentage of interpolation, between 0 and 1.\r\n */\r\nexport function SmootherStep (x: number, min: number, max: number): number\r\n{\r\n    x = Math.max(0, Math.min(1, (x - min) / (max - min)));\r\n\r\n    return x * x * x * (x * (x * 6 - 15) + 10);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { SmootherStep } from '../SmootherStep';\r\n\r\n/**\r\n * A Smoother Step interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.SmootherStep\r\n * @since 3.9.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nexport function SmootherStepInterpolation (t: number, min: number, max: number): number\r\n{\r\n    return min + (max - min) * SmootherStep(t, 0, 1);\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\nexport function Add (a: Matrix2D, b: Matrix2D, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    return out.set(\r\n        a.a + b.a,\r\n        a.b + b.b,\r\n        a.c + b.c,\r\n        a.d + b.d,\r\n        a.tx + b.tx,\r\n        a.ty + b.ty\r\n    );\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Append (mat1: Matrix2D, mat2: Matrix2D, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = mat1;\r\n    const { a: a2, b: b2, c: c2, d: d2, tx: tx2, ty: ty2 } = mat2;\r\n\r\n    return out.set(\r\n        (a2 * a1) + (b2 * c1),\r\n        (a2 * b1) + (b2 * d1),\r\n        (c2 * a1) + (d2 * c1),\r\n        (c2 * b1) + (d2 * d1),\r\n        (tx2 * a1) + (ty2 * c1) + tx1,\r\n        (tx2 * b1) + (ty2 * d1) + ty1\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\n//  Clones the src matrix to a new Matrix2D.\r\n\r\nexport function Clone (src: IMatrix2D): Matrix2D\r\n{\r\n    return new Matrix2D(src.a, src.b, src.c, src.d, src.tx, src.ty);\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\nimport { Matrix2D } from './Matrix2D';\r\n\r\n//  Copy the values from the src Matrix to the target Matrix and return the target Matrix.\r\n\r\nexport function CopyFrom (src: IMatrix2D, target: Matrix2D): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    return target.set(a, b, c, d, tx, ty);\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n// Copy the values from src Matrix to the given Canvas Rendering Context.\r\n// This will use the Context.transform method.\r\n\r\nexport function CopyToContext (src: IMatrix2D, context: CanvasRenderingContext2D): CanvasRenderingContext2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    context.transform(a, b, c, d, tx, ty);\r\n\r\n    return context;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n//  Return the determinant for the src Matrix.\r\n\r\nexport function Determinant (src: IMatrix2D): number\r\n{\r\n    const { a, b, c, d } = src;\r\n\r\n    return (a * d) - (b * c);\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\n\r\n//  Compares the a and b matrix and returns if they are equal, based on the epsilon.\r\n\r\nexport function Equals (a: IMatrix2D, b: IMatrix2D, epsilon: number = 0.000001): boolean\r\n{\r\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = a;\r\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = b;\r\n\r\n    return (\r\n        Math.abs(a0 - a1) <= epsilon * Math.max(1, Math.abs(a0), Math.abs(a1)) &&\r\n        Math.abs(b0 - b1) <= epsilon * Math.max(1, Math.abs(b0), Math.abs(b1)) &&\r\n        Math.abs(c0 - c1) <= epsilon * Math.max(1, Math.abs(c0), Math.abs(c1)) &&\r\n        Math.abs(d0 - d1) <= epsilon * Math.max(1, Math.abs(d0), Math.abs(d1)) &&\r\n        Math.abs(tx0 - tx1) <= epsilon * Math.max(1, Math.abs(tx0), Math.abs(tx1)) &&\r\n        Math.abs(ty0 - ty1) <= epsilon * Math.max(1, Math.abs(ty0), Math.abs(ty1))\r\n    );\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\n\r\n//  Compares the a and b matrix and returns if they are equal.\r\n\r\nexport function ExactEquals (a: IMatrix2D, b: IMatrix2D): boolean\r\n{\r\n    return (\r\n        a.a === b.a &&\r\n        a.b === b.b &&\r\n        a.c === b.c &&\r\n        a.d === b.d &&\r\n        a.tx === b.tx &&\r\n        a.ty === b.ty\r\n    );\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\nexport function Frobenius (src: IMatrix2D): number\r\n{\r\n    return (Math.hypot(src.a, src.b, src.c, src.d, src.tx, src.ty, 1));\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Rotates the target Matrix by the angle (in radians), then returns the target Matrix.\r\n\r\nexport function Rotate (target: Matrix2D, angle: number, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    const sin = Math.sin(angle);\r\n    const cos = Math.cos(angle);\r\n\r\n    return out.set(\r\n        (a * cos) + (c * sin),\r\n        (b * cos) + (d * sin),\r\n        (a * -sin) + (c * cos),\r\n        (b * -sin) + (d * cos),\r\n        tx,\r\n        ty\r\n    );\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\nimport { Rotate } from './Rotate';\r\n\r\nexport function FromRotation (angle: number): Matrix2D\r\n{\r\n    const target = new Matrix2D();\r\n\r\n    return Rotate(target, angle, target);\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Scales the target Matrix by the given amounts, then returns the target Matrix.\r\n\r\nexport function Scale (target: Matrix2D, scaleX: number, scaleY: number, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    return out.set(\r\n        a * scaleX,\r\n        b * scaleX,\r\n        c * scaleY,\r\n        d * scaleY,\r\n        tx,\r\n        ty\r\n    );\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\nimport { Scale } from './Scale';\r\n\r\nexport function FromScaling (scaleX: number, scaleY: number = scaleX): Matrix2D\r\n{\r\n    const target = new Matrix2D();\r\n\r\n    return Scale(target, scaleX, scaleY, target);\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Translates the target Matrix and returns the target\r\n\r\nexport function Translate (target: Matrix2D, x: number, y: number, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    out.tx = (a * x) + (c * y) + tx;\r\n    out.ty = (b * x) + (d * y) + ty;\r\n\r\n    return out;\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\nimport { Translate } from './Translate';\r\n\r\nexport function FromTranslation (x: number, y: number): Matrix2D\r\n{\r\n    const target = new Matrix2D();\r\n\r\n    return Translate(target, x, y, target);\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\nimport { Vec2 } from '../vec2/Vec2';\r\n\r\nexport function GlobalToLocal (mat: IMatrix2D, x: number, y: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { a, b, c, d, tx, ty } = mat;\r\n\r\n    const id: number = 1 / ((a * d) + (c * -b));\r\n\r\n    return out.set(\r\n        (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id),\r\n        (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id)\r\n    );\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Apply the identity, translate, rotate and scale operations on the target Matrix then returns it.\r\n\r\nexport function ITRS (target: Matrix2D, x: number, y: number, angle: number, scaleX: number, scaleY: number): Matrix2D\r\n{\r\n    if (angle === 0)\r\n    {\r\n        return target.set(1, 0, 0, 1, x, y);\r\n    }\r\n    else\r\n    {\r\n        const sin = Math.sin(angle);\r\n        const cos = Math.cos(angle);\r\n\r\n        return target.set(\r\n            cos * scaleX,\r\n            sin * scaleX,\r\n            -sin * scaleY,\r\n            cos * scaleY,\r\n            x,\r\n            y\r\n        );\r\n    }\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Apply the identity, translate, rotate, scale and skew operations on the target Matrix then returns it.\r\n\r\nexport function ITRSS (target: Matrix2D, x: number, y: number, angle: number = 0, scaleX: number = 1, scaleY: number = 1, skewX: number = 0, skewY: number = 0): Matrix2D\r\n{\r\n    if (angle === 0)\r\n    {\r\n        return target.set(1, 0, 0, 1, x, y);\r\n    }\r\n    else\r\n    {\r\n        return target.set(\r\n            Math.cos(angle + skewY) * scaleX,\r\n            Math.sin(angle + skewY) * scaleX,\r\n            -Math.sin(angle - skewX) * scaleY,\r\n            Math.cos(angle - skewX) * scaleY,\r\n            x,\r\n            y\r\n        );\r\n    }\r\n}\r\n","import { Matrix2D } from '../matrix2d/Matrix2D';\r\n\r\nexport function Identity (): Matrix2D\r\n{\r\n    return new Matrix2D();\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Inverts the target Matrix and then returns it\r\n\r\nexport function Invert (target: Matrix2D, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    let determinant: number = a * d - b * c;\r\n\r\n    if (determinant)\r\n    {\r\n        determinant = 1 / determinant;\r\n\r\n        out.set(\r\n            d * determinant,\r\n            -b * determinant,\r\n            -c * determinant,\r\n            a * determinant,\r\n            (c * ty - d * tx) * determinant,\r\n            (b * tx - a * ty) * determinant\r\n        );\r\n    }\r\n\r\n    return out;\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\nimport { Vec2 } from '../vec2/Vec2';\r\n\r\nexport function LocalToGlobal (mat: IMatrix2D, x: number, y: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { a, b, c, d, tx, ty } = mat;\r\n\r\n    return out.set(\r\n        (a * x) + (c * y) + tx,\r\n        (b * x) + (d * y) + ty\r\n    );\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Multiplies the target Matrix by the src Matrix and returns the target.\r\n\r\nexport function Multiply (target: Matrix2D, src: Matrix2D, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = target;\r\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = src;\r\n\r\n    return out.set(\r\n        a0 * a1 + c0 * b1,\r\n        b0 * a1 + d0 * b1,\r\n        a0 * c1 + c0 * d1,\r\n        b0 * c1 + d0 * d1,\r\n        a0 * tx1 + c0 * ty1 + tx0,\r\n        b0 * tx1 + d0 * ty1 + ty0\r\n    );\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Multiplies the target Matrix by the given amount, then returns the target Matrix.\r\n\r\nexport function MultiplyScalar (target: Matrix2D, scalar: number, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    return out.set(\r\n        a * scalar,\r\n        b * scalar,\r\n        c * scalar,\r\n        d * scalar,\r\n        tx * scalar,\r\n        ty * scalar\r\n    );\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Multiplies the target Matrix by the given amount, then returns the target Matrix.\r\n\r\nexport function MultiplyScalarAndAdd (target: Matrix2D, src: Matrix2D, scalar: number, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n    const { a: ta, b: tb, c: tc, d: td, tx: ttx, ty: tty } = target;\r\n\r\n    return out.set(\r\n        ta + (a * scalar),\r\n        tb + (b * scalar),\r\n        tc + (c * scalar),\r\n        td + (d * scalar),\r\n        ttx + (tx * scalar),\r\n        tty + (ty * scalar)\r\n    );\r\n}\r\n","import { IMatrix2D } from './IMatrix2D';\r\n\r\n// Copy the values from the src Matrix to the given Canvas Rendering Context.\r\n// This will use the Context.setTransform method.\r\n\r\nexport function SetToContext (src: IMatrix2D, context: CanvasRenderingContext2D): CanvasRenderingContext2D\r\n{\r\n    const { a, b, c, d, tx, ty } = src;\r\n\r\n    context.setTransform(a, b, c, d, tx, ty);\r\n\r\n    return context;\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Skews the target Matrix by the given angles (in radians), then returns the target Matrix\r\n\r\nexport function Skew (target: Matrix2D, angleX: number, angleY: number, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    const { a, b, c, d, tx, ty } = target;\r\n\r\n    return out.set(\r\n        a,\r\n        b + Math.tan(angleX),\r\n        c + Math.tan(angleY),\r\n        d,\r\n        tx,\r\n        ty\r\n    );\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Subtracts the src Matrix from the target Matrix and returns the target.\r\n\r\nexport function Subtract (a: Matrix2D, b: Matrix2D, out: Matrix2D = new Matrix2D()): Matrix2D\r\n{\r\n    return out.set(\r\n        a.a - b.a,\r\n        a.b - b.b,\r\n        a.c - b.c,\r\n        a.d - b.d,\r\n        a.tx - b.tx,\r\n        a.ty - b.ty\r\n    );\r\n}\r\n","import { Matrix2D } from './Matrix2D';\r\n\r\n//  Zeroes the target Matrix and returns the target\r\n\r\nexport function Zero (target: Matrix2D): Matrix2D\r\n{\r\n    return target.set(0, 0, 0, 0, 0, 0);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Returns the nearest power of 2 to the given `value`.\r\n *\r\n * @function Phaser.Math.Pow2.GetNext\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value.\r\n *\r\n * @return {number} The nearest power of 2 to `value`.\r\n */\r\nexport function GetPowerOfTwo (value: number): number\r\n{\r\n    const index = Math.log(value) / 0.6931471805599453;\r\n\r\n    return (1 << Math.ceil(index));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if the given `width` and `height` are a power of two.\r\n * Useful for checking texture dimensions.\r\n *\r\n * @function Phaser.Math.Pow2.IsSize\r\n * @since 3.0.0\r\n *\r\n * @param {number} width - The width.\r\n * @param {number} height - The height.\r\n *\r\n * @return {boolean} `true` if `width` and `height` are a power of two, otherwise `false`.\r\n */\r\nexport function IsSizePowerOfTwo (width: number, height: number): boolean\r\n{\r\n    if (width < 1 || height < 1)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return ((width & (width - 1)) === 0) && ((height & (height - 1)) === 0);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Tests the value and returns `true` if it is a power of two.\r\n *\r\n * @function Phaser.Math.Pow2.IsValue\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to check if it's a power of two.\r\n *\r\n * @return {boolean} Returns `true` if `value` is a power of two, otherwise `false`.\r\n */\r\nexport function IsValuePowerOfTwo (value: number): boolean\r\n{\r\n    return (value > 0 && (value & (value - 1)) === 0);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using ceil.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `15`.\r\n * As will `14` snap to `15`... but `16` will snap to `20`.\r\n *\r\n * @function Phaser.Math.Snap.Ceil\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nexport function SnapCeil (value: number, gap: number, start: number = 0, divide: boolean = false): number\r\n{\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.ceil(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using floor.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10`.\r\n * As will `14` snap to `10`... but `16` will snap to `15`.\r\n *\r\n * @function Phaser.Math.Snap.Floor\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nexport function SnapFloor (value: number, gap: number, start: number = 0, divide: boolean = false): number\r\n{\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.floor(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Snap a value to nearest grid slice, using rounding.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10` whereas `14` will snap to `15`.\r\n *\r\n * @function Phaser.Math.Snap.To\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\r\nexport function SnapTo (value: number, gap: number, start: number = 0, divide: boolean = false): number\r\n{\r\n    if (gap === 0)\r\n    {\r\n        return value;\r\n    }\r\n\r\n    value -= start;\r\n    value = gap * Math.round(value / gap);\r\n\r\n    return (divide) ? (start + value) / gap : start + value;\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Abs (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        Math.abs(a.x),\r\n        Math.abs(a.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Add (a: Vec2, b: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x + b.x,\r\n        a.y + b.y\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function AddScalar (a: Vec2, scalar: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x + scalar,\r\n        a.y + scalar\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function Angle (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return Math.atan2(b.y - a.y, b.x - a.x);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function AngleY (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return Math.atan2(b.x - a.x, b.y - a.y);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { Bezier as MathBezier } from '../Bezier';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function Bezier (a: IVec2Like, b: IVec2Like, c: IVec2Like, d: IVec2Like, t: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        MathBezier(t, a.x, b.x, c.x, d.x),\r\n        MathBezier(t, a.y, b.y, c.y, d.y)\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { CatmullRom as MathCatmullRom } from '../CatmullRom';\r\nimport { Vec2 } from './Vec2';\r\n\r\n// Gets a new Vector2 for float t on the CatmullRom spline defined by the 4 points\r\n\r\nexport function CatmullRom (p1: IVec2Like, p2: IVec2Like, p3: IVec2Like, p4: IVec2Like, t: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        MathCatmullRom(t, p1.x, p2.x, p3.x, p4.x),\r\n        MathCatmullRom(t, p1.y, p2.y, p3.y, p4.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Ceil (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        Math.ceil(a.x),\r\n        Math.ceil(a.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Scale (a: Vec2, scalar: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x * scalar,\r\n        a.y * scalar\r\n    );\r\n}\r\n","import { Add } from './Add';\r\nimport { Scale } from './Scale';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function Center (a: Vec2, b: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    Add(a, b, out);\r\n\r\n    return Scale(out, 0.5, out);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function ChebyshevDistance (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return Math.max(Math.abs(a.x - b.x), Math.abs(a.y - b.y));\r\n}\r\n","import { Clamp as MathClamp } from '../Clamp';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function Clamp (a: Vec2, min: Vec2, max: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    // assumes min < max, componentwise\r\n\r\n    return out.set(\r\n        MathClamp(a.x, min.x, max.x),\r\n        MathClamp(a.y, min.y, max.y)\r\n    );\r\n}\r\n","import { Clamp as MathClamp } from '../Clamp';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function ClampScalar (a: Vec2, min: number, max: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        MathClamp(a.x, min, max),\r\n        MathClamp(a.y, min, max)\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function Clone (source: IVec2Like): Vec2\r\n{\r\n    return new Vec2(source.x, source.y);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function CopyFrom (source: IVec2Like, dest: Vec2): Vec2\r\n{\r\n    return dest.set(source.x, source.y);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function Cross (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return a.x * b.y - a.y * b.x;\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\n// Calculates the squared euclidian distance between two vec2s\r\n\r\nexport function DistanceSquared (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    const x = a.x - b.x;\r\n    const y = a.y - b.y;\r\n\r\n    return (x * x) + (y * y);\r\n}\r\n","import { DistanceSquared } from './DistanceSquared';\r\nimport { IVec2Like } from './IVec2Like';\r\n\r\nexport function Distance (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return Math.sqrt(DistanceSquared(a, b));\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function Dot (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return a.x * b.x + a.y * b.y;\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function MultiplyByFloats (a: Vec2, x: number, y: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x * x,\r\n        a.y * y\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Subtract (a: Vec2, b: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x - b.x,\r\n        a.y - b.y\r\n    );\r\n}\r\n","import { Add } from './Add';\r\nimport { Distance } from './Distance';\r\nimport { DistanceSquared } from './DistanceSquared';\r\nimport { Dot } from './Dot';\r\nimport { MultiplyByFloats } from './MultiplyByFloats';\r\nimport { Subtract } from './Subtract';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function DistanceFromSegment (p: Vec2, a: Vec2, b: Vec2): number\r\n{\r\n    const d = DistanceSquared(a, b);\r\n\r\n    if (d === 0)\r\n    {\r\n        return Distance(p, a);\r\n    }\r\n\r\n    const v = Subtract(b, a);\r\n\r\n    Subtract(p, a, p);\r\n\r\n    const t = Math.max(0, Math.min(1, Dot(p, v) / 12));\r\n\r\n    const proj = Add(a, MultiplyByFloats(v, t, t, v));\r\n\r\n    return Distance(p, proj);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function DistancePower (a: IVec2Like, b: IVec2Like, pow: number = 2): number\r\n{\r\n    return Math.sqrt(Math.pow(b.x - a.x, pow) + Math.pow(b.y - a.y, pow));\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Divide (a: Vec2, b: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x / b.x,\r\n        a.y / b.y\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function DivideScalar (a: Vec2, scalar: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x / scalar,\r\n        a.y / scalar\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function Equals (a: IVec2Like, b: IVec2Like): boolean\r\n{\r\n    return a.x === b.x && a.y === b.y;\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Floor (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        Math.floor(a.x),\r\n        Math.floor(a.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\n//  Get a Vec2 from a Vec2s floored values\r\n\r\nexport function Fract (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x - Math.floor(a.x),\r\n        a.y - Math.floor(a.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\n/**\r\n * Returns a Vector2 containing the x and y position of the given index in a `width` x `height` sized grid.\r\n *\r\n * For example, in a 6 x 4 grid, index 16 would equal x: 4 y: 2.\r\n *\r\n * If the given index is out of range an empty Vector2 is returned.\r\n */\r\nexport function FromGridIndex (index: number, width: number, height: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    let x = 0;\r\n    let y = 0;\r\n    const total = width * height;\r\n\r\n    if (index > 0 && index <= total)\r\n    {\r\n        if (index > width - 1)\r\n        {\r\n            y = Math.floor(index / width);\r\n            x = index - (y * width);\r\n        }\r\n        else\r\n        {\r\n            x = index;\r\n        }\r\n\r\n        out.set(x, y);\r\n    }\r\n\r\n    return out;\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\n/**\r\n * Takes the `x` and `y` coordinates and transforms them into the same space as\r\n * defined by the position, rotation and scale values.\r\n */\r\nexport function FromTransform (x: number, y: number, positionX: number, positionY: number, rotation: number, scaleX: number, scaleY: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const sin = Math.sin(rotation);\r\n    const cos = Math.cos(rotation);\r\n\r\n    // Rotate and Scale\r\n    const a = cos * scaleX;\r\n    const b = sin * scaleX;\r\n    const c = -sin * scaleY;\r\n    const d = cos * scaleY;\r\n\r\n    //  Invert\r\n    const id = 1 / ((a * d) + (c * -b));\r\n\r\n    return out.set(\r\n        (d * id * x) + (-c * id * y) + (((positionY * c) - (positionX * d)) * id),\r\n        (a * id * y) + (-b * id * x) + (((-positionY * a) + (positionX * b)) * id)\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { FuzzyEqual as MathFuzzyEqual } from '../fuzzy/FuzzyEqual';\r\n\r\nexport function FuzzyEquals (a: IVec2Like, b: IVec2Like, epsilon: number = 0.0001): boolean\r\n{\r\n    return MathFuzzyEqual(a.x, b.x, epsilon) && MathFuzzyEqual(a.y, b.y, epsilon);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { Hermite as MathHermite } from '../Hermite';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function Hermite (a: IVec2Like, b: IVec2Like, c: IVec2Like, d: IVec2Like, t: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        MathHermite(t, a.x, b.x, c.x, d.x),\r\n        MathHermite(t, a.y, b.y, c.y, d.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Inverse (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        1 / a.x,\r\n        1 / a.y\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function Length (a: IVec2Like): number\r\n{\r\n    return Math.sqrt(a.x * a.x + a.y * a.y);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function LengthSquared (a: IVec2Like): number\r\n{\r\n    return (a.x * a.x + a.y * a.y);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { Vec2 } from './Vec2';\r\n\r\n// t - interpolation amount, in the range [0-1], between the two inputs\r\n\r\nexport function Lerp (a: IVec2Like, b: IVec2Like, t: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const x = a.x;\r\n    const y = a.y;\r\n\r\n    return out.set(\r\n        x + t * (b.x - x),\r\n        y + t * (b.y - y)\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function ManhattanDistance (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function ManhattanLength (a: IVec2Like): number\r\n{\r\n    return Math.abs(a.x) + Math.abs(a.y);\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\n// Returns the maximum of two vec2's\r\n\r\nexport function Max (a: Vec2, b: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { x: ax, y: ay } = a;\r\n    const { x: bx, y: by } = b;\r\n\r\n    return out.set(\r\n        Math.max(ax, bx),\r\n        Math.max(ay, by)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\n// Returns the minimum of two vec2's\r\n\r\nexport function Min (a: Vec2, b: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { x: ax, y: ay } = a;\r\n    const { x: bx, y: by } = b;\r\n\r\n    return out.set(\r\n        Math.min(ax, bx),\r\n        Math.min(ay, by)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Multiply (a: Vec2, b: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x * b.x,\r\n        a.y * b.y\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Negate (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        -a.x,\r\n        -a.y\r\n    );\r\n}\r\n","import { DivideScalar } from './DivideScalar';\r\nimport { Length } from './Length';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function Normalize (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return DivideScalar(a, Length(a) || 1, out);\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function One (): Vec2\r\n{\r\n    return new Vec2(1, 1);\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\n\r\nexport function PerpDot (a: IVec2Like, b: IVec2Like): number\r\n{\r\n    return (a.x * b.y) - (a.y * b.x);\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Random (a: Vec2, scale: number = 1, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const r = Math.random() * 2 * Math.PI;\r\n\r\n    return out.set(\r\n        Math.cos(r) * scale,\r\n        Math.sin(r) * scale\r\n    );\r\n}\r\n","import { IVec2Like } from './IVec2Like';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function Rotate (a: Vec2, origin: IVec2Like, angle: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n\r\n    const x = a.x - origin.x;\r\n    const y = a.y - origin.y;\r\n\r\n    return out.set(\r\n        x * c - y * s + origin.x,\r\n        x * s + y * c + origin.y\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Round (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        Math.round(a.x),\r\n        Math.round(a.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function RoundToZero (a: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        (a.x < 0) ? Math.ceil(a.x) : Math.floor(a.x),\r\n        (a.y < 0) ? Math.ceil(a.y) : Math.floor(a.y)\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function ScaleAndAdd (a: Vec2, b: Vec2, scalar: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x + b.x * scalar,\r\n        a.y + b.y * scalar\r\n    );\r\n}\r\n","import { Normalize } from './Normalize';\r\nimport { Scale } from './Scale';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function SetLength (a: Vec2, length: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    Normalize(a, out);\r\n\r\n    return Scale(out, length, out);\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function SubtractScalar (a: Vec2, scalar: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        a.x - scalar,\r\n        a.y - scalar\r\n    );\r\n}\r\n","import { FromTransform } from './FromTransform';\r\nimport { IVec2Like } from './IVec2Like';\r\nimport { Vec2 } from './Vec2';\r\n\r\n/**\r\n * Takes the `x` and `y` coordinates and transforms them into the same space as\r\n * defined by the position, rotation and scale values.\r\n */\r\nexport function Transform (v: IVec2Like, positionX: number, positionY: number, rotation: number, scaleX: number, scaleY: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return FromTransform(v.x, v.y, positionX, positionY, rotation, scaleX, scaleY, out);\r\n}\r\n","import { IMatrix2D } from '../matrix2d/IMatrix2D';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function TransformMat2d (v: Vec2, m: IMatrix2D, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { a, b, c, d, tx, ty } = m;\r\n\r\n    return out.set(\r\n        a * v.x + c * v.y + tx,\r\n        b * v.x + d * v.y + ty\r\n    );\r\n}\r\n","import { IMatrix4 } from '../mat4/IMatrix4';\r\nimport { Vec2 } from './Vec2';\r\n\r\nexport function TransformMat4 (v: Vec2, m: IMatrix4, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const data = m.data;\r\n\r\n    return out.set(\r\n        data[0] * v.x + data[4] * v.y + data[12],\r\n        data[1] * v.x + data[5] * v.y + data[13]\r\n    );\r\n}\r\n","import { Vec2 } from './Vec2';\r\n\r\nexport function Zero (): Vec2\r\n{\r\n    return new Vec2(0, 0);\r\n}\r\n","export class Vec4\r\n{\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, w: number = 1)\r\n    {\r\n        this.set(x, y, z, w);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, z: number = 0, w: number = 1): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n\r\n        return this;\r\n    }\r\n\r\n    toArray (dst: Float32List = [], index: number = 0): Float32List\r\n    {\r\n        const { x, y, z,w } = this;\r\n\r\n        dst[ index ] = x;\r\n        dst[ index + 1 ] = y;\r\n        dst[ index + 2 ] = z;\r\n        dst[ index + 3 ] = w;\r\n\r\n        return dst;\r\n    }\r\n\r\n    fromArray (src: Float32List, index: number = 0): this\r\n    {\r\n        return this.set(\r\n            src[ index ],\r\n            src[ index + 1 ],\r\n            src[ index + 2 ],\r\n            src[ index + 3 ]\r\n        );\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        const { x, y, z, w } = this;\r\n\r\n        return `{ x=${x}, y=${y}, z=${z}, w=${w} }`;\r\n    }\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Abs (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        Math.abs(a.x),\r\n        Math.abs(a.y),\r\n        Math.abs(a.z),\r\n        Math.abs(a.w)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Add (a: Vec4, b: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x + b.x,\r\n        a.y + b.y,\r\n        a.z + b.z,\r\n        a.w + b.w\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function AddScalar (a: Vec4, scalar: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x + scalar,\r\n        a.y + scalar,\r\n        a.z + scalar,\r\n        a.w + scalar\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\nimport { Bezier as MathBezier } from '../Bezier';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function Bezier (a: IVec4Like, b: IVec4Like, c: IVec4Like, d: IVec4Like, t: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        MathBezier(t, a.x, b.x, c.x, d.x),\r\n        MathBezier(t, a.y, b.y, c.y, d.y),\r\n        MathBezier(t, a.z, b.z, c.z, d.z),\r\n        MathBezier(t, a.w, b.w, c.w, d.w)\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\nimport { CatmullRom as MathCatmullRom } from '../CatmullRom';\r\nimport { Vec4 } from './Vec4';\r\n\r\n// Gets a new Vector3 for float t on the CatmullRom spline defined by the 4 points\r\n\r\nexport function CatmullRom (p1: IVec4Like, p2: IVec4Like, p3: IVec4Like, p4: IVec4Like, t: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        MathCatmullRom(t, p1.x, p2.x, p3.x, p4.x),\r\n        MathCatmullRom(t, p1.y, p2.y, p3.y, p4.y),\r\n        MathCatmullRom(t, p1.z, p2.z, p3.z, p4.z),\r\n        MathCatmullRom(t, p1.w, p2.w, p3.w, p4.w)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Ceil (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        Math.ceil(x),\r\n        Math.ceil(y),\r\n        Math.ceil(z),\r\n        Math.ceil(w)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Scale (a: Vec4, scalar: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        x * scalar,\r\n        y * scalar,\r\n        z * scalar,\r\n        w * scalar\r\n    );\r\n}\r\n","import { Add } from './Add';\r\nimport { Scale } from './Scale';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function Center (a: Vec4, b: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    Add(a, b, out);\r\n\r\n    return Scale(out, 0.5, out);\r\n}\r\n","import { Clamp as MathClamp } from '../Clamp';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function Clamp (a: Vec4, min: Vec4, max: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    // assumes min < max, componentwise\r\n\r\n    return out.set(\r\n        MathClamp(a.x, min.x, max.x),\r\n        MathClamp(a.y, min.y, max.y),\r\n        MathClamp(a.z, min.z, max.z),\r\n        MathClamp(a.w, min.w, max.w)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function DivideScalar (a: Vec4, scalar: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        x / scalar,\r\n        y / scalar,\r\n        z / scalar,\r\n        w / scalar\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\n\r\nexport function Length (a: IVec4Like): number\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n","import { DivideScalar } from './DivideScalar';\r\nimport { Length } from './Length';\r\nimport { Clamp as MathClamp } from '../Clamp';\r\nimport { Scale } from './Scale';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function ClampLength (a: Vec4, min: number, max: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const length = Length(a);\r\n\r\n    DivideScalar(a, length || 1, out);\r\n\r\n    return Scale(out, MathClamp(min, max, length), out);\r\n}\r\n","import { Clamp as MathClamp } from '../Clamp';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function ClampScalar (a: Vec4, min: number, max: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        MathClamp(a.x, min, max),\r\n        MathClamp(a.y, min, max),\r\n        MathClamp(a.z, min, max),\r\n        MathClamp(a.w, min, max)\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function Clone (source: IVec4Like): Vec4\r\n{\r\n    const { x, y, z, w } = source;\r\n\r\n    return new Vec4(x, y, z, w);\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function CopyFrom (source: IVec4Like, dest: Vec4): Vec4\r\n{\r\n    const { x, y, z, w } = source;\r\n\r\n    return dest.set(x, y, z, w);\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\n// Returns the cross-product of three vectors in a 4-dimensional space\r\n\r\nexport function Cross (u: Vec4, v: Vec4, w: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x: ux, y: uy, z: uz, w: uw } = u;\r\n    const { x: vx, y: vy, z: vz, w: vw } = v;\r\n    const { x: wx, y: wy, z: wz, w: ww } = w;\r\n\r\n    const A = vx * wy - vy * wx;\r\n    const B = vx * wz - vz * wx;\r\n    const C = vx * ww - vw * wx;\r\n    const D = vy * wz - vz * wy;\r\n    const E = vy * ww - vw * wy;\r\n    const F = vz * ww - vw * wz;\r\n    const G = ux;\r\n    const H = uy;\r\n    const I = uz;\r\n    const J = uw;\r\n\r\n    return out.set(\r\n        H * F - I * E + J * D,\r\n        -(G * F) + I * C - J * B,\r\n        G * E - H * C + J * A,\r\n        -(G * D) + H * B - I * A\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\n\r\n// Calculates the squared euclidian distance between two vec3s\r\n\r\nexport function DistanceSquared (a: IVec4Like, b: IVec4Like): number\r\n{\r\n    const x = a.x - b.x;\r\n    const y = a.y - b.y;\r\n    const z = a.z - b.z;\r\n    const w = a.w - b.w;\r\n\r\n    return (x * x) + (y * y) + (z * z) + (w * w);\r\n}\r\n","import { DistanceSquared } from './DistanceSquared';\r\nimport { IVec4Like } from './IVec4Like';\r\n\r\nexport function Distance (a: IVec4Like, b: IVec4Like): number\r\n{\r\n    return Math.sqrt(DistanceSquared(a, b));\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Divide (a: Vec4, b: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x / b.x,\r\n        a.y / b.y,\r\n        a.z / b.z,\r\n        a.w / b.w\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\n\r\nexport function Dot (a: IVec4Like, b: IVec4Like): number\r\n{\r\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\n\r\nexport function Equals (a: IVec4Like, b: IVec4Like): boolean\r\n{\r\n    return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Floor (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        Math.floor(x),\r\n        Math.floor(y),\r\n        Math.floor(z),\r\n        Math.floor(w)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\n//  Get a Vec4 from a Vec4s floored values\r\n\r\nexport function Fract (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x - Math.floor(a.x),\r\n        a.y - Math.floor(a.y),\r\n        a.z - Math.floor(a.z),\r\n        a.w - Math.floor(a.w)\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\nimport { FuzzyEqual as MathFuzzyEqual } from '../fuzzy/FuzzyEqual';\r\n\r\nexport function FuzzyEquals (a: IVec4Like, b: IVec4Like, epsilon: number = 0.0001): boolean\r\n{\r\n    return (\r\n        MathFuzzyEqual(a.x, b.x, epsilon) &&\r\n        MathFuzzyEqual(a.y, b.y, epsilon) &&\r\n        MathFuzzyEqual(a.z, b.z, epsilon) &&\r\n        MathFuzzyEqual(a.w, b.w, epsilon)\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\nimport { Hermite as MathHermite } from '../Hermite';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function Hermite (a: IVec4Like, b: IVec4Like, c: IVec4Like, d: IVec4Like, t: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        MathHermite(t, a.x, b.x, c.x, d.x),\r\n        MathHermite(t, a.y, b.y, c.y, d.y),\r\n        MathHermite(t, a.z, b.z, c.z, d.z),\r\n        MathHermite(t, a.w, b.w, c.w, d.w)\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\n\r\nexport function LengthSquared (a: IVec4Like): number\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return x * x + y * y + z * z + w * w;\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\n// t - interpolation amount, in the range [0-1], between the two inputs\r\n\r\nexport function Lerp (a: Vec4, b: Vec4, t: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        x + t * (b.x - x),\r\n        y + t * (b.y - y),\r\n        z + t * (b.z - z),\r\n        w + t * (b.w - w)\r\n    );\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\n\r\nexport function ManhattanDistance (a: IVec4Like, b: IVec4Like): number\r\n{\r\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z) + Math.abs(a.w - b.w);\r\n}\r\n","import { IVec4Like } from './IVec4Like';\r\n\r\nexport function ManhattanLength (a: IVec4Like): number\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return Math.abs(x) + Math.abs(y) + Math.abs(z) + Math.abs(w);\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\n// Returns the maximum of two vec4's\r\n\r\nexport function Max (a: Vec4, b: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x: ax, y: ay, z: az, w: aw } = a;\r\n    const { x: bx, y: by, z: bz, w: bw } = b;\r\n\r\n    return out.set(\r\n        Math.max(ax, bx),\r\n        Math.max(ay, by),\r\n        Math.max(az, bz),\r\n        Math.max(aw, bw)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\n// Returns the minimum of two vec4's\r\n\r\nexport function Min (a: Vec4, b: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x: ax, y: ay, z: az, w: aw } = a;\r\n    const { x: bx, y: by, z: bz, w: bw } = b;\r\n\r\n    return out.set(\r\n        Math.min(ax, bx),\r\n        Math.min(ay, by),\r\n        Math.min(az, bz),\r\n        Math.min(aw, bw)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Multiply (a: Vec4, b: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x * b.x,\r\n        a.y * b.y,\r\n        a.z * b.z,\r\n        a.w * b.w\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function MultiplyByFloats (a: Vec4, x: number, y: number, z: number, w: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x * x,\r\n        a.y * y,\r\n        a.z * z,\r\n        a.w * w\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Negate (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        -a.x,\r\n        -a.y,\r\n        -a.z,\r\n        -a.w\r\n    );\r\n}\r\n","import { DivideScalar } from './DivideScalar';\r\nimport { Length } from './Length';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function Normalize (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return DivideScalar(a, Length(a) || 1, out);\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function One (): Vec4\r\n{\r\n    return new Vec4(1, 1, 1, 1);\r\n}\r\n","import { NOOP } from '../../utils/NOOP';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport type Vec4CallbackType = (vec3: Vec4Callback) => void;\r\n\r\nexport class Vec4Callback extends Vec4\r\n{\r\n    private _x: number;\r\n    private _y: number;\r\n    private _z: number;\r\n    private _w: number;\r\n\r\n    onChange: Vec4CallbackType;\r\n\r\n    constructor (onChange: Vec4CallbackType, x: number = 0, y: number = 0, z: number = 0, w: number = 0)\r\n    {\r\n        super(x, y, z, w);\r\n\r\n        this.onChange = onChange;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.onChange = NOOP;\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, z: number = 0, w: number = 0): this\r\n    {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._w = w;\r\n\r\n        if (this.onChange)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    get x (): number\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    set x (value: number)\r\n    {\r\n        const prev = this._x;\r\n\r\n        this._x = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get y (): number\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    set y (value: number)\r\n    {\r\n        const prev = this._y;\r\n\r\n        this._y = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get z (): number\r\n    {\r\n        return this._z;\r\n    }\r\n\r\n    set z (value: number)\r\n    {\r\n        const prev = this._z;\r\n\r\n        this._z = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n\r\n    get w (): number\r\n    {\r\n        return this._w;\r\n    }\r\n\r\n    set w (value: number)\r\n    {\r\n        const prev = this._w;\r\n\r\n        this._w = value;\r\n\r\n        if (prev !== value)\r\n        {\r\n            this.onChange(this);\r\n        }\r\n    }\r\n}\r\n","import { Vec4Callback, Vec4CallbackType } from './Vec4Callback';\r\n\r\nexport class RGBACallback extends Vec4Callback\r\n{\r\n    constructor (onChange: Vec4CallbackType, r: number = 0, g: number = 0, b: number = 0, a: number = 1)\r\n    {\r\n        super(onChange, r, g, b, a);\r\n    }\r\n\r\n    set r (value: number)\r\n    {\r\n        this.x = value;\r\n    }\r\n\r\n    get r (): number\r\n    {\r\n        return this.x;\r\n    }\r\n\r\n    set g (value: number)\r\n    {\r\n        this.y = value;\r\n    }\r\n\r\n    get g (): number\r\n    {\r\n        return this.y;\r\n    }\r\n\r\n    set b (value: number)\r\n    {\r\n        this.z = value;\r\n    }\r\n\r\n    get b (): number\r\n    {\r\n        return this.z;\r\n    }\r\n\r\n    set a (value: number)\r\n    {\r\n        this.w = value;\r\n    }\r\n\r\n    get a (): number\r\n    {\r\n        return this.w;\r\n    }\r\n\r\n    toString (): string\r\n    {\r\n        const { x, y, z, w } = this;\r\n\r\n        return `[ r=${x}, g=${y}, b=${z}, a=${w} ]`;\r\n    }\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Random (a: Vec4, scale: number = 1, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    // Marsaglia, George. Choosing a Point from the Surface of a\r\n    // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n    // http://projecteuclid.org/euclid.aoms/1177692644;\r\n\r\n    let v1;\r\n    let v2;\r\n    let v3;\r\n    let v4;\r\n    let s1;\r\n    let s2;\r\n\r\n    do\r\n    {\r\n        v1 = Math.random() * 2 - 1;\r\n        v2 = Math.random() * 2 - 1;\r\n        s1 = v1 * v1 + v2 * v2;\r\n    }\r\n    while (s1 >= 1);\r\n\r\n    do\r\n    {\r\n        v3 = Math.random() * 2 - 1;\r\n        v4 = Math.random() * 2 - 1;\r\n        s2 = v3 * v3 + v4 * v4;\r\n    }\r\n    while (s2 >= 1);\r\n\r\n    const d = Math.sqrt((1 - s1) / s2);\r\n\r\n    return out.set(\r\n        scale * v1,\r\n        scale * v2,\r\n        scale * v3 * d,\r\n        scale * v4 * d\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Round (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        Math.round(x),\r\n        Math.round(y),\r\n        Math.round(z),\r\n        Math.round(w)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function RoundToZero (a: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        (x < 0) ? Math.ceil(x) : Math.floor(x),\r\n        (y < 0) ? Math.ceil(y) : Math.floor(y),\r\n        (z < 0) ? Math.ceil(z) : Math.floor(z),\r\n        (w < 0) ? Math.ceil(w) : Math.floor(w)\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function ScaleAndAdd (a: Vec4, b: Vec4, scalar: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x + b.x * scalar,\r\n        a.y + b.y * scalar,\r\n        a.z + b.z * scalar,\r\n        a.w + b.w * scalar\r\n    );\r\n}\r\n","import { Normalize } from './Normalize';\r\nimport { Scale } from './Scale';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function SetLength (a: Vec4, length: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    Normalize(a, out);\r\n\r\n    return Scale(out, length, out);\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Subtract (a: Vec4, b: Vec4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    return out.set(\r\n        a.x - b.x,\r\n        a.y - b.y,\r\n        a.z - b.z,\r\n        a.w - b.w\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function SubtractScalar (a: Vec4, scalar: number, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        x - scalar,\r\n        y - scalar,\r\n        z - scalar,\r\n        w - scalar\r\n    );\r\n}\r\n","import { IMatrix4 } from '../mat4/IMatrix4';\r\nimport { Vec4 } from './Vec4';\r\n\r\nexport function TransformMat4 (a: Vec4, m: IMatrix4, out: Vec4 = new Vec4()): Vec4\r\n{\r\n    const [ m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33 ] = m.data;\r\n    const { x, y, z, w } = a;\r\n\r\n    return out.set(\r\n        m00 * x + m10 * y + m20 * z + m30 * w,\r\n        m01 * x + m11 * y + m21 * z + m31 * w,\r\n        m02 * x + m12 * y + m22 * z + m32 * w,\r\n        m03 * x + m13 * y + m23 * z + m33 * w\r\n    );\r\n}\r\n","import { Vec4 } from './Vec4';\r\n\r\nexport function Zero (): Vec4\r\n{\r\n    return new Vec4(0, 0, 0, 0);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate the mean average of the given values.\r\n *\r\n * @function Phaser.Math.Average\r\n * @since 3.0.0\r\n *\r\n * @param {number[]} values - The values to average.\r\n *\r\n * @return {number} The average value.\r\n */\r\nexport function Average (values: number[]): number\r\n{\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < values.length; i++)\r\n    {\r\n        sum += (+values[i]);\r\n    }\r\n\r\n    return sum / values.length;\r\n}\r\n","export function Between (min: number, max: number): number\r\n{\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Ceils to some place comparative to a `base`, default is 10 for decimal place.\r\n *\r\n * The `place` is represented by the power applied to `base` to get that place.\r\n *\r\n * @function Phaser.Math.CeilTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to round.\r\n * @param {number} [place=0] - The place to round to.\r\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\r\n *\r\n * @return {number} The rounded value.\r\n */\r\nexport function CeilTo (value: number, place: number = 0, base: number = 10): number\r\n{\r\n    const p = Math.pow(base, -place);\r\n\r\n    return Math.ceil(value * p) / p;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from './const';\r\n\r\n/**\r\n * Convert the given angle from degrees, to the equivalent angle in radians.\r\n *\r\n * @function Phaser.Math.DegToRad\r\n * @since 3.0.0\r\n *\r\n * @param {number} degrees - The angle (in degrees) to convert to radians.\r\n *\r\n * @return {number} The given angle converted to radians.\r\n */\r\nexport function DegToRad (degrees: number): number\r\n{\r\n    return degrees * MATH_CONST.DEG_TO_RAD;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculates the positive difference of two given numbers.\r\n *\r\n * @function Phaser.Math.Difference\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first number in the calculation.\r\n * @param {number} b - The second number in the calculation.\r\n *\r\n * @return {number} The positive difference of the two given numbers.\r\n */\r\nexport function Difference (a: number, b: number): number\r\n{\r\n    return Math.abs(a - b);\r\n}\r\n","export function FloatBetween (min: number, max: number): number\r\n{\r\n    return Math.random() * (max - min) + min;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Floors to some place comparative to a `base`, default is 10 for decimal place.\r\n *\r\n * The `place` is represented by the power applied to `base` to get that place.\r\n *\r\n * @function Phaser.Math.FloorTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to round.\r\n * @param {number} [place=0] - The place to round to.\r\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\r\n *\r\n * @return {number} The rounded value.\r\n */\r\nexport function FloorTo (value: number, place: number = 0, base: number = 10): number\r\n{\r\n    const p = Math.pow(base, -place);\r\n\r\n    return Math.floor(value * p) / p;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Clamp } from './Clamp';\r\n\r\n/**\r\n * Return a value based on the range between `min` and `max` and the percentage given.\r\n *\r\n * @function Phaser.Math.FromPercent\r\n * @since 3.0.0\r\n *\r\n * @param {number} percent - A value between 0 and 1 representing the percentage.\r\n * @param {number} min - The minimum value.\r\n * @param {number} [max] - The maximum value.\r\n *\r\n * @return {number} The value that is `percent` percent between `min` and `max`.\r\n */\r\nexport function FromPercent (percent: number, min: number, max?: number): number\r\n{\r\n    percent = Clamp(percent, 0, 1);\r\n\r\n    return (max - min) * percent;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Calculate a per-ms speed from a distance and time (given in seconds).\r\n *\r\n * @function Phaser.Math.GetSpeed\r\n * @since 3.0.0\r\n *\r\n * @param {number} distance - The distance.\r\n * @param {number} time - The time, in seconds.\r\n *\r\n * @return {number} The speed, in distance per ms.\r\n */\r\nexport function GetSpeed (distance: number, time: number): number\r\n{\r\n    return (distance / time) / 1000;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Add an `amount` to a `value`, limiting the maximum result to `max`.\r\n *\r\n * @function Phaser.Math.MaxAdd\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to add to.\r\n * @param {number} amount - The amount to add.\r\n * @param {number} max - The maximum value to return.\r\n *\r\n * @return {number} The resulting value.\r\n */\r\nexport function MaxAdd (value: number, amount: number, max: number): number\r\n{\r\n    return Math.min(value + amount, max);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Subtract an `amount` from `value`, limiting the minimum result to `min`.\r\n *\r\n * @function Phaser.Math.MinSub\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to subtract from.\r\n * @param {number} amount - The amount to subtract.\r\n * @param {number} min - The minimum value to return.\r\n *\r\n * @return {number} The resulting value.\r\n */\r\nexport function MinSub (value: number, amount: number, min: number): number\r\n{\r\n    return Math.max(value - amount, min);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Work out what percentage `value` is of the range between `min` and `max`.\r\n * If `max` isn't given then it will return the percentage of `value` to `min`.\r\n *\r\n * You can optionally specify an `upperMax` value, which is a mid-way point in the range that represents 100%, after which the % starts to go down to zero again.\r\n *\r\n * @function Phaser.Math.Percent\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to determine the percentage of.\r\n * @param {number} min - The minimum value.\r\n * @param {number} [max] - The maximum value.\r\n * @param {number} [upperMax] - The mid-way point in the range that represents 100%.\r\n *\r\n * @return {number} A value between 0 and 1 representing the percentage.\r\n */\r\nexport function Percent (value: number, min: number, max?: number, upperMax?: number): number\r\n{\r\n    if (max === undefined) { max = min + 1; }\r\n\r\n    let percentage = (value - min) / (max - min);\r\n\r\n    if (percentage > 1)\r\n    {\r\n        if (upperMax !== undefined)\r\n        {\r\n            percentage = ((upperMax - value)) / (upperMax - max);\r\n\r\n            if (percentage < 0)\r\n            {\r\n                percentage = 0;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            percentage = 1;\r\n        }\r\n    }\r\n    else if (percentage < 0)\r\n    {\r\n        percentage = 0;\r\n    }\r\n\r\n    return percentage;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from './const';\r\n\r\n/**\r\n * Convert the given angle in radians, to the equivalent angle in degrees.\r\n *\r\n * @function Phaser.Math.RadToDeg\r\n * @since 3.0.0\r\n *\r\n * @param {number} radians - The angle in radians to convert ot degrees.\r\n *\r\n * @return {number} The given angle converted to degrees.\r\n */\r\nexport function RadToDeg (radians: number): number\r\n{\r\n    return radians * MATH_CONST.RAD_TO_DEG;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Round a value to the given precision.\r\n * \r\n * For example:\r\n * \r\n * ```javascript\r\n * RoundTo(123.456, 0) = 123\r\n * RoundTo(123.456, 1) = 120\r\n * RoundTo(123.456, 2) = 100\r\n * ```\r\n * \r\n * To round the decimal, i.e. to round to precision, pass in a negative `place`:\r\n * \r\n * ```javascript\r\n * RoundTo(123.456789, 0) = 123\r\n * RoundTo(123.456789, -1) = 123.5\r\n * RoundTo(123.456789, -2) = 123.46\r\n * RoundTo(123.456789, -3) = 123.457\r\n * ```\r\n *\r\n * @function Phaser.Math.RoundTo\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to round.\r\n * @param {number} [place=0] - The place to round to. Positive to round the units, negative to round the decimal.\r\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\r\n *\r\n * @return {number} The rounded value.\r\n */\r\nexport function RoundTo (value: number, place: number = 0, base: number = 10): number\r\n{\r\n    const p = Math.pow(base, -place);\r\n\r\n    return Math.round(value * p) / p;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @typedef {object} Phaser.Types.Math.SinCosTable\r\n * @since 3.0.0\r\n *\r\n * @property {number[]} sin - The sine values.\r\n * @property {number[]} cos - The cosine values.\r\n * @property {number} length - The length.\r\n */\r\n\r\ntype SinCosTable = { sin: number[]; cos: number[]; length: number };\r\n\r\n/**\r\n * Generate a series of sine and cosine values.\r\n *\r\n * @function Phaser.Math.SinCosTableGenerator\r\n * @since 3.0.0\r\n *\r\n * @param {number} length - The number of values to generate.\r\n * @param {number} [sinAmp=1] - The sine value amplitude.\r\n * @param {number} [cosAmp=1] - The cosine value amplitude.\r\n * @param {number} [frequency=1] - The frequency of the values.\r\n *\r\n * @return {SinCosTable} The generated values.\r\n */\r\nexport function SinCosTableGenerator (length: number, sinAmp: number = 1, cosAmp: number = 1, frequency: number = 1): SinCosTable\r\n{\r\n    frequency *= Math.PI / length;\r\n\r\n    const cos = [];\r\n    const sin = [];\r\n\r\n    for (let c = 0; c < length; c++)\r\n    {\r\n        cosAmp -= sinAmp * frequency;\r\n        sinAmp += cosAmp * frequency;\r\n\r\n        cos[c] = cosAmp;\r\n        sin[c] = sinAmp;\r\n    }\r\n\r\n    return {\r\n        sin,\r\n        cos,\r\n        length\r\n    };\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Checks if the two values are within the given `tolerance` of each other.\r\n *\r\n * @function Phaser.Math.Within\r\n * @since 3.0.0\r\n *\r\n * @param {number} a - The first value to use in the calculation.\r\n * @param {number} b - The second value to use in the calculation.\r\n * @param {number} tolerance - The tolerance. Anything equal to or less than this value is considered as being within range.\r\n *\r\n * @return {boolean} Returns `true` if `a` is less than or equal to the tolerance of `b`.\r\n */\r\nexport function Within (a: number, b: number, tolerance: number): boolean\r\n{\r\n    return (Math.abs(a - b) <= tolerance);\r\n}\r\n","import { Add, CrossNormalize, Left, Normalize, Subtract, TransformQuat, UP, Up, Vec3, Vec3Callback } from '../math/vec3';\r\nimport { LookAt, Matrix4, Perspective, TranslateFromFloats } from '../math/mat4';\r\nimport { Quaternion, SetAxisAngle } from '../math/quaternion';\r\n\r\nimport { DegToRad } from '../math';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { IRenderer } from '../renderer/IRenderer';\r\nimport { IVec3Like } from '../math/vec3/IVec3Like';\r\n\r\nexport class Camera3D\r\n{\r\n    type: string;\r\n    renderer: IRenderer;\r\n\r\n    position: Vec3Callback;\r\n    direction: Vec3Callback;\r\n    // rotation: Vec3Callback;\r\n\r\n    up: Vec3;\r\n    left: Vec3;\r\n\r\n    aspectRatio: number;\r\n\r\n    // viewport rect\r\n\r\n    viewMatrix: Matrix4;\r\n    projectionMatrix: Matrix4;\r\n\r\n    dirtyRender: boolean = true;\r\n\r\n    private _lookAtPosition: Vec3;\r\n    private _lookAtView: Matrix4;\r\n    private _axis: Quaternion;\r\n\r\n    private _fov: number;\r\n    private _near: number;\r\n    private _far: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, fov: number = 45, near: number = 0.1, far: number = 1000)\r\n    {\r\n        this.type = 'Camera3D';\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.renderer = game.renderer;\r\n\r\n        this.position = new Vec3Callback(() => this.update(), x, y, z);\r\n        this.direction = new Vec3Callback(() => this.update(), 0, 1, 0);\r\n\r\n        this._lookAtPosition = new Vec3();\r\n        this._lookAtView = new Matrix4();\r\n        this._axis = new Quaternion();\r\n\r\n        this.up = Up();\r\n        this.left = Left();\r\n\r\n        this._fov = fov;\r\n        this._near = near;\r\n        this._far = far;\r\n        this.aspectRatio = this.renderer.width / this.renderer.height;\r\n\r\n        this.viewMatrix = new Matrix4();\r\n        this.projectionMatrix = Perspective(DegToRad(fov), this.aspectRatio, near, far);\r\n\r\n        this.lookAt(new Vec3());\r\n    }\r\n\r\n    updateProjectionMatrix (): this\r\n    {\r\n        Perspective(DegToRad(this._fov), this.aspectRatio, this._near, this._far, this.projectionMatrix);\r\n\r\n        return this;\r\n    }\r\n\r\n    lookAt (point: Vec3): this\r\n    {\r\n        const pos = this.position;\r\n        const dir = this.direction;\r\n        const left = this.left;\r\n\r\n        Subtract(point, pos, dir);\r\n\r\n        Normalize(dir, dir);\r\n\r\n        CrossNormalize(UP, dir, left);\r\n        CrossNormalize(dir, left, this.up);\r\n\r\n        return this.update();\r\n    }\r\n\r\n    rotateOnAxis (axisVec: Vec3, angle: number): this\r\n    {\r\n        const dir = this.direction;\r\n        const left = this.left;\r\n        const up = this.up;\r\n\r\n        const q = SetAxisAngle(axisVec, angle, this._axis);\r\n\r\n        TransformQuat(dir, q, dir);\r\n        TransformQuat(left, q, left);\r\n        TransformQuat(up, q, up);\r\n\r\n        Normalize(up, up);\r\n        Normalize(left, left);\r\n        Normalize(dir, dir);\r\n\r\n        return this.update();\r\n    }\r\n\r\n    yaw (angle: number): this\r\n    {\r\n        return this.rotateOnAxis(this.up, angle);\r\n    }\r\n\r\n    pitch (angle: number): this\r\n    {\r\n        return this.rotateOnAxis(this.left, angle);\r\n    }\r\n\r\n    roll (angle: number): this\r\n    {\r\n        return this.rotateOnAxis(this.direction, angle);\r\n    }\r\n\r\n    forward (s: number): this\r\n    {\r\n        const pos = this.position;\r\n\r\n        const { x: px, y: py, z: pz } = pos;\r\n        const { x: dx, y: dy, z: dz } = this.direction;\r\n\r\n        pos.set(\r\n            px - s * dx,\r\n            py - s * dy,\r\n            pz - s * dz\r\n        );\r\n\r\n        return this.update();\r\n    }\r\n\r\n    update (): this\r\n    {\r\n        const lookPosition = this._lookAtPosition;\r\n        const lookView = this._lookAtView;\r\n        const pos = this.position;\r\n\r\n        Add(pos, this.direction, lookPosition);\r\n\r\n        LookAt(pos, lookPosition, this.up, lookView);\r\n\r\n        TranslateFromFloats(lookView, -pos.x, -pos.y, -pos.z, this.viewMatrix);\r\n\r\n        return this;\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.position.destroy();\r\n        this.direction.destroy();\r\n        this.up = null;\r\n        this.left = null;\r\n        this.viewMatrix = null;\r\n        this.projectionMatrix = null;\r\n        this._lookAtPosition = null;\r\n        this._lookAtView = null;\r\n        this._axis = null;\r\n    }\r\n\r\n    get fov (): number\r\n    {\r\n        return this._fov;\r\n    }\r\n\r\n    set fov (value: number)\r\n    {\r\n        if (value > 0 && value < 180)\r\n        {\r\n            this._fov = value;\r\n\r\n            this.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get near (): number\r\n    {\r\n        return this._near;\r\n    }\r\n\r\n    set near (value: number)\r\n    {\r\n        if (value > 0)\r\n        {\r\n            this._near = value;\r\n\r\n            this.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get far (): number\r\n    {\r\n        return this._far;\r\n    }\r\n\r\n    set far (value: number)\r\n    {\r\n        if (value > 0)\r\n        {\r\n            this._far = value;\r\n\r\n            this.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Attempts to get the target DOM element based on the given value, which can be either\r\n * a string, in which case it will be looked-up by ID, or an element node. If nothing\r\n * can be found it will return a reference to the document.body.\r\n *\r\n * @function Phaser.DOM.GetElement\r\n * @since 4.0.0\r\n *\r\n * @param {(string | HTMLElement)} [target] - The DOM element to look-up.\r\n * \r\n * @returns {HTMLElement} The HTML Element that was found.\r\n */\r\nexport function GetElement (target?: string | HTMLElement): HTMLElement\r\n{\r\n    let element: HTMLElement;\r\n\r\n    if (target)\r\n    {\r\n        if (typeof target === 'string')\r\n        {\r\n            //  Hopefully an element ID\r\n            element = document.getElementById(target);\r\n        }\r\n        else if (typeof target === 'object' && target.nodeType === 1)\r\n        {\r\n            //  Quick test for a HTMLElement\r\n            element = target;\r\n        }\r\n    }\r\n\r\n    if (!element)\r\n    {\r\n        element = document.body;\r\n    }\r\n\r\n    return element;\r\n}\r\n","import { GetElement } from './GetElement';\r\n\r\nexport function AddToDOM (element: HTMLElement, parent?: string | HTMLElement): HTMLElement\r\n{\r\n    const target: HTMLElement = GetElement(parent);\r\n\r\n    target.appendChild(element);\r\n\r\n    return element;\r\n}\r\n","export function DOMContentLoaded (callback: () => void): void\r\n{\r\n    const readyState = document.readyState;\r\n\r\n    if (readyState === 'complete' || readyState === 'interactive')\r\n    {\r\n        callback();\r\n\r\n        return;\r\n    }\r\n\r\n    const check = (): void =>\r\n    {\r\n        document.removeEventListener('deviceready', check, true);\r\n        document.removeEventListener('DOMContentLoaded', check, true);\r\n        window.removeEventListener('load', check, true);\r\n\r\n        callback();\r\n    };\r\n\r\n    // TODO - Swap is IsCordova call\r\n\r\n    if (!document.body)\r\n    {\r\n        window.setTimeout(check, 20);\r\n    }\r\n    else if (window.hasOwnProperty('cordova'))\r\n    {\r\n        document.addEventListener('deviceready', check, true);\r\n    }\r\n    else\r\n    {\r\n        document.addEventListener('DOMContentLoaded', check, true);\r\n        window.addEventListener('load', check, true);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes the given data string and parses it as XML using the native DOMParser interface.\r\n * The parsed XML object is returned, or `null` if there was an error while parsing the data.\r\n *\r\n * @function Phaser.DOM.ParseXML\r\n * @since 3.0.0\r\n *\r\n * @param {string} data - The XML source stored in a string.\r\n *\r\n * @return {?XMLDocument} The parsed XML data, or `null` if the data could not be parsed.\r\n */\r\nexport function ParseXML (data: string): XMLDocument | null\r\n{\r\n    let xml: XMLDocument;\r\n\r\n    try\r\n    {\r\n        const parser = new DOMParser();\r\n\r\n        xml = parser.parseFromString(data, 'text/xml');\r\n\r\n        if (!xml || !xml.documentElement || xml.getElementsByTagName('parsererror').length)\r\n        {\r\n            return null;\r\n        }\r\n        else\r\n        {\r\n            return xml;\r\n        }\r\n    }\r\n    catch (error)\r\n    {\r\n        return null;\r\n    }\r\n}\r\n","export function RemoveFromDOM (element: HTMLElement): void\r\n{\r\n    if (element.parentNode)\r\n    {\r\n        element.parentNode.removeChild(element);\r\n    }\r\n}\r\n","let _audioElement: HTMLAudioElement;\r\n\r\nexport function CanPlayAudioType (type: string, audioElement?: HTMLAudioElement): boolean\r\n{\r\n    if (!audioElement)\r\n    {\r\n        if (!_audioElement)\r\n        {\r\n            _audioElement = document.createElement('audio');\r\n        }\r\n\r\n        audioElement = _audioElement;\r\n    }\r\n\r\n    return (audioElement && audioElement.canPlayType(type) !== '');\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayM4A (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return (\r\n        CanPlayAudioType('audio/x-m4a', audioElement) ||\r\n        CanPlayAudioType('audio/aac', audioElement)\r\n    );\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayMP3 (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/mpeg; codecs=\"mp3\"', audioElement);\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayOGG (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/ogg; codecs=\"vorbis\"', audioElement);\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayOpus (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return (\r\n        CanPlayAudioType('audio/ogg; codecs=\"opus\"', audioElement) ||\r\n        CanPlayAudioType('audio/webm; codecs=\"opus\"', audioElement)\r\n    );\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayWAV (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/wav; codecs=\"1\"', audioElement);\r\n}\r\n","import { CanPlayAudioType } from './CanPlayAudioType';\r\n\r\nexport function CanPlayWebM (audioElement?: HTMLAudioElement): boolean\r\n{\r\n    return CanPlayAudioType('audio/webm; codecs=\"vorbis\"', audioElement);\r\n}\r\n","export function HasAudio (): boolean\r\n{\r\n    return (window && window.hasOwnProperty('Audio'));\r\n}\r\n","export function HasWebAudio (): boolean\r\n{\r\n    return (\r\n        window &&\r\n        (window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext'))\r\n    );\r\n}\r\n","import { CanPlayM4A } from './CanPlayM4A';\r\nimport { CanPlayMP3 } from './CanPlayMP3';\r\nimport { CanPlayOGG } from './CanPlayOGG';\r\nimport { CanPlayOpus } from './CanPlayOpus';\r\nimport { CanPlayWAV } from './CanPlayWAV';\r\nimport { CanPlayWebM } from './CanPlayWebM';\r\nimport { HasAudio } from './HasAudio';\r\nimport { HasWebAudio } from './HasWebAudio';\r\nimport { IDeviceAudioResult } from './IDeviceAudioResult';\r\n\r\nexport function GetAudio (): IDeviceAudioResult\r\n{\r\n    const result: IDeviceAudioResult = {\r\n        audioData: HasAudio(),\r\n        m4a: false,\r\n        mp3: false,\r\n        ogg: false,\r\n        opus: false,\r\n        wav: false,\r\n        webAudio: HasWebAudio(),\r\n        webm: false\r\n    };\r\n\r\n    if (result.audioData)\r\n    {\r\n        result.m4a = CanPlayM4A();\r\n        result.mp3 = CanPlayMP3();\r\n        result.ogg = CanPlayOGG();\r\n        result.opus = CanPlayOpus();\r\n        result.wav = CanPlayWAV();\r\n        result.webm = CanPlayWebM();\r\n    }\r\n\r\n    return result;\r\n}\r\n","export function IsChrome (): { chrome: boolean; chromeVersion: number }\r\n{\r\n    const chrome = (/Chrome\\/(\\d+)/).test(navigator.userAgent);\r\n    const chromeVersion = (chrome) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        chrome,\r\n        chromeVersion\r\n    };\r\n}\r\n","export function IsEdge (): { edge: boolean }\r\n{\r\n    const edge = (/Edge\\/\\d+/).test(navigator.userAgent);\r\n\r\n    return {\r\n        edge\r\n    };\r\n}\r\n","export function IsFirefox (): { firefox: boolean; firefoxVersion: number }\r\n{\r\n    const firefox = (/Firefox\\D+(\\d+)/).test(navigator.userAgent);\r\n    const firefoxVersion = (firefox) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        firefox,\r\n        firefoxVersion\r\n    };\r\n}\r\n","export function IsMSIE (): { ie: boolean; ieVersion: number }\r\n{\r\n    const ie = (/MSIE (\\d+\\.\\d+);/).test(navigator.userAgent);\r\n    const ieVersion = (ie) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        ie,\r\n        ieVersion\r\n    };\r\n}\r\n","interface IGetIOSResult\r\n{\r\n    iOS: boolean;\r\n    iOSVersion: number;\r\n    iPhone: boolean;\r\n    iPad: boolean;\r\n}\r\n\r\nexport function IsiOS (): IGetIOSResult\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    const result: IGetIOSResult = {\r\n        iOS: false,\r\n        iOSVersion: 0,\r\n        iPhone: false,\r\n        iPad: false\r\n    };\r\n\r\n    if ((/iP[ao]d|iPhone/i).test(ua))\r\n    {\r\n        const match = (/OS (\\d+)/).exec(navigator.appVersion);\r\n\r\n        result.iOS = true;\r\n        result.iOSVersion = parseInt(match[0], 10);\r\n        result.iPhone = (ua.toLowerCase().includes('iphone'));\r\n        result.iPad = (ua.toLowerCase().includes('ipad'));\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { IsiOS } from '../os/IsiOS';\r\n\r\nexport function IsMobileSafari (): { mobileSafari: boolean }\r\n{\r\n    const { iOS } = IsiOS();\r\n\r\n    const mobileSafari = (navigator.userAgent.includes('AppleWebKit') && iOS);\r\n\r\n    return {\r\n        mobileSafari\r\n    };\r\n}\r\n","export function IsOpera (): { opera: boolean }\r\n{\r\n    const opera = navigator.userAgent.includes('Opera');\r\n\r\n    return {\r\n        opera\r\n    };\r\n}\r\n","export function IsWindowsPhone (): boolean\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    return ((/Windows Phone/i).test(ua) || (/IEMobile/i).test(ua));\r\n}\r\n","import { IsWindowsPhone } from '../os/IsWindowsPhone';\r\n\r\nexport function IsSafari (): { safari: boolean; safariVersion: number }\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    const safari = (ua.includes('Safari') && !IsWindowsPhone());\r\n    const safariVersion = ((/Version\\/(\\d+)\\./).test(ua)) ? parseInt(RegExp.$1, 10) : 0;\r\n\r\n    return {\r\n        safari,\r\n        safariVersion\r\n    };\r\n}\r\n","export function IsSilk (): { silk: boolean }\r\n{\r\n    const silk = navigator.userAgent.includes('Silk');\r\n\r\n    return {\r\n        silk\r\n    };\r\n}\r\n","export function IsTrident (): { trident: boolean; tridentVersion: number; tridentIEVersion: number }\r\n{\r\n    const trident = (/Trident\\/(\\d+\\.\\d+)(.*)rv:(\\d+\\.\\d+)/).test(navigator.userAgent);\r\n    const tridentVersion = (trident) ? parseInt(RegExp.$1, 10) : 0;\r\n    const tridentIEVersion = (trident) ? parseInt(RegExp.$3, 10) : 0;\r\n\r\n    return {\r\n        trident,\r\n        tridentVersion,\r\n        tridentIEVersion\r\n    };\r\n}\r\n","import { IDeviceBrowserResult } from './IDeviceBrowserResult';\r\nimport { IsChrome } from './IsChrome';\r\nimport { IsEdge } from './IsEdge';\r\nimport { IsFirefox } from './IsFirefox';\r\nimport { IsMSIE } from './IsMSIE';\r\nimport { IsMobileSafari } from './IsMobileSafari';\r\nimport { IsOpera } from './IsOpera';\r\nimport { IsSafari } from './IsSafari';\r\nimport { IsSilk } from './IsSilk';\r\nimport { IsTrident } from './IsTrident';\r\n\r\nexport function GetBrowser (): IDeviceBrowserResult\r\n{\r\n    const { chrome, chromeVersion } = IsChrome();\r\n    const { edge } = IsEdge();\r\n    const { firefox, firefoxVersion } = IsFirefox();\r\n    let { ie, ieVersion } = IsMSIE();\r\n    const { mobileSafari } = IsMobileSafari();\r\n    const { opera } = IsOpera();\r\n    const { safari, safariVersion } = IsSafari();\r\n    const { silk } = IsSilk();\r\n    const { trident, tridentVersion, tridentIEVersion } = IsTrident();\r\n\r\n    if (trident)\r\n    {\r\n        ie = true;\r\n        ieVersion = tridentIEVersion;\r\n    }\r\n\r\n    const result: IDeviceBrowserResult = {\r\n        chrome,\r\n        chromeVersion,\r\n        edge,\r\n        firefox,\r\n        firefoxVersion,\r\n        ie,\r\n        ieVersion,\r\n        mobileSafari,\r\n        opera,\r\n        safari,\r\n        safariVersion,\r\n        silk,\r\n        trident,\r\n        tridentVersion\r\n    };\r\n\r\n    return result;\r\n}\r\n","export function IsAndroid (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Android'));\r\n}\r\n","export function IsChromeOS (): boolean\r\n{\r\n    return (navigator.userAgent.includes('CrOS'));\r\n}\r\n","export function IsCordova (): boolean\r\n{\r\n    return (window.hasOwnProperty('cordova'));\r\n}\r\n","export function IsCrosswalk (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Crosswalk'));\r\n}\r\n","export function IsEjecta (): boolean\r\n{\r\n    return (window.hasOwnProperty('ejecta'));\r\n}\r\n","export function IsKindle (): boolean\r\n{\r\n    // This will NOT detect early generations of Kindle Fire, I think there is no reliable way...\r\n    // E.g. \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.1.0-80) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Safari/533.16 Silk-Accelerated=true\"\r\n    const ua: string = navigator.userAgent;\r\n\r\n    return ((ua.includes('Kindle') || (/\\bKF[A-Z][A-Z]+/).test(ua) || (/Silk.*Mobile Safari/).test(ua)));\r\n}\r\n","export function IsLinux (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Linux'));\r\n}\r\n","export function IsMacOS (): boolean\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    return (ua.includes('Mac OS') && !(ua.includes('like Mac OS')));\r\n}\r\n","export function IsNode (): boolean\r\n{\r\n    return (typeof process !== 'undefined' && typeof process.versions === 'object' && process.versions.hasOwnProperty('node'));\r\n}\r\n","import { IsNode } from './IsNode';\r\n\r\nexport function IsNodeWebkit (): boolean\r\n{\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return (IsNode() && !!(process.versions as Record<string, any>).hasOwnProperty('node-webkit'));\r\n}\r\n","export function IsWebApp (): boolean\r\n{\r\n    return (navigator.hasOwnProperty('standalone'));\r\n}\r\n","export function IsWindows (): boolean\r\n{\r\n    return (navigator.userAgent.includes('Windows'));\r\n}\r\n","import { IDeviceOSResult } from './IDeviceOSResult';\r\nimport { IsAndroid } from './IsAndroid';\r\nimport { IsChromeOS } from './IsChromeOS';\r\nimport { IsCordova } from './IsCordova';\r\nimport { IsCrosswalk } from './IsCrosswalk';\r\nimport { IsEjecta } from './IsEjecta';\r\nimport { IsKindle } from './IsKindle';\r\nimport { IsLinux } from './IsLinux';\r\nimport { IsMacOS } from './IsMacOS';\r\nimport { IsNode } from './IsNode';\r\nimport { IsNodeWebkit } from './IsNodeWebkit';\r\nimport { IsWebApp } from './IsWebApp';\r\nimport { IsWindows } from './IsWindows';\r\nimport { IsWindowsPhone } from './IsWindowsPhone';\r\nimport { IsiOS } from './IsiOS';\r\n\r\nexport function GetOS (): IDeviceOSResult\r\n{\r\n    const ua: string = navigator.userAgent;\r\n\r\n    const { iOS, iOSVersion, iPad, iPhone } = IsiOS();\r\n\r\n    const result: IDeviceOSResult = {\r\n        android: IsAndroid(),\r\n        chromeOS: IsChromeOS(),\r\n        cordova: IsCordova(),\r\n        crosswalk: IsCrosswalk(),\r\n        desktop: false,\r\n        ejecta: IsEjecta(),\r\n        iOS,\r\n        iOSVersion,\r\n        iPad,\r\n        iPhone,\r\n        kindle: IsKindle(),\r\n        linux: IsLinux(),\r\n        macOS: IsMacOS(),\r\n        node: IsNode(),\r\n        nodeWebkit: IsNodeWebkit(),\r\n        pixelRatio: 1,\r\n        webApp: IsWebApp(),\r\n        windows: IsWindows(),\r\n        windowsPhone: IsWindowsPhone()\r\n    };\r\n\r\n    if (result.windowsPhone)\r\n    {\r\n        result.android = false;\r\n        result.iOS = false;\r\n        result.macOS = false;\r\n        result.windows = true;\r\n    }\r\n\r\n    const silk: boolean = ua.includes('Silk');\r\n\r\n    if (result.windows || result.macOS || (result.linux && !silk) || result.chromeOS)\r\n    {\r\n        result.desktop = true;\r\n    }\r\n\r\n    //  Windows Phone / Table reset\r\n    if (result.windowsPhone || (((/Windows NT/i).test(ua)) && ((/Touch/i).test(ua))))\r\n    {\r\n        result.desktop = false;\r\n    }\r\n\r\n    return result;\r\n}\r\n","let _videoElement: HTMLVideoElement;\r\n\r\nexport function CanPlayVideoType (type: string, videoElement?: HTMLVideoElement): boolean\r\n{\r\n    if (!videoElement)\r\n    {\r\n        if (!_videoElement)\r\n        {\r\n            _videoElement = document.createElement('video');\r\n        }\r\n\r\n        videoElement = _videoElement;\r\n    }\r\n\r\n    return (videoElement && videoElement.canPlayType(type) !== '');\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayH264Video (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/mp4; codecs=\"avc1.42E01E\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayHLSVideo (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('application/x-mpegURL; codecs=\"avc1.42E01E\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayOGGVideo (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/ogg; codecs=\"theora\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayVP9Video (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/webm; codecs=\"vp9\"', videoElement);\r\n}\r\n","import { CanPlayVideoType } from './CanPlayVideoType';\r\n\r\nexport function CanPlayWebMVideo (videoElement?: HTMLVideoElement): boolean\r\n{\r\n    return CanPlayVideoType('video/webm; codecs=\"vp8, vorbis\"', videoElement);\r\n}\r\n","import { CanPlayH264Video } from './CanPlayH264Video';\r\nimport { CanPlayHLSVideo } from './CanPlayHLSVideo';\r\nimport { CanPlayOGGVideo } from './CanPlayOGGVideo';\r\nimport { CanPlayVP9Video } from './CanPlayVP9Video';\r\nimport { CanPlayWebMVideo } from './CanPlayWebMVideo';\r\nimport { IDeviceVideoResult } from './IDeviceVideoResult';\r\n\r\nexport function GetVideo (): IDeviceVideoResult\r\n{\r\n    return {\r\n        h264Video: CanPlayH264Video(),\r\n        hlsVideo: CanPlayHLSVideo(),\r\n        oggVideo: CanPlayOGGVideo(),\r\n        vp9Video: CanPlayVP9Video(),\r\n        webmVideo: CanPlayWebMVideo()\r\n    };\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using an iterative search.\r\n//  Does NOT include the parent in the results.\r\n\r\nexport function DepthFirstSearch (parent: IGameObject): IGameObject[]\r\n{\r\n    const stack: IGameObject[] = [ parent ];\r\n    const output: IGameObject[] = [];\r\n\r\n    while (stack.length > 0)\r\n    {\r\n        const node = stack.shift();\r\n\r\n        output.push(node);\r\n\r\n        const numChildren = node.numChildren;\r\n\r\n        if (numChildren > 0)\r\n        {\r\n            for (let i = numChildren - 1; i >= 0; i--)\r\n            {\r\n                stack.unshift(node.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  Remove the parent from the results\r\n    output.shift();\r\n\r\n    return output;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetChildIndex (parent: IGameObject, child: IGameObject): number\r\n{\r\n    return parent.children.indexOf(child);\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RemoveChildAt (parent: IGameObject, index: number): IGameObject | undefined\r\n{\r\n    const children = parent.children;\r\n    let child: IGameObject;\r\n\r\n    if (index >= 0 && index < children.length)\r\n    {\r\n        const removed = children.splice(index, 1);\r\n\r\n        if (removed[0])\r\n        {\r\n            child = removed[0];\r\n            child.parent = null;\r\n        }\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildAt } from './RemoveChildAt';\r\n\r\nexport function RemoveChild <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex > -1)\r\n    {\r\n        RemoveChildAt(parent, currentIndex);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IBaseWorld } from '../../world/IBaseWorld';\r\nimport { IGameObject } from '../IGameObject';\r\n\r\nexport const AddedToWorldEvent: string = 'addedtoworld';\r\n\r\nexport type AddedToWorldEventHandler = <T extends IGameObject, U extends IBaseWorld> (child: T, world: U) => void;\r\n","import { IGameObject } from '../IGameObject';\r\n\r\nexport const DestroyEvent: string = 'destroy';\r\n\r\nexport type DestroyEventHandler = <T extends IGameObject> (child: T) => void;\r\n","import { IGameObject } from '../IGameObject';\r\n\r\nexport const PostUpdateEvent: string = 'postupdate';\r\n\r\nexport type PostUpdateEventHandler = <T extends IGameObject> (delta: number, time: number, child: T) => void;\r\n","import { IBaseWorld } from '../../world/IBaseWorld';\r\nimport { IGameObject } from '../IGameObject';\r\n\r\nexport const RemovedFromWorldEvent: string = 'removedfromworld';\r\n\r\nexport type RemovedFromWorldEventHandler = <T extends IGameObject, U extends IBaseWorld> (child: T, world: U) => void;\r\n","import { IGameObject } from '../IGameObject';\r\n\r\nexport const UpdateEvent: string = 'update';\r\n\r\nexport type UpdateEventHandler = <T extends IGameObject> (delta: number, time: number, child: T) => void;\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function Emit (emitter: IEventEmitter, event: string, ...args: unknown[]): boolean\r\n{\r\n    if (emitter.events.size === 0 || !emitter.events.has(event))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const listeners = emitter.events.get(event);\r\n\r\n    for (const ee of listeners)\r\n    {\r\n        ee.callback.apply(ee.context, args);\r\n\r\n        if (ee.once)\r\n        {\r\n            listeners.delete(ee);\r\n        }\r\n    }\r\n\r\n    if (listeners.size === 0)\r\n    {\r\n        emitter.events.delete(event);\r\n    }\r\n\r\n    return true;\r\n}\r\n","import { AddedToWorldEvent, RemovedFromWorldEvent } from '../gameobjects/events';\r\n\r\nimport { Emit } from '../events/Emit';\r\nimport { IBaseWorld } from '../world/IBaseWorld';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetWorld (world: IBaseWorld, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        if (child.world)\r\n        {\r\n            Emit(child.world, RemovedFromWorldEvent, child, child.world);\r\n            Emit(child, RemovedFromWorldEvent, child, child.world);\r\n        }\r\n\r\n        child.world = world;\r\n\r\n        Emit(world, AddedToWorldEvent, child, world);\r\n        Emit(child, AddedToWorldEvent, child, world);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChild } from './RemoveChild';\r\nimport { SetWorld } from './SetWorld';\r\n\r\nexport function SetParent (parent: IGameObject, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        if (child.parent)\r\n        {\r\n            RemoveChild(child.parent, child);\r\n        }\r\n\r\n        child.parent = parent;\r\n    });\r\n\r\n    const parentWorld = parent.world;\r\n\r\n    if (parentWorld)\r\n    {\r\n        //  Full list of all children, including sub-children\r\n        SetWorld(parentWorld, ...DepthFirstSearch(parent));\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function AddChild <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    parent.children.push(child);\r\n\r\n    SetParent(parent, child);\r\n\r\n    child.transform.updateWorld();\r\n\r\n    return child;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function AddChildAt <T extends IGameObject> (parent: IGameObject, index: number, child: T): T\r\n{\r\n    const children = parent.children;\r\n\r\n    if (index >= 0 && index <= children.length)\r\n    {\r\n        SetParent(parent, child);\r\n\r\n        children.splice(index, 0, child);\r\n\r\n        child.transform.updateWorld();\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { AddChild } from './AddChild';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function AddChildren (parent: IGameObject, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        AddChild(parent, child);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function AddChildrenAt (parent: IGameObject, index: number, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    if (index >= 0 && index <= parentChildren.length)\r\n    {\r\n        children.reverse().forEach(child =>\r\n        {\r\n            children.splice(index, 0, child);\r\n\r\n            SetParent(parent, child);\r\n\r\n            child.transform.updateWorld();\r\n        });\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddPosition (x: number, y: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.x += x;\r\n        child.y += y;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddRotation (rotation: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.rotation += rotation;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddScale (scaleX: number, scaleY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.scaleX += scaleX;\r\n        child.scaleY += scaleY;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function AddSkew (skewX: number, skewY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.skewX += skewX;\r\n        child.skewY += skewY;\r\n    });\r\n\r\n    return children;\r\n}\r\n","export const DIRTY_CONST = {\r\n\r\n    CLEAR: 0,\r\n    TRANSFORM: 1,\r\n    UPDATE: 2,\r\n    CHILD_CACHE: 4,\r\n    POST_RENDER: 8,\r\n    COLORS: 16,\r\n    BOUNDS: 32,\r\n    TEXTURE: 64,\r\n    FRAME: 128,\r\n    ALPHA: 256,\r\n    CHILD: 512,\r\n\r\n    //  Special combinations\r\n    DEFAULT: 1 + 2 + 16 + 32,\r\n\r\n    //  Reserved for future use:\r\n    //  1024\r\n    //  2048\r\n    //  4096\r\n    //  8192\r\n    //  16384\r\n    //  32768\r\n    //  65536\r\n    //  131072\r\n    //  262144\r\n    //  524288\r\n    //  1048576\r\n    //  2097152\r\n    //  4194304\r\n    //  8388608\r\n    //  16777216\r\n    //  33554432\r\n    //  67108864\r\n    //  134217728\r\n    //  268435456\r\n\r\n    //  Reserved for user use\r\n    USER1: 536870912,\r\n    USER2: 1073741824,\r\n    USER3: 2147483648,\r\n    USER4: 4294967296\r\n\r\n};\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function BringChildToTop <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex !== -1 && currentIndex < parentChildren.length)\r\n    {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.push(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SearchEntry } from './SearchEntryType';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using a recursive search.\r\n//  Parents and children are grouped together.\r\n\r\nexport function DepthFirstSearchRecursiveNested (parent: IGameObject, output: SearchEntry[] = []): SearchEntry[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const node = parent.children[i];\r\n\r\n        const children: SearchEntry[] = [];\r\n\r\n        output.push({ node, children });\r\n\r\n        if (node.numChildren > 0)\r\n        {\r\n            DepthFirstSearchRecursiveNested(node, children);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { DepthFirstSearchRecursiveNested } from './DepthFirstSearchRecursiveNested';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SearchEntry } from './SearchEntryType';\r\n\r\nfunction GetInfo (entry: IGameObject): string\r\n{\r\n    const legend = (entry.numChildren > 0) ? 'Parent' :  'Child';\r\n\r\n    return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\r\n}\r\n\r\nfunction LogChildren (entry: SearchEntry): void\r\n{\r\n    console.group(GetInfo(entry.node));\r\n\r\n    entry.children.forEach(child =>\r\n    {\r\n        if (child.children.length > 0)\r\n        {\r\n            LogChildren(child);\r\n        }\r\n        else\r\n        {\r\n            console.log(GetInfo(child.node));\r\n        }\r\n    });\r\n\r\n    console.groupEnd();\r\n}\r\n\r\nexport function ConsoleTreeChildren (parent: IGameObject): void\r\n{\r\n    const entries = DepthFirstSearchRecursiveNested(parent);\r\n\r\n    if (parent.world === parent)\r\n    {\r\n        console.group('World');\r\n    }\r\n    else\r\n    {\r\n        console.group(GetInfo(parent));\r\n    }\r\n\r\n    entries.forEach(entry =>\r\n    {\r\n        if (entry.children.length)\r\n        {\r\n            LogChildren(entry);\r\n        }\r\n        else\r\n        {\r\n            console.log(GetInfo(entry.node));\r\n        }\r\n    });\r\n\r\n    console.groupEnd();\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function CountMatchingChildren (parent: IGameObject, property: string | symbol, value?: never): number\r\n{\r\n    const children = parent.children;\r\n\r\n    let total = 0;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            total++;\r\n        }\r\n    });\r\n\r\n    return total;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using a recursive search.\r\n//  Does NOT include the parent in the results.\r\n\r\nexport function DepthFirstSearchRecursive (parent: IGameObject, output: IGameObject[] = []): IGameObject[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const child = parent.children[i];\r\n\r\n        output.push(child);\r\n\r\n        if (child.numChildren > 0)\r\n        {\r\n            DepthFirstSearchRecursive(child, output);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RemoveChildrenBetween (parent: IGameObject, beginIndex: number = 0, endIndex?: number): IGameObject[]\r\n{\r\n    const children = parent.children;\r\n\r\n    if (endIndex === undefined)\r\n    {\r\n        endIndex = children.length;\r\n    }\r\n\r\n    const range = endIndex - beginIndex;\r\n\r\n    if (range > 0 && range <= endIndex)\r\n    {\r\n        const removed = children.splice(beginIndex, range);\r\n\r\n        removed.forEach(child =>\r\n        {\r\n            child.parent = null;\r\n        });\r\n\r\n        return removed;\r\n    }\r\n    else\r\n    {\r\n        return [];\r\n    }\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildrenBetween } from './RemoveChildrenBetween';\r\n\r\nexport function DestroyChildren (parent: IGameObject, beginIndex: number = 0, endIndex?: number): void\r\n{\r\n    const removed = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n\r\n    removed.forEach(child =>\r\n    {\r\n        child.destroy();\r\n    });\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function FindChildByName (parent: IGameObject, searchString: string): IGameObject | undefined\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n\r\n    for (let i = 0; i < children.length; i++)\r\n    {\r\n        const child = children[i];\r\n\r\n        if (regex.test(child.name))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function FindChildrenByName (parent: IGameObject, searchString: string): IGameObject[]\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n    const regex = RegExp(searchString);\r\n\r\n    const results: IGameObject[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        if (regex.test(child.name))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetAllChildren (parent: IGameObject, property?: string | symbol, value?: never): IGameObject[]\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n\r\n    //  Fast path out of here\r\n    if (!property)\r\n    {\r\n        return children;\r\n    }\r\n\r\n    const results: IGameObject[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetChildAt (parent: IGameObject, index: number): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    if (index < 0 || index > children.length)\r\n    {\r\n        throw new Error(`Index out of bounds: ${index}`);\r\n    }\r\n\r\n    return children[index];\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\n/**\r\n * Get all children from the given parent to one layer deep. Does not go any lower (see GetAllChildren)\r\n *\r\n * The children are returned in a new array. Therefore, modifying this array will not\r\n * mutate the parent.\r\n *\r\n * You can optionally provide a property and value to match against.\r\n *\r\n * @export\r\n * @param {IGameObject} parent\r\n * @param {string} [property]\r\n * @param {never} [value]\r\n * @returns {IGameObject[]}\r\n */\r\nexport function GetChildren (parent: IGameObject, property?: string | symbol, value?: never): IGameObject[]\r\n{\r\n    const children = parent.children;\r\n\r\n    //  Fast path out of here\r\n    if (!property)\r\n    {\r\n        return [ ...children ];\r\n    }\r\n\r\n    const results: IGameObject[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { Distance } from '../math/vec2/Distance';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { Vec2 } from '../math/vec2/Vec2';\r\n\r\nexport function GetClosestChild (parent: IGameObject, point: Vec2): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    let closest: IGameObject = null;\r\n    let distance: number = 0;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const childDistance = Distance(point, child.transform.position);\r\n\r\n        if (!closest || childDistance < distance)\r\n        {\r\n            closest = child;\r\n            distance = childDistance;\r\n        }\r\n\r\n    });\r\n\r\n    return closest;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetFirstChild (parent: IGameObject, property: string | symbol, value?: never): IGameObject | undefined\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = 0; i < children.length; i++)\r\n    {\r\n        const child = children[i];\r\n\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { Distance } from '../math/vec2/Distance';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { Vec2 } from '../math/vec2/Vec2';\r\n\r\nexport function GetFurthestChild (parent: IGameObject, point: Vec2): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    let furthest: IGameObject = null;\r\n    let distance: number = 0;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const childDistance = Distance(point, child.transform.position);\r\n\r\n        if (!furthest || childDistance > distance)\r\n        {\r\n            furthest = child;\r\n            distance = childDistance;\r\n        }\r\n\r\n    });\r\n\r\n    return furthest;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetLastChild (parent: IGameObject, property: string | symbol, value?: never): IGameObject | undefined\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = children.length - 1; i >= 0; i--)\r\n    {\r\n        const child = children[i];\r\n\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetParents (child: IGameObject): IGameObject[]\r\n{\r\n    const parents: IGameObject[] = [];\r\n\r\n    while (child.parent)\r\n    {\r\n        parents.push(child.parent);\r\n\r\n        child = child.parent;\r\n    }\r\n\r\n    return parents;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function GetRandomChild (parent: IGameObject, startIndex: number = 0, length?: number): IGameObject\r\n{\r\n    const children = parent.children;\r\n\r\n    if (!length)\r\n    {\r\n        length = children.length;\r\n    }\r\n\r\n    const randomIndex = startIndex + Math.floor(Math.random() * length);\r\n\r\n    return children[randomIndex];\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function MoveChildDown <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex > 0)\r\n    {\r\n        const child2 = parentChildren[currentIndex - 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function MoveChildTo <T extends IGameObject> (parent: IGameObject, child: T, index: number): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex === -1 || index < 0 || index >= parentChildren.length)\r\n    {\r\n        throw new Error('Index out of bounds');\r\n    }\r\n\r\n    if (currentIndex !== index)\r\n    {\r\n        //  Remove\r\n        parentChildren.splice(currentIndex, 1);\r\n\r\n        //  Add in new location\r\n        parentChildren.splice(index, 0, child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function MoveChildUp <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex !== -1 && currentIndex > 0)\r\n    {\r\n        //  The child above the one given to this function\r\n        const child2 = parentChildren[currentIndex + 1];\r\n        const index2 = parentChildren.indexOf(child2);\r\n\r\n        parentChildren[currentIndex] = child2;\r\n        parentChildren[index2] = child;\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n        child2.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IRectangle } from '../rectangle/IRectangle';\r\n\r\nexport function RectangleToRectangle (rectA: IRectangle, rectB: IRectangle): boolean\r\n{\r\n    if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RectangleToRectangle } from '../geom/intersects/RectangleToRectangle';\r\n\r\n//  AABB Overlap test using bounds\r\n\r\nexport function Overlap (source: IGameObject, ...targets: IGameObject[]): boolean\r\n{\r\n    const sourceBounds = source.bounds.get();\r\n\r\n    for (let i = 0; i < targets.length; i++)\r\n    {\r\n        const target = targets[i];\r\n        const targetBounds = target.bounds.get();\r\n\r\n        if (RectangleToRectangle(sourceBounds, targetBounds))\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChild } from './RemoveChild';\r\n\r\nexport function RemoveChildren (parent: IGameObject, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        RemoveChild(parent, child);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildAt } from './RemoveChildAt';\r\n\r\nexport function RemoveChildrenAt (parent: IGameObject, ...index: number[]): IGameObject[]\r\n{\r\n    const removed: IGameObject[] = [];\r\n\r\n    //  Sort into numeric order\r\n    index.sort((a, b) => a - b);\r\n\r\n    //  Work through the array in reverse\r\n    index.reverse().forEach(i =>\r\n    {\r\n        const child = RemoveChildAt(parent, i);\r\n\r\n        if (child)\r\n        {\r\n            removed.push(child);\r\n        }\r\n    });\r\n\r\n    return removed;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { RemoveChildrenBetween } from './RemoveChildrenBetween';\r\nimport { SetParent } from './SetParent';\r\n\r\nexport function ReparentChildren (parent: IGameObject, newParent: IGameObject, beginIndex: number = 0, endIndex?: number): IGameObject[]\r\n{\r\n    const moved = RemoveChildrenBetween(parent, beginIndex, endIndex);\r\n\r\n    SetParent(newParent, ...moved);\r\n\r\n    moved.forEach(child =>\r\n    {\r\n        child.transform.updateWorld();\r\n    });\r\n\r\n    return moved;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RotateChildrenLeft (parent: IGameObject, total: number = 1): IGameObject\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    let child = null;\r\n\r\n    for (let i: number = 0; i < total; i++)\r\n    {\r\n        child = parentChildren.shift();\r\n\r\n        parentChildren.push(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function RotateChildrenRight (parent: IGameObject, total: number = 1): IGameObject\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    let child = null;\r\n\r\n    for (let i: number = 0; i < total; i++)\r\n    {\r\n        child = parentChildren.pop();\r\n\r\n        parentChildren.unshift(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SendChildToBack <T extends IGameObject> (parent: IGameObject, child: T): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChildIndex(parent, child);\r\n\r\n    if (currentIndex !== -1 && currentIndex > 0)\r\n    {\r\n        parentChildren.splice(currentIndex, 1);\r\n        parentChildren.unshift(child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetBounds (x: number, y: number, width: number, height: number, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.bounds.set(x, y, width, height);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { DepthFirstSearch } from './DepthFirstSearch';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetChildrenValue (parent: IGameObject, property: string | symbol, value: never): IGameObject[]\r\n{\r\n    const children = DepthFirstSearch(parent);\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor)\r\n        {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetName (name: string, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.name = name;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetOrigin (originX: number, originY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setOrigin(originX, originY);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetPosition (x: number, y: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setPosition(x, y);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetRotation (rotation: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.rotation = rotation;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetScale (scaleX: number, scaleY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setScale(scaleX, scaleY);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetSize (width: number, height: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setSize(width, height);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IContainer } from '../gameobjects/container/IContainer';\r\n\r\nexport function SetSkew (skewX: number, skewY: number, ...children: IContainer[]): IContainer[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.setSkew(skewX, skewY);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetType (type: string, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.type = type;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetValue (property: string | symbol, value: never, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor)\r\n        {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetVisible (visible: boolean, ...children: IGameObject[]): IGameObject[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.visible = visible;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function ShuffleChildren (parent: IGameObject): IGameObject[]\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = children.length - 1; i > 0; i--)\r\n    {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = children[i];\r\n\r\n        children[i] = children[j];\r\n        children[j] = temp;\r\n\r\n        temp.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { GetChildIndex } from './GetChildIndex';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SwapChildren (child1: IGameObject, child2: IGameObject): void\r\n{\r\n    if (child1.parent === child2.parent)\r\n    {\r\n        const children = child1.parent.children;\r\n\r\n        const index1 = GetChildIndex(child1.parent, child1);\r\n        const index2 = GetChildIndex(child2.parent, child2);\r\n\r\n        if (index1 !== index2)\r\n        {\r\n            children[index1] = child2;\r\n            children[index2] = child1;\r\n        }\r\n    }\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using an iterative search.\r\n//  Does NOT include the parent in the results.\r\n\r\nexport function DepthFirstSearch3D (parent: IGameObject3D): IGameObject3D[]\r\n{\r\n    const stack: IGameObject3D[] = [ parent ];\r\n    const output: IGameObject3D[] = [];\r\n\r\n    while (stack.length > 0)\r\n    {\r\n        const node = stack.shift();\r\n\r\n        output.push(node);\r\n\r\n        const numChildren = node.numChildren;\r\n\r\n        if (numChildren > 0)\r\n        {\r\n            for (let i = numChildren - 1; i >= 0; i--)\r\n            {\r\n                stack.unshift(node.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  Remove the parent from the results\r\n    output.shift();\r\n\r\n    return output;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function GetChild3DIndex (parent: IGameObject3D, child: IGameObject3D): number\r\n{\r\n    return parent.children.indexOf(child);\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function RemoveChild3DAt (parent: IGameObject3D, index: number): IGameObject3D | undefined\r\n{\r\n    const children = parent.children;\r\n    let child: IGameObject3D;\r\n\r\n    if (index >= 0 && index < children.length)\r\n    {\r\n        const removed = children.splice(index, 1);\r\n\r\n        if (removed[0])\r\n        {\r\n            child = removed[0];\r\n            child.parent = null;\r\n        }\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { GetChild3DIndex } from './GetChild3DIndex';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { RemoveChild3DAt } from './RemoveChild3DAt';\r\n\r\nexport function RemoveChild3D <T extends IGameObject3D> (parent: IGameObject3D, child: T): T\r\n{\r\n    const currentIndex = GetChild3DIndex(parent, child);\r\n\r\n    if (currentIndex > -1)\r\n    {\r\n        RemoveChild3DAt(parent, currentIndex);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { AddedToWorldEvent, RemovedFromWorldEvent } from '../gameobjects/events';\r\n\r\nimport { Emit } from '../events/Emit';\r\nimport { IBaseWorld3D } from '../world3d/IBaseWorld3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function SetWorld3D (world: IBaseWorld3D, ...children: IGameObject3D[]): IGameObject3D[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        if (child.world)\r\n        {\r\n            Emit(child.world, RemovedFromWorldEvent, child, child.world);\r\n            Emit(child, RemovedFromWorldEvent, child, child.world);\r\n        }\r\n\r\n        child.world = world;\r\n\r\n        Emit(world, AddedToWorldEvent, child, world);\r\n        Emit(child, AddedToWorldEvent, child, world);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { DepthFirstSearch3D } from './DepthFirstSearch3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { RemoveChild3D } from './RemoveChild3D';\r\nimport { SetWorld3D } from './SetWorld3D';\r\n\r\nexport function SetParent3D (parent: IGameObject3D, ...children: IGameObject3D[]): IGameObject3D[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        if (child.parent)\r\n        {\r\n            RemoveChild3D(child.parent, child);\r\n        }\r\n\r\n        child.parent = parent;\r\n    });\r\n\r\n    const parentWorld = parent.world;\r\n\r\n    if (parentWorld)\r\n    {\r\n        //  Full list of all children, including sub-children\r\n        SetWorld3D(parentWorld, ...DepthFirstSearch3D(parent));\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { SetParent3D } from './SetParent3D';\r\n\r\nexport function AddChild3D <T extends IGameObject3D> (parent: IGameObject3D, child: T): T\r\n{\r\n    parent.children.push(child);\r\n\r\n    SetParent3D(parent, child);\r\n\r\n    // child.transform.updateWorld();\r\n\r\n    return child;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { SetParent3D } from './SetParent3D';\r\n\r\nexport function AddChild3DAt <T extends IGameObject3D> (parent: IGameObject3D, index: number, child: T): T\r\n{\r\n    const children = parent.children;\r\n\r\n    if (index >= 0 && index <= children.length)\r\n    {\r\n        SetParent3D(parent, child);\r\n\r\n        children.splice(index, 0, child);\r\n\r\n        // child.transform.updateWorld();\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { AddChild3D } from './AddChild3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function AddChildren3D (parent: IGameObject3D, ...children: IGameObject3D[]): IGameObject3D[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        AddChild3D(parent, child);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { SetParent3D } from './SetParent3D';\r\n\r\nexport function AddChildren3DAt (parent: IGameObject3D, index: number, ...children: IGameObject3D[]): IGameObject3D[]\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    if (index >= 0 && index <= parentChildren.length)\r\n    {\r\n        children.reverse().forEach(child =>\r\n        {\r\n            children.splice(index, 0, child);\r\n\r\n            SetParent3D(parent, child);\r\n\r\n            // child.transform.updateWorld();\r\n        });\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { SearchEntry3D } from './SearchEntry3DType';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using a recursive search.\r\n//  Parents and children are grouped together.\r\n\r\nexport function DepthFirstSearchRecursiveNested3D (parent: IGameObject3D, output: SearchEntry3D[] = []): SearchEntry3D[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const node = parent.children[i];\r\n\r\n        const children: SearchEntry3D[] = [];\r\n\r\n        output.push({ node, children });\r\n\r\n        if (node.numChildren > 0)\r\n        {\r\n            DepthFirstSearchRecursiveNested3D(node, children);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { DepthFirstSearchRecursiveNested3D } from './DepthFirstSearchRecursiveNested3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { SearchEntry3D } from './SearchEntry3DType';\r\n\r\nfunction GetInfo (entry: IGameObject3D): string\r\n{\r\n    const legend = (entry.numChildren > 0) ? 'Parent' :  'Child';\r\n\r\n    return `${legend} [ type=${entry.type}, name=${entry.name} ]`;\r\n}\r\n\r\nfunction LogChildren (entry: SearchEntry3D): void\r\n{\r\n    console.group(GetInfo(entry.node));\r\n\r\n    entry.children.forEach(child =>\r\n    {\r\n        if (child.children.length > 0)\r\n        {\r\n            LogChildren(child);\r\n        }\r\n        else\r\n        {\r\n            console.log(GetInfo(child.node));\r\n        }\r\n    });\r\n\r\n    console.groupEnd();\r\n}\r\n\r\nexport function ConsoleTreeChildren3D (parent: IGameObject3D): void\r\n{\r\n    const entries = DepthFirstSearchRecursiveNested3D(parent);\r\n\r\n    if (parent.world === parent)\r\n    {\r\n        console.group('World');\r\n    }\r\n    else\r\n    {\r\n        console.group(GetInfo(parent));\r\n    }\r\n\r\n    entries.forEach(entry =>\r\n    {\r\n        if (entry.children.length)\r\n        {\r\n            LogChildren(entry);\r\n        }\r\n        else\r\n        {\r\n            console.log(GetInfo(entry.node));\r\n        }\r\n    });\r\n\r\n    console.groupEnd();\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function CountMatchingChildren3D (parent: IGameObject3D, property: string | symbol, value?: never): number\r\n{\r\n    const children = parent.children;\r\n\r\n    let total = 0;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            total++;\r\n        }\r\n    });\r\n\r\n    return total;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\n//  Returns all children of the parent, no matter what depth they go to, using a recursive search.\r\n//  Does NOT include the parent in the results.\r\n\r\nexport function DepthFirstSearchRecursive3D (parent: IGameObject3D, output: IGameObject3D[] = []): IGameObject3D[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const child = parent.children[i];\r\n\r\n        output.push(child);\r\n\r\n        if (child.numChildren > 0)\r\n        {\r\n            DepthFirstSearchRecursive3D(child, output);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function RemoveChildren3DBetween (parent: IGameObject3D, beginIndex: number = 0, endIndex?: number): IGameObject3D[]\r\n{\r\n    const children = parent.children;\r\n\r\n    if (endIndex === undefined)\r\n    {\r\n        endIndex = children.length;\r\n    }\r\n\r\n    const range = endIndex - beginIndex;\r\n\r\n    if (range > 0 && range <= endIndex)\r\n    {\r\n        const removed = children.splice(beginIndex, range);\r\n\r\n        removed.forEach(child =>\r\n        {\r\n            child.parent = null;\r\n        });\r\n\r\n        return removed;\r\n    }\r\n    else\r\n    {\r\n        return [];\r\n    }\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { RemoveChildren3DBetween } from './RemoveChildren3DBetween';\r\n\r\nexport function DestroyChildren3D (parent: IGameObject3D, beginIndex: number = 0, endIndex?: number): void\r\n{\r\n    const removed = RemoveChildren3DBetween(parent, beginIndex, endIndex);\r\n\r\n    removed.forEach(child =>\r\n    {\r\n        child.destroy();\r\n    });\r\n}\r\n","import { DepthFirstSearch3D } from './DepthFirstSearch3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function FindChild3DByName (parent: IGameObject3D, searchString: string): IGameObject3D | undefined\r\n{\r\n    const children = DepthFirstSearch3D(parent);\r\n    const regex = RegExp(searchString);\r\n\r\n    for (let i = 0; i < children.length; i++)\r\n    {\r\n        const child = children[i];\r\n\r\n        if (regex.test(child.name))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { DepthFirstSearch3D } from './DepthFirstSearch3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function FindChildren3DByName (parent: IGameObject3D, searchString: string): IGameObject3D[]\r\n{\r\n    const children = DepthFirstSearch3D(parent);\r\n    const regex = RegExp(searchString);\r\n\r\n    const results: IGameObject3D[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        if (regex.test(child.name))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { DepthFirstSearch3D } from './DepthFirstSearch3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function GetAllChildren3D (parent: IGameObject3D, property?: string | symbol, value?: never): IGameObject3D[]\r\n{\r\n    const children = DepthFirstSearch3D(parent);\r\n\r\n    //  Fast path out of here\r\n    if (!property)\r\n    {\r\n        return children;\r\n    }\r\n\r\n    const results: IGameObject3D[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function GetChild3DAt (parent: IGameObject3D, index: number): IGameObject3D\r\n{\r\n    const children = parent.children;\r\n\r\n    if (index < 0 || index > children.length)\r\n    {\r\n        throw new Error(`Index out of bounds: ${index}`);\r\n    }\r\n\r\n    return children[index];\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\n/**\r\n * Get all children from the given parent to one layer deep. Does not go any lower (see GetAllChildren)\r\n *\r\n * The children are returned in a new array. Therefore, modifying this array will not\r\n * mutate the parent.\r\n *\r\n * You can optionally provide a property and value to match against.\r\n *\r\n * @export\r\n * @param {IGameObject} parent\r\n * @param {string} [property]\r\n * @param {never} [value]\r\n * @returns {IGameObject[]}\r\n */\r\nexport function GetChildren3D (parent: IGameObject3D, property?: string | symbol, value?: never): IGameObject3D[]\r\n{\r\n    const children = parent.children;\r\n\r\n    //  Fast path out of here\r\n    if (!property)\r\n    {\r\n        return [ ...children ];\r\n    }\r\n\r\n    const results: IGameObject3D[] = [];\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            results.push(child);\r\n        }\r\n    });\r\n\r\n    return results;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function GetFirstChild3D (parent: IGameObject3D, property: string | symbol, value?: never): IGameObject3D | undefined\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = 0; i < children.length; i++)\r\n    {\r\n        const child = children[i];\r\n\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function GetLastChild3D (parent: IGameObject3D, property: string | symbol, value?: never): IGameObject3D | undefined\r\n{\r\n    const children = parent.children;\r\n\r\n    for (let i = children.length - 1; i >= 0; i--)\r\n    {\r\n        const child = children[i];\r\n\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor && (value === undefined || value === descriptor.value))\r\n        {\r\n            return child;\r\n        }\r\n    }\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function GetParents3D (child: IGameObject3D): IGameObject3D[]\r\n{\r\n    const parents: IGameObject3D[] = [];\r\n\r\n    while (child.parent)\r\n    {\r\n        parents.push(child.parent);\r\n\r\n        child = child.parent;\r\n    }\r\n\r\n    return parents;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function GetRandomChild3D (parent: IGameObject3D, startIndex: number = 0, length?: number): IGameObject3D\r\n{\r\n    const children = parent.children;\r\n\r\n    if (!length)\r\n    {\r\n        length = children.length;\r\n    }\r\n\r\n    const randomIndex = startIndex + Math.floor(Math.random() * length);\r\n\r\n    return children[randomIndex];\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { GetChild3DIndex } from './GetChild3DIndex';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function MoveChild3DTo <T extends IGameObject3D> (parent: IGameObject3D, child: T, index: number): T\r\n{\r\n    const parentChildren = parent.children;\r\n\r\n    const currentIndex = GetChild3DIndex(parent, child);\r\n\r\n    if (currentIndex === -1 || index < 0 || index >= parentChildren.length)\r\n    {\r\n        throw new Error('Index out of bounds');\r\n    }\r\n\r\n    if (currentIndex !== index)\r\n    {\r\n        //  Remove\r\n        parentChildren.splice(currentIndex, 1);\r\n\r\n        //  Add in new location\r\n        parentChildren.splice(index, 0, child);\r\n\r\n        child.setDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n\r\n    return child;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { RemoveChild3D } from './RemoveChild3D';\r\n\r\nexport function RemoveChildren3D (parent: IGameObject3D, ...children: IGameObject3D[]): IGameObject3D[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        RemoveChild3D(parent, child);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { RemoveChild3DAt } from './RemoveChild3DAt';\r\n\r\nexport function RemoveChildren3DAt (parent: IGameObject3D, ...index: number[]): IGameObject3D[]\r\n{\r\n    const removed: IGameObject3D[] = [];\r\n\r\n    //  Sort into numeric order\r\n    index.sort((a, b) => a - b);\r\n\r\n    //  Work through the array in reverse\r\n    index.reverse().forEach(i =>\r\n    {\r\n        const child = RemoveChild3DAt(parent, i);\r\n\r\n        if (child)\r\n        {\r\n            removed.push(child);\r\n        }\r\n    });\r\n\r\n    return removed;\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { RemoveChildren3DBetween } from './RemoveChildren3DBetween';\r\nimport { SetParent3D } from './SetParent3D';\r\n\r\nexport function ReparentChildren3D (parent: IGameObject3D, newParent: IGameObject3D, beginIndex: number = 0, endIndex?: number): IGameObject3D[]\r\n{\r\n    const moved = RemoveChildren3DBetween(parent, beginIndex, endIndex);\r\n\r\n    SetParent3D(newParent, ...moved);\r\n\r\n    moved.forEach(child =>\r\n    {\r\n        // child.transform.updateWorld();\r\n    });\r\n\r\n    return moved;\r\n}\r\n","import { AddChild3DAt } from './AddChild3DAt';\r\nimport { GetChild3DIndex } from './GetChild3DIndex';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { MoveChild3DTo } from './MoveChild3DTo';\r\nimport { RemoveChild3D } from './RemoveChild3D';\r\n\r\n//  Replaces the `target` child with the `source` child.\r\n//  Both children are removed from their parents.\r\n//  Source is then moved to the parent of the target.\r\n//  Target is left without a parent after this call.\r\n//  If both children have the same parent, target is removed from the parent and source is moved to the position target previously held.\r\n//  Target is returned.\r\n\r\nexport function ReplaceChild3D (target: IGameObject3D, source: IGameObject3D): IGameObject3D\r\n{\r\n    const targetParent = target.parent;\r\n    const sourceParent = source.parent;\r\n    const targetIndex = GetChild3DIndex(targetParent, target);\r\n\r\n    if (targetParent === sourceParent)\r\n    {\r\n        //  Remove target from parent and move source to targets position\r\n        MoveChild3DTo(targetParent, source, targetIndex);\r\n        RemoveChild3D(targetParent, target);\r\n    }\r\n    else\r\n    {\r\n        //  They have different parents\r\n        RemoveChild3D(targetParent, target);\r\n        RemoveChild3D(sourceParent, source);\r\n\r\n        AddChild3DAt(targetParent, targetIndex, source);\r\n    }\r\n\r\n    return target;\r\n}\r\n","import { DepthFirstSearch3D } from './DepthFirstSearch3D';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function SetChildren3DValue (parent: IGameObject3D, property: string | symbol, value: never): IGameObject3D[]\r\n{\r\n    const children = DepthFirstSearch3D(parent);\r\n\r\n    children.forEach(child =>\r\n    {\r\n        const descriptor = Object.getOwnPropertyDescriptor(child, property);\r\n\r\n        if (descriptor)\r\n        {\r\n            descriptor.set(value);\r\n        }\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { GetChild3DIndex } from './GetChild3DIndex';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\n\r\nexport function SwapChildren3D (child1: IGameObject3D, child2: IGameObject3D): void\r\n{\r\n    if (child1.parent === child2.parent)\r\n    {\r\n        const children = child1.parent.children;\r\n\r\n        const index1 = GetChild3DIndex(child1.parent, child1);\r\n        const index2 = GetChild3DIndex(child2.parent, child2);\r\n\r\n        if (index1 !== index2)\r\n        {\r\n            children[index1] = child2;\r\n            children[index2] = child1;\r\n        }\r\n    }\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function ClearEvent (emitter: IEventEmitter, event: string): IEventEmitter\r\n{\r\n    emitter.events.delete(event);\r\n\r\n    return emitter;\r\n}\r\n","import { IEventInstance } from './IEventInstance';\r\n\r\nexport class EventEmitter\r\n{\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    constructor ()\r\n    {\r\n        this.events = new Map();\r\n    }\r\n}\r\n","export class EventInstance\r\n{\r\n    callback: Function;\r\n    context: unknown;\r\n    once: boolean;\r\n\r\n    constructor (callback: Function, context: unknown, once: boolean = false)\r\n    {\r\n        this.callback = callback;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetEventNames (emitter: IEventEmitter): string[]\r\n{\r\n    return [ ...emitter.events.keys() ];\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetListenerCount (emitter: IEventEmitter, event: string): number\r\n{\r\n    const listeners = emitter.events.get(event);\r\n\r\n    return (listeners) ? listeners.size : 0;\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function GetListeners (emitter: IEventEmitter, event: string): Function[]\r\n{\r\n    const out: Function[] = [];\r\n\r\n    const listeners = emitter.events.get(event);\r\n\r\n    listeners.forEach(listener =>\r\n    {\r\n        out.push(listener.callback);\r\n    });\r\n\r\n    return out;\r\n}\r\n","import { EventInstance } from './EventInstance';\r\nimport { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\n\r\nexport function Off (emitter: IEventEmitter, event: string, callback?: Function | IEventInstance, context?: unknown, once?: boolean): IEventEmitter\r\n{\r\n    const events = emitter.events;\r\n    const listeners = events.get(event);\r\n\r\n    if (!callback)\r\n    {\r\n        //  Remove all events matching the given key\r\n        events.delete(event);\r\n    }\r\n    else if (callback instanceof EventInstance)\r\n    {\r\n        listeners.delete(callback as IEventInstance);\r\n    }\r\n    else\r\n    {\r\n        const hasContext: boolean = !context;\r\n        const hasOnce: boolean = (once !== undefined);\r\n\r\n        for (const listener of listeners)\r\n        {\r\n            if (\r\n                (listener.callback === callback) &&\r\n                (hasContext && listener.context === context) &&\r\n                (hasOnce && listener.once === once)\r\n            )\r\n            {\r\n                listeners.delete(listener);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (listeners.size === 0)\r\n    {\r\n        events.delete(event);\r\n    }\r\n\r\n    return emitter;\r\n}\r\n","import { EventInstance } from './EventInstance';\r\nimport { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\n\r\nexport function On (emitter: IEventEmitter, event: string, callback: Function, context: unknown = emitter, once: boolean = false): IEventInstance\r\n{\r\n    if (typeof callback !== 'function')\r\n    {\r\n        throw new TypeError('Listener not a function');\r\n    }\r\n\r\n    const listener = new EventInstance(callback, context, once);\r\n    const listeners = emitter.events.get(event);\r\n\r\n    if (!listeners)\r\n    {\r\n        emitter.events.set(event, new Set([ listener ]));\r\n    }\r\n    else\r\n    {\r\n        listeners.add(listener);\r\n    }\r\n\r\n    return listener;\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\nimport { IEventInstance } from './IEventInstance';\r\nimport { On } from './On';\r\n\r\nexport function Once (emitter: IEventEmitter, event: string, callback: Function, context: unknown = emitter): IEventInstance\r\n{\r\n    return On(emitter, event, callback, context, true);\r\n}\r\n","import { IEventEmitter } from './IEventEmitter';\r\n\r\nexport function RemoveAllListeners (emitter: IEventEmitter, event?: string): void\r\n{\r\n    if (!event)\r\n    {\r\n        emitter.events.clear();\r\n    }\r\n    else\r\n    {\r\n        emitter.events.delete(event);\r\n    }\r\n}\r\n","import { ITransformComponent } from './ITransformComponent';\r\nimport { Vertices } from './Vertices';\r\n\r\nexport function GetVertices (transform: ITransformComponent): Vertices\r\n{\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y, right, bottom } = transform.extent;\r\n\r\n    const x0 = (x * a) + (y * c) + tx;\r\n    const y0 = (x * b) + (y * d) + ty;\r\n\r\n    const x1 = (x * a) + (bottom * c) + tx;\r\n    const y1 = (x * b) + (bottom * d) + ty;\r\n\r\n    const x2 = (right * a) + (bottom * c) + tx;\r\n    const y2 = (right * b) + (bottom * d) + ty;\r\n\r\n    const x3 = (right * a) + (y * c) + tx;\r\n    const y3 = (right * b) + (y * d) + ty;\r\n\r\n    return { x0, y0, x1, y1, x2, y2, x3, y3 };\r\n}\r\n","import { DIRTY_CONST } from '../../DIRTY_CONST';\r\nimport { GetVertices } from '../transform/GetVertices';\r\nimport { IBoundsComponent } from './IBoundsComponent';\r\nimport { IGameObject } from '../../IGameObject';\r\nimport { Rectangle } from '../../../geom/rectangle/Rectangle';\r\n\r\nexport class BoundsComponent implements IBoundsComponent\r\n{\r\n    entity: IGameObject;\r\n\r\n    //  The bounds of the entity calculated in world space\r\n    private area: Rectangle;\r\n\r\n    fixed: boolean = false;\r\n\r\n    includeChildren: boolean = true;\r\n\r\n    visibleOnly: boolean = true;\r\n\r\n    constructor (entity: IGameObject)\r\n    {\r\n        this.entity = entity;\r\n\r\n        this.area = new Rectangle();\r\n    }\r\n\r\n    set (x: number, y: number, width: number, height: number): void\r\n    {\r\n        this.area.set(x, y, width, height);\r\n    }\r\n\r\n    get (): Rectangle\r\n    {\r\n        if (this.entity.isDirty(DIRTY_CONST.BOUNDS) && !this.fixed)\r\n        {\r\n            this.update();\r\n        }\r\n\r\n        return this.area;\r\n    }\r\n\r\n    updateLocal (): Rectangle\r\n    {\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(this.entity.transform);\r\n\r\n        const x = Math.min(x0, x1, x2, x3);\r\n        const y = Math.min(y0, y1, y2, y3);\r\n        const right = Math.max(x0, x1, x2, x3);\r\n        const bottom = Math.max(y0, y1, y2, y3);\r\n\r\n        return this.area.set(\r\n            x,\r\n            y,\r\n            right - x,\r\n            bottom - y\r\n        );\r\n    }\r\n\r\n    update (): Rectangle\r\n    {\r\n        //  First we get the bounds for this Game Object\r\n        const bounds = this.updateLocal();\r\n\r\n        this.entity.clearDirty(DIRTY_CONST.BOUNDS);\r\n\r\n        if (!this.includeChildren || !this.entity.numChildren)\r\n        {\r\n            return bounds;\r\n        }\r\n\r\n        const visibleOnly = this.visibleOnly;\r\n        const children = this.entity.children;\r\n\r\n        let x = bounds.x;\r\n        let y = bounds.y;\r\n        let right = bounds.right;\r\n        let bottom = bounds.bottom;\r\n\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            const child = children[i];\r\n\r\n            if (!child || (visibleOnly && !child.visible))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            const childBounds = child.bounds.get();\r\n\r\n            if (childBounds.x < x)\r\n            {\r\n                x = childBounds.x;\r\n            }\r\n\r\n            if (childBounds.y < y)\r\n            {\r\n                y = childBounds.y;\r\n            }\r\n\r\n            if (childBounds.right > right)\r\n            {\r\n                right = childBounds.right;\r\n            }\r\n\r\n            if (childBounds.bottom > bottom)\r\n            {\r\n                bottom = childBounds.bottom;\r\n            }\r\n        }\r\n\r\n        return bounds.set(\r\n            x,\r\n            y,\r\n            right - x,\r\n            bottom - y\r\n        );\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.entity = null;\r\n        this.area = null;\r\n    }\r\n}\r\n","import { IGameObject } from '../../IGameObject';\r\nimport { IInputComponent } from './IInputComponent';\r\nimport { IInteractiveArea } from '../../../input/IInteractiveArea';\r\n\r\nexport class InputComponent implements IInputComponent\r\n{\r\n    entity: IGameObject;\r\n    enabled: boolean = false;\r\n    enabledChildren: boolean = true;\r\n    hitArea: IInteractiveArea;\r\n\r\n    constructor (entity: IGameObject)\r\n    {\r\n        this.entity = entity;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.entity = null;\r\n        this.hitArea = null;\r\n    }\r\n}\r\n","export let originX = 0.5;\r\nexport let originY = 0.5;\r\n\r\nexport function DefaultOrigin (x: number = 0.5, y: number = x): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        originX = x;\r\n        originY = y;\r\n    };\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Calculates the area of the given Rectangle object.\r\n *\r\n * @function Phaser.Geom.Rectangle.Area\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle to calculate the area of.\r\n *\r\n * @return {number} The area of the Rectangle object.\r\n */\r\nexport function Area (rect: IRectangle): number\r\n{\r\n    return rect.width * rect.height;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Rounds a Rectangle's position up to the smallest integer greater than or equal to each current coordinate.\r\n *\r\n * @function Phaser.Geom.Rectangle.Ceil\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to adjust.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The adjusted Rectangle.\r\n */\r\nexport function Ceil (rect: IRectangle): IRectangle\r\n{\r\n    rect.x = Math.ceil(rect.x);\r\n    rect.y = Math.ceil(rect.y);\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Rounds a Rectangle's position and size up to the smallest integer greater than or equal to each respective value.\r\n *\r\n * @function Phaser.Geom.Rectangle.CeilAll\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to modify.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The modified Rectangle.\r\n */\r\nexport function CeilAll (rect: IRectangle): IRectangle\r\n{\r\n    rect.x = Math.ceil(rect.x);\r\n    rect.y = Math.ceil(rect.y);\r\n    rect.width = Math.ceil(rect.width);\r\n    rect.height = Math.ceil(rect.height);\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Moves the top-left corner of a Rectangle so that its center is at the given coordinates.\r\n *\r\n * @function Phaser.Geom.Rectangle.CenterOn\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to be centered.\r\n * @param {number} x - The X coordinate of the Rectangle's center.\r\n * @param {number} y - The Y coordinate of the Rectangle's center.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The centered rectangle.\r\n */\r\nexport function CenterOn (rect: IRectangle, x: number, y: number): IRectangle\r\n{\r\n    rect.x = x - (rect.width / 2);\r\n    rect.y = y - (rect.height / 2);\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\nexport function CenterX (rect: IRectangle): number\r\n{\r\n    return rect.x + (rect.width / 2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\nexport function CenterY (rect: IRectangle): number\r\n{\r\n    return rect.y + (rect.height / 2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Rectangle } from './Rectangle';\r\n\r\n/**\r\n * Creates a new Rectangle which is identical to the given one.\r\n *\r\n * @function Phaser.Geom.Rectangle.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} source - The Rectangle to clone.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The newly created Rectangle, which is separate from the given one.\r\n */\r\nexport function Clone (source: IRectangle): Rectangle\r\n{\r\n    return new Rectangle(source.x, source.y, source.width, source.height);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Determines whether the specified point is contained within the rectangular region defined by this Rectangle object.\r\n *\r\n * @function Phaser.Geom.Rectangle.ContainsPoint\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle object.\r\n * @param {Phaser.Geom.Point} point - The point object to be checked. Can be a Phaser Point object or any object with x and y values.\r\n *\r\n * @return {boolean} A value of true if the Rectangle object contains the specified point, otherwise false.\r\n */\r\nexport function ContainsPoint (rect: IRectangle, point: Vec2): boolean\r\n{\r\n    return Contains(rect, point.x, point.y);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Tests if one rectangle fully contains another.\r\n *\r\n * @function Phaser.Geom.Rectangle.ContainsRect\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first rectangle.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second rectangle.\r\n *\r\n * @return {boolean} True only if rectA fully contains rectB.\r\n */\r\nexport function ContainsRect (rectA: IRectangle, rectB: IRectangle): boolean\r\n{\r\n    //  Volume check (if rectB volume > rectA then rectA cannot contain it)\r\n    if ((rectB.width * rectB.height) > (rectA.width * rectA.height))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        (rectB.x > rectA.x && rectB.x < rectA.right) &&\r\n        (rectB.right > rectA.x && rectB.right < rectA.right) &&\r\n        (rectB.y > rectA.y && rectB.y < rectA.bottom) &&\r\n        (rectB.bottom > rectA.y && rectB.bottom < rectA.bottom)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Copy the values of one Rectangle to a destination Rectangle.\r\n *\r\n * @function Phaser.Geom.Rectangle.CopyFrom\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [dest,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} source - The source Rectangle to copy the values from.\r\n * @param {Phaser.Geom.Rectangle} dest - The destination Rectangle to copy the values to.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The destination Rectangle.\r\n */\r\nexport function CopyFrom (source: IRectangle, dest: IRectangle): IRectangle\r\n{\r\n    return dest.set(source.x, source.y, source.width, source.height);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Create an array of points for each corner of a Rectangle\r\n * If an array is specified, each point object will be added to the end of the array, otherwise a new array will be created.\r\n *\r\n * @function Phaser.Geom.Rectangle.Decompose\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle object to be decomposed.\r\n * @param {array} [out] - If provided, each point will be added to this array.\r\n *\r\n * @return {array} Will return the array you specified or a new array containing the points of the Rectangle.\r\n */\r\nexport function Decompose (rect: IRectangle, out: Vec2[] = []): Vec2[]\r\n{\r\n    out.push(\r\n        new Vec2(rect.x, rect.y),\r\n        new Vec2(rect.right, rect.y),\r\n        new Vec2(rect.right, rect.bottom),\r\n        new Vec2(rect.x, rect.bottom)\r\n    );\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Compares the `x`, `y`, `width` and `height` properties of two rectangles.\r\n *\r\n * @function Phaser.Geom.Rectangle.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - Rectangle A\r\n * @param {Phaser.Geom.Rectangle} toCompare - Rectangle B\r\n *\r\n * @return {boolean} `true` if the rectangles' properties are an exact match, otherwise `false`.\r\n */\r\nexport function Equals (rect: IRectangle, toCompare: IRectangle): boolean\r\n{\r\n    return (\r\n        rect.x === toCompare.x &&\r\n        rect.y === toCompare.y &&\r\n        rect.width === toCompare.width &&\r\n        rect.height === toCompare.height\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Calculates the width/height ratio of a rectangle.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetAspectRatio\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle.\r\n *\r\n * @return {number} The width/height ratio of the rectangle.\r\n */\r\nexport function GetAspectRatio (rect: IRectangle): number\r\n{\r\n    return (rect.height === 0) ? NaN : rect.width / rect.height;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CenterX } from './CenterX';\r\nimport { CenterY } from './CenterY';\r\nimport { GetAspectRatio } from './GetAspectRatio';\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Adjusts the target rectangle, changing its width, height and position,\r\n * so that it fits inside the area of the source rectangle, while maintaining its original\r\n * aspect ratio.\r\n *\r\n * Unlike the `FitOutside` function, there may be some space inside the source area not covered.\r\n *\r\n * @function Phaser.Geom.Rectangle.FitInside\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [target,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} target - The target rectangle to adjust.\r\n * @param {Phaser.Geom.Rectangle} source - The source rectangle to envelop the target in.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The modified target rectangle instance.\r\n */\r\nexport function FitInside (target: IRectangle, source: IRectangle): IRectangle\r\n{\r\n    const ratio = GetAspectRatio(target);\r\n\r\n    let width: number = source.width;\r\n    let height: number = source.height;\r\n\r\n    if (ratio < GetAspectRatio(source))\r\n    {\r\n        //  Taller than Wide\r\n        width = source.height * ratio;\r\n    }\r\n    else\r\n    {\r\n        //  Wider than Tall\r\n        height = source.width / ratio;\r\n    }\r\n\r\n    return target.set(\r\n        CenterX(source) - (target.width / 2),\r\n        CenterY(source) - (target.height / 2),\r\n        width,\r\n        height\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CenterX } from './CenterX';\r\nimport { CenterY } from './CenterY';\r\nimport { GetAspectRatio } from './GetAspectRatio';\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Adjusts the target rectangle, changing its width, height and position,\r\n * so that it fully covers the area of the source rectangle, while maintaining its original\r\n * aspect ratio.\r\n *\r\n * Unlike the `FitInside` function, the target rectangle may extend further out than the source.\r\n *\r\n * @function Phaser.Geom.Rectangle.FitOutside\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [target,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} target - The target rectangle to adjust.\r\n * @param {Phaser.Geom.Rectangle} source - The source rectangle to envelope the target in.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The modified target rectangle instance.\r\n */\r\nexport function FitOutside (target: IRectangle, source: IRectangle): IRectangle\r\n{\r\n    const ratio = GetAspectRatio(target);\r\n    let width = source.width;\r\n    let height = source.height;\r\n\r\n    if (ratio > GetAspectRatio(source))\r\n    {\r\n        //  Wider than Tall\r\n        width = source.height * ratio;\r\n    }\r\n    else\r\n    {\r\n        //  Taller than Wide\r\n        height = source.width / ratio;\r\n    }\r\n\r\n    return target.set(\r\n        CenterX(source) - target.width / 2,\r\n        CenterY(source) - target.height / 2,\r\n        width,\r\n        height\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Rounds down (floors) the top left X and Y coordinates of the given Rectangle to the largest integer less than or equal to them\r\n *\r\n * @function Phaser.Geom.Rectangle.Floor\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle to floor the top left X and Y coordinates of\r\n *\r\n * @return {Phaser.Geom.Rectangle} The rectangle that was passed to this function with its coordinates floored.\r\n */\r\nexport function Floor (rect: IRectangle): IRectangle\r\n{\r\n    rect.x = Math.floor(rect.x);\r\n    rect.y = Math.floor(rect.y);\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Rounds a Rectangle's position and size down to the largest integer less than or equal to each current coordinate or dimension.\r\n *\r\n * @function Phaser.Geom.Rectangle.FloorAll\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to adjust.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The adjusted Rectangle.\r\n */\r\nexport function FloorAll (rect: IRectangle): IRectangle\r\n{\r\n    rect.x = Math.floor(rect.x);\r\n    rect.y = Math.floor(rect.y);\r\n    rect.width = Math.floor(rect.width);\r\n    rect.height = Math.floor(rect.height);\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { MATH_CONST } from '../../math/const';\r\nimport { Rectangle } from './Rectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Constructs new Rectangle or repositions and resizes an existing Rectangle so that all of the given points are on or within its bounds.\r\n *\r\n * @function Phaser.Geom.Rectangle.FromPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {array} points - An array of points (either arrays with two elements corresponding to the X and Y coordinate or an object with public `x` and `y` properties) which should be surrounded by the Rectangle.\r\n * @param {Phaser.Geom.Rectangle} [out] - Optional Rectangle to adjust.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The adjusted `out` Rectangle, or a new Rectangle if none was provided.\r\n */\r\nexport function FromPoints (points: Vec2[], out: Rectangle = new Rectangle()): Rectangle\r\n{\r\n    if (points.length === 0)\r\n    {\r\n        return out;\r\n    }\r\n\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n\r\n    let maxX = MATH_CONST.MIN_SAFE_INTEGER;\r\n    let maxY = MATH_CONST.MIN_SAFE_INTEGER;\r\n\r\n    for (let i = 0; i < points.length; i++)\r\n    {\r\n        const px = points[i].x;\r\n        const py = points[i].y;\r\n\r\n        minX = Math.min(minX, px);\r\n        minY = Math.min(minY, py);\r\n\r\n        maxX = Math.max(maxX, px);\r\n        maxY = Math.max(maxY, py);\r\n    }\r\n\r\n    return out.set(\r\n        minX,\r\n        minY,\r\n        maxX - minX,\r\n        maxY - minY\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CenterX } from './CenterX';\r\nimport { CenterY } from './CenterY';\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns the center of a Rectangle as a Point.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetCenter\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to get the center of.\r\n * @param {(Phaser.Geom.Point|object)} [out] - Optional point-like object to update with the center coordinates.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The modified `out` object, or a new Point if none was provided.\r\n */\r\nexport function GetCenter (rect: IRectangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(CenterX(rect), CenterY(rect));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Defines a Line segment, a part of a line between two endpoints.\r\n *\r\n * @class Line\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x1=0] - The x coordinate of the lines starting point.\r\n * @param {number} [y1=0] - The y coordinate of the lines starting point.\r\n * @param {number} [x2=0] - The x coordinate of the lines ending point.\r\n * @param {number} [y2=0] - The y coordinate of the lines ending point.\r\n */\r\nexport class Line\r\n{\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n\r\n    constructor (x1: number = 0, y1: number = 0, x2: number = 0, y2: number = 0)\r\n    {\r\n        this.set(x1, y1, x2, y2);\r\n    }\r\n\r\n    set (x1: number = 0, y1: number = 0, x2: number = 0, y2: number = 0): this\r\n    {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n\r\n        return this;\r\n    }\r\n\r\n    get left (): number\r\n    {\r\n        return Math.min(this.x1, this.x2);\r\n    }\r\n\r\n    set left (value: number)\r\n    {\r\n        if (this.x1 <= this.x2)\r\n        {\r\n            this.x1 = value;\r\n        }\r\n        else\r\n        {\r\n            this.x2 = value;\r\n        }\r\n    }\r\n\r\n    get right (): number\r\n    {\r\n        return Math.max(this.x1, this.x2);\r\n    }\r\n\r\n    set right (value: number)\r\n    {\r\n        if (this.x1 > this.x2)\r\n        {\r\n            this.x1 = value;\r\n        }\r\n        else\r\n        {\r\n            this.x2 = value;\r\n        }\r\n    }\r\n\r\n    get top (): number\r\n    {\r\n        return Math.min(this.y1, this.y2);\r\n    }\r\n\r\n    set top (value: number)\r\n    {\r\n        if (this.y1 <= this.y2)\r\n        {\r\n            this.y1 = value;\r\n        }\r\n        else\r\n        {\r\n            this.y2 = value;\r\n        }\r\n    }\r\n\r\n    get bottom (): number\r\n    {\r\n        return Math.max(this.y1, this.y2);\r\n    }\r\n\r\n    set bottom (value: number)\r\n    {\r\n        if (this.y1 > this.y2)\r\n        {\r\n            this.y1 = value;\r\n        }\r\n        else\r\n        {\r\n            this.y2 = value;\r\n        }\r\n    }\r\n}\r\n","import { IRectangle } from './IRectangle';\r\nimport { Line } from '../line/Line';\r\n\r\nexport function GetEdges (rectangle: IRectangle): Line[]\r\n{\r\n    const { x, y, right, bottom } = rectangle;\r\n\r\n    const line1 = new Line(x, y, right, y);\r\n    const line2 = new Line(right, y, right, bottom);\r\n    const line3 = new Line(right, bottom, x, bottom);\r\n    const line4 = new Line(x, bottom, x, y);\r\n\r\n    return [ line1, line2, line3, line4 ];\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Calculates the perimeter of a Rectangle.\r\n *\r\n * @function Phaser.Geom.Rectangle.Perimeter\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to use.\r\n *\r\n * @return {number} The perimeter of the Rectangle, equal to `(width * 2) + (height * 2)`.\r\n */\r\nexport function Perimeter (rect: IRectangle): number\r\n{\r\n    return 2 * (rect.width + rect.height);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Perimeter } from './Perimeter';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Calculates the coordinates of a point at a certain `position` on the Rectangle's perimeter.\r\n * \r\n * The `position` is a fraction between 0 and 1 which defines how far into the perimeter the point is.\r\n * \r\n * A value of 0 or 1 returns the point at the top left corner of the rectangle, while a value of 0.5 returns the point at the bottom right corner of the rectangle. Values between 0 and 0.5 are on the top or the right side and values between 0.5 and 1 are on the bottom or the left side.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - The Rectangle to get the perimeter point from.\r\n * @param {number} position - The normalized distance into the Rectangle's perimeter to return.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to update with the `x` and `y` coordinates of the point.\r\n *\r\n * @return {Phaser.Geom.Point} The updated `output` object, or a new Point if no `output` object was given.\r\n */\r\nexport function GetPoint (rectangle: IRectangle, position: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    if (position <= 0 || position >= 1)\r\n    {\r\n        return out.set(rectangle.x, rectangle.y);\r\n    }\r\n\r\n    let p = Perimeter(rectangle) * position;\r\n\r\n    if (position > 0.5)\r\n    {\r\n        p -= (rectangle.width + rectangle.height);\r\n\r\n        if (p <= rectangle.width)\r\n        {\r\n            //  Face 3\r\n            return out.set(rectangle.right - p, rectangle.bottom);\r\n        }\r\n        else\r\n        {\r\n            //  Face 4\r\n            return out.set(rectangle.x, rectangle.bottom - (p - rectangle.width));\r\n        }\r\n    }\r\n    else if (p <= rectangle.width)\r\n    {\r\n        //  Face 1\r\n        return out.set(rectangle.x + p, rectangle.y);\r\n    }\r\n    else\r\n    {\r\n        //  Face 2\r\n        return out.set(rectangle.right, rectangle.y + (p - rectangle.width));\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetPoint } from './GetPoint';\r\nimport { IRectangle } from './IRectangle';\r\nimport { Perimeter } from './Perimeter';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Return an array of points from the perimeter of the rectangle, each spaced out based on the quantity or step required.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - The Rectangle object to get the points from.\r\n * @param {number} step - Step between points. Used to calculate the number of points to return when quantity is falsey. Ignored if quantity is positive.\r\n * @param {integer} quantity - The number of evenly spaced points from the rectangles perimeter to return. If falsey, step param will be used to calculate the number of points.\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An optional array to store the points in.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} An array of Points from the perimeter of the rectangle.\r\n */\r\nexport function GetPoints (rectangle: IRectangle, step: number, quantity: number = 0, out: Vec2[] = []): Vec2[]\r\n{\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity)\r\n    {\r\n        quantity = Perimeter(rectangle) / step;\r\n    }\r\n\r\n    for (let i = 0; i < quantity; i++)\r\n    {\r\n        out.push(GetPoint(rectangle, i / quantity));\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns the size of the Rectangle, expressed as a Point object.\r\n * With the value of the `width` as the `x` property and the `height` as the `y` property.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetSize\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to get the size from.\r\n * @param {(Phaser.Geom.Point|object)} [out] - The Point object to store the size in. If not given, a new Point instance is created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object where `x` holds the width and `y` holds the height of the Rectangle.\r\n */\r\nexport function GetSize (rect: IRectangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(rect.width, rect.height);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CenterOn } from './CenterOn';\r\nimport { CenterX } from './CenterX';\r\nimport { CenterY } from './CenterY';\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Increases the size of a Rectangle by a specified amount.\r\n *\r\n * The center of the Rectangle stays the same. The amounts are added to each side, so the actual increase in width or height is two times bigger than the respective argument.\r\n *\r\n * @function Phaser.Geom.Rectangle.Inflate\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to inflate.\r\n * @param {number} x - How many pixels the left and the right side should be moved by horizontally.\r\n * @param {number} y - How many pixels the top and the bottom side should be moved by vertically.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The inflated Rectangle.\r\n */\r\nexport function Inflate (rect: IRectangle, x: number, y: number): IRectangle\r\n{\r\n    const cx = CenterX(rect);\r\n    const cy = CenterY(rect);\r\n\r\n    rect.width = rect.width + (x * 2);\r\n    rect.height = rect.height + (y * 2);\r\n\r\n    return CenterOn(rect, cx, cy);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Rectangle } from './Rectangle';\r\nimport { RectangleToRectangle } from '../intersects/RectangleToRectangle';\r\n\r\n/**\r\n * Takes two Rectangles and first checks to see if they intersect.\r\n * If they intersect it will return the area of intersection in the `out` Rectangle.\r\n * If they do not intersect, the `out` Rectangle will have a width and height of zero.\r\n *\r\n * @function Phaser.Geom.Rectangle.Intersection\r\n * @since 3.11.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to get the intersection from.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to get the intersection from.\r\n * @param {Phaser.Geom.Rectangle} [out] - A Rectangle to store the intersection results in.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The intersection result. If the width and height are zero, no intersection occurred.\r\n */\r\nexport function Intersection (rectA: IRectangle, rectB: IRectangle, out: Rectangle = new Rectangle()): Rectangle\r\n{\r\n    if (RectangleToRectangle(rectA, rectB))\r\n    {\r\n        out.set(\r\n            Math.max(rectA.x, rectB.x),\r\n            Math.max(rectA.y, rectB.y),\r\n            Math.min(rectA.right, rectB.right) - out.x,\r\n            Math.min(rectA.bottom, rectB.bottom) - out.y\r\n        );\r\n    }\r\n    else\r\n    {\r\n        out.set();\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Perimeter } from './Perimeter';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns an array of points from the perimeter of the Rectangle, where each point is spaced out based\r\n * on either the `step` value, or the `quantity`.\r\n *\r\n * @function Phaser.Geom.Rectangle.MarchingAnts\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to get the perimeter points from.\r\n * @param {number} [step] - The distance between each point of the perimeter. Set to `null` if you wish to use the `quantity` parameter instead.\r\n * @param {integer} [quantity] - The total number of points to return. The step is then calculated based on the length of the Rectangle, divided by this value.\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An array in which the perimeter points will be stored. If not given, a new array instance is created.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} An array containing the perimeter points from the Rectangle.\r\n */\r\nexport function MarchingAnts (rect: IRectangle, step?: number, quantity?: number, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (!step && !quantity)\r\n    {\r\n        //  Bail out\r\n        return out;\r\n    }\r\n\r\n    //  If step is a falsey value (false, null, 0, undefined, etc) then we calculate\r\n    //  it based on the quantity instead, otherwise we always use the step value\r\n    if (!step)\r\n    {\r\n        step = Perimeter(rect) / quantity;\r\n    }\r\n    else\r\n    {\r\n        quantity = Math.round(Perimeter(rect) / step);\r\n    }\r\n\r\n    let x = rect.x;\r\n    let y = rect.y;\r\n    let face = 0;\r\n\r\n    //  Loop across each face of the rectangle\r\n\r\n    for (let i = 0; i < quantity; i++)\r\n    {\r\n        out.push(new Vec2(x, y));\r\n\r\n        switch (face)\r\n        {\r\n            //  Top face\r\n            case 0:\r\n                x += step;\r\n\r\n                if (x >= rect.right)\r\n                {\r\n                    face = 1;\r\n                    y += (x - rect.right);\r\n                    x = rect.right;\r\n                }\r\n                break;\r\n\r\n            //  Right face\r\n            case 1:\r\n                y += step;\r\n\r\n                if (y >= rect.bottom)\r\n                {\r\n                    face = 2;\r\n                    x -= (y - rect.bottom);\r\n                    y = rect.bottom;\r\n                }\r\n                break;\r\n\r\n            //  Bottom face\r\n            case 2:\r\n                x -= step;\r\n\r\n                if (x <= rect.x)\r\n                {\r\n                    face = 3;\r\n                    y -= (rect.x - x);\r\n                    x = rect.x;\r\n                }\r\n                break;\r\n\r\n            //  Left face\r\n            case 3:\r\n                y -= step;\r\n\r\n                if (y <= rect.y)\r\n                {\r\n                    face = 0;\r\n                    y = rect.y;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Merges a Rectangle with a list of points by repositioning and/or resizing it such that all points are located on or within its bounds.\r\n *\r\n * @function Phaser.Geom.Rectangle.MergePoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [target,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} target - The Rectangle which should be merged.\r\n * @param {Phaser.Geom.Point[]} points - An array of Points (or any object with public `x` and `y` properties) which should be merged with the Rectangle.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The modified Rectangle.\r\n */\r\nexport function MergePoints (target: IRectangle, points: Vec2[]): IRectangle\r\n{\r\n    let minX = target.x;\r\n    let maxX = target.right;\r\n    let minY = target.y;\r\n    let maxY = target.bottom;\r\n\r\n    for (let i = 0; i < points.length; i++)\r\n    {\r\n        minX = Math.min(minX, points[i].x);\r\n        maxX = Math.max(maxX, points[i].x);\r\n        minY = Math.min(minY, points[i].y);\r\n        maxY = Math.max(maxY, points[i].y);\r\n    }\r\n\r\n    return target.set(\r\n        minX,\r\n        minY,\r\n        maxX - minX,\r\n        maxY - minY\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Merges the source rectangle into the target rectangle and returns the target.\r\n * Neither rectangle should have a negative width or height.\r\n *\r\n * @function Phaser.Geom.Rectangle.MergeRect\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [target,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} target - Target rectangle. Will be modified to include source rectangle.\r\n * @param {Phaser.Geom.Rectangle} source - Rectangle that will be merged into target rectangle.\r\n *\r\n * @return {Phaser.Geom.Rectangle} Modified target rectangle that contains source rectangle.\r\n */\r\nexport function MergeRect (target: IRectangle, source: IRectangle): IRectangle\r\n{\r\n    const minX = Math.min(target.x, source.x);\r\n    const maxX = Math.max(target.right, source.right);\r\n    const minY = Math.min(target.y, source.y);\r\n    const maxY = Math.max(target.bottom, source.bottom);\r\n\r\n    return target.set(\r\n        minX,\r\n        minY,\r\n        maxX - minX,\r\n        maxY - minY\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Merges a Rectangle with a point by repositioning and/or resizing it so that the point is on or within its bounds.\r\n *\r\n * @function Phaser.Geom.Rectangle.MergeXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [target,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} target - The Rectangle which should be merged and modified.\r\n * @param {number} x - The X coordinate of the point which should be merged.\r\n * @param {number} y - The Y coordinate of the point which should be merged.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The modified `target` Rectangle.\r\n */\r\nexport function MergeXY (target: IRectangle, x: number, y: number): IRectangle\r\n{\r\n    const minX = Math.min(target.x, x);\r\n    const maxX = Math.max(target.right, x);\r\n    const minY = Math.min(target.y, y);\r\n    const maxY = Math.max(target.bottom, y);\r\n\r\n    return target.set(\r\n        minX,\r\n        minY,\r\n        maxX - minX,\r\n        maxY - minY\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Nudges (translates) the top left corner of a Rectangle by a given offset.\r\n *\r\n * @function Phaser.Geom.Rectangle.Offset\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to adjust.\r\n * @param {number} x - The distance to move the Rectangle horizontally.\r\n * @param {number} y - The distance to move the Rectangle vertically.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The adjusted Rectangle.\r\n */\r\nexport function Offset (rect: IRectangle, x: number, y: number): IRectangle\r\n{\r\n    rect.x += x;\r\n    rect.y += y;\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Nudges (translates) the top-left corner of a Rectangle by the coordinates of a point (translation vector).\r\n *\r\n * @function Phaser.Geom.Rectangle.OffsetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to adjust.\r\n * @param {(Phaser.Geom.Point|Phaser.Math.Vector2)} point - The point whose coordinates should be used as an offset.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The adjusted Rectangle.\r\n */\r\nexport function OffsetPoint (rect: IRectangle, point: Vec2): IRectangle\r\n{\r\n    rect.x += point.x;\r\n    rect.y += point.y;\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Checks if two Rectangles overlap. If a Rectangle is within another Rectangle, the two will be considered overlapping. Thus, the Rectangles are treated as \"solid\".\r\n *\r\n * @function Phaser.Geom.Rectangle.Overlaps\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to check.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to check.\r\n *\r\n * @return {boolean} `true` if the two Rectangles overlap, `false` otherwise.\r\n */\r\nexport function Overlaps (rectA: IRectangle, rectB: IRectangle): boolean\r\n{\r\n    return (\r\n        rectA.x < rectB.right &&\r\n        rectA.right > rectB.x &&\r\n        rectA.y < rectB.bottom &&\r\n        rectA.bottom > rectB.y\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CenterX } from './CenterX';\r\nimport { CenterY } from './CenterY';\r\nimport { DegToRad } from '../../math/DegToRad';\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a Point from the perimeter of a Rectangle based on the given angle.\r\n *\r\n * @function Phaser.Geom.Rectangle.PerimeterPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - The Rectangle to get the perimeter point from.\r\n * @param {number} angle - The angle of the point, in degrees.\r\n * @param {Phaser.Geom.Point} [out] - The Point object to store the position in. If not given, a new Point instance is created.\r\n *\r\n * @return {Phaser.Geom.Point} A Point object holding the coordinates of the Rectangle perimeter.\r\n */\r\nexport function PerimeterPoint (rectangle: IRectangle, angle: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    angle = DegToRad(angle);\r\n\r\n    const s = Math.sin(angle);\r\n    const c = Math.cos(angle);\r\n\r\n    let dx = (c > 0) ? rectangle.width / 2 : rectangle.width / -2;\r\n    let dy = (s > 0) ? rectangle.height / 2 : rectangle.height / -2;\r\n\r\n    if (Math.abs(dx * s) < Math.abs(dy * c))\r\n    {\r\n        dy = (dx * s) / c;\r\n    }\r\n    else\r\n    {\r\n        dx = (dy * c) / s;\r\n    }\r\n\r\n    return out.set(\r\n        dx + CenterX(rectangle),\r\n        dy + CenterY(rectangle)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a random point within a Rectangle.\r\n *\r\n * @function Phaser.Geom.Rectangle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to return a point from.\r\n * @param {Phaser.Geom.Point} out - The object to update with the point's coordinates.\r\n *\r\n * @return {Phaser.Geom.Point} The modified `out` object, or a new Point if none was provided.\r\n */\r\nexport function Random (rect: IRectangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        rect.x + (Math.random() * rect.width),\r\n        rect.y + (Math.random() * rect.height)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Between } from '../../math/Between';\r\nimport { ContainsRect } from './ContainsRect';\r\nimport { IRectangle } from './IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Calculates a random point that lies within the `outer` Rectangle, but outside of the `inner` Rectangle.\r\n * The inner Rectangle must be fully contained within the outer rectangle.\r\n *\r\n * @function Phaser.Geom.Rectangle.RandomOutside\r\n * @since 3.10.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} outer - The outer Rectangle to get the random point within.\r\n * @param {Phaser.Geom.Rectangle} inner - The inner Rectangle to exclude from the returned point.\r\n * @param {Phaser.Geom.Point} [out] - A Point, or Point-like object to store the result in. If not specified, a new Point will be created.\r\n *\r\n * @return {Phaser.Geom.Point} A Point object containing the random values in its `x` and `y` properties.\r\n */\r\nexport function RandomOutside (outer: IRectangle, inner: IRectangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    if (ContainsRect(outer, inner))\r\n    {\r\n        //  Pick a random quadrant\r\n        //\r\n        //  The quadrants don't extend the full widths / heights of the outer rect to give\r\n        //  us a better uniformed distribution, otherwise you get clumping in the corners where\r\n        //  the 4 quads would overlap\r\n\r\n        switch (Between(0, 3))\r\n        {\r\n            case 0: // Top\r\n                out.x = outer.x + (Math.random() * (inner.right - outer.x));\r\n                out.y = outer.y + (Math.random() * (inner.y - outer.y));\r\n                break;\r\n\r\n            case 1: // Bottom\r\n                out.x = inner.x + (Math.random() * (outer.right - inner.x));\r\n                out.y = inner.bottom + (Math.random() * (outer.bottom - inner.bottom));\r\n                break;\r\n\r\n            case 2: // Left\r\n                out.x = outer.x + (Math.random() * (inner.x - outer.x));\r\n                out.y = inner.y + (Math.random() * (outer.bottom - inner.y));\r\n                break;\r\n\r\n            case 3: // Right\r\n                out.x = inner.right + (Math.random() * (outer.right - inner.right));\r\n                out.y = outer.y + (Math.random() * (inner.bottom - outer.y));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Determines if the two objects (either Rectangles or Rectangle-like) have the same width and height values under strict equality.\r\n *\r\n * @function Phaser.Geom.Rectangle.SameDimensions\r\n * @since 3.15.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The first Rectangle object.\r\n * @param {Phaser.Geom.Rectangle} toCompare - The second Rectangle object.\r\n *\r\n * @return {boolean} `true` if the objects have equivalent values for the `width` and `height` properties, otherwise `false`.\r\n */\r\nexport function SameDimensions (rect: IRectangle, toCompare: IRectangle): boolean\r\n{\r\n    return (rect.width === toCompare.width && rect.height === toCompare.height);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Scales the width and height of this Rectangle by the given amounts.\r\n *\r\n * @function Phaser.Geom.Rectangle.Scale\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [rect,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - The `Rectangle` object that will be scaled by the specified amount(s).\r\n * @param {number} x - The factor by which to scale the rectangle horizontally.\r\n * @param {number} y - The amount by which to scale the rectangle vertically. If this is not specified, the rectangle will be scaled by the factor `x` in both directions.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The rectangle object with updated `width` and `height` properties as calculated from the scaling factor(s).\r\n */\r\nexport function Scale (rect: IRectangle, x: number, y: number = x): IRectangle\r\n{\r\n    rect.width *= x;\r\n    rect.height *= y;\r\n\r\n    return rect;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from './IRectangle';\r\nimport { Rectangle } from './Rectangle';\r\n\r\n/**\r\n * Creates a new Rectangle or repositions and/or resizes an existing Rectangle so that it encompasses the two given Rectangles, i.e. calculates their union.\r\n *\r\n * @function Phaser.Geom.Rectangle.Union\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to use.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to use.\r\n * @param {Phaser.Geom.Rectangle} [out] - The Rectangle to store the union in.\r\n *\r\n * @return {Phaser.Geom.Rectangle} The modified `out` Rectangle, or a new Rectangle if none was provided.\r\n */\r\nexport function Union (rectA: IRectangle, rectB: IRectangle, out: Rectangle = new Rectangle()): Rectangle\r\n{\r\n    //  Cache vars so we can use one of the input rects as the output rect\r\n    const x = Math.min(rectA.x, rectB.x);\r\n    const y = Math.min(rectA.y, rectB.y);\r\n    const w = Math.max(rectA.right, rectB.right) - x;\r\n    const h = Math.max(rectA.bottom, rectB.bottom) - y;\r\n\r\n    return out.set(x, y, w, h);\r\n}\r\n","import { ITransformComponent } from './ITransformComponent';\r\n\r\nexport function UpdateLocalTransform (transform: ITransformComponent): void\r\n{\r\n    const local = transform.local;\r\n\r\n    const x = transform.position.x;\r\n    const y = transform.position.y;\r\n    const rotation = transform.rotation;\r\n    const scaleX = transform.scale.x;\r\n    const scaleY = transform.scale.y;\r\n    const skewX = transform.skew.x;\r\n    const skewY = transform.skew.y;\r\n\r\n    local.set(\r\n        Math.cos(rotation + skewY) * scaleX,\r\n        Math.sin(rotation + skewY) * scaleX,\r\n        -Math.sin(rotation - skewX) * scaleY,\r\n        Math.cos(rotation - skewX) * scaleY,\r\n        x,\r\n        y\r\n    );\r\n}\r\n","import { CopyFrom } from '../../../math/matrix2d/CopyFrom';\r\nimport { IGameObject } from '../../IGameObject';\r\n\r\nexport function UpdateWorldTransform (gameObject: IGameObject): void\r\n{\r\n    const parent = gameObject.parent;\r\n    const transform = gameObject.transform;\r\n\r\n    const lt = transform.local;\r\n    const wt = transform.world;\r\n\r\n    if (!parent)\r\n    {\r\n        CopyFrom(lt, wt);\r\n    }\r\n    else if (transform.passthru)\r\n    {\r\n        CopyFrom(parent.transform.world, wt);\r\n    }\r\n    else\r\n    {\r\n        const { a, b, c, d, tx, ty } = lt;\r\n        const { a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty } = parent.transform.world;\r\n\r\n        wt.set(\r\n            a  * pa + b  * pc,\r\n            a  * pb + b  * pd,\r\n            c  * pa + d  * pc,\r\n            c  * pb + d  * pd,\r\n            tx * pa + ty * pc + ptx,\r\n            tx * pb + ty * pd + pty\r\n        );\r\n    }\r\n}\r\n","import { Vec2, Vec2Callback } from '../../../math/vec2';\r\nimport { originX, originY } from '../../../config/DefaultOrigin';\r\n\r\nimport { DIRTY_CONST } from '../../DIRTY_CONST';\r\nimport { IGameObject } from '../../IGameObject';\r\nimport { ITransformComponent } from './ITransformComponent';\r\nimport { Matrix2D } from '../../../math/matrix2d/Matrix2D';\r\nimport { Rectangle } from '../../../geom/rectangle';\r\nimport { UpdateLocalTransform } from './UpdateLocalTransform';\r\nimport { UpdateWorldTransform } from './UpdateWorldTransform';\r\n\r\nexport class TransformComponent implements ITransformComponent\r\n{\r\n    entity: IGameObject;\r\n\r\n    //  This should be treated as read-only, it is always perfectly in sync with the properties in this class\r\n    local: Matrix2D;\r\n\r\n    world: Matrix2D;\r\n\r\n    position: Vec2Callback;\r\n    scale: Vec2Callback;\r\n    skew: Vec2Callback;\r\n    origin: Vec2Callback;\r\n    extent: Rectangle;\r\n\r\n    passthru: boolean = false;\r\n\r\n    private _rotation: number = 0;\r\n\r\n    constructor (entity: IGameObject, x: number = 0, y: number = 0)\r\n    {\r\n        this.entity = entity;\r\n\r\n        this.local = new Matrix2D();\r\n        this.world = new Matrix2D();\r\n\r\n        this.position = new Vec2Callback(() => this.update(), x, y);\r\n        this.scale = new Vec2Callback(() => this.update(), 1, 1);\r\n        this.skew = new Vec2Callback(() => this.update());\r\n        this.origin = new Vec2Callback(() => this.updateExtent(), originX, originY);\r\n\r\n        this.extent = new Rectangle();\r\n    }\r\n\r\n    update (): void\r\n    {\r\n        this.updateLocal();\r\n        this.updateWorld();\r\n    }\r\n\r\n    updateLocal (): void\r\n    {\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n\r\n        UpdateLocalTransform(this);\r\n    }\r\n\r\n    updateWorld (): void\r\n    {\r\n        const entity = this.entity;\r\n\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n\r\n        UpdateWorldTransform(entity);\r\n\r\n        if (entity.numChildren)\r\n        {\r\n            this.updateChildren();\r\n        }\r\n    }\r\n\r\n    updateChildren (): void\r\n    {\r\n        //  Sweep all children - by this point our local and world transforms are correct\r\n        const children = this.entity.children;\r\n\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            const child = children[i];\r\n\r\n            child.transform.updateWorld();\r\n        }\r\n    }\r\n\r\n    globalToLocal (x: number, y: number, out: Vec2 = new Vec2()): Vec2\r\n    {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n\r\n        const id: number = 1 / ((a * d) + (c * -b));\r\n\r\n        out.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\r\n        out.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\r\n\r\n        return out;\r\n    }\r\n\r\n    localToGlobal (x: number, y: number, out: Vec2 = new Vec2()): Vec2\r\n    {\r\n        const { a, b, c, d, tx, ty } = this.world;\r\n\r\n        out.x = (a * x) + (c * y) + tx;\r\n        out.y = (b * x) + (d * y) + ty;\r\n\r\n        return out;\r\n    }\r\n\r\n    //  The area covered by this transform component + origin + size (usually from a Frame)\r\n    setExtent (x: number, y: number, width: number, height: number): void\r\n    {\r\n        this.extent.set(x, y, width, height);\r\n\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n\r\n    updateExtent (width?: number, height?: number): void\r\n    {\r\n        const extent = this.extent;\r\n        const entity = this.entity;\r\n\r\n        if (width !== undefined)\r\n        {\r\n            extent.width = width;\r\n        }\r\n\r\n        if (height !== undefined)\r\n        {\r\n            extent.height = height;\r\n        }\r\n\r\n        extent.x = -(this.origin.x) * extent.width;\r\n        extent.y = -(this.origin.y) * extent.height;\r\n\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n    }\r\n\r\n    set rotation (value: number)\r\n    {\r\n        if (value !== this._rotation)\r\n        {\r\n            this._rotation = value;\r\n\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get rotation (): number\r\n    {\r\n        return this._rotation;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.skew.destroy();\r\n        this.origin.destroy();\r\n\r\n        this.entity = null;\r\n        this.local = null;\r\n        this.world = null;\r\n        this.position = null;\r\n        this.scale = null;\r\n        this.skew = null;\r\n        this.origin = null;\r\n        this.extent = null;\r\n    }\r\n}\r\n","export function PackColor (rgb: number, alpha: number): number\r\n{\r\n    const ua = ((alpha * 255) | 0) & 0xFF;\r\n\r\n    return ((ua << 24) | rgb) >>> 0;\r\n}\r\n","import { PackColor } from '../../renderer/webgl1/colors/PackColor';\r\n\r\nexport class Vertex\r\n{\r\n    x: number = 0;\r\n    y: number = 0;\r\n    z: number = 0;\r\n\r\n    u: number = 0;\r\n    v: number = 0;\r\n\r\n    texture: number = 0;\r\n\r\n    tint: number = 0xffffff;\r\n    alpha: number = 1;\r\n    color: number = 4294967295;\r\n\r\n    constructor (x: number = 0, y: number = 0, z: number = 0)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    setPosition (x: number, y: number, z: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        return this;\r\n    }\r\n\r\n    setUV (u: number, v: number): this\r\n    {\r\n        this.u = u;\r\n        this.v = v;\r\n\r\n        return this;\r\n    }\r\n\r\n    setColor (color: number, alpha: number = 1): this\r\n    {\r\n        this.tint = color;\r\n        this.alpha = alpha;\r\n\r\n        this.packColor();\r\n\r\n        return this;\r\n    }\r\n\r\n    setAlpha (value: number): this\r\n    {\r\n        this.alpha = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    setTint (value: number): this\r\n    {\r\n        this.tint = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    packColor (): void\r\n    {\r\n        this.color = PackColor(this.tint, this.alpha);\r\n    }\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { Rectangle } from '../../../geom/rectangle/Rectangle';\r\n\r\nexport function AddViewport (renderPass: IRenderPass, x: number = 0, y: number = 0, width: number = 0, height: number = 0): Rectangle\r\n{\r\n    const viewport = new Rectangle(x, y, width, height);\r\n\r\n    renderPass.viewportStack.push(viewport);\r\n\r\n    return viewport;\r\n}\r\n","export let gl: WebGLRenderingContext;\r\n\r\nexport const GL =\r\n{\r\n    get: (): WebGLRenderingContext =>\r\n    {\r\n        return gl;\r\n    },\r\n\r\n    set: (context: WebGLRenderingContext | undefined): void =>\r\n    {\r\n        gl = context;\r\n    }\r\n};\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { Rectangle } from '../../../geom/rectangle';\r\nimport { gl } from '../GL';\r\n\r\nexport function BindViewport (renderPass: IRenderPass, viewport?: Rectangle): void\r\n{\r\n    if (!viewport)\r\n    {\r\n        viewport = renderPass.currentViewport;\r\n\r\n        if (!viewport)\r\n        {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const glv = gl.getParameter(gl.VIEWPORT);\r\n\r\n    if (glv[0] !== viewport.x || glv[1] !== viewport.y || glv[2] !== viewport.width || glv[3] !== viewport.height)\r\n    {\r\n        gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\r\n    }\r\n}\r\n","import { AddViewport } from './AddViewport';\r\nimport { BindViewport } from './BindViewport';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function SetViewport (renderPass: IRenderPass, x: number = 0, y: number = 0, width: number = 0, height: number = 0): void\r\n{\r\n    const entry = AddViewport(renderPass, x, y, width, height);\r\n\r\n    BindViewport(renderPass, entry);\r\n\r\n    renderPass.currentViewport = entry;\r\n}\r\n","import { FramebufferStackEntry } from './RenderPass';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { SetViewport } from './SetViewport';\r\nimport { gl } from '../GL';\r\n\r\nexport function BindFramebuffer (renderPass: IRenderPass, clear: boolean = true, entry?: FramebufferStackEntry): void\r\n{\r\n    if (!entry)\r\n    {\r\n        entry = renderPass.currentFramebuffer;\r\n    }\r\n\r\n    const { framebuffer, viewport } = entry;\r\n\r\n    //  TODO - Only bind if different\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n    if (clear)\r\n    {\r\n        gl.clearColor(0, 0, 0, 0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    }\r\n\r\n    if (viewport)\r\n    {\r\n        SetViewport(renderPass, viewport.x, viewport.y, viewport.width, viewport.height);\r\n    }\r\n}\r\n","import { BindViewport } from './BindViewport';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function PopViewport (renderPass: IRenderPass): void\r\n{\r\n    const stack = renderPass.viewportStack;\r\n\r\n    //  > 1 because index 0 contains the default, which we don't want to remove\r\n    if (stack.length > 1)\r\n    {\r\n        stack.pop();\r\n    }\r\n\r\n    renderPass.currentViewport = stack[ stack.length - 1 ];\r\n\r\n    BindViewport(renderPass);\r\n}\r\n","import { BindFramebuffer } from './BindFramebuffer';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { PopViewport } from './PopViewport';\r\n\r\nexport function PopFramebuffer (renderPass: IRenderPass): void\r\n{\r\n    const stack = renderPass.framebufferStack;\r\n\r\n    //  > 1 because index 0 contains the default, which we don't want to remove\r\n    if (stack.length > 1)\r\n    {\r\n        if (renderPass.currentFramebuffer.viewport)\r\n        {\r\n            PopViewport(renderPass);\r\n        }\r\n\r\n        stack.pop();\r\n    }\r\n\r\n    renderPass.currentFramebuffer = stack[ stack.length - 1 ];\r\n\r\n    BindFramebuffer(renderPass, false);\r\n}\r\n","import { FramebufferStackEntry } from './RenderPass';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { Rectangle } from '../../../geom/rectangle/Rectangle';\r\n\r\nexport function AddFramebuffer (renderPass: IRenderPass, framebuffer: WebGLFramebuffer, viewport?: Rectangle): FramebufferStackEntry\r\n{\r\n    const entry = { framebuffer, viewport };\r\n\r\n    renderPass.framebufferStack.push(entry);\r\n\r\n    return entry;\r\n}\r\n","import { AddFramebuffer } from './AddFramebuffer';\r\nimport { BindFramebuffer } from './BindFramebuffer';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { Rectangle } from '../../../geom/rectangle';\r\n\r\nexport function SetFramebuffer (renderPass: IRenderPass, framebuffer: WebGLFramebuffer, clear: boolean = true, viewport?: Rectangle): void\r\n{\r\n    const entry = AddFramebuffer(renderPass, framebuffer, viewport);\r\n\r\n    BindFramebuffer(renderPass, clear, entry);\r\n\r\n    renderPass.currentFramebuffer = entry;\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { PopFramebuffer } from './PopFramebuffer';\r\nimport { SetFramebuffer } from './SetFramebuffer';\r\nimport { gl } from '../GL';\r\n\r\nexport function Draw (renderPass: IRenderPass): void\r\n{\r\n    const count = renderPass.count;\r\n\r\n    if (count === 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    const currentBuffer = renderPass.currentVertexBuffer;\r\n    const currentShader = renderPass.currentShader;\r\n\r\n    const renderToFramebuffer = currentShader.shader.renderToFramebuffer;\r\n\r\n    if (renderToFramebuffer)\r\n    {\r\n        SetFramebuffer(renderPass, currentShader.shader.framebuffer, true);\r\n    }\r\n\r\n    if (count === currentBuffer.batchSize)\r\n    {\r\n        const type = (currentBuffer.isDynamic) ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n        gl.bufferData(gl.ARRAY_BUFFER, currentBuffer.data, type);\r\n    }\r\n    else\r\n    {\r\n        const subsize = (currentBuffer.indexed) ? count * currentBuffer.entryElementSize : count * currentBuffer.vertexElementSize;\r\n\r\n        const view = currentBuffer.vertexViewF32.subarray(0, subsize);\r\n\r\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\r\n    }\r\n\r\n    if (currentBuffer.indexed)\r\n    {\r\n        gl.drawElements(gl.TRIANGLES, count * currentBuffer.entryIndexSize, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n    else\r\n    {\r\n        gl.drawArrays(gl.TRIANGLES, 0, count);\r\n    }\r\n\r\n    if (renderToFramebuffer)\r\n    {\r\n        PopFramebuffer(renderPass);\r\n    }\r\n}\r\n","import { Draw } from './Draw';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function Flush (renderPass: IRenderPass, forceCount?: number): boolean\r\n{\r\n    if (forceCount)\r\n    {\r\n        renderPass.count = forceCount;\r\n    }\r\n\r\n    const count = renderPass.count;\r\n\r\n    if (count === 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    Draw(renderPass);\r\n\r\n    renderPass.prevCount = count;\r\n\r\n    renderPass.count = 0;\r\n\r\n    renderPass.flushTotal++;\r\n\r\n    return true;\r\n}\r\n","import { BufferEntry } from '../draw/BufferEntry';\r\nimport { Flush } from './Flush';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function GetVertexBufferEntry (renderPass: IRenderPass, addToCount: number = 0): BufferEntry\r\n{\r\n    const buffer = renderPass.currentVertexBuffer;\r\n\r\n    //  If batch cannot take the size of this entry, flush it first\r\n    if (renderPass.count + addToCount >= buffer.batchSize)\r\n    {\r\n        Flush(renderPass);\r\n    }\r\n\r\n    const offset = (buffer.indexed) ? renderPass.count * buffer.entryElementSize : renderPass.count * buffer.vertexElementSize;\r\n\r\n    renderPass.count += addToCount;\r\n\r\n    return {\r\n        buffer,\r\n        F32: buffer.vertexViewF32,\r\n        U32: buffer.vertexViewU32,\r\n        offset\r\n    };\r\n}\r\n","import { Flush } from './Flush';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { Texture } from '../../../textures';\r\nimport { gl } from '../GL';\r\n\r\n//  request the next available texture and bind it\r\n//  returns the new ID\r\nexport function SetTexture (renderPass: IRenderPass, texture: Texture): number\r\n{\r\n    const binding = texture.binding;\r\n    const currentActiveTexture = renderPass.currentActiveTexture;\r\n\r\n    if (binding.indexCounter < renderPass.startActiveTexture)\r\n    {\r\n        binding.indexCounter = renderPass.startActiveTexture;\r\n\r\n        if (currentActiveTexture < renderPass.maxTextures)\r\n        {\r\n            binding.setIndex(currentActiveTexture);\r\n\r\n            gl.activeTexture(gl.TEXTURE0 + currentActiveTexture);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n\r\n            renderPass.currentActiveTexture++;\r\n        }\r\n        else\r\n        {\r\n            //  We're out of textures, so flush the batch and reset back to 1\r\n            Flush(renderPass);\r\n\r\n            renderPass.startActiveTexture++;\r\n\r\n            binding.indexCounter = renderPass.startActiveTexture;\r\n\r\n            binding.setIndex(1);\r\n\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n\r\n            renderPass.currentActiveTexture = 2;\r\n        }\r\n    }\r\n\r\n    return binding.index;\r\n}\r\n","import { GetVertexBufferEntry } from '../renderpass/GetVertexBufferEntry';\r\nimport { IRenderPass } from '../renderpass/IRenderPass';\r\nimport { ISprite } from '../../../gameobjects/sprite/ISprite';\r\nimport { SetTexture } from '../renderpass/SetTexture';\r\n\r\nexport function BatchTexturedQuad <T extends ISprite> (sprite: T, renderPass: IRenderPass): void\r\n{\r\n    const { F32, U32, offset } = GetVertexBufferEntry(renderPass, 1);\r\n\r\n    const textureIndex = SetTexture(renderPass, sprite.texture);\r\n\r\n    let vertOffset = offset;\r\n\r\n    sprite.vertices.forEach(vertex =>\r\n    {\r\n        F32[vertOffset + 0] = vertex.x;\r\n        F32[vertOffset + 1] = vertex.y;\r\n        F32[vertOffset + 2] = vertex.u;\r\n        F32[vertOffset + 3] = vertex.v;\r\n        F32[vertOffset + 4] = textureIndex;\r\n        U32[vertOffset + 5] = vertex.color;\r\n\r\n        vertOffset += 6;\r\n    });\r\n}\r\n\r\n/*\r\n    vertexData array structure:\r\n\r\n    0 = topLeft.x\r\n    1 = topLeft.y\r\n    2 = frame.u0\r\n    3 = frame.v0\r\n    4 = textureIndex\r\n    5 = topLeft.packedColor\r\n\r\n    6 = bottomLeft.x\r\n    7 = bottomLeft.y\r\n    8 = frame.u0\r\n    9 = frame.v1\r\n    10 = textureIndex\r\n    11 = bottomLeft.packedColor\r\n\r\n    12 = bottomRight.x\r\n    13 = bottomRight.y\r\n    14 = frame.u1\r\n    15 = frame.v1\r\n    16 = textureIndex\r\n    17 = bottomRight.packedColor\r\n\r\n    18 = topRight.x\r\n    19 = topRight.y\r\n    20 = frame.u1\r\n    21 = frame.v0\r\n    22 = textureIndex\r\n    23 = topRight.packedColor\r\n*/\r\n","import { BoundsComponent } from './components/bounds/BoundsComponent';\r\nimport { DIRTY_CONST } from './DIRTY_CONST';\r\nimport { DestroyChildren } from '../display/DestroyChildren';\r\nimport { DestroyEvent } from './events/DestroyEvent';\r\nimport { Emit } from '../events';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { IBaseWorld } from '../world/IBaseWorld';\r\nimport { IBoundsComponent } from './components/bounds/IBoundsComponent';\r\nimport { ICanvasRenderer } from '../renderer/canvas/ICanvasRenderer';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IGameObject } from './IGameObject';\r\nimport { IInputComponent } from './components/input/IInputComponent';\r\nimport { IRenderPass } from '../renderer/webgl1/renderpass/IRenderPass';\r\nimport { ITransformComponent } from './components/transform/ITransformComponent';\r\nimport { InputComponent } from './components/input/InputComponent';\r\nimport { ReparentChildren } from '../display/ReparentChildren';\r\nimport { TransformComponent } from './components/transform/TransformComponent';\r\n\r\nexport class GameObject\r\n{\r\n    type: string = 'GameObject';\r\n    name: string = '';\r\n\r\n    //  The World this Game Object belongs to. A Game Object can only belong to one World instance at any one time.\r\n    world: IBaseWorld;\r\n\r\n    //  The direct parent of this Game Object in the scene graph (if any)\r\n    parent: IGameObject;\r\n\r\n    children: IGameObject[];\r\n\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    willUpdate: boolean = true;\r\n    willUpdateChildren: boolean = true;\r\n\r\n    willRender: boolean = true;\r\n    willRenderChildren: boolean = true;\r\n    willCacheChildren: boolean = false;\r\n\r\n    dirty: number = 0;\r\n    dirtyFrame: number = 0;\r\n\r\n    transform: ITransformComponent;\r\n    bounds: IBoundsComponent;\r\n    input: IInputComponent;\r\n\r\n    visible: boolean = true;\r\n\r\n    constructor (x: number = 0, y: number = 0)\r\n    {\r\n        this.children = [];\r\n\r\n        this.events = new Map();\r\n\r\n        this.transform = new TransformComponent(this, x, y);\r\n        this.bounds = new BoundsComponent(this);\r\n        this.input = new InputComponent(this);\r\n\r\n        this.dirty = DIRTY_CONST.DEFAULT;\r\n\r\n        this.transform.update();\r\n    }\r\n\r\n    isRenderable (): boolean\r\n    {\r\n        return (this.visible && this.willRender);\r\n    }\r\n\r\n    isDirty (flag: number): boolean\r\n    {\r\n        return (this.dirty & flag) !== 0;\r\n    }\r\n\r\n    clearDirty (flag: number): this\r\n    {\r\n        if (this.isDirty(flag))\r\n        {\r\n            this.dirty ^= flag;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setDirty (flag: number, flag2?: number): this\r\n    {\r\n        if (!this.isDirty(flag))\r\n        {\r\n            this.dirty ^= flag;\r\n            this.dirtyFrame = GameInstance.getFrame();\r\n        }\r\n\r\n        if (!this.isDirty(flag2))\r\n        {\r\n            this.dirty ^= flag2;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        if (this.willUpdateChildren)\r\n        {\r\n            const children = this.children;\r\n\r\n            for (let i = 0; i < children.length; i++)\r\n            {\r\n                const child = children[i];\r\n\r\n                if (child && child.willUpdate)\r\n                {\r\n                    child.update(delta, time);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.postUpdate(delta, time);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postUpdate (delta: number, time: number): void\r\n    {\r\n        //  Empty for parent classes to use.\r\n        //  Called after this GameObject and all of its children have been updated.\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    renderCanvas <T extends ICanvasRenderer> (renderer: T): void\r\n    {\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postRenderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        //  Called after this GameObject and all of its children have been rendered.\r\n        //  If it doesn't have any children, this method is never called.\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postRenderCanvas <T extends ICanvasRenderer> (renderer: T): void\r\n    {\r\n        //  Called after this GameObject and all of its children have been rendered.\r\n        //  If it doesn't have any children, this method is never called.\r\n    }\r\n\r\n    get numChildren (): number\r\n    {\r\n        return this.children.length;\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject): void\r\n    {\r\n        if (reparentChildren)\r\n        {\r\n            ReparentChildren(this, reparentChildren);\r\n        }\r\n        else\r\n        {\r\n            DestroyChildren(this);\r\n        }\r\n\r\n        Emit(this, DestroyEvent, this);\r\n\r\n        this.transform.destroy();\r\n        this.bounds.destroy();\r\n        this.input.destroy();\r\n\r\n        this.events.clear();\r\n\r\n        this.world = null;\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\r\n","import { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { GameObject } from '../GameObject';\r\nimport { IContainer } from './IContainer';\r\n\r\nexport class Container extends GameObject implements IContainer\r\n{\r\n    protected _alpha: number = 1;\r\n\r\n    constructor (x: number = 0, y: number = 0)\r\n    {\r\n        super(x, y);\r\n\r\n        this.type = 'Container';\r\n    }\r\n\r\n    setSize (width: number, height: number = width): this\r\n    {\r\n        this.transform.updateExtent(width, height);\r\n\r\n        return this;\r\n    }\r\n\r\n    setPosition (x: number, y: number): this\r\n    {\r\n        this.transform.position.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setOrigin (x: number, y: number = x): this\r\n    {\r\n        this.transform.origin.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setSkew (x: number, y: number = x): this\r\n    {\r\n        this.transform.skew.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setScale (x: number, y: number = x): this\r\n    {\r\n        this.transform.scale.set(x, y);\r\n\r\n        return this;\r\n    }\r\n\r\n    setRotation (value: number): this\r\n    {\r\n        this.transform.rotation = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    set width (value: number)\r\n    {\r\n        this.transform.updateExtent(value);\r\n    }\r\n\r\n    get width (): number\r\n    {\r\n        return this.transform.extent.width;\r\n    }\r\n\r\n    set height (value: number)\r\n    {\r\n        this.transform.updateExtent(undefined, value);\r\n    }\r\n\r\n    get height (): number\r\n    {\r\n        return this.transform.extent.height;\r\n    }\r\n\r\n    set x (value: number)\r\n    {\r\n        this.transform.position.x = value;\r\n    }\r\n\r\n    get x (): number\r\n    {\r\n        return this.transform.position.x;\r\n    }\r\n\r\n    set y (value: number)\r\n    {\r\n        this.transform.position.y = value;\r\n    }\r\n\r\n    get y (): number\r\n    {\r\n        return this.transform.position.y;\r\n    }\r\n\r\n    set originX (value: number)\r\n    {\r\n        this.transform.origin.x = value;\r\n    }\r\n\r\n    get originX (): number\r\n    {\r\n        return this.transform.origin.x;\r\n    }\r\n\r\n    set originY (value: number)\r\n    {\r\n        this.transform.origin.y = value;\r\n    }\r\n\r\n    get originY (): number\r\n    {\r\n        return this.transform.origin.y;\r\n    }\r\n\r\n    set skewX (value: number)\r\n    {\r\n        this.transform.skew.x = value;\r\n    }\r\n\r\n    get skewX (): number\r\n    {\r\n        return this.transform.skew.x;\r\n    }\r\n\r\n    set skewY (value: number)\r\n    {\r\n        this.transform.skew.y = value;\r\n    }\r\n\r\n    get skewY (): number\r\n    {\r\n        return this.transform.skew.y;\r\n    }\r\n\r\n    set scaleX (value: number)\r\n    {\r\n        this.transform.scale.x = value;\r\n    }\r\n\r\n    get scaleX (): number\r\n    {\r\n        return this.transform.scale.x;\r\n    }\r\n\r\n    set scaleY (value: number)\r\n    {\r\n        this.transform.scale.y = value;\r\n    }\r\n\r\n    get scaleY (): number\r\n    {\r\n        return this.transform.scale.y;\r\n    }\r\n\r\n    set rotation (value: number)\r\n    {\r\n        this.transform.rotation = value;\r\n    }\r\n\r\n    get rotation (): number\r\n    {\r\n        return this.transform.rotation;\r\n    }\r\n\r\n    get alpha (): number\r\n    {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha (value: number)\r\n    {\r\n        if (value !== this._alpha)\r\n        {\r\n            this._alpha = value;\r\n\r\n            //  TODO - Switch to Alpha or Colors dirty flag instead\r\n            this.setDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n}\r\n","import { ICanvasRenderer } from '../ICanvasRenderer';\r\nimport { ISprite } from '../../../gameobjects/sprite/ISprite';\r\n\r\nexport function DrawTexturedQuad <T extends ISprite> (sprite: T, renderer: ICanvasRenderer): void\r\n{\r\n    const frame = sprite.frame;\r\n\r\n    if (!frame)\r\n    {\r\n        return;\r\n    }\r\n\r\n    const ctx = renderer.ctx;\r\n\r\n    const transform = sprite.transform;\r\n\r\n    const { a, b, c, d, tx, ty } = transform.world;\r\n    const { x, y } = transform.extent;\r\n\r\n    ctx.save();\r\n\r\n    ctx.setTransform(a, b, c, d, tx, ty);\r\n\r\n    ctx.globalAlpha = sprite.alpha;\r\n\r\n    ctx.drawImage(frame.texture.image as HTMLImageElement, frame.x, frame.y, frame.width, frame.height, x, y, frame.width, frame.height);\r\n\r\n    ctx.restore();\r\n}\r\n","import { ISprite } from '../../../gameobjects/sprite/ISprite';\r\n\r\nexport function PackColors <T extends ISprite> (sprite: T): T\r\n{\r\n    sprite.vertices.forEach(vertex =>\r\n    {\r\n        vertex.packColor();\r\n    });\r\n\r\n    return sprite;\r\n}\r\n","import { Frame } from '../../textures/Frame';\r\nimport { ISprite } from './ISprite';\r\nimport { Texture } from '../../textures';\r\n\r\nexport function SetFrame <T extends ISprite> (texture: Texture, key?: string | number | Frame, ...children: T[]): T[]\r\n{\r\n    const frame = texture.getFrame(key);\r\n\r\n    const { u0, u1, v0, v1, pivot } = frame;\r\n\r\n    children.forEach(child =>\r\n    {\r\n        if (!child || frame === child.frame)\r\n        {\r\n            return;\r\n        }\r\n\r\n        child.frame = frame;\r\n\r\n        if (pivot)\r\n        {\r\n            child.setOrigin(pivot.x, pivot.y);\r\n        }\r\n\r\n        child.frame.setExtent(child);\r\n\r\n        child.hasTexture = true;\r\n\r\n        const vertices = child.vertices;\r\n\r\n        //  This rarely changes, so we'll set it here, rather than every game step:\r\n        vertices[0].setUV(u0, v0);\r\n        vertices[1].setUV(u0, v1);\r\n        vertices[2].setUV(u1, v1);\r\n        vertices[3].setUV(u1, v0);\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { IGLTextureBindingConfig } from './webgl1/textures/IGLTextureBindingConfig';\r\nimport { ITexture } from '../textures/ITexture';\r\n\r\nexport type BindingQueueEntry = {\r\n    texture: ITexture,\r\n    glConfig: IGLTextureBindingConfig\r\n};\r\n\r\nconst queue: BindingQueueEntry[] = [];\r\n\r\nexport const BindingQueue =\r\n{\r\n    add: (texture: ITexture, glConfig?: IGLTextureBindingConfig): void =>\r\n    {\r\n        queue.push({ texture, glConfig });\r\n    },\r\n\r\n    get: (): BindingQueueEntry[] =>\r\n    {\r\n        return queue;\r\n    },\r\n\r\n    clear: (): void =>\r\n    {\r\n        queue.length = 0;\r\n    }\r\n};\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { Texture } from './Texture';\r\n\r\nexport class Frame\r\n{\r\n    texture: Texture;\r\n    key: string | number;\r\n\r\n    //  This is the actual area of the texture to draw to canvas / webgl, including any extruded data.\r\n    //  This is the same as the 'trimmed' + 'extruded' area from an atlas.\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    trimmed: boolean = false;\r\n\r\n    //  Original size of the image before being trimmed or added to an atlas (which can add extrude data to it).\r\n    sourceSizeWidth: number;\r\n    sourceSizeHeight: number;\r\n\r\n    //  The size of the image having been trimmed, before being added to the atlas (i.e. doesn't have any extrusion values in it)\r\n    spriteSourceSizeX: number;\r\n    spriteSourceSizeY: number;\r\n    spriteSourceSizeWidth: number;\r\n    spriteSourceSizeHeight: number;\r\n\r\n    pivot: { x: number; y: number };\r\n\r\n    u0: number;\r\n    v0: number;\r\n    u1: number;\r\n    v1: number;\r\n\r\n    constructor (texture: Texture, key: string | number, x: number, y: number, width: number, height: number)\r\n    {\r\n        this.texture = texture;\r\n        this.key = key;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n\r\n        this.updateUVs();\r\n    }\r\n\r\n    setPivot (x: number, y: number): void\r\n    {\r\n        this.pivot = { x, y };\r\n    }\r\n\r\n    setSize (width: number, height: number): void\r\n    {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n\r\n        this.updateUVs();\r\n    }\r\n\r\n    setSourceSize (width: number, height: number): void\r\n    {\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n    }\r\n\r\n    setTrim (width: number, height: number, x: number, y: number, w: number, h: number): void\r\n    {\r\n        this.trimmed = true;\r\n\r\n        this.sourceSizeWidth = width;\r\n        this.sourceSizeHeight = height;\r\n\r\n        this.spriteSourceSizeX = x;\r\n        this.spriteSourceSizeY = y;\r\n        this.spriteSourceSizeWidth = w;\r\n        this.spriteSourceSizeHeight = h;\r\n    }\r\n\r\n    getExtent (originX: number, originY: number): { left: number; right: number; top: number; bottom: number }\r\n    {\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n\r\n        let left: number;\r\n        let right: number;\r\n        let top: number;\r\n        let bottom: number;\r\n\r\n        if (this.trimmed)\r\n        {\r\n            left = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            right = left + this.spriteSourceSizeWidth;\r\n\r\n            top = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n            bottom = top + this.spriteSourceSizeHeight;\r\n        }\r\n        else\r\n        {\r\n            left = -originX * sourceSizeWidth;\r\n            right = left + sourceSizeWidth;\r\n\r\n            top = -originY * sourceSizeHeight;\r\n            bottom = top + sourceSizeHeight;\r\n        }\r\n\r\n        return { left, right, top, bottom };\r\n    }\r\n\r\n    setExtent (child: IGameObject): void\r\n    {\r\n        const transform = child.transform;\r\n\r\n        const originX = transform.origin.x;\r\n        const originY = transform.origin.y;\r\n\r\n        const sourceSizeWidth = this.sourceSizeWidth;\r\n        const sourceSizeHeight = this.sourceSizeHeight;\r\n\r\n        let x: number;\r\n        let y: number;\r\n        let width: number;\r\n        let height: number;\r\n\r\n        if (this.trimmed)\r\n        {\r\n            x = this.spriteSourceSizeX - (originX * sourceSizeWidth);\r\n            y = this.spriteSourceSizeY - (originY * sourceSizeHeight);\r\n\r\n            width = this.spriteSourceSizeWidth;\r\n            height = this.spriteSourceSizeHeight;\r\n        }\r\n        else\r\n        {\r\n            x = -originX * sourceSizeWidth;\r\n            y = -originY * sourceSizeHeight;\r\n\r\n            width = sourceSizeWidth;\r\n            height = sourceSizeHeight;\r\n        }\r\n\r\n        transform.setExtent(x, y, width, height);\r\n    }\r\n\r\n    updateUVs (): void\r\n    {\r\n        const { x, y, width, height } = this;\r\n\r\n        const baseTextureWidth = this.texture.width;\r\n        const baseTextureHeight = this.texture.height;\r\n\r\n        this.u0 = x / baseTextureWidth;\r\n        this.v0 = y / baseTextureHeight;\r\n\r\n        this.u1 = (x + width) / baseTextureWidth;\r\n        this.v1 = (y + height) / baseTextureHeight;\r\n    }\r\n}\r\n","import { BindingQueue } from '../renderer/BindingQueue';\r\nimport { Frame } from './Frame';\r\nimport { IGLTextureBinding } from '../renderer/webgl1/textures/IGLTextureBinding';\r\nimport { IGLTextureBindingConfig } from '../renderer/webgl1/textures/IGLTextureBindingConfig';\r\nimport { ITexture } from './ITexture';\r\n\r\nexport class Texture implements ITexture\r\n{\r\n    //  Unique identifier of this Texture, if stored in the Texture Manager\r\n    key: string = '';\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    image: TexImageSource;\r\n\r\n    binding: IGLTextureBinding;\r\n\r\n    firstFrame: Frame;\r\n\r\n    frames: Map<string | number, Frame>;\r\n\r\n    data: unknown;\r\n\r\n    constructor (image?: TexImageSource, width?: number, height?: number, glConfig?: IGLTextureBindingConfig)\r\n    {\r\n        if (image)\r\n        {\r\n            width = image.width;\r\n            height = image.height;\r\n        }\r\n\r\n        this.image = image;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.frames = new Map();\r\n\r\n        this.data = {};\r\n\r\n        this.addFrame('__BASE', 0, 0, width, height);\r\n\r\n        BindingQueue.add(this, glConfig);\r\n    }\r\n\r\n    addFrame (key: string | number, x: number, y: number, width: number, height: number): Frame\r\n    {\r\n        if (this.frames.has(key))\r\n        {\r\n            return null;\r\n        }\r\n\r\n        const frame = new Frame(this, key, x, y, width, height);\r\n\r\n        this.frames.set(key, frame);\r\n\r\n        if (!this.firstFrame || this.firstFrame.key === '__BASE')\r\n        {\r\n            this.firstFrame = frame;\r\n        }\r\n\r\n        return frame;\r\n    }\r\n\r\n    getFrame (key?: string | number | Frame): Frame\r\n    {\r\n        //  null, undefined, empty string, zero\r\n        if (!key)\r\n        {\r\n            return this.firstFrame;\r\n        }\r\n\r\n        if (key instanceof Frame)\r\n        {\r\n            key = key.key;\r\n        }\r\n\r\n        let frame: Frame = this.frames.get(key);\r\n\r\n        if (!frame)\r\n        {\r\n            console.warn(`Frame missing: ${key}`);\r\n\r\n            frame = this.firstFrame;\r\n        }\r\n\r\n        return frame;\r\n    }\r\n\r\n    setSize (width: number, height: number): void\r\n    {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const frame = this.frames.get('__BASE');\r\n\r\n        frame.setSize(width, height);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        if (this.binding)\r\n        {\r\n            this.binding.destroy();\r\n        }\r\n\r\n        this.frames.clear();\r\n\r\n        this.data = null;\r\n        this.image = null;\r\n        this.firstFrame = null;\r\n    }\r\n}\r\n","import { TextureManager } from './TextureManager';\r\n\r\nlet instance: TextureManager;\r\n\r\nexport const TextureManagerInstance =\r\n{\r\n    get: (): TextureManager =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (manager: TextureManager | null): void =>\r\n    {\r\n        instance = manager;\r\n    }\r\n};\r\n","import { Frame } from '../../textures/Frame';\r\nimport { ISprite } from './ISprite';\r\nimport { SetFrame } from './SetFrame';\r\nimport { Texture } from '../../textures/Texture';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\n\r\nexport function SetTexture <T extends ISprite> (key: string | Texture, frame: string | number | Frame, ...children: T[]): T[]\r\n{\r\n    if (!key)\r\n    {\r\n        //  Remove texture from all children\r\n        children.forEach(child =>\r\n        {\r\n            child.texture = null;\r\n            child.frame = null;\r\n            child.hasTexture = false;\r\n        });\r\n    }\r\n    else\r\n    {\r\n        let texture: Texture;\r\n\r\n        if (key instanceof Texture)\r\n        {\r\n            texture = key;\r\n        }\r\n        else\r\n        {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n\r\n        if (!texture)\r\n        {\r\n            console.warn(`Invalid Texture key: ${key as string}`);\r\n        }\r\n        else\r\n        {\r\n            children.forEach(child =>\r\n            {\r\n                child.texture = texture;\r\n            });\r\n\r\n            SetFrame(texture, frame, ...children);\r\n        }\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { GetVertices } from '../components/transform/GetVertices';\r\nimport { ISprite } from './ISprite';\r\n\r\nexport function UpdateVertices <T extends ISprite> (sprite: T): T\r\n{\r\n    const vertices = sprite.vertices;\r\n\r\n    const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVertices(sprite.transform);\r\n\r\n    vertices[0].setPosition(x0, y0);\r\n    vertices[1].setPosition(x1, y1);\r\n    vertices[2].setPosition(x2, y2);\r\n    vertices[3].setPosition(x3, y3);\r\n\r\n    return sprite;\r\n}\r\n","import { BatchTexturedQuad } from '../../renderer/webgl1/draw/BatchTexturedQuad';\r\nimport { Container } from '../container/Container';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DrawTexturedQuad } from '../../renderer/canvas/draw/DrawTexturedQuad';\r\nimport { Frame } from '../../textures/Frame';\r\nimport { ICanvasRenderer } from '../../renderer/canvas/ICanvasRenderer';\r\nimport { IGameObject } from '../IGameObject';\r\nimport { IRenderPass } from '../../renderer/webgl1/renderpass/IRenderPass';\r\nimport { ISprite } from './ISprite';\r\nimport { PackColors } from '../../renderer/webgl1/colors/PackColors';\r\nimport { SetFrame } from './SetFrame';\r\nimport { SetTexture } from './SetTexture';\r\nimport { Texture } from '../../textures/Texture';\r\nimport { UpdateVertices } from './UpdateVertices';\r\nimport { Vertex } from '../components/Vertex';\r\n\r\nexport class Sprite extends Container implements ISprite\r\n{\r\n    texture: Texture;\r\n    frame: Frame;\r\n    hasTexture: boolean = false;\r\n    vertices: Vertex[];\r\n\r\n    protected _tint: number = 0xffffff;\r\n\r\n    constructor (x: number, y: number, texture: string | Texture, frame?: string | number)\r\n    {\r\n        super(x, y);\r\n\r\n        this.type = 'Sprite';\r\n\r\n        this.vertices = [ new Vertex(), new Vertex(), new Vertex(), new Vertex() ];\r\n\r\n        this.setTexture(texture, frame);\r\n    }\r\n\r\n    setTexture (key: string | Texture, frame?: string | number): this\r\n    {\r\n        SetTexture(key, frame, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    setFrame (key?: string | number | Frame): this\r\n    {\r\n        SetFrame(this.texture, key, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    isRenderable (): boolean\r\n    {\r\n        return (this.visible && this.willRender && this.hasTexture && this.alpha > 0);\r\n    }\r\n\r\n    preRender (): void\r\n    {\r\n        if (this.isDirty(DIRTY_CONST.COLORS))\r\n        {\r\n            PackColors(this);\r\n\r\n            this.clearDirty(DIRTY_CONST.COLORS);\r\n        }\r\n\r\n        if (this.isDirty(DIRTY_CONST.TRANSFORM))\r\n        {\r\n            UpdateVertices(this);\r\n\r\n            this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n        }\r\n    }\r\n\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        this.preRender();\r\n\r\n        BatchTexturedQuad(this, renderPass);\r\n    }\r\n\r\n    renderCanvas <T extends ICanvasRenderer> (renderer: T): void\r\n    {\r\n        this.preRender();\r\n\r\n        DrawTexturedQuad(this, renderer);\r\n    }\r\n\r\n    get alpha (): number\r\n    {\r\n        return this._alpha;\r\n    }\r\n\r\n    set alpha (value: number)\r\n    {\r\n        if (value !== this._alpha)\r\n        {\r\n            this._alpha = value;\r\n\r\n            this.vertices.forEach(vertex =>\r\n            {\r\n                vertex.setAlpha(value);\r\n            });\r\n\r\n            this.setDirty(DIRTY_CONST.COLORS);\r\n        }\r\n    }\r\n\r\n    get tint (): number\r\n    {\r\n        return this._tint;\r\n    }\r\n\r\n    set tint (value: number)\r\n    {\r\n        if (value !== this._tint)\r\n        {\r\n            this._tint = value;\r\n\r\n            this.vertices.forEach(vertex =>\r\n            {\r\n                vertex.setTint(value);\r\n            });\r\n\r\n            this.setDirty(DIRTY_CONST.COLORS);\r\n        }\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        this.texture = null;\r\n        this.frame = null;\r\n        this.hasTexture = false;\r\n        this.vertices = [];\r\n    }\r\n}\r\n","import { Frame } from '../../textures/Frame';\r\nimport { IAnimationData } from './IAnimationData';\r\nimport { IContainer } from '../container/IContainer';\r\nimport { Sprite } from '../sprite/Sprite';\r\n\r\nexport class AnimatedSprite extends Sprite\r\n{\r\n    anims: Map<string, Frame[]>;\r\n    animData: IAnimationData;\r\n\r\n    constructor (x: number, y: number, texture: string, frame?: string | number)\r\n    {\r\n        super(x, y, texture, frame);\r\n\r\n        this.type = 'AnimatedSprite';\r\n\r\n        this.anims = new Map();\r\n\r\n        //  Holds all the data for the current animation only\r\n        this.animData = {\r\n            currentAnim: '',\r\n            currentFrames: [],\r\n            frameIndex: 0,\r\n            animSpeed: 0,\r\n            nextFrameTime: 0,\r\n            repeatCount: 0,\r\n            isPlaying: false,\r\n            yoyo: false,\r\n            pendingStart: false,\r\n            playingForward: true,\r\n            delay: 0,\r\n            repeatDelay: 0,\r\n            onStart: null,\r\n            onRepeat: null,\r\n            onComplete: null\r\n        };\r\n    }\r\n\r\n    private stop (): void\r\n    {\r\n        const data = this.animData;\r\n\r\n        data.isPlaying = false;\r\n        data.currentAnim = '';\r\n\r\n        if (data.onComplete)\r\n        {\r\n            data.onComplete(this, data.currentAnim);\r\n        }\r\n    }\r\n\r\n    nextFrame (): void\r\n    {\r\n        const data = this.animData;\r\n\r\n        data.frameIndex++;\r\n\r\n        //  There are no more frames, do we yoyo or repeat or end?\r\n        if (data.frameIndex === data.currentFrames.length)\r\n        {\r\n            if (data.yoyo)\r\n            {\r\n                data.frameIndex--;\r\n                data.playingForward = false;\r\n            }\r\n            else if (data.repeatCount === -1 || data.repeatCount > 0)\r\n            {\r\n                data.frameIndex = 0;\r\n\r\n                if (data.repeatCount !== -1)\r\n                {\r\n                    data.repeatCount--;\r\n                }\r\n\r\n                if (data.onRepeat)\r\n                {\r\n                    data.onRepeat(this, data.currentAnim);\r\n                }\r\n\r\n                data.nextFrameTime += data.repeatDelay;\r\n            }\r\n            else\r\n            {\r\n                data.frameIndex--;\r\n\r\n                return this.stop();\r\n            }\r\n        }\r\n\r\n        this.setFrame(data.currentFrames[data.frameIndex]);\r\n\r\n        data.nextFrameTime += data.animSpeed;\r\n    }\r\n\r\n    prevFrame (): void\r\n    {\r\n        const data = this.animData;\r\n\r\n        data.frameIndex--;\r\n\r\n        //  There are no more frames, do we repeat or end?\r\n        if (data.frameIndex === -1)\r\n        {\r\n            if (data.repeatCount === -1 || data.repeatCount > 0)\r\n            {\r\n                data.frameIndex = 0;\r\n                data.playingForward = true;\r\n\r\n                if (data.repeatCount !== -1)\r\n                {\r\n                    data.repeatCount--;\r\n                }\r\n\r\n                if (data.onRepeat)\r\n                {\r\n                    data.onRepeat(this, data.currentAnim);\r\n                }\r\n\r\n                data.nextFrameTime += data.repeatDelay;\r\n            }\r\n            else\r\n            {\r\n                data.frameIndex = 0;\r\n\r\n                return this.stop();\r\n            }\r\n        }\r\n\r\n        this.setFrame(data.currentFrames[data.frameIndex]);\r\n\r\n        data.nextFrameTime += data.animSpeed;\r\n    }\r\n\r\n    update (delta: number, now: number): void\r\n    {\r\n        super.update(delta, now);\r\n\r\n        const data = this.animData;\r\n\r\n        if (!data.isPlaying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        data.nextFrameTime -= delta * 1000;\r\n\r\n        //  Clamp to zero, otherwise a huge delta could cause animation playback issues\r\n        data.nextFrameTime = Math.max(data.nextFrameTime, 0);\r\n\r\n        //  It's time for a new frame\r\n        if (data.nextFrameTime === 0)\r\n        {\r\n            //  Is this the start of our animation?\r\n            if (data.pendingStart)\r\n            {\r\n                if (data.onStart)\r\n                {\r\n                    data.onStart(this, data.currentAnim);\r\n                }\r\n\r\n                data.pendingStart = false;\r\n                data.nextFrameTime = data.animSpeed;\r\n            }\r\n            else if (data.playingForward)\r\n            {\r\n                this.nextFrame();\r\n            }\r\n            else\r\n            {\r\n                this.prevFrame();\r\n            }\r\n        }\r\n    }\r\n\r\n    get isPlaying (): boolean\r\n    {\r\n        return this.animData.isPlaying;\r\n    }\r\n\r\n    get isPlayingForward (): boolean\r\n    {\r\n        return (this.animData.isPlaying && this.animData.playingForward);\r\n    }\r\n\r\n    get currentAnimation (): string\r\n    {\r\n        return this.animData.currentAnim;\r\n    }\r\n\r\n    destroy (reparentChildren?: IContainer): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        this.anims.clear();\r\n        this.animData = null;\r\n    }\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { IShader } from '../shaders/IShader';\r\nimport { ShaderStackEntry } from './RenderPass';\r\n\r\nexport function AddShader (renderPass: IRenderPass, shader: IShader, textureID?: number): ShaderStackEntry\r\n{\r\n    const stackEntry = { shader, textureID };\r\n\r\n    renderPass.shaderStack.push(stackEntry);\r\n\r\n    return stackEntry;\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { IVertexBuffer } from '../buffers/IVertexBuffer';\r\n\r\nexport function AddVertexBuffer (renderPass: IRenderPass, buffer: IVertexBuffer): IVertexBuffer\r\n{\r\n    renderPass.vertexBufferStack.push(buffer);\r\n\r\n    return buffer;\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { ShaderStackEntry } from '../shaders/ShaderStackEntry';\r\n\r\nexport function BindShader (renderPass: IRenderPass, entry?: ShaderStackEntry): void\r\n{\r\n    if (!entry)\r\n    {\r\n        entry = renderPass.currentShader;\r\n    }\r\n\r\n    const success = entry.shader.bind(renderPass, entry.textureID);\r\n\r\n    if (success)\r\n    {\r\n        entry.shader.setAttributes(renderPass);\r\n    }\r\n}\r\n","import { BindShader } from './BindShader';\r\nimport { IBaseCamera } from '../../../camera/IBaseCamera';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function Begin (renderPass: IRenderPass, camera2D: IBaseCamera): void\r\n{\r\n    renderPass.current2DCamera = camera2D;\r\n    renderPass.cameraMatrix = camera2D.matrix;\r\n\r\n    BindShader(renderPass);\r\n}\r\n","import { BlendModeStackEntry } from './RenderPass';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { gl } from '../GL';\r\n\r\nexport function BindBlendMode (renderPass: IRenderPass, entry?: BlendModeStackEntry): void\r\n{\r\n    if (!entry)\r\n    {\r\n        entry = renderPass.currentBlendMode;\r\n    }\r\n\r\n    //  TODO - Only set if different\r\n    if (entry.enable)\r\n    {\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(entry.sfactor, entry.dfactor);\r\n    }\r\n    else\r\n    {\r\n        gl.disable(gl.BLEND);\r\n    }\r\n}\r\n","import { Texture } from '../../../textures';\r\nimport { gl } from '../GL';\r\n\r\n//  directly bind a texture to an index slot\r\nexport function BindTexture (texture: Texture, index: number = 0): void\r\n{\r\n    const binding = texture.binding;\r\n\r\n    binding.setIndex(index);\r\n\r\n    gl.activeTexture(gl.TEXTURE0 + index);\r\n    gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { IVertexBuffer } from '../buffers/IVertexBuffer';\r\nimport { gl } from '../GL';\r\n\r\nexport function BindVertexBuffer (renderPass: IRenderPass, buffer?: IVertexBuffer): void\r\n{\r\n    if (!buffer)\r\n    {\r\n        buffer = renderPass.currentVertexBuffer;\r\n    }\r\n\r\n    //  TODO - Only bind if different\r\n    const indexBuffer = (buffer.indexed) ? buffer.indexBuffer : null;\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer.vertexBuffer);\r\n}\r\n","let maxTextures = 0;\r\n\r\nfunction MaxTextures (max: number = 0): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        maxTextures = max;\r\n    };\r\n}\r\n\r\nfunction SetMaxTextures (max: number): void\r\n{\r\n    maxTextures = max;\r\n}\r\n\r\nfunction GetMaxTextures (): number\r\n{\r\n    return maxTextures;\r\n}\r\n\r\nexport {\r\n    MaxTextures,\r\n    GetMaxTextures,\r\n    SetMaxTextures\r\n};\r\n","import { gl } from '../GL';\r\n\r\n//  From Pixi v5\r\n\r\nconst fragTemplate = [\r\n    'precision mediump float;',\r\n    'void main(void){',\r\n    'float test = 0.1;',\r\n    '%forloop%',\r\n    'gl_FragColor = vec4(0.0);',\r\n    '}'\r\n].join('\\n');\r\n\r\nfunction GenerateSrc (maxIfs: number): string\r\n{\r\n    let src = '';\r\n\r\n    for (let i = 0; i < maxIfs; ++i)\r\n    {\r\n        if (i > 0)\r\n        {\r\n            src += '\\nelse ';\r\n        }\r\n\r\n        if (i < maxIfs - 1)\r\n        {\r\n            src += `if(test == ${i}.0){}`;\r\n        }\r\n    }\r\n\r\n    return src;\r\n}\r\n\r\nexport function CheckShaderMaxIfStatements (maxIfs: number): number\r\n{\r\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true)\r\n    {\r\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, GenerateSrc(maxIfs));\r\n\r\n        gl.shaderSource(shader, fragmentSrc);\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\r\n        {\r\n            maxIfs = (maxIfs / 2) | 0;\r\n        }\r\n        else\r\n        {\r\n            // valid!\r\n            break;\r\n        }\r\n    }\r\n\r\n    return maxIfs;\r\n}\r\n","import { GetMaxTextures, SetMaxTextures } from '../../../config/MaxTextures';\r\n\r\nimport { CheckShaderMaxIfStatements } from '../shaders/CheckShaderMaxIfStatements';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { gl } from '../GL';\r\n\r\n//  As per the WebGL spec, the browser should always support at least 8 texture units\r\n\r\nexport function CreateTempTextures (renderPass: IRenderPass): void\r\n{\r\n    let maxGPUTextures: number = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\r\n\r\n    const maxConfigTextures = GetMaxTextures();\r\n\r\n    if (maxConfigTextures === 0 || (maxConfigTextures > 0 && maxConfigTextures > maxGPUTextures))\r\n    {\r\n        //  Insert gpu limit into config value\r\n        SetMaxTextures(maxGPUTextures);\r\n    }\r\n    else if (maxConfigTextures > 0 && maxConfigTextures < maxGPUTextures)\r\n    {\r\n        //  Limit to config setting, or 8, whichever is higher\r\n        maxGPUTextures = Math.max(8, maxConfigTextures);\r\n    }\r\n\r\n    const tempTextures = renderPass.tempTextures;\r\n\r\n    if (tempTextures.length)\r\n    {\r\n        tempTextures.forEach(texture =>\r\n        {\r\n            gl.deleteTexture(texture);\r\n        });\r\n    }\r\n\r\n    const index = [];\r\n\r\n    //  Create temp textures to stop WebGL errors on mac os\r\n    for (let texturesIndex: number = 0; texturesIndex < maxGPUTextures; texturesIndex++)\r\n    {\r\n        const tempTexture = gl.createTexture();\r\n\r\n        gl.activeTexture(gl.TEXTURE0 + texturesIndex);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, tempTexture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([ 0, 0, 255, 255 ]));\r\n\r\n        tempTextures[texturesIndex] = tempTexture;\r\n\r\n        index.push(texturesIndex);\r\n    }\r\n\r\n    renderPass.maxTextures = maxGPUTextures;\r\n\r\n    renderPass.textureIndex = index;\r\n\r\n    //  ID Zero is reserved for FBO Textures\r\n    renderPass.currentActiveTexture = 1;\r\n}\r\n","import { Flush } from './Flush';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function End (renderPass: IRenderPass): void\r\n{\r\n    Flush(renderPass);\r\n}\r\n","import { BindVertexBuffer } from './BindVertexBuffer';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function PopVertexBuffer (renderPass: IRenderPass): void\r\n{\r\n    const stack = renderPass.vertexBufferStack;\r\n\r\n    //  > 1 because index 0 contains the default, which we don't want to remove\r\n    if (stack.length > 1)\r\n    {\r\n        stack.pop();\r\n    }\r\n\r\n    renderPass.currentVertexBuffer = stack[ stack.length - 1 ];\r\n\r\n    BindVertexBuffer(renderPass);\r\n}\r\n","import { AddVertexBuffer } from './AddVertexBuffer';\r\nimport { BindVertexBuffer } from './BindVertexBuffer';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { IVertexBuffer } from '../buffers/IVertexBuffer';\r\n\r\nexport function SetVertexBuffer (renderPass: IRenderPass, buffer: IVertexBuffer): void\r\n{\r\n    const entry = AddVertexBuffer(renderPass, buffer);\r\n\r\n    BindVertexBuffer(renderPass, entry);\r\n\r\n    renderPass.currentVertexBuffer = entry;\r\n}\r\n","import { Flush } from './Flush';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { IVertexBuffer } from '../buffers/IVertexBuffer';\r\nimport { PopVertexBuffer } from './PopVertexBuffer';\r\nimport { SetVertexBuffer } from './SetVertexBuffer';\r\n\r\nexport function FlushBuffer (renderPass: IRenderPass, buffer: IVertexBuffer): boolean\r\n{\r\n    SetVertexBuffer(renderPass, buffer);\r\n\r\n    //  Needs setting every time the buffer changes\r\n    renderPass.currentShader.shader.setAttributes(renderPass);\r\n\r\n    const result = Flush(renderPass, buffer.count);\r\n\r\n    //  TODO - Pop without binding previous buffer\r\n    PopVertexBuffer(renderPass);\r\n\r\n    return result;\r\n}\r\n","import { BindShader } from './BindShader';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function PopShader (renderPass: IRenderPass): void\r\n{\r\n    const stack = renderPass.shaderStack;\r\n\r\n    //  > 1 because index 0 contains the default, which we don't want to remove\r\n    if (stack.length > 1)\r\n    {\r\n        stack.pop();\r\n    }\r\n\r\n    renderPass.currentShader = stack[ stack.length - 1 ];\r\n\r\n    BindShader(renderPass);\r\n}\r\n","import { IGLTextureBinding } from './IGLTextureBinding';\r\nimport { gl } from '../GL';\r\n\r\nexport function CreateGLTexture <T extends IGLTextureBinding> (binding: T): WebGLTexture\r\n{\r\n    const { parent, flipY, unpackPremultiplyAlpha, minFilter, magFilter, wrapS, wrapT, generateMipmap, isPOT } = binding;\r\n\r\n    const source = parent.image;\r\n\r\n    let width = parent.width;\r\n    let height = parent.height;\r\n\r\n    const glTexture: WebGLTexture = gl.createTexture();\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);\r\n\r\n    if (source)\r\n    {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n\r\n        width = source.width;\r\n        height = source.height;\r\n    }\r\n    else\r\n    {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n\r\n    if (generateMipmap && isPOT)\r\n    {\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n    }\r\n\r\n    binding.texture = glTexture;\r\n\r\n    return glTexture;\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport function DeleteFramebuffer (framebuffer: WebGLFramebuffer): void\r\n{\r\n    if (gl && gl.isFramebuffer(framebuffer))\r\n    {\r\n        gl.deleteFramebuffer(framebuffer);\r\n    }\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport function DeleteGLTexture (texture: WebGLTexture): void\r\n{\r\n    if (gl.isTexture(texture))\r\n    {\r\n        gl.deleteTexture(texture);\r\n    }\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport function SetGLTextureFilterMode (texture: WebGLTexture, linear: boolean = true): void\r\n{\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\r\n}\r\n","import { IGLTextureBinding } from './IGLTextureBinding';\r\nimport { gl } from '../GL';\r\n\r\nexport function UpdateGLTexture <T extends IGLTextureBinding> (binding: T): WebGLTexture\r\n{\r\n    const source = binding.parent.image;\r\n    const width = source.width;\r\n    const height = source.height;\r\n\r\n    if (width > 0 && height > 0)\r\n    {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, binding.texture);\r\n\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, binding.flipY);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n    }\r\n\r\n    return binding.texture;\r\n}\r\n","import { CreateGLTexture } from './CreateGLTexture';\r\nimport { DeleteFramebuffer } from '../fbo/DeleteFramebuffer';\r\nimport { DeleteGLTexture } from './DeleteGLTexture';\r\nimport { IGLTextureBinding } from './IGLTextureBinding';\r\nimport { IGLTextureBindingConfig } from './IGLTextureBindingConfig';\r\nimport { ITexture } from '../../../textures/ITexture';\r\nimport { IsSizePowerOfTwo } from '../../../math/pow2/IsSizePowerOfTwo';\r\nimport { SetGLTextureFilterMode } from './SetGLTextureFilterMode';\r\nimport { UpdateGLTexture } from './UpdateGLTexture';\r\nimport { gl } from '../GL';\r\n\r\nexport class GLTextureBinding implements IGLTextureBinding\r\n{\r\n    parent: ITexture;\r\n\r\n    texture: WebGLTexture;\r\n    framebuffer: WebGLFramebuffer;\r\n    depthbuffer: WebGLRenderbuffer;\r\n\r\n    index: number = 0;\r\n    indexCounter: number = -1;\r\n\r\n    dirtyIndex: boolean = true;\r\n    unpackPremultiplyAlpha: boolean = true;\r\n\r\n    minFilter: GLenum;\r\n    magFilter: GLenum;\r\n    wrapS: GLenum;\r\n    wrapT: GLenum;\r\n\r\n    flipY: boolean = false;\r\n    isPOT: boolean = false;\r\n    generateMipmap: boolean = false;\r\n\r\n    constructor (parent: ITexture, config: IGLTextureBindingConfig = {})\r\n    {\r\n        this.parent = parent;\r\n\r\n        this.isPOT = IsSizePowerOfTwo(parent.width, parent.height);\r\n\r\n        const {\r\n            texture = null,\r\n            framebuffer = null,\r\n            depthbuffer = null,\r\n            unpackPremultiplyAlpha = true,\r\n            minFilter = (this.isPOT) ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR,\r\n            magFilter = gl.LINEAR,\r\n            wrapS = gl.CLAMP_TO_EDGE,\r\n            wrapT = gl.CLAMP_TO_EDGE,\r\n            generateMipmap = this.isPOT,\r\n            flipY = false\r\n        } = config;\r\n\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.generateMipmap = generateMipmap;\r\n        this.flipY = flipY;\r\n        this.unpackPremultiplyAlpha = unpackPremultiplyAlpha;\r\n\r\n        if (framebuffer)\r\n        {\r\n            this.framebuffer = framebuffer;\r\n        }\r\n\r\n        if (depthbuffer)\r\n        {\r\n            this.depthbuffer = depthbuffer;\r\n        }\r\n\r\n        if (texture)\r\n        {\r\n            this.texture = texture;\r\n        }\r\n        else\r\n        {\r\n            CreateGLTexture(this);\r\n        }\r\n    }\r\n\r\n    //  Needed?\r\n    setFilter (linear: boolean): void\r\n    {\r\n        if (this.texture)\r\n        {\r\n            SetGLTextureFilterMode(this.texture, linear);\r\n        }\r\n    }\r\n\r\n    create (): WebGLTexture\r\n    {\r\n        const texture = this.texture;\r\n\r\n        if (texture)\r\n        {\r\n            DeleteGLTexture(texture);\r\n        }\r\n\r\n        return CreateGLTexture(this);\r\n    }\r\n\r\n    update (): WebGLTexture\r\n    {\r\n        const texture = this.texture;\r\n\r\n        if (!texture)\r\n        {\r\n            return CreateGLTexture(this);\r\n        }\r\n        else\r\n        {\r\n            return UpdateGLTexture(this);\r\n        }\r\n    }\r\n\r\n    setIndex (index: number): void\r\n    {\r\n        this.dirtyIndex = (index !== this.index);\r\n        this.index = index;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        DeleteGLTexture(this.texture);\r\n        DeleteFramebuffer(this.framebuffer);\r\n\r\n        this.parent = null;\r\n        this.texture = null;\r\n        this.framebuffer = null;\r\n    }\r\n}\r\n","import { BindingQueue } from '../../BindingQueue';\r\nimport { GLTextureBinding } from '../textures/GLTextureBinding';\r\n\r\nexport function ProcessBindingQueue (): void\r\n{\r\n    const queue = BindingQueue.get();\r\n\r\n    queue.forEach(entry =>\r\n    {\r\n        const { texture, glConfig } = entry;\r\n\r\n        if (!texture.binding)\r\n        {\r\n            texture.binding = new GLTextureBinding(texture, glConfig);\r\n        }\r\n    });\r\n\r\n    BindingQueue.clear();\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport function DeleteGLBuffer (buffer: WebGLBuffer): void\r\n{\r\n    if (gl.isBuffer(buffer))\r\n    {\r\n        gl.deleteBuffer(buffer);\r\n    }\r\n}\r\n","import { DeleteGLBuffer } from './DeleteGLBuffer';\r\nimport { IVertexBuffer } from './IVertexBuffer';\r\nimport { IVertexBufferConfig } from './IVertexBufferConfig';\r\nimport { gl } from '../GL';\r\n\r\nexport class VertexBuffer implements IVertexBuffer\r\n{\r\n    /**\r\n     * Maximum number of entries per batch before a flush takes place.\r\n     * For a Mesh, this is the number of triangles / faces in the vertex buffer.\r\n     * Typically each face consists of 3 verticies.\r\n     *\r\n     * @type {number}\r\n     */\r\n    batchSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, per entry in the array buffer.\r\n     *\r\n     * @type {number}\r\n     */\r\n    dataSize: number;\r\n\r\n    /**\r\n     * The amount of elements / floats a single vertex consists of.\r\n     *\r\n     * The default is 6:\r\n     *\r\n     * position (x,y - 2 floats)\r\n     * texture coord (x,y - 2 floats)\r\n     * texture index (uint)\r\n     * packed color (uint)\r\n     *\r\n     * @type {number}\r\n     */\r\n    vertexElementSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, of a single vertex in the array buffer.\r\n     *\r\n     * This is `vertexElementSize * dataSize`.\r\n     *\r\n     * @type {number}\r\n     */\r\n    vertexByteSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, of a single entry in the array buffer.\r\n     *\r\n     * This is `vertexByteSize * 4` for a quad.\r\n     *\r\n     * @type {number}\r\n     */\r\n    entryByteSize: number;\r\n\r\n    /**\r\n     * The size, in bytes, of the Array Buffer.\r\n     *\r\n     * This is `batchSize * entryByteSize`\r\n     *\r\n     * @type {number}\r\n     */\r\n    bufferByteSize: number;\r\n\r\n    /**\r\n     * The Array Buffer.\r\n     *\r\n     * @type {ArrayBuffer}\r\n     */\r\n    data: ArrayBuffer;\r\n\r\n    /**\r\n     * Float32 View of the Array Buffer.\r\n     *\r\n     * @type {Float32Array}\r\n     */\r\n    vertexViewF32: Float32Array;\r\n\r\n    /**\r\n     * Uint32 View of the Array Buffer.\r\n     *\r\n     * @type {Uint32Array}\r\n     */\r\n    vertexViewU32: Uint32Array;\r\n\r\n    /**\r\n     * The data array buffer.\r\n     *\r\n     * @type {WebGLBuffer}\r\n     */\r\n    vertexBuffer: WebGLBuffer;\r\n\r\n    indexed: boolean = false;\r\n\r\n    isDynamic: boolean = false;\r\n\r\n    /**\r\n     * The total number of entries added to the buffer so far, or reserved to be added.\r\n     *\r\n     * This is the total number of indices / verticies, not faces.\r\n     * Typically there are 3 verts per face, so this value is usually batchSize x 3 for a Mesh.\r\n     *\r\n     * @type {number}\r\n     */\r\n    count: number = 0;\r\n\r\n    /**\r\n     * The current buffer offset.\r\n     *\r\n     * @type {number}\r\n     */\r\n    offset: number = 0;\r\n\r\n    elementsPerEntry: number;\r\n\r\n    constructor (config: IVertexBufferConfig = {})\r\n    {\r\n        const {\r\n            batchSize = 1,\r\n            dataSize = 4,\r\n            isDynamic = true,\r\n            elementsPerEntry = 4,\r\n            vertexElementSize = 6\r\n        } = config;\r\n\r\n        this.batchSize = batchSize;\r\n        this.dataSize = dataSize;\r\n        this.vertexElementSize = vertexElementSize;\r\n        this.isDynamic = isDynamic;\r\n        this.elementsPerEntry = elementsPerEntry;\r\n\r\n        //  Derive the remaining values\r\n        this.vertexByteSize = vertexElementSize * dataSize;\r\n        this.entryByteSize = this.vertexByteSize * elementsPerEntry;\r\n        this.bufferByteSize = batchSize * this.entryByteSize;\r\n\r\n        this.create();\r\n    }\r\n\r\n    resize (batchSize: number): void\r\n    {\r\n        this.batchSize = batchSize;\r\n        this.bufferByteSize = batchSize * this.entryByteSize;\r\n\r\n        if (this.vertexBuffer)\r\n        {\r\n            DeleteGLBuffer(this.vertexBuffer);\r\n        }\r\n\r\n        this.create();\r\n    }\r\n\r\n    create (): void\r\n    {\r\n        const data = new ArrayBuffer(this.bufferByteSize);\r\n\r\n        this.data = data;\r\n\r\n        this.vertexViewF32 = new Float32Array(data);\r\n        this.vertexViewU32 = new Uint32Array(data);\r\n\r\n        this.vertexBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\r\n        const type = (this.isDynamic) ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n        gl.bufferData(gl.ARRAY_BUFFER, data, type);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n\r\n    add (count: number): void\r\n    {\r\n        this.count += count;\r\n        this.offset += (this.vertexElementSize * count);\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        this.count = 0;\r\n        this.offset = 0;\r\n    }\r\n\r\n    canContain (count: number): boolean\r\n    {\r\n        return ((this.count + count) <= this.batchSize);\r\n    }\r\n\r\n    free (): number\r\n    {\r\n        return Math.max(0, 1 - (this.count / this.batchSize));\r\n    }\r\n\r\n    bind (): void\r\n    {\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        DeleteGLBuffer(this.vertexBuffer);\r\n\r\n        this.data = null;\r\n        this.vertexViewF32 = null;\r\n        this.vertexViewU32 = null;\r\n        this.vertexBuffer = null;\r\n    }\r\n}\r\n","import { DeleteGLBuffer } from './DeleteGLBuffer';\r\nimport { IIndexedVertexBuffer } from './IIndexedVertexBuffer';\r\nimport { IVertexBufferConfig } from './IVertexBufferConfig';\r\nimport { VertexBuffer } from './VertexBuffer';\r\nimport { gl } from '../GL';\r\n\r\nexport class IndexedVertexBuffer extends VertexBuffer implements IIndexedVertexBuffer\r\n{\r\n    /**\r\n     * The size, in bytes, per entry in the element index array.\r\n     *\r\n     * @type {number}\r\n     */\r\n    indexSize: number;\r\n\r\n    /**\r\n     * The size, in quantity of elements, of a single entry in the element index array.\r\n     *\r\n     * This is `vertexElementSize * 4` for a quad.\r\n     *\r\n     * @type {number}\r\n     */\r\n    entryElementSize: number;\r\n\r\n    /**\r\n     * The total number of entries per entry in the element index array.\r\n     *\r\n     * For a quad, the IBO contains 6 entries per entry:\r\n     *\r\n     * 0, 1, 2\r\n     * 2, 3, 0\r\n     *\r\n     * @type {number}\r\n     */\r\n    entryIndexSize: number;\r\n\r\n    /**\r\n     * The Element Array Buffer.\r\n     *\r\n     * @type {Uint16Array}\r\n     */\r\n    index: Uint16Array;\r\n\r\n    /**\r\n     * The element array buffer.\r\n     *\r\n     * @type {WebGLBuffer}\r\n     */\r\n    indexBuffer: WebGLBuffer;\r\n\r\n    indexLayout: number[];\r\n\r\n    constructor (config: IVertexBufferConfig = {})\r\n    {\r\n        super(config);\r\n\r\n        const {\r\n            indexSize = 4,\r\n            entryIndexSize = 6,\r\n            indexLayout = null\r\n        } = config;\r\n\r\n        this.indexed = true;\r\n\r\n        this.indexSize = indexSize;\r\n        this.entryIndexSize = entryIndexSize;\r\n\r\n        //  Derive the remaining values\r\n        this.entryElementSize = this.vertexElementSize * this.elementsPerEntry;\r\n\r\n        const seededIndexBuffer = [];\r\n\r\n        if (indexLayout)\r\n        {\r\n            this.indexLayout = indexLayout;\r\n\r\n            //  Seed the index buffer\r\n            for (let i = 0; i < (this.batchSize * indexSize); i += indexSize)\r\n            {\r\n                for (let c = 0; c < indexLayout.length; c++)\r\n                {\r\n                    seededIndexBuffer.push(i + indexLayout[c]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.create();\r\n        this.createIndexBuffer(seededIndexBuffer);\r\n    }\r\n\r\n    createIndexBuffer (seededIndex: number[]): void\r\n    {\r\n        this.index = new Uint16Array(seededIndex);\r\n\r\n        this.indexBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\r\n\r\n        //  Free memory\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        seededIndex = [];\r\n    }\r\n\r\n    bind (): void\r\n    {\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        super.destroy();\r\n\r\n        DeleteGLBuffer(this.indexBuffer);\r\n\r\n        this.index = null;\r\n        this.indexLayout = null;\r\n        this.indexBuffer = null;\r\n    }\r\n}\r\n","import { IVertexAttribPointer } from './IVertexAttribPointer';\r\nimport { gl } from '../GL';\r\n\r\nexport function CreateAttributes (program: WebGLProgram, config: Object): Map<string, IVertexAttribPointer>\r\n{\r\n    const attributes = new Map();\r\n\r\n    const defaultSettings =\r\n    {\r\n        size: 1,\r\n        type: gl.FLOAT,\r\n        normalized: false,\r\n        stride: 0,\r\n        offset: 0\r\n    };\r\n\r\n    const total = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n\r\n    for (let i = 0; i < total; i++)\r\n    {\r\n        const attrib = gl.getActiveAttrib(program, i);\r\n\r\n        if (!attrib)\r\n        {\r\n            break;\r\n        }\r\n\r\n        const name = attrib.name;\r\n\r\n        const index = gl.getAttribLocation(program, name);\r\n\r\n        gl.enableVertexAttribArray(index);\r\n\r\n        const setting = config.hasOwnProperty(name) ? config[name] : {};\r\n\r\n        const {\r\n\r\n            size = defaultSettings.size,\r\n            type = defaultSettings.type,\r\n            normalized = defaultSettings.normalized,\r\n            stride = defaultSettings.stride,\r\n            offset = defaultSettings.offset\r\n\r\n        } = setting;\r\n\r\n        attributes.set(name, { index, size, type, normalized, stride, offset });\r\n    }\r\n\r\n    return attributes;\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport function DeleteShaders (...shaders: WebGLShader[]): void\r\n{\r\n    shaders.forEach(shader =>\r\n    {\r\n        gl.deleteShader(shader);\r\n    });\r\n}\r\n","import { DeleteShaders } from './DeleteShaders';\r\nimport { gl } from '../GL';\r\n\r\nexport function CreateProgram (...shaders: WebGLShader[]): WebGLProgram\r\n{\r\n    const program = gl.createProgram();\r\n\r\n    shaders.forEach(shader =>\r\n    {\r\n        gl.attachShader(program, shader);\r\n    });\r\n\r\n    gl.linkProgram(program);\r\n\r\n    const status = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n\r\n    if (!status)\r\n    {\r\n        const info = gl.getProgramInfoLog(program);\r\n\r\n        console.error(`Error linking program: ${info}`);\r\n\r\n        gl.deleteProgram(program);\r\n\r\n        DeleteShaders(...shaders);\r\n\r\n        return null;\r\n    }\r\n\r\n    return program;\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport function CreateShader (source: string, type: GLenum): WebGLShader | null\r\n{\r\n    const shader = gl.createShader(type);\r\n\r\n    gl.shaderSource(shader, source);\r\n\r\n    gl.compileShader(shader);\r\n\r\n    const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\r\n    if (!status)\r\n    {\r\n        const info = gl.getShaderInfoLog(shader);\r\n\r\n        //  Adding line numbers idea borrowed from Gregg Tavares!\r\n        const sourceLines = source.split('\\n').map((line, index) =>\r\n        {\r\n            return `${index}: ${line}`;\r\n        });\r\n\r\n        console.error(`Error compiling shader: ${info}`, sourceLines.join('\\n'));\r\n\r\n        gl.deleteShader(shader);\r\n\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport type FloatSetter = (v: number) => void;\r\nexport type F32Setter = (v: Float32List) => void;\r\nexport type I32Setter = (v: Int32List) => void;\r\n\r\nexport function CreateUniformSetter (uniform: WebGLActiveInfo, location: WebGLUniformLocation, isArray: boolean = false): FloatSetter | F32Setter | I32Setter\r\n{\r\n    switch (uniform.type)\r\n    {\r\n        case gl.INT:\r\n        case gl.BOOL:\r\n        {\r\n            if (isArray)\r\n            {\r\n                return (v: Int32List): void =>\r\n                {\r\n                    gl.uniform1iv(location, v);\r\n                };\r\n            }\r\n            else\r\n            {\r\n                return (v: number): void =>\r\n                {\r\n                    gl.uniform1i(location, v);\r\n                };\r\n            }\r\n        }\r\n\r\n        case gl.INT_VEC2:\r\n        case gl.BOOL_VEC2:\r\n        {\r\n            return (v: Int32List): void =>\r\n            {\r\n                gl.uniform2iv(location, v);\r\n            };\r\n        }\r\n\r\n        case gl.INT_VEC3:\r\n        case gl.BOOL_VEC3:\r\n        {\r\n            return (v: Int32List): void =>\r\n            {\r\n                gl.uniform3iv(location, v);\r\n            };\r\n        }\r\n\r\n        case gl.INT_VEC4:\r\n        case gl.BOOL_VEC4:\r\n        {\r\n            return (v: Int32List): void =>\r\n            {\r\n                gl.uniform4iv(location, v);\r\n            };\r\n        }\r\n\r\n        case gl.FLOAT:\r\n        {\r\n            if (isArray)\r\n            {\r\n                return (v: Float32List): void =>\r\n                {\r\n                    gl.uniform1fv(location, v);\r\n                };\r\n            }\r\n            else\r\n            {\r\n                return (v: number): void =>\r\n                {\r\n                    gl.uniform1f(location, v);\r\n                };\r\n            }\r\n        }\r\n\r\n        case gl.FLOAT_VEC2:\r\n        {\r\n            return (v: Float32List): void =>\r\n            {\r\n                gl.uniform2fv(location, v);\r\n            };\r\n        }\r\n\r\n        case gl.FLOAT_VEC3:\r\n        {\r\n            return (v: Float32List): void =>\r\n            {\r\n                gl.uniform3fv(location, v);\r\n            };\r\n        }\r\n\r\n        case gl.FLOAT_VEC4:\r\n        {\r\n            return (v: Float32List): void =>\r\n            {\r\n                gl.uniform4fv(location, v);\r\n            };\r\n        }\r\n\r\n        case gl.FLOAT_MAT2:\r\n        {\r\n            return (v: Float32List): void =>\r\n            {\r\n                gl.uniformMatrix2fv(location, false, v);\r\n            };\r\n        }\r\n\r\n        case gl.FLOAT_MAT3:\r\n        {\r\n            return (v: Float32List): void =>\r\n            {\r\n                gl.uniformMatrix3fv(location, false, v);\r\n            };\r\n        }\r\n\r\n        case gl.FLOAT_MAT4:\r\n        {\r\n            return (v: Float32List): void =>\r\n            {\r\n                gl.uniformMatrix4fv(location, false, v);\r\n            };\r\n        }\r\n\r\n        case gl.SAMPLER_2D:\r\n        case gl.SAMPLER_CUBE:\r\n        {\r\n            if (uniform.size > 1)\r\n            {\r\n                return (v: Int32List): void =>\r\n                {\r\n                    gl.uniform1iv(location, v);\r\n                };\r\n            }\r\n            else\r\n            {\r\n                return (v: number): void =>\r\n                {\r\n                    gl.uniform1i(location, v);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { CreateUniformSetter } from './CreateUniformSetter';\r\nimport { gl } from '../GL';\r\n\r\nexport function CreateUniforms (program: WebGLProgram): Map<string, Function>\r\n{\r\n    const uniforms = new Map();\r\n\r\n    const total = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    for (let i = 0; i < total; i++)\r\n    {\r\n        const uniform = gl.getActiveUniform(program, i);\r\n\r\n        let name = uniform.name;\r\n\r\n        if (name.startsWith('gl_') || name.startsWith('webgl_'))\r\n        {\r\n            //  Skip built-in uniforms\r\n            continue;\r\n        }\r\n\r\n        const location = gl.getUniformLocation(program, uniform.name);\r\n\r\n        if (location)\r\n        {\r\n            let isArray = false;\r\n\r\n            //  If uniform name has [0] at the end, remove it\r\n            if (name.substr(-3) === '[0]')\r\n            {\r\n                name = name.substr(0, name.length - 3);\r\n\r\n                isArray = (uniform.size > 1);\r\n            }\r\n\r\n            uniforms.set(name, CreateUniformSetter(uniform, location, isArray));\r\n        }\r\n    }\r\n\r\n    return uniforms;\r\n}\r\n","const BYTE                   = 0x1400;\r\nconst UNSIGNED_BYTE          = 0x1401;\r\nconst SHORT                  = 0x1402;\r\nconst UNSIGNED_SHORT         = 0x1403;\r\nconst INT                    = 0x1404;\r\nconst UNSIGNED_INT           = 0x1405;\r\nconst FLOAT                  = 0x1406;\r\nconst REPEAT                 = 0x2901;  // eslint-disable-line\r\nconst CLAMP_TO_EDGE          = 0x812F;\r\nconst MIRRORED_REPEAT        = 0x8370;  // eslint-disable-line\r\nconst NEAREST                = 0x2600;  // eslint-disable-line\r\nconst LINEAR                 = 0x2601;\r\nconst NEAREST_MIPMAP_NEAREST = 0x2700;  // eslint-disable-line\r\nconst LINEAR_MIPMAP_NEAREST  = 0x2701;  // eslint-disable-line\r\nconst NEAREST_MIPMAP_LINEAR  = 0x2702;  // eslint-disable-line\r\nconst LINEAR_MIPMAP_LINEAR   = 0x2703;  // eslint-disable-line\r\n\r\nexport {\r\n    BYTE,\r\n    UNSIGNED_BYTE,\r\n    SHORT,\r\n    UNSIGNED_SHORT,\r\n    INT,\r\n    UNSIGNED_INT,\r\n    FLOAT,\r\n    REPEAT,\r\n    CLAMP_TO_EDGE,\r\n    MIRRORED_REPEAT,\r\n    NEAREST,\r\n    LINEAR,\r\n    NEAREST_MIPMAP_NEAREST,\r\n    LINEAR_MIPMAP_NEAREST,\r\n    NEAREST_MIPMAP_LINEAR,\r\n    LINEAR_MIPMAP_LINEAR\r\n};\r\n","import * as GL_CONST from '../GL_CONST';\r\n\r\n// size = 8\r\n// size = 8, offset = position\r\n// size = 4, offset = position + tex coord\r\n// size = 4, offset = position + tex coord + index\r\n\r\nexport const DefaultQuadAttributes =\r\n{\r\n    aVertexPosition: { size: 2, type: GL_CONST.FLOAT, normalized: false, offset: 0 },\r\n    aTextureCoord: { size: 2, type: GL_CONST.FLOAT, normalized: false, offset: 8 },\r\n    aTextureId: { size: 1, type: GL_CONST.FLOAT, normalized: false, offset: 16 },\r\n    aTintColor: { size: 4, type: GL_CONST.UNSIGNED_BYTE, normalized: true, offset: 20 }\r\n};\r\n","export const DefaultQuadUniforms =\r\n{\r\n    uProjectionMatrix: new Float32Array(),\r\n    uCameraMatrix: new Float32Array(),\r\n    uTexture: 0\r\n};\r\n","let _width = 800;\r\nlet _height = 600;\r\nlet _resolution = 1;\r\n\r\nfunction Size (width: number = 800, height: number = 600, resolution: number = 1): () => void\r\n{\r\n    if (resolution === 0)\r\n    {\r\n        resolution = window.devicePixelRatio;\r\n    }\r\n\r\n    return (): void =>\r\n    {\r\n        _width = width;\r\n        _height = height;\r\n        _resolution = resolution;\r\n    };\r\n}\r\n\r\nfunction GetWidth (): number\r\n{\r\n    return _width;\r\n}\r\n\r\nfunction GetHeight (): number\r\n{\r\n    return _height;\r\n}\r\n\r\nfunction GetResolution (): number\r\n{\r\n    return _resolution;\r\n}\r\n\r\nexport {\r\n    Size,\r\n    GetWidth,\r\n    GetHeight,\r\n    GetResolution\r\n};\r\n","import { gl } from '../GL';\r\n\r\nexport function CreateDepthBuffer (framebuffer: WebGLFramebuffer, textureWidth: number, textureHeight: number): WebGLRenderbuffer\r\n{\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n    const depthBuffer = gl.createRenderbuffer();\r\n\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, textureWidth, textureHeight);\r\n\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n    return depthBuffer;\r\n}\r\n","import { gl } from '../GL';\r\n\r\nexport function CreateFramebuffer (texture: WebGLTexture, attachment?: GLenum): WebGLFramebuffer\r\n{\r\n    if (!attachment)\r\n    {\r\n        attachment = gl.COLOR_ATTACHMENT0;\r\n    }\r\n\r\n    const framebuffer = gl.createFramebuffer();\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, 0);\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n    return framebuffer;\r\n}\r\n","export const SINGLE_QUAD_FRAG =\r\n`#define SHADER_NAME SINGLE_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture;\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color = texture2D(uTexture, vTextureCoord);\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`;\r\n","export const SINGLE_QUAD_VERT =\r\n`#define SHADER_NAME SINGLE_QUAD_VERT\r\n\r\nprecision highp float;\r\n\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute float aTextureId;\r\nattribute vec4 aTintColor;\r\n\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uCameraMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nvoid main (void)\r\n{\r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vTintColor = aTintColor;\r\n\r\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\r\n}`;\r\n","import { GetHeight, GetResolution, GetWidth } from '../../../config/Size';\r\n\r\nimport { CreateAttributes } from './CreateAttributes';\r\nimport { CreateDepthBuffer } from '../fbo/CreateDepthBuffer';\r\nimport { CreateFramebuffer } from '../fbo/CreateFramebuffer';\r\nimport { CreateProgram } from './CreateProgram';\r\nimport { CreateShader } from './CreateShader';\r\nimport { CreateUniforms } from './CreateUniforms';\r\nimport { DefaultQuadAttributes } from './DefaultQuadAttributes';\r\nimport { DefaultQuadUniforms } from './DefaultQuadUniforms';\r\nimport { DeleteFramebuffer } from '../fbo/DeleteFramebuffer';\r\nimport { DeleteGLTexture } from '../textures/DeleteGLTexture';\r\nimport { DeleteShaders } from './DeleteShaders';\r\nimport { GLTextureBinding } from '../textures/GLTextureBinding';\r\nimport { IRenderPass } from '../renderpass/IRenderPass';\r\nimport { IShader } from './IShader';\r\nimport { IShaderConfig } from './IShaderConfig';\r\nimport { IVertexAttribPointer } from './IVertexAttribPointer';\r\nimport { SINGLE_QUAD_FRAG } from '../glsl/SINGLE_QUAD_FRAG';\r\nimport { SINGLE_QUAD_VERT } from '../glsl/SINGLE_QUAD_VERT';\r\nimport { Texture } from '../../../textures/Texture';\r\nimport { gl } from '../GL';\r\n\r\nexport class Shader implements IShader\r\n{\r\n    program: WebGLProgram;\r\n\r\n    attributes: Map<string, IVertexAttribPointer>;\r\n\r\n    uniforms: Map<string, unknown>;\r\n\r\n    uniformSetters: Map<string, Function>;\r\n\r\n    texture: Texture;\r\n\r\n    framebuffer: WebGLFramebuffer;\r\n\r\n    renderToFramebuffer: boolean = false;\r\n\r\n    renderToDepthbuffer: boolean = false;\r\n\r\n    constructor (config?: IShaderConfig)\r\n    {\r\n        if (config)\r\n        {\r\n            this.fromConfig(config);\r\n        }\r\n    }\r\n\r\n    fromConfig (config: IShaderConfig): void\r\n    {\r\n        const {\r\n            attributes = DefaultQuadAttributes,\r\n            fragmentShader = SINGLE_QUAD_FRAG,\r\n            height = GetHeight(),\r\n            renderToFramebuffer = false,\r\n            renderToDepthbuffer = false,\r\n            resolution = GetResolution(),\r\n            vertexShader = SINGLE_QUAD_VERT,\r\n            width = GetWidth(),\r\n            uniforms = DefaultQuadUniforms\r\n        } = config;\r\n\r\n        this.create(fragmentShader, vertexShader, uniforms, attributes);\r\n\r\n        if (renderToFramebuffer)\r\n        {\r\n            this.renderToFramebuffer = true;\r\n\r\n            const texture = new Texture(null, width * resolution, height * resolution);\r\n            const binding = new GLTextureBinding(texture);\r\n\r\n            texture.binding = binding;\r\n\r\n            binding.framebuffer = CreateFramebuffer(binding.texture);\r\n\r\n            if (renderToDepthbuffer)\r\n            {\r\n                this.renderToDepthbuffer = true;\r\n\r\n                binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\r\n            }\r\n\r\n            this.texture = texture;\r\n            this.framebuffer = binding.framebuffer;\r\n        }\r\n    }\r\n\r\n    create (fragmentShaderSource: string, vertexShaderSource: string, uniforms: {}, attribs: {}): void\r\n    {\r\n        const fragmentShader = CreateShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\r\n        const vertexShader = CreateShader(vertexShaderSource, gl.VERTEX_SHADER);\r\n\r\n        if (!fragmentShader || !vertexShader)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const program = CreateProgram(fragmentShader, vertexShader);\r\n\r\n        if (!program)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const currentProgram = gl.getParameter(gl.CURRENT_PROGRAM);\r\n\r\n        gl.useProgram(program);\r\n\r\n        this.program = program;\r\n\r\n        this.uniformSetters = CreateUniforms(program);\r\n\r\n        this.uniforms = new Map();\r\n\r\n        //  Copy starting values from the config object to the uniforms map\r\n        for (const [ key, value ] of Object.entries(uniforms))\r\n        {\r\n            this.uniforms.set(key, value);\r\n        }\r\n\r\n        this.attributes = CreateAttributes(program, attribs);\r\n\r\n        gl.useProgram(currentProgram);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    updateUniforms (renderPass: IRenderPass): void\r\n    {\r\n        //  Use this to set any extra uniform values prior to the bind\r\n    }\r\n\r\n    bind (renderPass: IRenderPass): boolean\r\n    {\r\n        this.updateUniforms(renderPass);\r\n\r\n        return this.setUniforms(renderPass);\r\n    }\r\n\r\n    setUniform (key: string, value: unknown): void\r\n    {\r\n        const uniforms = this.uniforms;\r\n\r\n        if (uniforms.has(key))\r\n        {\r\n            uniforms.set(key, value);\r\n\r\n            const setter = this.uniformSetters.get(key);\r\n\r\n            setter(value);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    setUniforms (renderPass: IRenderPass): boolean\r\n    {\r\n        if (!this.program)\r\n        {\r\n            return false;\r\n        }\r\n\r\n        gl.useProgram(this.program);\r\n\r\n        const uniforms = this.uniforms;\r\n\r\n        for (const [ name, setter ] of this.uniformSetters.entries())\r\n        {\r\n            setter(uniforms.get(name));\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //  stride = vertexByteSize\r\n    setAttributes (renderPass: IRenderPass): void\r\n    {\r\n        if (this.program)\r\n        {\r\n            const stride = renderPass.currentVertexBuffer.vertexByteSize;\r\n\r\n            this.attributes.forEach(attrib =>\r\n            {\r\n                gl.vertexAttribPointer(attrib.index, attrib.size, attrib.type, attrib.normalized, stride, attrib.offset);\r\n            });\r\n        }\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        DeleteShaders(this.program);\r\n        DeleteGLTexture(this.texture);\r\n        DeleteFramebuffer(this.framebuffer);\r\n\r\n        this.uniforms.clear();\r\n        this.uniformSetters.clear();\r\n        this.attributes.clear();\r\n\r\n        this.program = null;\r\n        this.texture = null;\r\n        this.framebuffer = null;\r\n    }\r\n}\r\n","import { DefaultQuadAttributes } from './DefaultQuadAttributes';\r\nimport { IRenderPass } from '../renderpass/IRenderPass';\r\nimport { IShader } from './IShader';\r\nimport { IShaderConfig } from './IShaderConfig';\r\nimport { Shader } from './Shader';\r\n\r\nexport class QuadShader extends Shader implements IShader\r\n{\r\n    constructor (config: IShaderConfig = {})\r\n    {\r\n        const shaderConfig = config;\r\n\r\n        shaderConfig.attributes = (!shaderConfig.attributes) ? DefaultQuadAttributes : shaderConfig.attributes;\r\n\r\n        super(shaderConfig);\r\n    }\r\n\r\n    bind (renderPass: IRenderPass): boolean\r\n    {\r\n        const uniforms = this.uniforms;\r\n\r\n        uniforms.set('uProjectionMatrix', renderPass.projectionMatrix.data);\r\n        uniforms.set('uCameraMatrix', renderPass.cameraMatrix.data);\r\n\r\n        return super.bind(renderPass);\r\n    }\r\n}\r\n","export const MULTI_QUAD_FRAG =\r\n`#define SHADER_NAME MULTI_QUAD_FRAG\r\n\r\nprecision highp float;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vTintColor;\r\n\r\nuniform sampler2D uTexture[%count%];\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color;\r\n\r\n    %forloop%\r\n\r\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\r\n}`;\r\n","import { GetMaxTextures } from '../../../config/MaxTextures';\r\nimport { IRenderPass } from '../renderpass/IRenderPass';\r\nimport { IShaderConfig } from './IShaderConfig';\r\nimport { MULTI_QUAD_FRAG } from '../glsl/MULTI_QUAD_FRAG';\r\nimport { QuadShader } from './QuadShader';\r\n\r\nexport class MultiTextureQuadShader extends QuadShader\r\n{\r\n    constructor (config: IShaderConfig = {})\r\n    {\r\n        if (!config.fragmentShader)\r\n        {\r\n            config.fragmentShader = MULTI_QUAD_FRAG;\r\n        }\r\n\r\n        super(config);\r\n    }\r\n\r\n    create (fragmentShaderSource: string, vertexShaderSource: string, uniforms: {}, attribs: {}): void\r\n    {\r\n        const maxTextures = GetMaxTextures();\r\n\r\n        let src = '';\r\n\r\n        for (let i = 1; i < maxTextures; i++)\r\n        {\r\n            if (i > 1)\r\n            {\r\n                src += '\\n\\telse ';\r\n            }\r\n\r\n            if (i < maxTextures - 1)\r\n            {\r\n                src += `if (vTextureId < ${i}.5)`;\r\n            }\r\n\r\n            src += '\\n\\t{';\r\n            src += `\\n\\t\\tcolor = texture2D(uTexture[${i}], vTextureCoord);`;\r\n            src += '\\n\\t}';\r\n        }\r\n\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\r\n        fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\r\n\r\n        super.create(fragmentShaderSource, vertexShaderSource, uniforms, attribs);\r\n    }\r\n\r\n    bind (renderPass: IRenderPass): boolean\r\n    {\r\n        this.uniforms.set('uTexture', renderPass.textureIndex);\r\n\r\n        return super.bind(renderPass);\r\n    }\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\n\r\nexport function SetDefaultBlendMode (renderPass: IRenderPass, enable: boolean, sfactor?: number, dfactor?: number): void\r\n{\r\n    const entry = { enable, sfactor, dfactor };\r\n\r\n    //  The default entry always goes into index zero\r\n    renderPass.blendModeStack[0] = entry;\r\n\r\n    renderPass.currentBlendMode = entry;\r\n    renderPass.defaultBlendMode = entry;\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { Rectangle } from '../../../geom/rectangle/Rectangle';\r\n\r\nexport function SetDefaultFramebuffer (renderPass: IRenderPass, framebuffer: WebGLFramebuffer = null, viewport?: Rectangle): void\r\n{\r\n    const entry = { framebuffer, viewport };\r\n\r\n    //  The default entry always goes into index zero\r\n    renderPass.framebufferStack[0] = entry;\r\n\r\n    renderPass.currentFramebuffer = entry;\r\n    renderPass.defaultFramebuffer = entry;\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { IShader } from '../shaders/IShader';\r\n\r\nexport function SetDefaultShader (renderPass: IRenderPass, shader: IShader, textureID?: number): void\r\n{\r\n    const entry = { shader, textureID };\r\n\r\n    //  The default entry always goes into index zero\r\n    renderPass.shaderStack[0] = entry;\r\n\r\n    renderPass.currentShader = entry;\r\n    renderPass.defaultShader = entry;\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { IVertexBuffer } from '../buffers/IVertexBuffer';\r\n\r\nexport function SetDefaultVertexBuffer (renderPass: IRenderPass, buffer: IVertexBuffer): void\r\n{\r\n    //  The default entry always goes into index zero\r\n    renderPass.vertexBufferStack[0] = buffer;\r\n\r\n    renderPass.currentVertexBuffer = buffer;\r\n    renderPass.defaultVertexBuffer = buffer;\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { Rectangle } from '../../../geom/rectangle/Rectangle';\r\n\r\nexport function SetDefaultViewport (renderPass: IRenderPass, x: number = 0, y: number = 0, width: number = 0, height: number = 0): void\r\n{\r\n    const entry = new Rectangle(x, y, width, height);\r\n\r\n    //  The default entry always goes into index zero\r\n    renderPass.viewportStack[0] = entry;\r\n\r\n    renderPass.currentViewport = entry;\r\n    renderPass.defaultViewport = entry;\r\n}\r\n","export let batchSize = 4096;\r\n\r\nexport function BatchSize (size: number): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        batchSize = size;\r\n    };\r\n}\r\n","import { CreateTempTextures } from './CreateTempTextures';\r\nimport { IBaseCamera } from '../../../camera/IBaseCamera';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { IShader } from '../shaders/IShader';\r\nimport { IVertexBuffer } from '../buffers/IVertexBuffer';\r\nimport { IWebGLRenderer } from '../IWebGLRenderer';\r\nimport { IndexedVertexBuffer } from '../buffers/IndexedVertexBuffer';\r\nimport { Matrix4 } from '../../../math/mat4/Matrix4';\r\nimport { MultiTextureQuadShader } from '../shaders';\r\nimport { Ortho } from '../../../math/mat4/Ortho';\r\nimport { QuadShader } from '../shaders/QuadShader';\r\nimport { Rectangle } from '../../../geom/rectangle/Rectangle';\r\nimport { SetDefaultBlendMode } from './SetDefaultBlendMode';\r\nimport { SetDefaultFramebuffer } from './SetDefaultFramebuffer';\r\nimport { SetDefaultShader } from './SetDefaultShader';\r\nimport { SetDefaultVertexBuffer } from './SetDefaultVertexBuffer';\r\nimport { SetDefaultViewport } from './SetDefaultViewport';\r\nimport { StaticCamera } from '../../../camera';\r\nimport { batchSize } from '../../../config/BatchSize';\r\n\r\nexport type FramebufferStackEntry = {\r\n    framebuffer: WebGLFramebuffer;\r\n    viewport?: Rectangle;\r\n};\r\n\r\nexport type ShaderStackEntry = {\r\n    shader: IShader;\r\n    textureID?: number;\r\n};\r\n\r\nexport type BlendModeStackEntry = {\r\n    enable: boolean;\r\n    sfactor?: number;\r\n    dfactor?: number;\r\n};\r\n\r\nexport class RenderPass implements IRenderPass\r\n{\r\n    renderer: IWebGLRenderer;\r\n\r\n    projectionMatrix: Matrix4;\r\n    cameraMatrix: Matrix4;\r\n\r\n    count: number = 0;\r\n    prevCount: number = 0;\r\n    flushTotal: number = 0;\r\n\r\n    //  The maximum number of combined image units the GPU supports\r\n    //  According to the WebGL spec the minimum is 8\r\n    maxTextures: number = 0;\r\n    currentActiveTexture: number = 0;\r\n    startActiveTexture: number = 0;\r\n    tempTextures: WebGLTexture[] = [];\r\n    textureIndex: number[] = [];\r\n\r\n    //  FBO\r\n    framebufferStack: FramebufferStackEntry[] = [];\r\n    currentFramebuffer: FramebufferStackEntry = null;\r\n    defaultFramebuffer: FramebufferStackEntry = null;\r\n\r\n    //  VBO\r\n    vertexBufferStack: IVertexBuffer[] = [];\r\n    currentVertexBuffer: IVertexBuffer = null;\r\n    defaultVertexBuffer: IVertexBuffer = null;\r\n\r\n    //  Shader\r\n    shaderStack: ShaderStackEntry[] = [];\r\n    currentShader: ShaderStackEntry = null;\r\n    defaultShader: ShaderStackEntry = null;\r\n\r\n    //  Viewport\r\n    viewportStack: Rectangle[] = [];\r\n    currentViewport: Rectangle = null;\r\n    defaultViewport: Rectangle = null;\r\n\r\n    //  Blend Mode\r\n    blendModeStack: BlendModeStackEntry[] = [];\r\n    currentBlendMode: BlendModeStackEntry = null;\r\n    defaultBlendMode: BlendModeStackEntry = null;\r\n\r\n    //  Single Texture Quad Shader + Camera\r\n    quadShader: IShader;\r\n    quadBuffer: IVertexBuffer;\r\n    quadCamera: IBaseCamera;\r\n\r\n    //  Current 2D Camera\r\n    current2DCamera: IBaseCamera;\r\n\r\n    constructor (renderer: IWebGLRenderer)\r\n    {\r\n        this.renderer = renderer;\r\n\r\n        this.projectionMatrix = new Matrix4();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    //  TODO - Call when context is lost and restored\r\n    reset (): void\r\n    {\r\n        const gl = this.renderer.gl;\r\n\r\n        const indexLayout = [ 0, 1, 2, 2, 3, 0 ];\r\n\r\n        //  TODO - If already created, delete shaders / buffers first (i.e. during context loss)\r\n\r\n        //  Default QuadShader (for FBO drawing)\r\n\r\n        this.quadShader = new QuadShader();\r\n        this.quadBuffer = new IndexedVertexBuffer({ isDynamic: false, indexLayout });\r\n        this.quadCamera = new StaticCamera();\r\n\r\n        //  Default settings\r\n\r\n        CreateTempTextures(this);\r\n\r\n        SetDefaultFramebuffer(this);\r\n        SetDefaultBlendMode(this, true, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        SetDefaultVertexBuffer(this, new IndexedVertexBuffer({ batchSize, indexLayout }));\r\n        SetDefaultShader(this, new MultiTextureQuadShader());\r\n    }\r\n\r\n    resize (width: number, height: number): void\r\n    {\r\n        //  TODO - -1 to 1?\r\n        Ortho(0, width, height, 0, -1000, 1000, this.projectionMatrix);\r\n\r\n        this.quadCamera.reset();\r\n\r\n        SetDefaultViewport(this, 0, 0, width, height);\r\n    }\r\n}\r\n","import { AddShader } from './AddShader';\r\nimport { BindShader } from './BindShader';\r\nimport { IRenderPass } from './IRenderPass';\r\nimport { IShader } from '../shaders/IShader';\r\n\r\nexport function SetShader (renderPass: IRenderPass, shader: IShader, textureID?: number): void\r\n{\r\n    const entry = AddShader(renderPass, shader, textureID);\r\n\r\n    BindShader(renderPass, entry);\r\n\r\n    renderPass.currentShader = entry;\r\n}\r\n","import { BindBlendMode } from './BindBlendMode';\r\nimport { BindFramebuffer } from './BindFramebuffer';\r\nimport { BindVertexBuffer } from './BindVertexBuffer';\r\nimport { BindViewport } from './BindViewport';\r\nimport { IRenderPass } from './IRenderPass';\r\n\r\nexport function Start (renderPass: IRenderPass): void\r\n{\r\n    renderPass.current2DCamera = renderPass.quadCamera;\r\n    renderPass.cameraMatrix = renderPass.quadCamera.matrix;\r\n\r\n    renderPass.count = 0;\r\n    renderPass.flushTotal = 0;\r\n\r\n    BindFramebuffer(renderPass, false, renderPass.defaultFramebuffer);\r\n    BindBlendMode(renderPass, renderPass.defaultBlendMode);\r\n    BindViewport(renderPass, renderPass.defaultViewport);\r\n    BindVertexBuffer(renderPass, renderPass.defaultVertexBuffer);\r\n}\r\n","import { IRenderPass } from './IRenderPass';\r\nimport { gl } from '../GL';\r\n\r\nexport function UnbindTexture (renderPass: IRenderPass, index: number = 0): void\r\n{\r\n    gl.activeTexture(gl.TEXTURE0 + index);\r\n    gl.bindTexture(gl.TEXTURE_2D, renderPass.tempTextures[ index ]);\r\n\r\n    if (index > 0)\r\n    {\r\n        renderPass.startActiveTexture++;\r\n    }\r\n}\r\n","import { GetVertexBufferEntry } from '../renderpass/GetVertexBufferEntry';\r\nimport { IRenderPass } from '../renderpass/IRenderPass';\r\n\r\nexport function BatchSingleQuad (renderPass: IRenderPass, x: number, y: number, width: number, height: number, u0: number, v0: number, u1: number, v1: number, textureIndex: number = 0, packedColor: number = 4294967295): void\r\n{\r\n    const { F32, U32, offset } = GetVertexBufferEntry(renderPass, 1);\r\n\r\n    //  top left\r\n    F32[offset + 0] = x;\r\n    F32[offset + 1] = y;\r\n    F32[offset + 2] = u0;\r\n    F32[offset + 3] = v1;\r\n    F32[offset + 4] = textureIndex;\r\n    U32[offset + 5] = packedColor;\r\n\r\n    //  bottom left\r\n    F32[offset + 6] = x;\r\n    F32[offset + 7] = y + height;\r\n    F32[offset + 8] = u0;\r\n    F32[offset + 9] = v0;\r\n    F32[offset + 10] = textureIndex;\r\n    U32[offset + 11] = packedColor;\r\n\r\n    //  bottom right\r\n    F32[offset + 12] = x + width;\r\n    F32[offset + 13] = y + height;\r\n    F32[offset + 14] = u1;\r\n    F32[offset + 15] = v0;\r\n    F32[offset + 16] = textureIndex;\r\n    U32[offset + 17] = packedColor;\r\n\r\n    //  top right\r\n    F32[offset + 18] = x + width;\r\n    F32[offset + 19] = y;\r\n    F32[offset + 20] = u1;\r\n    F32[offset + 21] = v1;\r\n    F32[offset + 22] = textureIndex;\r\n    U32[offset + 23] = packedColor;\r\n}\r\n","import { BindTexture, Flush, PopShader, PopVertexBuffer, SetShader, SetVertexBuffer, UnbindTexture } from '../renderpass';\r\n\r\nimport { BatchSingleQuad } from './BatchSingleQuad';\r\nimport { IRenderPass } from '../renderpass/IRenderPass';\r\nimport { IShader } from '../shaders/IShader';\r\nimport { Texture } from '../../../textures';\r\n\r\nexport function DrawTexturedQuad (renderPass: IRenderPass, texture: Texture, shader?: IShader): void\r\n{\r\n    if (!shader)\r\n    {\r\n        shader = renderPass.quadShader;\r\n    }\r\n\r\n    const { u0, v0, u1, v1 } = texture.firstFrame;\r\n\r\n    BindTexture(texture, 0);\r\n\r\n    SetVertexBuffer(renderPass, renderPass.quadBuffer);\r\n    SetShader(renderPass, shader, 0);\r\n\r\n    BatchSingleQuad(renderPass, 0, 0, texture.width, texture.height, u0, v0, u1, v1, 0);\r\n\r\n    Flush(renderPass);\r\n\r\n    //  Should always pop the vbo first, so when the shader is popped the attributes are set correctly\r\n    PopVertexBuffer(renderPass);\r\n    PopShader(renderPass);\r\n\r\n    UnbindTexture(renderPass);\r\n}\r\n","let bgColor = 0;\r\n\r\nfunction BackgroundColor (color: number = 0): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        bgColor = color;\r\n    };\r\n}\r\n\r\nfunction GetBackgroundColor (): number\r\n{\r\n    return bgColor;\r\n}\r\n\r\nexport {\r\n    BackgroundColor,\r\n    GetBackgroundColor\r\n};\r\n","import { GameInstance } from '../GameInstance';\r\n\r\nlet title = 'Phaser';\r\nlet url = 'https://phaser4.io';\r\nlet color = '#fff';\r\nlet background = 'linear-gradient(#3e0081 40%, #00bcc3)';\r\n\r\nfunction Banner (gameTitle: string = '', gameURL: string = '', textColor?: string, textBackground?: string): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        title = gameTitle;\r\n        url = gameURL;\r\n\r\n        if (textColor)\r\n        {\r\n            color = textColor;\r\n        }\r\n\r\n        if (textBackground)\r\n        {\r\n            background = textBackground;\r\n        }\r\n    };\r\n}\r\n\r\nfunction GetBanner (): void\r\n{\r\n    if (title !== '')\r\n    {\r\n        const game = GameInstance.get();\r\n\r\n        const version = (title === 'Phaser') ? ' v' + game.VERSION : '';\r\n\r\n        console.log(\r\n            `%c${title}${version}%c ${url}`,\r\n            `padding: 4px 16px; color: ${color}; background: ${background}`,\r\n            ''\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    Banner,\r\n    GetBanner\r\n};\r\n","import { IRendererConstructor } from '../renderer/IRendererConstructor';\r\n\r\nlet instance: IRendererConstructor;\r\n\r\nfunction SetRenderer (renderer: IRendererConstructor): void\r\n{\r\n    instance = renderer;\r\n}\r\n\r\nfunction GetRenderer (): IRendererConstructor\r\n{\r\n    return instance;\r\n}\r\n\r\nexport {\r\n    GetRenderer,\r\n    SetRenderer\r\n};\r\n","import { ISceneConstructor } from '../scenes/ISceneConstructor';\r\n\r\nlet _scenes: ISceneConstructor[] = [];\r\n\r\nfunction Scenes (scenes?: ISceneConstructor | Array<ISceneConstructor>): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        _scenes = [].concat(scenes);\r\n    };\r\n}\r\n\r\nfunction GetScenes (): ISceneConstructor[]\r\n{\r\n    return _scenes;\r\n}\r\n\r\nexport {\r\n    Scenes,\r\n    GetScenes\r\n};\r\n","let _contextAttributes: WebGLContextAttributes = {\r\n    alpha: false,\r\n    antialias: false,\r\n    depth: true,\r\n    premultipliedAlpha: false\r\n};\r\n\r\nfunction WebGLContext (contextAttributes: WebGLContextAttributes): () => void\r\n{\r\n    return (): void =>\r\n    {\r\n        _contextAttributes = contextAttributes;\r\n    };\r\n}\r\n\r\nfunction GetWebGLContext (): WebGLContextAttributes\r\n{\r\n    return _contextAttributes;\r\n}\r\n\r\nexport {\r\n    WebGLContext,\r\n    GetWebGLContext\r\n};\r\n","export function GetRGBArray (color: number, output: number[] = []): number[]\r\n{\r\n    const r: number = color >> 16 & 0xFF;\r\n    const g: number = color >> 8 & 0xFF;\r\n    const b: number = color & 0xFF;\r\n    const a: number = (color > 16777215) ? color >>> 24 : 255;\r\n\r\n    output[0] = r / 255;\r\n    output[1] = g / 255;\r\n    output[2] = b / 255;\r\n    output[3] = a / 255;\r\n\r\n    return output;\r\n}\r\n","import { WebGLRenderer } from './WebGLRenderer';\r\n\r\nexport let instance: WebGLRenderer;\r\n\r\nexport const WebGLRendererInstance =\r\n{\r\n    get: (): WebGLRenderer =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (renderer: WebGLRenderer | undefined): void =>\r\n    {\r\n        instance = renderer;\r\n    }\r\n};\r\n","import { GetHeight, GetResolution, GetWidth } from '../../config/Size';\r\n\r\nimport { End } from './renderpass/End';\r\nimport { GL } from './GL';\r\nimport { GetBackgroundColor } from '../../config/BackgroundColor';\r\nimport { GetRGBArray } from './colors/GetRGBArray';\r\nimport { GetWebGLContext } from '../../config/WebGLContext';\r\nimport { IRenderPass } from './renderpass/IRenderPass';\r\nimport { ISceneRenderData } from '../../scenes/ISceneRenderData';\r\nimport { ProcessBindingQueue } from './renderpass/ProcessBindingQueue';\r\nimport { RenderPass } from './renderpass/RenderPass';\r\nimport { Start } from './renderpass';\r\nimport { WebGLRendererInstance } from './WebGLRendererInstance';\r\n\r\nexport class WebGLRenderer\r\n{\r\n    canvas: HTMLCanvasElement;\r\n    gl: WebGLRenderingContext;\r\n\r\n    renderPass: IRenderPass;\r\n\r\n    clearColor = [ 0, 0, 0, 1 ];\r\n\r\n    width: number;\r\n    height: number;\r\n    resolution: number;\r\n\r\n    clearBeforeRender: boolean = true;\r\n    optimizeRedraw: boolean = false;\r\n    autoResize: boolean = true;\r\n\r\n    contextLost: boolean = false;\r\n\r\n    constructor ()\r\n    {\r\n        this.width = GetWidth();\r\n        this.height = GetHeight();\r\n        this.resolution = GetResolution();\r\n\r\n        this.setBackgroundColor(GetBackgroundColor());\r\n\r\n        const canvas = document.createElement('canvas');\r\n\r\n        canvas.addEventListener('webglcontextlost', (event) => this.onContextLost(event), false);\r\n        canvas.addEventListener('webglcontextrestored', () => this.onContextRestored(), false);\r\n\r\n        this.canvas = canvas;\r\n\r\n        this.initContext();\r\n\r\n        //  By this stage the context is available\r\n        WebGLRendererInstance.set(this);\r\n\r\n        this.renderPass = new RenderPass(this);\r\n\r\n        this.resize(this.width, this.height, this.resolution);\r\n    }\r\n\r\n    initContext (): void\r\n    {\r\n        const gl = this.canvas.getContext('webgl', GetWebGLContext());\r\n\r\n        GL.set(gl);\r\n\r\n        this.gl = gl;\r\n\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.CULL_FACE);\r\n    }\r\n\r\n    resize (width: number, height: number, resolution: number = 1): void\r\n    {\r\n        const calcWidth = width * resolution;\r\n        const calcHeight = height * resolution;\r\n\r\n        this.width = calcWidth;\r\n        this.height = calcHeight;\r\n        this.resolution = resolution;\r\n\r\n        const canvas = this.canvas;\r\n\r\n        canvas.width = calcWidth;\r\n        canvas.height = calcHeight;\r\n\r\n        if (this.autoResize)\r\n        {\r\n            canvas.style.width = width.toString() + 'px';\r\n            canvas.style.height = height.toString() + 'px';\r\n        }\r\n\r\n        this.renderPass.resize(calcWidth, calcHeight);\r\n    }\r\n\r\n    onContextLost (event: Event): void\r\n    {\r\n        event.preventDefault();\r\n\r\n        this.contextLost = true;\r\n    }\r\n\r\n    onContextRestored (): void\r\n    {\r\n        this.contextLost = false;\r\n\r\n        this.initContext();\r\n    }\r\n\r\n    setBackgroundColor (color: number): this\r\n    {\r\n        GetRGBArray(color, this.clearColor);\r\n\r\n        return this;\r\n    }\r\n\r\n    //  TODO - Remove?\r\n    reset (): void\r\n    {\r\n        // this.renderPass.reset();\r\n    }\r\n\r\n    render (renderData: ISceneRenderData): void\r\n    {\r\n        if (this.contextLost)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const gl = this.gl;\r\n        const renderPass = this.renderPass;\r\n\r\n        //  This is only here because if we don't do _something_ with the context, GL Spector can't see it.\r\n        //  Technically, we could move it below the dirty bail-out below.\r\n        // this.reset();\r\n\r\n        ProcessBindingQueue();\r\n\r\n        //  Cache 1 - Nothing dirty? Display the previous frame\r\n        if (this.optimizeRedraw && renderData.numDirtyFrames === 0 && renderData.numDirtyCameras === 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.clearBeforeRender)\r\n        {\r\n            const cls = this.clearColor;\r\n\r\n            gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n\r\n        const worlds = renderData.worldData;\r\n\r\n        Start(renderPass);\r\n\r\n        for (let i: number = 0; i < worlds.length; i++)\r\n        {\r\n            const { world } = worlds[i];\r\n\r\n            world.renderGL(renderPass);\r\n\r\n            //  Stats sweep\r\n\r\n            world.postRenderGL(renderPass);\r\n        }\r\n\r\n        End(renderPass);\r\n\r\n        // eslint-disable-next-line no-debugger\r\n        // debugger;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        WebGLRendererInstance.set(undefined);\r\n    }\r\n}\r\n","import { GameObject } from '../GameObject';\r\n\r\n//  A Layer is a way of grouping Game Objects together, without impacting their\r\n//  transforms. Children of a Layer do not inherit the layers transform, however\r\n//  you are able to control the visibility of the layers children in a single pass.\r\n\r\nexport class Layer extends GameObject\r\n{\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.type = 'Layer';\r\n        this.transform.passthru = true;\r\n        this.willRender = false;\r\n    }\r\n}\r\n","import { Flush, PopFramebuffer, SetFramebuffer } from '../../renderer/webgl1/renderpass';\r\nimport { GetHeight, GetResolution, GetWidth } from '../../config';\r\n\r\nimport { CreateFramebuffer } from '../../renderer/webgl1/fbo/CreateFramebuffer';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DrawTexturedQuad } from '../../renderer/webgl1/draw/DrawTexturedQuad';\r\nimport { GLTextureBinding } from '../../renderer/webgl1/textures/GLTextureBinding';\r\nimport { IRenderLayer } from './IRenderLayer';\r\nimport { IRenderPass } from '../../renderer/webgl1/renderpass/IRenderPass';\r\nimport { Layer } from '../layer/Layer';\r\nimport { Texture } from '../../textures/Texture';\r\n\r\n//  The RenderLayer works like a normal Layer, except it automatically caches\r\n//  all of its renderable children to its own texture. The children are drawn\r\n//  to the RenderLayers texture and then the RenderLayer texture is drawn to\r\n//  the WebGL Renderer. You should use a RenderLayer if you've got a complex or\r\n//  large set of Game Objects that don't update very often, where you would\r\n//  benefit from not having to re-render every single child, every frame.\r\n\r\nexport class RenderLayer extends Layer implements IRenderLayer\r\n{\r\n    texture: Texture;\r\n    framebuffer: WebGLFramebuffer;\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.type = 'RenderLayer';\r\n\r\n        this.willRender = true;\r\n        this.willRenderChildren = true;\r\n        this.willCacheChildren = true;\r\n\r\n        this.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n\r\n        const width = GetWidth();\r\n        const height = GetHeight();\r\n        const resolution = GetResolution();\r\n\r\n        //  TODO: Allow them to set this via a filterArea\r\n        //  TODO: This code is duplicate of Shader constructor, consolidate\r\n        const texture = new Texture(null, width * resolution, height * resolution);\r\n\r\n        const binding = new GLTextureBinding(texture);\r\n\r\n        texture.binding = binding;\r\n\r\n        binding.framebuffer = CreateFramebuffer(binding.texture);\r\n\r\n        this.texture = texture;\r\n        this.framebuffer = binding.framebuffer;\r\n    }\r\n\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        if (this.numChildren > 0)\r\n        {\r\n            Flush(renderPass);\r\n\r\n            if (!this.willCacheChildren || this.isDirty(DIRTY_CONST.CHILD_CACHE))\r\n            {\r\n                //  This RenderLayer has dirty children\r\n                SetFramebuffer(renderPass, this.framebuffer, true);\r\n\r\n                this.clearDirty(DIRTY_CONST.CHILD_CACHE);\r\n            }\r\n            else\r\n            {\r\n                //  This RenderLayer doesn't have any dirty children, so we'll use the previous fbo contents\r\n                SetFramebuffer(renderPass, this.framebuffer, false);\r\n\r\n                this.postRenderGL(renderPass);\r\n            }\r\n        }\r\n    }\r\n\r\n    postRenderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        Flush(renderPass);\r\n\r\n        PopFramebuffer(renderPass);\r\n\r\n        DrawTexturedQuad(renderPass, this.texture);\r\n\r\n        this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n}\r\n","import { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DrawTexturedQuad } from '../../renderer/webgl1/draw/DrawTexturedQuad';\r\nimport { Flush } from '../../renderer/webgl1/renderpass/Flush';\r\nimport { IEffectLayer } from './IEffectLayer';\r\nimport { IRenderPass } from '../../renderer/webgl1/renderpass/IRenderPass';\r\nimport { IShader } from '../../renderer/webgl1/shaders/IShader';\r\nimport { PopFramebuffer } from '../../renderer/webgl1/renderpass/PopFramebuffer';\r\nimport { RenderLayer } from '../renderlayer/RenderLayer';\r\n\r\n//  A WebGL specific EffectLayer\r\n//  EffectLayerCanvas is a canvas alternative\r\n\r\nexport class EffectLayer extends RenderLayer implements IEffectLayer\r\n{\r\n    shaders: IShader[] = [];\r\n\r\n    constructor (...shaders: IShader[])\r\n    {\r\n        super();\r\n\r\n        this.type = 'EffectLayer';\r\n\r\n        if (Array.isArray(shaders))\r\n        {\r\n            this.shaders = shaders;\r\n        }\r\n    }\r\n\r\n    postRenderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        const shaders = this.shaders;\r\n        const texture = this.texture;\r\n\r\n        Flush(renderPass);\r\n\r\n        PopFramebuffer(renderPass);\r\n\r\n        //  this.framebuffer contains a texture with all of this layers sprites drawn to it\r\n\r\n        if (shaders.length === 0)\r\n        {\r\n            DrawTexturedQuad(renderPass, texture);\r\n        }\r\n        else\r\n        {\r\n            let prevTexture = texture;\r\n\r\n            for (let i: number = 0; i < shaders.length; i++)\r\n            {\r\n                const shader = shaders[i];\r\n\r\n                DrawTexturedQuad(renderPass, prevTexture, shader);\r\n\r\n                prevTexture = shader.texture;\r\n            }\r\n\r\n            DrawTexturedQuad(renderPass, prevTexture);\r\n        }\r\n\r\n        this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n}\r\n","import { Vertices } from './Vertices';\r\n\r\nexport function GetVerticesFromValues (\r\n    left: number,\r\n    right: number,\r\n    top: number,\r\n    bottom: number,\r\n    x: number,\r\n    y: number,\r\n    rotation: number = 0,\r\n    scaleX: number = 1,\r\n    scaleY: number = 1,\r\n    skewX: number = 0,\r\n    skewY: number = 0): Vertices\r\n{\r\n    const a = Math.cos(rotation + skewY) * scaleX;\r\n    const b = Math.sin(rotation + skewY) * scaleX;\r\n    const c = -Math.sin(rotation - skewX) * scaleY;\r\n    const d = Math.cos(rotation - skewX) * scaleY;\r\n\r\n    const x0 = (left * a) + (top * c) + x;\r\n    const y0 = (left * b) + (top * d) + y;\r\n\r\n    const x1 = (left * a) + (bottom * c) + x;\r\n    const y1 = (left * b) + (bottom * d) + y;\r\n\r\n    const x2 = (right * a) + (bottom * c) + x;\r\n    const y2 = (right * b) + (bottom * d) + y;\r\n\r\n    const x3 = (right * a) + (top * c) + x;\r\n    const y3 = (right * b) + (top * d) + y;\r\n\r\n    return { x0, y0, x1, y1, x2, y2, x3, y3 };\r\n}\r\n","import { BatchTexturedQuadBuffer } from '../../renderer/webgl1/draw/BatchTexturedQuadBuffer';\r\nimport { Clamp } from '../../math/Clamp';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { DeleteFramebuffer } from '../../renderer/webgl1/fbo/DeleteFramebuffer';\r\nimport { Frame } from '../../textures';\r\nimport { GetVerticesFromValues } from '../components/transform/GetVerticesFromValues';\r\nimport { IRenderPass } from '../../renderer/webgl1/renderpass/IRenderPass';\r\nimport { ISpriteBatch } from './ISpriteBatch';\r\nimport { Layer } from '../layer/Layer';\r\nimport { PackColor } from '../../renderer/webgl1/colors/PackColor';\r\nimport { SpriteBatchAddConfig } from './SpriteBatchAddConfig';\r\nimport { Texture } from '../../textures/Texture';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\nimport { gl } from '../../renderer/webgl1/GL';\r\n\r\nexport class SpriteBatch extends Layer implements ISpriteBatch\r\n{\r\n    data: ArrayBuffer;\r\n    vertexViewF32: Float32Array;\r\n    vertexViewU32: Uint32Array;\r\n    index: Uint16Array;\r\n\r\n    vertexBuffer: WebGLBuffer;\r\n    indexBuffer: WebGLBuffer;\r\n\r\n    count: number;\r\n    maxSize: number;\r\n    glTextureIndex: number = 0;\r\n\r\n    texture: Texture;\r\n    hasTexture: boolean = false;\r\n\r\n    constructor (maxSize: number, texture: string | Texture)\r\n    {\r\n        super();\r\n\r\n        this.type = 'SpriteBatch';\r\n        this.willRender = true;\r\n\r\n        this.setTexture(texture);\r\n        this.setMaxSize(maxSize);\r\n    }\r\n\r\n    resetBuffers (): void\r\n    {\r\n        let ibo: number[] = [];\r\n\r\n        //  Seed the index buffer\r\n        for (let i = 0; i < (this.maxSize * 4); i += 4)\r\n        {\r\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\r\n        }\r\n\r\n        //  96 = The size, in bytes, of a single quad in the array buffer\r\n        this.data = new ArrayBuffer(this.maxSize * 96);\r\n        this.index = new Uint16Array(ibo);\r\n\r\n        this.vertexViewF32 = new Float32Array(this.data);\r\n        this.vertexViewU32 = new Uint32Array(this.data);\r\n\r\n        if (gl)\r\n        {\r\n            DeleteFramebuffer(this.vertexBuffer);\r\n            DeleteFramebuffer(this.indexBuffer);\r\n\r\n            this.vertexBuffer = gl.createBuffer();\r\n            this.indexBuffer = gl.createBuffer();\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.STATIC_DRAW);\r\n\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        }\r\n\r\n        //  Tidy-up\r\n        ibo = [];\r\n\r\n        this.count = 0;\r\n    }\r\n\r\n    setMaxSize (value: number): this\r\n    {\r\n        this.maxSize = Clamp(value, 0, 65535);\r\n\r\n        this.resetBuffers();\r\n\r\n        return this;\r\n    }\r\n\r\n    setTexture (key: string | Texture): this\r\n    {\r\n        let texture: Texture;\r\n\r\n        if (key instanceof Texture)\r\n        {\r\n            texture = key;\r\n        }\r\n        else\r\n        {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n\r\n        if (!texture)\r\n        {\r\n            console.warn(`Invalid Texture key: ${key as string}`);\r\n        }\r\n        else\r\n        {\r\n            this.texture = texture;\r\n\r\n            this.hasTexture = true;\r\n\r\n            this.glTextureIndex = -1;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    isRenderable (): boolean\r\n    {\r\n        return (this.visible && this.willRender && this.hasTexture && this.count > 0);\r\n    }\r\n\r\n    clear (): this\r\n    {\r\n        this.count = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    private addToBatch (frame: Frame, color: number, x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number): this\r\n    {\r\n        if (this.count >= this.maxSize)\r\n        {\r\n            console.warn('SpriteBatch full');\r\n            return this;\r\n        }\r\n\r\n        const { u0, u1, v0, v1 } = frame;\r\n\r\n        const F32 = this.vertexViewF32;\r\n        const U32 = this.vertexViewU32;\r\n        const offset = this.count * 24;\r\n        const textureIndex = (this.texture.binding) ? this.texture.binding.index : 0;\r\n\r\n        //  top left\r\n        F32[offset + 0] = x0;\r\n        F32[offset + 1] = y0;\r\n        F32[offset + 2] = u0;\r\n        F32[offset + 3] = v0;\r\n        F32[offset + 4] = textureIndex;\r\n        U32[offset + 5] = color;\r\n\r\n        //  bottom left\r\n        F32[offset + 6] = x1;\r\n        F32[offset + 7] = y1;\r\n        F32[offset + 8] = u0;\r\n        F32[offset + 9] = v1;\r\n        F32[offset + 10] = textureIndex;\r\n        U32[offset + 11] = color;\r\n\r\n        //  bottom right\r\n        F32[offset + 12] = x2;\r\n        F32[offset + 13] = y2;\r\n        F32[offset + 14] = u1;\r\n        F32[offset + 15] = v1;\r\n        F32[offset + 16] = textureIndex;\r\n        U32[offset + 17] = color;\r\n\r\n        //  top right\r\n        F32[offset + 18] = x3;\r\n        F32[offset + 19] = y3;\r\n        F32[offset + 20] = u1;\r\n        F32[offset + 21] = v0;\r\n        F32[offset + 22] = textureIndex;\r\n        U32[offset + 23] = color;\r\n\r\n        this.setDirty(DIRTY_CONST.TRANSFORM);\r\n\r\n        this.count++;\r\n\r\n        return this;\r\n    }\r\n\r\n    add (config: SpriteBatchAddConfig): this\r\n    {\r\n        const {\r\n            frame = null,\r\n            x = 0,\r\n            y = 0,\r\n            rotation = 0,\r\n            scaleX = 1,\r\n            scaleY = 1,\r\n            skewX = 0,\r\n            skewY = 0,\r\n            originX = 0,\r\n            originY = 0,\r\n            alpha = 1,\r\n            tint = 0xffffff\r\n        } = config;\r\n\r\n        const textureFrame = this.texture.getFrame(frame);\r\n\r\n        const { left, right, top, bottom } = textureFrame.getExtent(originX, originY);\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVerticesFromValues(left, right, top, bottom, x, y, rotation, scaleX, scaleY, skewX, skewY);\r\n\r\n        const packedColor = PackColor(tint, alpha);\r\n\r\n        return this.addToBatch(textureFrame, packedColor, x0, y0, x1, y1, x2, y2, x3, y3);\r\n    }\r\n\r\n    addXY (x: number, y: number, frame?: string | number): this\r\n    {\r\n        const textureFrame = this.texture.getFrame(frame);\r\n\r\n        const { left, right, top, bottom } = textureFrame.getExtent(0, 0);\r\n        const { x0, y0, x1, y1, x2, y2, x3, y3 } = GetVerticesFromValues(left, right, top, bottom, x, y);\r\n\r\n        return this.addToBatch(textureFrame, 4294967295, x0, y0, x1, y1, x2, y2, x3, y3);\r\n    }\r\n\r\n    updateTextureIndex (): void\r\n    {\r\n        const textureIndex = this.texture.binding.index;\r\n\r\n        if (textureIndex === this.glTextureIndex)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const F32 = this.vertexViewF32;\r\n\r\n        this.glTextureIndex = textureIndex;\r\n\r\n        for (let i = 0; i < this.count; i++)\r\n        {\r\n            F32[(i * 24) + 4] = textureIndex;\r\n            F32[(i * 24) + 10] = textureIndex;\r\n            F32[(i * 24) + 16] = textureIndex;\r\n            F32[(i * 24) + 22] = textureIndex;\r\n        }\r\n    }\r\n\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        BatchTexturedQuadBuffer(this, renderPass);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        super.destroy();\r\n\r\n        DeleteFramebuffer(this.vertexBuffer);\r\n        DeleteFramebuffer(this.indexBuffer);\r\n\r\n        this.data = null;\r\n        this.vertexViewF32 = null;\r\n        this.vertexViewU32 = null;\r\n        this.index = null;\r\n        this.texture = null;\r\n        this.hasTexture = false;\r\n    }\r\n}\r\n","export function CreateCanvas (width: number, height: number): CanvasRenderingContext2D\r\n{\r\n    const canvas = document.createElement('canvas');\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    return canvas.getContext('2d');\r\n}\r\n","import { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function CanvasTexture (width: number = 32, height: number = 32): Texture\r\n{\r\n    const ctx = CreateCanvas(width, height);\r\n\r\n    return new Texture(ctx.canvas);\r\n}\r\n","import { CanvasTexture } from '../../textures/types/CanvasTexture';\r\nimport { DIRTY_CONST } from '../DIRTY_CONST';\r\nimport { GameInstance } from '../../GameInstance';\r\nimport { IContainer } from '../container/IContainer';\r\nimport { Sprite } from '../sprite/Sprite';\r\n\r\nexport type VerticalTextAlignment = 'ascent' | 'lineheight';\r\n\r\nexport class Text extends Sprite\r\n{\r\n    private _text: string;\r\n\r\n    preRenderCallback: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void;\r\n    wordWrapCallback: (text: string) => string;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n    splitRegExp: RegExp = /(?:\\r\\n|\\r|\\n)/;\r\n    padding = { left: 0, right: 0, top: 0, bottom: 0 };\r\n    verticalAlign: VerticalTextAlignment = 'ascent';\r\n    lineSpacing: number = 0;\r\n    resolution: number;\r\n    font: string = '16px monospace';\r\n    fillStyle: string | CanvasGradient | CanvasPattern = '#fff';\r\n    strokeStyle: string | CanvasGradient | CanvasPattern = '';\r\n    backgroundStyle: string | CanvasGradient | CanvasPattern = '';\r\n    cornerRadius: number = 0;\r\n    textAlign: CanvasTextAlign = 'left';\r\n    textBaseline: CanvasTextBaseline = 'alphabetic';\r\n    lineWidth: number = 0;\r\n    lineDash: number[] = [];\r\n    fixedWidth: number;\r\n    fixedHeight: number;\r\n    antialias: boolean = false;\r\n\r\n    constructor (x: number, y: number, text: string | string[] = '', font?: string, fillStyle?: string | CanvasGradient | CanvasPattern)\r\n    {\r\n        super(x, y, CanvasTexture());\r\n\r\n        this.type = 'Text';\r\n\r\n        const game = GameInstance.get();\r\n\r\n        this.resolution = game.renderer.resolution;\r\n\r\n        this.canvas = this.texture.image as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        // this.texture.glTexture = CreateGLTexture(this.canvas, 32, 32, false, this.antialias);\r\n\r\n        if (font)\r\n        {\r\n            this.font = font;\r\n        }\r\n\r\n        if (fillStyle)\r\n        {\r\n            this.fillStyle = fillStyle;\r\n        }\r\n\r\n        this.setText(text);\r\n    }\r\n\r\n    private syncContext (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D): void\r\n    {\r\n        if (this.preRenderCallback)\r\n        {\r\n            this.preRenderCallback(canvas, ctx);\r\n        }\r\n\r\n        ctx.font = this.font;\r\n        ctx.textBaseline = this.textBaseline;\r\n        ctx.textAlign = this.textAlign;\r\n        ctx.fillStyle = this.fillStyle;\r\n        ctx.strokeStyle = this.strokeStyle;\r\n        ctx.lineWidth = this.lineWidth;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineJoin = 'round';\r\n        ctx.setLineDash(this.lineDash);\r\n        ctx.imageSmoothingEnabled = this.antialias;\r\n\r\n        //  TODO Shadows\r\n    }\r\n\r\n    updateText (): this\r\n    {\r\n        const canvas = this.canvas;\r\n        const ctx = this.context;\r\n        const resolution = this.resolution;\r\n\r\n        const lines = this._text.split(this.splitRegExp);\r\n\r\n        const padding = this.padding;\r\n        const fillStyle = this.fillStyle;\r\n        const strokeStyle = this.strokeStyle;\r\n        const strokeWidth = this.lineWidth;\r\n        const lineSpacing = this.lineSpacing;\r\n        const strokeWidthHalf = (strokeWidth > 0) ? strokeWidth / 2 : 0;\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        this.syncContext(canvas, ctx);\r\n\r\n        //  Use specifically for measureText\r\n        ctx.textAlign = 'start';\r\n\r\n        //  Measure each line and add them together (note: measure text excludes stroke style!)\r\n\r\n        let maxWidth = 0;\r\n        let maxHeight = 0;\r\n        let y = 0;\r\n\r\n        const lineMetrics = [];\r\n\r\n        const vAlignAscent: boolean = (this.verticalAlign === 'ascent');\r\n\r\n        //  Work out an average line height for this font\r\n        const metrics = ctx.measureText('|MÉq');\r\n\r\n        const averageLineHeight: number = Math.ceil(Math.abs(metrics.actualBoundingBoxAscent) + Math.abs(metrics.actualBoundingBoxDescent)) + strokeWidth;\r\n\r\n        for (let i = 0; i < lines.length; i++)\r\n        {\r\n            const metrics = ctx.measureText(lines[i]);\r\n\r\n            const left = metrics.actualBoundingBoxLeft;\r\n            const right = metrics.actualBoundingBoxRight;\r\n            let ascent = metrics.actualBoundingBoxAscent;\r\n            let descent = metrics.actualBoundingBoxDescent;\r\n\r\n            //  Zero for a carriage-return, but we still need to add in the space\r\n            if ((!ascent && !descent) || lines[i] === '')\r\n            {\r\n                ascent = averageLineHeight;\r\n                descent = 0;\r\n            }\r\n\r\n            const lineWidth = Math.ceil(Math.abs(left) + Math.abs(right)) + strokeWidth;\r\n            const lineHeight = Math.ceil(Math.abs(ascent) + Math.abs(descent)) + strokeWidth;\r\n\r\n            if (vAlignAscent)\r\n            {\r\n                y += ascent + strokeWidthHalf;\r\n\r\n                if (i > 0)\r\n                {\r\n                    y += lineSpacing + strokeWidthHalf;\r\n                }\r\n\r\n                maxHeight = y + descent + strokeWidthHalf;\r\n            }\r\n            else\r\n            {\r\n                y = maxHeight + ((lineHeight - descent) - strokeWidthHalf);\r\n\r\n                maxHeight += lineHeight;\r\n\r\n                if (i < lines.length - 1)\r\n                {\r\n                    maxHeight += lineSpacing;\r\n                }\r\n            }\r\n\r\n            maxWidth = Math.max(maxWidth, lineWidth);\r\n\r\n            lineMetrics.push({ lineWidth, lineHeight, ascent, descent, left, right, y });\r\n        }\r\n\r\n        //  Account for lineSpacing + padding\r\n        maxWidth += padding.left + padding.right;\r\n        maxHeight += padding.top + padding.bottom;\r\n\r\n        const displayWidth = (this.fixedWidth) ? this.fixedWidth : maxWidth;\r\n        const displayHeight = (this.fixedHeight) ? this.fixedHeight : maxHeight;\r\n\r\n        const canvasWidth = Math.ceil(displayWidth * resolution);\r\n        const canvasHeight = Math.ceil(displayHeight * resolution);\r\n\r\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight)\r\n        {\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n\r\n            this.texture.setSize(displayWidth, displayHeight);\r\n            this.setSize(displayWidth, displayHeight);\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.scale(resolution, resolution);\r\n\r\n        this.syncContext(canvas, ctx);\r\n\r\n        const backgroundStyle = this.backgroundStyle;\r\n\r\n        if (backgroundStyle)\r\n        {\r\n            ctx.save();\r\n\r\n            ctx.fillStyle = backgroundStyle;\r\n            ctx.strokeStyle = backgroundStyle;\r\n\r\n            const cornerRadius = this.cornerRadius;\r\n            const halfRadius = (cornerRadius > 0) ? cornerRadius / 2 : 0;\r\n\r\n            if (cornerRadius)\r\n            {\r\n                ctx.lineWidth = cornerRadius;\r\n\r\n                ctx.strokeRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\r\n            }\r\n\r\n            ctx.fillRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\r\n\r\n            ctx.restore();\r\n        }\r\n\r\n        //  Text Alignment\r\n        const textAlign = this.textAlign;\r\n        const isCenter: boolean = (textAlign === 'center');\r\n        const isRight: boolean = (textAlign === 'right' || textAlign === 'end');\r\n\r\n        const yOffset = ((displayHeight - maxHeight) / 2) + padding.top;\r\n\r\n        for (let i = 0; i < lines.length; i++)\r\n        {\r\n            const line = lines[i];\r\n            const metrics = lineMetrics[i];\r\n\r\n            let tx = padding.left + metrics.left + strokeWidthHalf;\r\n            const ty = yOffset + metrics.y;\r\n\r\n            if (isCenter)\r\n            {\r\n                tx = displayWidth / 2;\r\n            }\r\n            else if (isRight)\r\n            {\r\n                tx = displayWidth - strokeWidthHalf;\r\n            }\r\n\r\n            if (strokeStyle)\r\n            {\r\n                ctx.strokeText(line, tx, ty);\r\n            }\r\n\r\n            if (fillStyle)\r\n            {\r\n                ctx.fillText(line, tx, ty);\r\n            }\r\n        }\r\n\r\n        ctx.restore();\r\n\r\n        if (this.texture.binding)\r\n        {\r\n            this.texture.binding.update();\r\n        }\r\n\r\n        this.setDirty(DIRTY_CONST.TEXTURE);\r\n\r\n        return this;\r\n    }\r\n\r\n    get text (): string | string[]\r\n    {\r\n        return this._text;\r\n    }\r\n\r\n    set text (value: string | string[])\r\n    {\r\n        this.setText(value);\r\n    }\r\n\r\n    setText (value: string | string[] = ''): this\r\n    {\r\n        if (Array.isArray(value))\r\n        {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text)\r\n        {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    destroy (reparentChildren?: IContainer): void\r\n    {\r\n        this.texture.destroy();\r\n\r\n        this.fillStyle = null;\r\n        this.strokeStyle = null;\r\n        this.backgroundStyle = null;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        super.destroy(reparentChildren);\r\n    }\r\n}\r\n","import { Forward, Right, Up, Vec3, Vec3Callback } from '../../../math/vec3';\r\nimport { FromRotationTranslationScale, Invert, Matrix4, Transpose } from '../../../math/mat4';\r\nimport { Quaternion, RotateX, RotateY, RotateZ } from '../../../math/quaternion';\r\n\r\nimport { DIRTY_CONST } from '../../../gameobjects/DIRTY_CONST';\r\nimport { IGameObject3D } from '../../IGameObject3D';\r\n\r\nexport class Transform3DComponent\r\n{\r\n    entity: IGameObject3D;\r\n\r\n    local: Matrix4;\r\n    world: Matrix4;\r\n    normal: Matrix4;\r\n\r\n    position: Vec3Callback;\r\n    scale: Vec3Callback;\r\n    origin: Vec3Callback;\r\n    rotation: Quaternion;\r\n\r\n    forward: Vec3;\r\n    up: Vec3;\r\n    right: Vec3;\r\n\r\n    passthru: boolean = false;\r\n\r\n    constructor (entity: IGameObject3D, x: number = 0, y: number = 0, z: number = 0)\r\n    {\r\n        this.entity = entity;\r\n\r\n        this.local = new Matrix4();\r\n        this.world = new Matrix4();\r\n        this.normal = new Matrix4();\r\n\r\n        this.position = new Vec3Callback(() => this.update(), x, y, z);\r\n        this.scale = new Vec3Callback(() => this.update(), 1, 1, 1);\r\n        this.origin = new Vec3Callback(() => this.update());\r\n        this.rotation = new Quaternion();\r\n\r\n        this.rotation.onChange = () => this.update();\r\n\r\n        this.forward = Forward();\r\n        this.up = Up();\r\n        this.right = Right();\r\n\r\n        this.update();\r\n    }\r\n\r\n    rotateX (angle: number): void\r\n    {\r\n        RotateX(this.rotation, angle, this.rotation);\r\n    }\r\n\r\n    rotateY (angle: number): void\r\n    {\r\n        RotateY(this.rotation, angle, this.rotation);\r\n    }\r\n\r\n    rotateZ (angle: number): void\r\n    {\r\n        RotateZ(this.rotation, angle, this.rotation);\r\n    }\r\n\r\n    update (): void\r\n    {\r\n        const model = this.local;\r\n        const normal = this.normal;\r\n\r\n        FromRotationTranslationScale(this.rotation, this.position, this.scale, model);\r\n\r\n        Invert(model, normal);\r\n        Transpose(normal, normal);\r\n    }\r\n\r\n    updateLocal (): void\r\n    {\r\n        this.entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n\r\n        // UpdateLocalTransform(this);\r\n    }\r\n\r\n    updateWorld (): void\r\n    {\r\n        const entity = this.entity;\r\n\r\n        entity.setDirty(DIRTY_CONST.TRANSFORM, DIRTY_CONST.BOUNDS);\r\n\r\n        // UpdateWorldTransform(entity);\r\n\r\n        if (entity.numChildren)\r\n        {\r\n            this.updateChildren();\r\n        }\r\n    }\r\n\r\n    updateChildren (): void\r\n    {\r\n        //  Sweep all children - by this point our local and world transforms are correct\r\n        const children = this.entity.children;\r\n\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            const child = children[i];\r\n\r\n            // child.transform.updateWorld();\r\n        }\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.position.destroy();\r\n        this.scale.destroy();\r\n        this.origin.destroy();\r\n        this.rotation.destroy();\r\n\r\n        this.entity = null;\r\n        this.local = null;\r\n        this.world = null;\r\n        this.position = null;\r\n        this.scale = null;\r\n        this.origin = null;\r\n        this.rotation = null;\r\n    }\r\n}\r\n","import { VertexSet } from './VertexSet';\r\n\r\nexport function CreateVertexSet (): VertexSet\r\n{\r\n    return {\r\n        vertices: [],\r\n        normals: [],\r\n        uvs: [],\r\n        indices: [],\r\n        numberOfVertices: 0\r\n    };\r\n}\r\n","import { IVec2Like } from '../../math/vec2/IVec2Like';\r\nimport { IVec3Like } from '../../math/vec3/IVec3Like';\r\nimport { PackColor } from '../../renderer/webgl1';\r\nimport { Vertex } from '../../gameobjects/components';\r\n\r\nexport class FaceUVNormalTexture\r\n{\r\n    vertex1: Vertex;\r\n    vertex2: Vertex;\r\n    vertex3: Vertex;\r\n\r\n    normal1: IVec3Like;\r\n    normal2: IVec3Like;\r\n    normal3: IVec3Like;\r\n\r\n    color: number = 0xffffff;\r\n    alpha: number = 1;\r\n\r\n    size: number = 30;\r\n\r\n    private _packedColor: number;\r\n\r\n    constructor (v1: IVec3Like, v2: IVec3Like, v3: IVec3Like, n1: IVec3Like, n2: IVec3Like, n3: IVec3Like, uv1: IVec2Like, uv2: IVec2Like, uv3: IVec2Like, scale: number = 1)\r\n    {\r\n        this.vertex1 = new Vertex(v1.x * scale, v1.y * scale, v1.z * scale);\r\n        this.vertex2 = new Vertex(v2.x * scale, v2.y * scale, v2.z * scale);\r\n        this.vertex3 = new Vertex(v3.x * scale, v3.y * scale, v3.z * scale);\r\n\r\n        this.vertex1.setUV(uv1.x, uv1.y);\r\n        this.vertex2.setUV(uv2.x, uv2.y);\r\n        this.vertex3.setUV(uv3.x, uv3.y);\r\n\r\n        this.normal1 = n1;\r\n        this.normal2 = n2;\r\n        this.normal3 = n3;\r\n\r\n        this._packedColor = PackColor(this.color, this.alpha);\r\n    }\r\n\r\n    setColor (color: number, alpha: number = 1): void\r\n    {\r\n        this.color = color;\r\n        this.alpha = alpha;\r\n\r\n        this._packedColor = PackColor(color, alpha);\r\n    }\r\n\r\n    addToBuffer (F32: Float32Array, U32: Uint32Array, textureID: number, offset: number): number\r\n    {\r\n        const v1 = this.vertex1;\r\n        const v2 = this.vertex2;\r\n        const v3 = this.vertex3;\r\n\r\n        const n1 = this.normal1;\r\n        const n2 = this.normal2;\r\n        const n3 = this.normal3;\r\n\r\n        const color = this._packedColor;\r\n\r\n        F32[offset++] = v1.x;\r\n        F32[offset++] = v1.y;\r\n        F32[offset++] = v1.z;\r\n        F32[offset++] = n1.x;\r\n        F32[offset++] = n1.y;\r\n        F32[offset++] = n1.z;\r\n        F32[offset++] = v1.u;\r\n        F32[offset++] = v1.v;\r\n        F32[offset++] = textureID;\r\n        U32[offset++] = color;\r\n\r\n        F32[offset++] = v2.x;\r\n        F32[offset++] = v2.y;\r\n        F32[offset++] = v2.z;\r\n        F32[offset++] = n2.x;\r\n        F32[offset++] = n2.y;\r\n        F32[offset++] = n2.z;\r\n        F32[offset++] = v2.u;\r\n        F32[offset++] = v2.v;\r\n        F32[offset++] = textureID;\r\n        U32[offset++] = color;\r\n\r\n        F32[offset++] = v3.x;\r\n        F32[offset++] = v3.y;\r\n        F32[offset++] = v3.z;\r\n        F32[offset++] = n3.x;\r\n        F32[offset++] = n3.y;\r\n        F32[offset++] = n3.z;\r\n        F32[offset++] = v3.u;\r\n        F32[offset++] = v3.v;\r\n        F32[offset++] = textureID;\r\n        U32[offset++] = color;\r\n\r\n        return offset;\r\n    }\r\n}\r\n","import { VertexBuffer } from '../../renderer/webgl1/buffers';\r\nimport { VertexSet } from './VertexSet';\r\n\r\nfunction GetVec3 (data: number[], index: number): number[]\r\n{\r\n    const x = data[ (index * 3) + 0 ];\r\n    const y = data[ (index * 3) + 1 ];\r\n    const z = data[ (index * 3) + 2 ];\r\n\r\n    return [ x, y, z ];\r\n}\r\n\r\nfunction GetVec2 (data: number[], index: number): number[]\r\n{\r\n    const x = data[ (index * 2) + 0 ];\r\n    const y = data[ (index * 2) + 1 ];\r\n\r\n    return [ x, y ];\r\n}\r\n\r\nfunction CreateNonIndexedVertexBuffer (data: VertexSet): VertexBuffer\r\n{\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs\r\n    } = data;\r\n\r\n    // console.log(vertices);\r\n    // console.log(normals);\r\n    // console.log(uvs);\r\n\r\n    const total = vertices.length;\r\n    const count = total / 3;\r\n    const batchSize = count / 3;\r\n\r\n    const buffer = new VertexBuffer({ batchSize, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3 });\r\n\r\n    const F32 = buffer.vertexViewF32;\r\n\r\n    let offset = 0;\r\n    let uvIndex = 0;\r\n\r\n    for (let i = 0; i < total; i += 3)\r\n    {\r\n        F32[offset++] = vertices[i + 0];\r\n        F32[offset++] = vertices[i + 1];\r\n        F32[offset++] = vertices[i + 2];\r\n        F32[offset++] = normals[i + 0];\r\n        F32[offset++] = normals[i + 1];\r\n        F32[offset++] = normals[i + 2];\r\n        F32[offset++] = uvs[uvIndex + 0];\r\n        F32[offset++] = uvs[uvIndex + 1];\r\n\r\n        uvIndex += 2;\r\n    }\r\n\r\n    buffer.count = count;\r\n\r\n    return buffer;\r\n}\r\n\r\nfunction CreateVertexBuffer (data: VertexSet): VertexBuffer\r\n{\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs,\r\n        indices\r\n    } = data;\r\n\r\n    // console.log(vertices);\r\n    // console.log(normals);\r\n    // console.log(uvs);\r\n    // console.log(indices);\r\n\r\n    const buffer = new VertexBuffer({ batchSize: indices.length / 3, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3 });\r\n\r\n    const F32 = buffer.vertexViewF32;\r\n\r\n    let offset = 0;\r\n\r\n    for (let i = 0; i < indices.length; i += 3)\r\n    {\r\n        const i1 = indices[i + 0];\r\n        const i2 = indices[i + 1];\r\n        const i3 = indices[i + 2];\r\n\r\n        const v1 = GetVec3(vertices, i1);\r\n        const v2 = GetVec3(vertices, i2);\r\n        const v3 = GetVec3(vertices, i3);\r\n\r\n        const n1 = GetVec3(normals, i1);\r\n        const n2 = GetVec3(normals, i2);\r\n        const n3 = GetVec3(normals, i3);\r\n\r\n        const uv1 = GetVec2(uvs, i1);\r\n        const uv2 = GetVec2(uvs, i2);\r\n        const uv3 = GetVec2(uvs, i3);\r\n\r\n        F32[offset++] = v1[0];\r\n        F32[offset++] = v1[1];\r\n        F32[offset++] = v1[2];\r\n        F32[offset++] = n1[0];\r\n        F32[offset++] = n1[1];\r\n        F32[offset++] = n1[2];\r\n        F32[offset++] = uv1[0];\r\n        F32[offset++] = uv1[1];\r\n\r\n        F32[offset++] = v2[0];\r\n        F32[offset++] = v2[1];\r\n        F32[offset++] = v2[2];\r\n        F32[offset++] = n2[0];\r\n        F32[offset++] = n2[1];\r\n        F32[offset++] = n2[2];\r\n        F32[offset++] = uv2[0];\r\n        F32[offset++] = uv2[1];\r\n\r\n        F32[offset++] = v3[0];\r\n        F32[offset++] = v3[1];\r\n        F32[offset++] = v3[2];\r\n        F32[offset++] = n3[0];\r\n        F32[offset++] = n3[1];\r\n        F32[offset++] = n3[2];\r\n        F32[offset++] = uv3[0];\r\n        F32[offset++] = uv3[1];\r\n    }\r\n\r\n    buffer.count = indices.length;\r\n\r\n    return buffer;\r\n}\r\n\r\nexport function GetBufferFromVertexSet (data: VertexSet): VertexBuffer\r\n{\r\n    if (data.indices && data.indices.length > 0)\r\n    {\r\n        return CreateVertexBuffer(data);\r\n    }\r\n    else\r\n    {\r\n        return CreateNonIndexedVertexBuffer(data);\r\n    }\r\n}\r\n","import { GetBufferFromVertexSet } from './GetBufferFromVertexSet';\r\nimport { IIndexedVertexBuffer } from '../../renderer/webgl1/buffers/IIndexedVertexBuffer';\r\nimport { IVertexBuffer } from '../../renderer/webgl1/buffers/IVertexBuffer';\r\nimport { VertexSet } from './VertexSet';\r\n\r\nexport class Geometry\r\n{\r\n    buffer: IVertexBuffer | IIndexedVertexBuffer;\r\n\r\n    constructor (data?: VertexSet | IVertexBuffer)\r\n    {\r\n        if (data)\r\n        {\r\n            if (data.hasOwnProperty('vertices'))\r\n            {\r\n                this.buffer = GetBufferFromVertexSet(data as VertexSet);\r\n            }\r\n            else\r\n            {\r\n                this.buffer = data as IVertexBuffer;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.buffer.destroy();\r\n    }\r\n}\r\n","export interface IParseObjResult\r\n{\r\n    models: IParseObjModel[];\r\n    materialLibraries: string[];\r\n}\r\n\r\nexport interface IParseObjModel\r\n{\r\n    name: string;\r\n    vertices: IParseObjVertex[];\r\n    textureCoords: IParseObjTextureVertex[];\r\n    vertexNormals: IParseObjVertex[];\r\n    faces: IParseObjFace[];\r\n}\r\n\r\nexport interface IParseObjFace\r\n{\r\n    material: string;\r\n    group: string;\r\n    smoothingGroup: number;\r\n    vertices: IParseObjFaceVertexIndicies[];\r\n}\r\n\r\nexport interface IParseObjFaceVertexIndicies\r\n{\r\n    vertexIndex: number;\r\n    textureCoordsIndex: number;\r\n    vertexNormalIndex: number;\r\n}\r\n\r\nexport interface IParseObjVertex\r\n{\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\nexport interface IParseObjTextureVertex\r\n{\r\n    u: number;\r\n    v: number;\r\n    w: number;\r\n}\r\n\r\n//  Make sure your Obj files have been exported with 'Triangulate faces' enabled\r\n\r\nexport class ParseObj\r\n{\r\n    private fileContents: string;\r\n    private defaultModelName: string;\r\n    private currentMaterial: string = '';\r\n    private currentGroup: string = '';\r\n    private smoothingGroup: number = 0;\r\n\r\n    private result: IParseObjResult = {\r\n        materialLibraries: [],\r\n        models: []\r\n    };\r\n\r\n    private flipUVs: boolean;\r\n\r\n    constructor (fileContents: string, flipUVs: boolean = true, defaultModelName: string = 'untitled')\r\n    {\r\n        this.fileContents = fileContents;\r\n        this.defaultModelName = defaultModelName;\r\n        this.flipUVs = flipUVs;\r\n    }\r\n\r\n    parseAsync (): Promise<IParseObjResult>\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            try\r\n            {\r\n                resolve(this.parse());\r\n            }\r\n            catch (theError)\r\n            {\r\n                reject(theError);\r\n            }\r\n        });\r\n    }\r\n\r\n    parse (): IParseObjResult\r\n    {\r\n        const stripComments = (line: string) =>\r\n        {\r\n            const commentIndex = line.indexOf('#');\r\n\r\n            if (commentIndex > -1)\r\n            {\r\n                return line.substring(0, commentIndex);\r\n            }\r\n\r\n            return line;\r\n        };\r\n\r\n        const lines = this.fileContents.split('\\n');\r\n\r\n        for (const line of lines)\r\n        {\r\n            const strippedline = stripComments(line);\r\n\r\n            const lineItems = strippedline\r\n                .replace(/\\s\\s+/g, ' ')\r\n                .trim()\r\n                .split(' ');\r\n\r\n            switch (lineItems[0].toLowerCase())\r\n            {\r\n                case 'o': // Start A New Model\r\n                    this.parseObject(lineItems);\r\n                    break;\r\n                case 'g': // Start a new polygon group\r\n                    this.parseGroup(lineItems);\r\n                    break;\r\n                case 'v': // Define a vertex for the current model\r\n                    this.parseVertexCoords(lineItems);\r\n                    break;\r\n                case 'vt': // Texture Coords\r\n                    this.parseTextureCoords(lineItems);\r\n                    break;\r\n                case 'vn': // Define a vertex normal for the current model\r\n                    this.parseVertexNormal(lineItems);\r\n                    break;\r\n                case 's': // Smooth shading statement\r\n                    this.parseSmoothShadingStatement(lineItems);\r\n                    break;\r\n                case 'f': // Define a Face/Polygon\r\n                    this.parsePolygon(lineItems);\r\n                    break;\r\n                case 'mtllib': // Reference to a material library file (.mtl)\r\n                    this.parseMtlLib(lineItems);\r\n                    break;\r\n                case 'usemtl': // Sets the current material to be applied to polygons defined from this point forward\r\n                    this.parseUseMtl(lineItems);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //  Free-up memory before returning\r\n        this.fileContents = '';\r\n\r\n        return this.result;\r\n    }\r\n\r\n    private currentModel (): IParseObjModel\r\n    {\r\n        if (this.result.models.length === 0)\r\n        {\r\n            this.result.models.push({\r\n                faces: [],\r\n                name: this.defaultModelName,\r\n                textureCoords: [],\r\n                vertexNormals: [],\r\n                vertices: []\r\n            });\r\n\r\n            this.currentGroup = '';\r\n            this.smoothingGroup = 0;\r\n        }\r\n\r\n        return this.result.models[this.result.models.length - 1];\r\n    }\r\n\r\n    private parseObject (lineItems: string[]): void\r\n    {\r\n        const modelName = lineItems.length >= 2 ? lineItems[1] : this.defaultModelName;\r\n\r\n        this.result.models.push({\r\n            faces: [],\r\n            name: modelName,\r\n            textureCoords: [],\r\n            vertexNormals: [],\r\n            vertices: []\r\n        });\r\n\r\n        this.currentGroup = '';\r\n        this.smoothingGroup = 0;\r\n    }\r\n\r\n    private parseGroup (lineItems: string[]): void\r\n    {\r\n        if (lineItems.length !== 2)\r\n        {\r\n            throw 'Group statements must have exactly 1 argument (eg. g group_1)';\r\n        }\r\n\r\n        this.currentGroup = lineItems[1];\r\n    }\r\n\r\n    private parseVertexCoords (lineItems: string[]): void\r\n    {\r\n        const len = lineItems.length;\r\n\r\n        const x = (len >= 2) ? parseFloat(lineItems[1]) : 0;\r\n        const y = (len >= 3) ? parseFloat(lineItems[2]) : 0;\r\n        const z = (len >= 4) ? parseFloat(lineItems[3]) : 0;\r\n\r\n        this.currentModel().vertices.push({ x, y, z });\r\n    }\r\n\r\n    private parseTextureCoords (lineItems: string[]): void\r\n    {\r\n        const len = lineItems.length;\r\n\r\n        let u = (len >= 2) ? parseFloat(lineItems[1]) : 0;\r\n        let v = (len >= 3) ? parseFloat(lineItems[2]) : 0;\r\n        let w = (len >= 4) ? parseFloat(lineItems[3]) : 0;\r\n\r\n        if (isNaN(u))\r\n        {\r\n            u = 0;\r\n        }\r\n\r\n        if (isNaN(v))\r\n        {\r\n            v = 0;\r\n        }\r\n\r\n        if (isNaN(w))\r\n        {\r\n            w = 0;\r\n        }\r\n\r\n        if (this.flipUVs)\r\n        {\r\n            v = 1 - v;\r\n        }\r\n\r\n        this.currentModel().textureCoords.push({ u, v, w });\r\n    }\r\n\r\n    private parseVertexNormal (lineItems: string[]): void\r\n    {\r\n        const len = lineItems.length;\r\n\r\n        const x = (len >= 2) ? parseFloat(lineItems[1]) : 0;\r\n        const y = (len >= 3) ? parseFloat(lineItems[2]) : 0;\r\n        const z = (len >= 4) ? parseFloat(lineItems[3]) : 0;\r\n\r\n        this.currentModel().vertexNormals.push({ x, y, z });\r\n    }\r\n\r\n    private parsePolygon (lineItems: string[]): void\r\n    {\r\n        const totalVertices = lineItems.length - 1;\r\n\r\n        if (totalVertices < 3)\r\n        {\r\n            throw 'Face < 3 vertices';\r\n        }\r\n\r\n        const face: IParseObjFace = {\r\n            group: this.currentGroup,\r\n            material: this.currentMaterial,\r\n            smoothingGroup: this.smoothingGroup,\r\n            vertices: []\r\n        };\r\n\r\n        for (let i = 0; i < totalVertices; i++)\r\n        {\r\n            const vertexString = lineItems[i + 1];\r\n            const vertexValues = vertexString.split('/');\r\n            const vvLen = vertexValues.length;\r\n\r\n            if (vvLen < 1 || vvLen > 3)\r\n            {\r\n                throw 'Too many / values for single vertex';\r\n            }\r\n\r\n            let vertexIndex = 0;\r\n            let textureCoordsIndex = 0;\r\n            let vertexNormalIndex = 0;\r\n\r\n            vertexIndex = parseInt(vertexValues[0], 10);\r\n\r\n            if (vvLen > 1 && vertexValues[1] !== '')\r\n            {\r\n                textureCoordsIndex = parseInt(vertexValues[1], 10);\r\n            }\r\n\r\n            if (vvLen > 2)\r\n            {\r\n                vertexNormalIndex = parseInt(vertexValues[2], 10);\r\n            }\r\n\r\n            if (vertexIndex === 0)\r\n            {\r\n                throw 'Faces uses invalid vertex index of 0';\r\n            }\r\n\r\n            // Negative vertex indices refer to the nth last defined vertex\r\n            // convert these to postive indices for simplicity\r\n            if (vertexIndex < 0)\r\n            {\r\n                vertexIndex = this.currentModel().vertices.length + 1 + vertexIndex;\r\n            }\r\n\r\n            textureCoordsIndex -= 1;\r\n            vertexIndex -= 1;\r\n            vertexNormalIndex -= 1;\r\n\r\n            face.vertices.push({\r\n                textureCoordsIndex,\r\n                vertexIndex,\r\n                vertexNormalIndex\r\n            });\r\n        }\r\n\r\n        this.currentModel().faces.push(face);\r\n    }\r\n\r\n    private parseMtlLib (lineItems: string[]): void\r\n    {\r\n        if (lineItems.length >= 2)\r\n        {\r\n            this.result.materialLibraries.push(lineItems[1]);\r\n        }\r\n    }\r\n\r\n    private parseUseMtl (lineItems: string[]): void\r\n    {\r\n        if (lineItems.length >= 2)\r\n        {\r\n            this.currentMaterial = lineItems[1];\r\n        }\r\n    }\r\n\r\n    private parseSmoothShadingStatement (lineItems: string[]): void\r\n    {\r\n        if (lineItems.length !== 2)\r\n        {\r\n            throw 'Smoothing group statements must have exactly 1 argument (eg. s <number|off>)';\r\n        }\r\n\r\n        const groupNumber = lineItems[1].toLowerCase() === 'off' ? 0 : parseInt(lineItems[1], 10);\r\n\r\n        this.smoothingGroup = groupNumber;\r\n    }\r\n}\r\n","import { IVertexBuffer } from '../../renderer/webgl1/buffers/IVertexBuffer';\r\nimport { ParseObj } from './ParseObj';\r\nimport { VertexBuffer } from '../../renderer/webgl1/buffers/VertexBuffer';\r\n\r\nexport type VertexBufferArray = {\r\n    name: string;\r\n    buffer: IVertexBuffer;\r\n};\r\n\r\nexport function GetBufferFromObj (data: string, flipUVs: boolean = true): VertexBufferArray[]\r\n{\r\n    const parser = new ParseObj(data, flipUVs);\r\n\r\n    const result = parser.parse();\r\n\r\n    const output: VertexBufferArray[] = [];\r\n\r\n    result.models.forEach(model =>\r\n    {\r\n        const {\r\n            faces,\r\n            textureCoords,\r\n            vertexNormals,\r\n            vertices\r\n        } = model;\r\n\r\n        const buffer = new VertexBuffer({ batchSize: faces.length, isDynamic: false, vertexElementSize: 8, elementsPerEntry: 3 });\r\n\r\n        const F32 = buffer.vertexViewF32;\r\n\r\n        let offset = 0;\r\n\r\n        for (let i = 0; i < faces.length; i++)\r\n        {\r\n            const face = faces[i];\r\n\r\n            const i1 = face.vertices[0];\r\n            const i2 = face.vertices[1];\r\n            const i3 = face.vertices[2];\r\n\r\n            const v1 = vertices[i1.vertexIndex];\r\n            const v2 = vertices[i2.vertexIndex];\r\n            const v3 = vertices[i3.vertexIndex];\r\n\r\n            const n1 = vertexNormals[i1.vertexNormalIndex];\r\n            const n2 = vertexNormals[i2.vertexNormalIndex];\r\n            const n3 = vertexNormals[i3.vertexNormalIndex];\r\n\r\n            const uv1 = textureCoords[i1.textureCoordsIndex];\r\n            const uv2 = textureCoords[i2.textureCoordsIndex];\r\n            const uv3 = textureCoords[i3.textureCoordsIndex];\r\n\r\n            F32[offset++] = v1.x;\r\n            F32[offset++] = v1.y;\r\n            F32[offset++] = v1.z;\r\n            F32[offset++] = n1.x;\r\n            F32[offset++] = n1.y;\r\n            F32[offset++] = n1.z;\r\n            F32[offset++] = uv1.u;\r\n            F32[offset++] = uv1.v;\r\n\r\n            F32[offset++] = v2.x;\r\n            F32[offset++] = v2.y;\r\n            F32[offset++] = v2.z;\r\n            F32[offset++] = n2.x;\r\n            F32[offset++] = n2.y;\r\n            F32[offset++] = n2.z;\r\n            F32[offset++] = uv2.u;\r\n            F32[offset++] = uv2.v;\r\n\r\n            F32[offset++] = v3.x;\r\n            F32[offset++] = v3.y;\r\n            F32[offset++] = v3.z;\r\n            F32[offset++] = n3.x;\r\n            F32[offset++] = n3.y;\r\n            F32[offset++] = n3.z;\r\n            F32[offset++] = uv3.u;\r\n            F32[offset++] = uv3.v;\r\n        }\r\n\r\n        buffer.count = faces.length * 3;\r\n\r\n        output.push({ name: model.name, buffer });\r\n\r\n    });\r\n\r\n    return output;\r\n}\r\n","import { FaceUVNormalTexture } from './FaceUVNormalTexture';\r\nimport { IFace } from './IFace';\r\nimport { VertexSet } from './VertexSet';\r\n\r\nfunction GetVec3 (data: number[], index: number): number[]\r\n{\r\n    const x = data[ (index * 3) + 0 ];\r\n    const y = data[ (index * 3) + 1 ];\r\n    const z = data[ (index * 3) + 2 ];\r\n\r\n    return [ x, y, z ];\r\n}\r\n\r\nfunction GetVec2 (data: number[], index: number): number[]\r\n{\r\n    const x = data[ (index * 2) + 0 ];\r\n    const y = data[ (index * 2) + 1 ];\r\n\r\n    return [ x, y ];\r\n}\r\n\r\nexport function GetFacesFromVertexSet (data: VertexSet): IFace[]\r\n{\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs,\r\n        indices\r\n    } = data;\r\n\r\n    // console.log(vertices);\r\n    // console.log(normals);\r\n    // console.log(uvs);\r\n    // console.log(indices);\r\n\r\n    const faces = [];\r\n\r\n    for (let i = 0; i < indices.length; i += 3)\r\n    {\r\n        const i1 = indices[i + 0];\r\n        const i2 = indices[i + 1];\r\n        const i3 = indices[i + 2];\r\n\r\n        const v1 = GetVec3(vertices, i1);\r\n        const v2 = GetVec3(vertices, i2);\r\n        const v3 = GetVec3(vertices, i3);\r\n\r\n        const n1 = GetVec3(normals, i1);\r\n        const n2 = GetVec3(normals, i2);\r\n        const n3 = GetVec3(normals, i3);\r\n\r\n        const uv1 = GetVec2(uvs, i1);\r\n        const uv2 = GetVec2(uvs, i2);\r\n        const uv3 = GetVec2(uvs, i3);\r\n\r\n        const f = new FaceUVNormalTexture(\r\n            { x: v1[0], y: v1[1], z: v1[2] },\r\n            { x: v2[0], y: v2[1], z: v2[2] },\r\n            { x: v3[0], y: v3[1], z: v3[2] },\r\n            { x: n1[0], y: n1[1], z: n1[2] },\r\n            { x: n2[0], y: n2[1], z: n2[2] },\r\n            { x: n3[0], y: n3[1], z: n3[2] },\r\n            { x: uv1[0], y: uv1[1] },\r\n            { x: uv2[0], y: uv2[1] },\r\n            { x: uv3[0], y: uv3[1] },\r\n            1\r\n        );\r\n\r\n        faces.push(f);\r\n    }\r\n\r\n    return faces;\r\n}\r\n","import { CreateVertexSet } from '../gameobjects3d/geometry/CreateVertexSet';\r\nimport { VertexSet } from '../gameobjects3d/geometry/VertexSet';\r\n\r\nexport function PlaneGeometry (data?: VertexSet, x: number = 0, y: number = 0, z: number = 0, u: number = 0, v: number = 1, w: number = 2, udir: number = 1, vdir: number = -1, width: number = 1, height: number = 1, depth: number = 1, gridX: number = 1, gridY: number = 1): VertexSet\r\n{\r\n    if (!data)\r\n    {\r\n        data = CreateVertexSet();\r\n    }\r\n\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs,\r\n        indices,\r\n        numberOfVertices\r\n    } = data;\r\n\r\n    const segmentWidth = width / gridX;\r\n    const segmentHeight = height / gridY;\r\n\r\n    const widthHalf = width / 2;\r\n    const heightHalf = height / 2;\r\n    const depthHalf = depth / 2;\r\n\r\n    const gridX1 = gridX + 1;\r\n    const gridY1 = gridY + 1;\r\n\r\n    let vertexCounter = 0;\r\n\r\n    const vector = [];\r\n\r\n    // generate vertices, normals and uvs\r\n\r\n    for (let iy = 0; iy < gridY1; iy++)\r\n    {\r\n        const by = iy * segmentHeight - heightHalf;\r\n\r\n        for (let ix = 0; ix < gridX1; ix++)\r\n        {\r\n            const bx = ix * segmentWidth - widthHalf;\r\n\r\n            // set values to correct vector component\r\n\r\n            vector[ u ] = bx * udir;\r\n            vector[ v ] = by * vdir;\r\n            vector[ w ] = depthHalf;\r\n\r\n            // now apply vector to vertex buffer\r\n            vertices.push(x + vector[0], y + vector[1], z + vector[2]);\r\n\r\n            // set values to correct vector component\r\n\r\n            vector[ u ] = 0;\r\n            vector[ v ] = 0;\r\n            vector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n            // now apply vector to normal buffer\r\n            normals.push(vector[0], vector[1], vector[2]);\r\n\r\n            // uvs\r\n\r\n            uvs.push(ix / gridX);\r\n            uvs.push(1 - (iy / gridY));\r\n\r\n            // counters\r\n\r\n            vertexCounter += 1;\r\n        }\r\n    }\r\n\r\n    // indices\r\n\r\n    // 1. you need three indices to draw a single face\r\n    // 2. a single segment consists of two faces\r\n    // 3. so we need to generate six (2*3) indices per segment\r\n\r\n    for (let iy = 0; iy < gridY; iy++)\r\n    {\r\n        for (let ix = 0; ix < gridX; ix++)\r\n        {\r\n            const a = numberOfVertices + ix + gridX1 * iy;\r\n            const b = numberOfVertices + ix + gridX1 * (iy + 1);\r\n            const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\r\n            const d = numberOfVertices + (ix + 1) + gridX1 * iy;\r\n\r\n            // faces\r\n\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d);\r\n        }\r\n    }\r\n\r\n    // update total number of vertices\r\n    data.numberOfVertices += vertexCounter;\r\n\r\n    return data;\r\n}\r\n","import { CreateVertexSet } from '../gameobjects3d/geometry/CreateVertexSet';\r\nimport { PlaneGeometry } from './PlaneGeometry';\r\nimport { VertexSet } from '../gameobjects3d/geometry/VertexSet';\r\n\r\nexport function BoxGeometry (x: number = 0, y: number = 0, z: number = 0, width: number = 1, height: number = 1, depth: number = 1, widthSegments: number = 1, heightSegments: number = 1, depthSegments: number = 1): VertexSet\r\n{\r\n    const data = CreateVertexSet();\r\n\r\n    PlaneGeometry(data, x, y, z, 2, 1, 0, -1, -1, depth, height, width, depthSegments, heightSegments); // left\r\n    PlaneGeometry(data, x, y, z, 2, 1, 0, 1, -1, depth, height, -width, depthSegments, heightSegments); // right\r\n    PlaneGeometry(data, x, y, z, 0, 2, 1, 1, 1, width, depth, height, widthSegments, depthSegments); // top\r\n    PlaneGeometry(data, x, y, z, 0, 2, 1, 1, -1, width, depth, -height, widthSegments, depthSegments); // bottom\r\n    PlaneGeometry(data, x, y, z, 0, 1, 2, 1, -1, width, height, depth, widthSegments, heightSegments); // front\r\n    PlaneGeometry(data, x, y, z, 0, 1, 2, -1, -1, width, height, -depth, widthSegments, heightSegments); // rear\r\n\r\n    return data;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { DestroyEvent } from '../gameobjects/events';\r\nimport { Emit } from '../events';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { IBaseWorld3D } from '../world3d/IBaseWorld3D';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IGameObject3D } from './IGameObject3D';\r\nimport { IRenderPass } from '../renderer/webgl1/renderpass/IRenderPass';\r\nimport { Transform3DComponent } from './components/transform3d/Transform3DComponent';\r\n\r\nexport class GameObject3D\r\n{\r\n    type: string = 'GameObject3D';\r\n    name: string = '';\r\n\r\n    //  The World this Game Object belongs to. A Game Object can only belong to one World instance at any one time.\r\n    world: IBaseWorld3D;\r\n\r\n    //  The direct parent of this Game Object in the scene graph (if any)\r\n    parent: IGameObject3D;\r\n\r\n    children: IGameObject3D[];\r\n\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    willUpdate: boolean = true;\r\n    willUpdateChildren: boolean = true;\r\n\r\n    willRender: boolean = true;\r\n    willRenderChildren: boolean = true;\r\n    willCacheChildren: boolean = false;\r\n\r\n    dirty: number = 0;\r\n    dirtyFrame: number = 0;\r\n\r\n    transform: Transform3DComponent;\r\n    // bounds: IBoundsComponent;\r\n    // input: IInputComponent;\r\n\r\n    visible: boolean = true;\r\n\r\n    constructor (x: number = 0, y: number = 0, z: number = 0)\r\n    {\r\n        this.children = [];\r\n\r\n        this.events = new Map();\r\n\r\n        this.transform = new Transform3DComponent(this, x, y, z);\r\n        // this.bounds = new BoundsComponent(this);\r\n        // this.input = new InputComponent(this);\r\n\r\n        this.dirty = DIRTY_CONST.DEFAULT;\r\n\r\n        // this.transform.update();\r\n    }\r\n\r\n    isRenderable (): boolean\r\n    {\r\n        return (this.visible && this.willRender);\r\n    }\r\n\r\n    isDirty (flag: number): boolean\r\n    {\r\n        return (this.dirty & flag) !== 0;\r\n    }\r\n\r\n    clearDirty (flag: number): this\r\n    {\r\n        if (this.isDirty(flag))\r\n        {\r\n            this.dirty ^= flag;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setDirty (flag: number, flag2?: number): this\r\n    {\r\n        if (!this.isDirty(flag))\r\n        {\r\n            this.dirty ^= flag;\r\n            this.dirtyFrame = GameInstance.getFrame();\r\n        }\r\n\r\n        if (!this.isDirty(flag2))\r\n        {\r\n            this.dirty ^= flag2;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        if (this.willUpdateChildren)\r\n        {\r\n            const children = this.children;\r\n\r\n            for (let i = 0; i < children.length; i++)\r\n            {\r\n                const child = children[i];\r\n\r\n                if (child && child.willUpdate)\r\n                {\r\n                    child.update(delta, time);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.postUpdate(delta, time);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postUpdate (delta: number, time: number): void\r\n    {\r\n        //  Empty for parent classes to use.\r\n        //  Called after this GameObject and all of its children have been updated.\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postRenderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        //  Called after this GameObject and all of its children have been rendered.\r\n        //  If it doesn't have any children, this method is never called.\r\n    }\r\n\r\n    get numChildren (): number\r\n    {\r\n        return this.children.length;\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject3D): void\r\n    {\r\n        if (reparentChildren)\r\n        {\r\n            // ReparentChildren(this, reparentChildren);\r\n        }\r\n        else\r\n        {\r\n            // DestroyChildren(this);\r\n        }\r\n\r\n        Emit(this, DestroyEvent, this);\r\n\r\n        this.transform.destroy();\r\n        // this.bounds.destroy();\r\n        // this.input.destroy();\r\n\r\n        this.events.clear();\r\n\r\n        this.world = null;\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\r\n","import { Clamp } from '../../math';\r\nimport { IShader } from '../../renderer/webgl1/shaders/IShader';\r\nimport { RGBCallback } from '../../math/vec3';\r\n\r\nexport type MaterialConfig = {\r\n    ambient?: number[];\r\n    diffuse?: number[];\r\n    specular?: number[];\r\n    shine?: number;\r\n};\r\n\r\nexport class Material\r\n{\r\n    ambient: RGBCallback;\r\n    diffuse: RGBCallback;\r\n    specular: RGBCallback;\r\n\r\n    isDirty: boolean = false;\r\n\r\n    private _shine: number;\r\n\r\n    constructor (config: MaterialConfig = {})\r\n    {\r\n        const {\r\n            ambient = [ 1, 1, 1 ],\r\n            diffuse = [ 1, 1, 1 ],\r\n            specular = [ 1, 1, 1 ],\r\n            shine = 0.25\r\n        } = config;\r\n\r\n        const onChange = () => this.update();\r\n\r\n        this.ambient = new RGBCallback(onChange).fromArray(ambient);\r\n        this.diffuse = new RGBCallback(onChange).fromArray(diffuse);\r\n        this.specular = new RGBCallback(onChange).fromArray(specular);\r\n\r\n        this._shine = shine;\r\n    }\r\n\r\n    get shine (): number\r\n    {\r\n        return this._shine;\r\n    }\r\n\r\n    set shine (value: number)\r\n    {\r\n        this._shine = Clamp(value, 0, 1);\r\n\r\n        this.isDirty = true;\r\n    }\r\n\r\n    private update (): void\r\n    {\r\n        this.isDirty = true;\r\n    }\r\n\r\n    setUniforms (shader: IShader): void\r\n    {\r\n        //  TODO - Only set if dirty (different to bound material?)\r\n\r\n        //  TODO - Don't use `toArray` !\r\n        shader.setUniform('uMaterialAmbient', this.ambient.toArray());\r\n        shader.setUniform('uMaterialDiffuse', this.diffuse.toArray());\r\n        shader.setUniform('uMaterialSpecular', this.specular.toArray());\r\n        shader.setUniform('uMaterialShine', this._shine * 256); // pow of 32\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.ambient.destroy();\r\n        this.diffuse.destroy();\r\n        this.specular.destroy();\r\n    }\r\n}\r\n","import { Frame } from '../../textures/Frame';\r\nimport { IMesh } from './IMesh';\r\nimport { Texture } from '../../textures';\r\n\r\nexport function SetFrame <T extends IMesh> (texture: Texture, key?: string | number | Frame, ...children: T[]): T[]\r\n{\r\n    const frame = texture.getFrame(key);\r\n\r\n    children.forEach(child =>\r\n    {\r\n        if (!child || frame === child.frame)\r\n        {\r\n            return;\r\n        }\r\n\r\n        child.frame = frame;\r\n        child.hasTexture = true;\r\n    });\r\n\r\n    return children;\r\n}\r\n","import { Frame } from '../../textures/Frame';\r\nimport { IMesh } from './IMesh';\r\nimport { SetFrame } from './SetFrame';\r\nimport { Texture } from '../../textures/Texture';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\n\r\nexport function SetTexture <T extends IMesh> (key: string | Texture, frame: string | number | Frame, ...children: T[]): T[]\r\n{\r\n    if (!key)\r\n    {\r\n        //  Remove texture from all children\r\n        children.forEach(child =>\r\n        {\r\n            child.texture = null;\r\n            child.frame = null;\r\n            child.hasTexture = false;\r\n        });\r\n    }\r\n    else\r\n    {\r\n        let texture: Texture;\r\n\r\n        if (key instanceof Texture)\r\n        {\r\n            texture = key;\r\n        }\r\n        else\r\n        {\r\n            texture = TextureManagerInstance.get().get(key);\r\n        }\r\n\r\n        if (!texture)\r\n        {\r\n            console.warn(`Invalid Texture key: ${key as string}`);\r\n        }\r\n        else\r\n        {\r\n            children.forEach(child =>\r\n            {\r\n                child.texture = texture;\r\n            });\r\n\r\n            SetFrame(texture, frame, ...children);\r\n        }\r\n    }\r\n\r\n    return children;\r\n}\r\n","import { FlushBuffer } from '../../renderer/webgl1/renderpass';\r\nimport { Frame } from '../../textures/Frame';\r\nimport { GameObject3D } from '../GameObject3D';\r\nimport { Geometry } from '../geometry/Geometry';\r\nimport { IGameObject3D } from '../IGameObject3D';\r\nimport { IRenderPass } from '../../renderer/webgl1/renderpass/IRenderPass';\r\nimport { Material } from '../material/Material';\r\nimport { SetTexture as RequestTexture } from '../../renderer/webgl1/renderpass/SetTexture';\r\nimport { SetFrame } from './SetFrame';\r\nimport { SetTexture } from './SetTexture';\r\nimport { Texture } from '../../textures/Texture';\r\n\r\nexport class Mesh extends GameObject3D\r\n{\r\n    texture: Texture;\r\n    frame: Frame;\r\n    hasTexture: boolean = false;\r\n\r\n    geometry: Geometry;\r\n    material: Material;\r\n\r\n    cullFaces: boolean = true;\r\n\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, geometry?: Geometry, material: Material = new Material())\r\n    {\r\n        super(x, y, z);\r\n\r\n        this.geometry = geometry;\r\n        this.material = material;\r\n\r\n        this.setTexture('__WHITE');\r\n    }\r\n\r\n    setTexture (key: string | Texture, frame?: string | number): this\r\n    {\r\n        SetTexture(key, frame, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    setFrame (key?: string | number | Frame): this\r\n    {\r\n        SetFrame(this.texture, key, this);\r\n\r\n        return this;\r\n    }\r\n\r\n    setMaterial (material: Material): this\r\n    {\r\n        this.material = material;\r\n\r\n        return this;\r\n    }\r\n\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        const shader = renderPass.currentShader.shader;\r\n\r\n        shader.setUniform('uModelMatrix', this.transform.local.data);\r\n        shader.setUniform('uNormalMatrix', this.transform.normal.data);\r\n\r\n        if (this.hasTexture)\r\n        {\r\n            const textureIndex = RequestTexture(renderPass, this.texture);\r\n\r\n            shader.setUniform('uTexture', textureIndex);\r\n        }\r\n\r\n        this.material.setUniforms(shader);\r\n\r\n        FlushBuffer(renderPass, this.geometry.buffer);\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject3D): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        this.geometry = null;\r\n        this.material = null;\r\n        this.texture = null;\r\n        this.frame = null;\r\n        this.hasTexture = false;\r\n    }\r\n}\r\n","import { BoxGeometry } from '../../geom3d/BoxGeometry';\r\nimport { Geometry } from '../geometry/Geometry';\r\nimport { Mesh } from '../mesh/Mesh';\r\n\r\nexport class Box extends Mesh\r\n{\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, width: number = 1, height: number = 1, depth: number = 1, widthSegments: number = 1, heightSegments: number = 1, depthSegments: number = 1)\r\n    {\r\n        const data = BoxGeometry(0, 0, 0, width, height, depth, widthSegments, heightSegments, depthSegments);\r\n\r\n        const geometry = new Geometry(data);\r\n\r\n        super(x, y, z, geometry);\r\n    }\r\n}\r\n","import { CreateVertexSet } from '../gameobjects3d/geometry/CreateVertexSet';\r\nimport { Normalize } from '../math/vec3/Normalize';\r\nimport { Vec2 } from '../math/vec2/Vec2';\r\nimport { Vec3 } from '../math/vec3/Vec3';\r\nimport { VertexSet } from '../gameobjects3d/geometry/VertexSet';\r\n\r\nfunction GenerateCap (top: boolean, data: VertexSet, index: number, halfHeight: number, radiusTop: number, radiusBottom: number, radialSegments: number, thetaStart: number, thetaLength: number): number\r\n{\r\n    // buffers\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs,\r\n        indices\r\n    } = data;\r\n\r\n    const uv = new Vec2();\r\n    const vertex = new Vec3();\r\n\r\n    const radius = (top === true) ? radiusTop : radiusBottom;\r\n    const sign = (top === true) ? 1 : - 1;\r\n\r\n    // save the index of the first center vertex\r\n    const centerIndexStart = index;\r\n\r\n    // first we generate the center vertex data of the cap.\r\n    // because the geometry needs one set of uvs per face,\r\n    // we must generate a center vertex per face/segment\r\n\r\n    for (let x = 1; x <= radialSegments; x++)\r\n    {\r\n        // vertex\r\n        vertices.push(0, halfHeight * sign, 0);\r\n\r\n        // normal\r\n        normals.push(0, sign, 0);\r\n\r\n        // uv\r\n        uvs.push(0.5, 0.5);\r\n\r\n        // increase index\r\n        index++;\r\n    }\r\n\r\n    // save the index of the last center vertex\r\n    const centerIndexEnd = index;\r\n\r\n    // now we generate the surrounding vertices, normals and uvs\r\n\r\n    for (let x = 0; x <= radialSegments; x++)\r\n    {\r\n        const u = x / radialSegments;\r\n        const theta = u * thetaLength + thetaStart;\r\n\r\n        const cosTheta = Math.cos(theta);\r\n        const sinTheta = Math.sin(theta);\r\n\r\n        // vertex\r\n        vertex.x = radius * sinTheta;\r\n        vertex.y = halfHeight * sign;\r\n        vertex.z = radius * cosTheta;\r\n\r\n        vertices.push(vertex.x, vertex.y, vertex.z);\r\n\r\n        // normal\r\n        normals.push(0, sign, 0);\r\n\r\n        // uv\r\n        uv.x = (cosTheta * 0.5) + 0.5;\r\n        uv.y = (sinTheta * 0.5 * sign) + 0.5;\r\n        uvs.push(uv.x, uv.y);\r\n\r\n        // increase index\r\n        index++;\r\n    }\r\n\r\n    // generate indices\r\n\r\n    for (let x = 0; x < radialSegments; x++)\r\n    {\r\n        const c = centerIndexStart + x;\r\n        const i = centerIndexEnd + x;\r\n\r\n        if (top)\r\n        {\r\n            // face top\r\n            indices.push(i, i + 1, c);\r\n        }\r\n        else\r\n        {\r\n            // face bottom\r\n            indices.push(i + 1, i, c);\r\n        }\r\n    }\r\n\r\n    return index;\r\n}\r\n\r\nexport function CylinderGeometry (radiusTop: number = 1, radiusBottom: number = 1, height: number = 1, radialSegments: number = 8, heightSegments: number = 1, openEnded: boolean = false, thetaStart: number = 0, thetaLength: number = Math.PI * 2): VertexSet\r\n{\r\n    const data = CreateVertexSet();\r\n\r\n    // buffers\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs,\r\n        indices\r\n    } = data;\r\n\r\n    // helper variables\r\n    let index = 0;\r\n\r\n    const indexArray = [];\r\n    const halfHeight = height / 2;\r\n\r\n    const normal = new Vec3();\r\n    const vertex = new Vec3();\r\n\r\n    //  This will be used to calculate the normal\r\n    const slope = (radiusBottom - radiusTop) / height;\r\n\r\n    // generate vertices, normals and uvs\r\n\r\n    for (let y = 0; y <= heightSegments; y++)\r\n    {\r\n        const indexRow = [];\r\n\r\n        const v = y / heightSegments;\r\n\r\n        // calculate the radius of the current row\r\n\r\n        const radius = v * (radiusBottom - radiusTop) + radiusTop;\r\n\r\n        for (let x = 0; x <= radialSegments; x++)\r\n        {\r\n            const u = x / radialSegments;\r\n\r\n            const theta = u * thetaLength + thetaStart;\r\n\r\n            const sinTheta = Math.sin(theta);\r\n            const cosTheta = Math.cos(theta);\r\n\r\n            // vertex\r\n            vertex.x = radius * sinTheta;\r\n            vertex.y = - v * height + halfHeight;\r\n            vertex.z = radius * cosTheta;\r\n\r\n            vertices.push(vertex.x, vertex.y, vertex.z);\r\n\r\n            // normal\r\n            normal.set(sinTheta, slope, cosTheta);\r\n\r\n            Normalize(normal, normal);\r\n\r\n            normals.push(normal.x, normal.y, normal.z);\r\n\r\n            // uv\r\n            uvs.push(u, 1 - v);\r\n\r\n            // save index of vertex in respective row\r\n            indexRow.push(index++);\r\n        }\r\n\r\n        // now save vertices of the row in our index array\r\n        indexArray.push(indexRow);\r\n    }\r\n\r\n    // generate indices\r\n\r\n    for (let x = 0; x < radialSegments; x++)\r\n    {\r\n        for (let y = 0; y < heightSegments; y++)\r\n        {\r\n            // we use the index array to access the correct indices\r\n\r\n            const a = indexArray[y][x];\r\n            const b = indexArray[y + 1][x];\r\n            const c = indexArray[y + 1][x + 1];\r\n            const d = indexArray[y][x + 1];\r\n\r\n            // faces\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d);\r\n\r\n            // update group counter\r\n            // groupCount += 6;\r\n        }\r\n    }\r\n\r\n    if (!openEnded)\r\n    {\r\n        if (radiusTop > 0)\r\n        {\r\n            index = GenerateCap(true, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength);\r\n        }\r\n\r\n        if (radiusBottom > 0)\r\n        {\r\n            GenerateCap(false, data, index, halfHeight, radiusTop, radiusBottom, radialSegments, thetaStart, thetaLength);\r\n        }\r\n    }\r\n\r\n    data.numberOfVertices = vertices.length;\r\n\r\n    return data;\r\n}\r\n","import { CylinderGeometry } from './CylinderGeometry';\r\nimport { VertexSet } from '../gameobjects3d/geometry/VertexSet';\r\n\r\nexport function ConeGeometry (radius: number = 1, height: number = 1, radialSegments: number = 8, heightSegments: number = 1, openEnded: boolean = false, thetaStart: number = 0, thetaLength: number = Math.PI * 2): VertexSet\r\n{\r\n    return CylinderGeometry(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\r\n}\r\n","import { ConeGeometry } from '../../geom3d/ConeGeometry';\r\nimport { Geometry } from '../geometry/Geometry';\r\nimport { Mesh } from '../mesh/Mesh';\r\n\r\nexport class Cone extends Mesh\r\n{\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, radius: number = 1, height: number = 1, radialSegments: number = 8, heightSegments: number = 1, openEnded: boolean = false, thetaStart: number = 0, thetaLength: number = Math.PI * 2)\r\n    {\r\n        const data = ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\r\n\r\n        const geometry = new Geometry(data);\r\n\r\n        super(x, y, z, geometry);\r\n    }\r\n}\r\n","import { RGBCallback, Vec3Callback } from '../../math/vec3';\r\n\r\nimport { IShader } from '../../renderer/webgl1/shaders/IShader';\r\n\r\n/*\r\n    Color vectors for each of the Phong lighting's components.\r\n    The ambient material vector defines what color the surface reflects under\r\n    ambient lighting; this is usually the same as the surface's color.\r\n    The diffuse material vector defines the color of the surface under diffuse lighting.\r\n    The diffuse color is (just like ambient lighting) set to the desired surface's color.\r\n    The specular material vector sets the color of the specular highlight on the surface\r\n    (or possibly even reflect a surface-specific color). Lastly, the shininess impacts\r\n    the scattering/radius of the specular highlight.\r\n*/\r\n\r\nexport type LightConfig = {\r\n    x?: number;\r\n    y?: number;\r\n    z?: number;\r\n    ambient?: number[];\r\n    diffuse?: number[];\r\n    specular?: number[];\r\n};\r\n\r\nexport class Light\r\n{\r\n    position: Vec3Callback;\r\n\r\n    ambient: RGBCallback;\r\n    diffuse: RGBCallback;\r\n    specular: RGBCallback;\r\n\r\n    isDirty: boolean = false;\r\n\r\n    constructor (config: LightConfig = {})\r\n    {\r\n        const {\r\n            x = 0,\r\n            y = 0,\r\n            z = 0.1,\r\n            ambient = [ 1, 1, 1 ],\r\n            diffuse = [ 1, 1, 1 ],\r\n            specular = [ 1, 1, 1 ]\r\n        } = config;\r\n\r\n        const onChange = () => this.update();\r\n\r\n        this.position = new Vec3Callback(onChange, x, y, z);\r\n\r\n        this.ambient = new RGBCallback(onChange).fromArray(ambient);\r\n        this.diffuse = new RGBCallback(onChange).fromArray(diffuse);\r\n        this.specular = new RGBCallback(onChange).fromArray(specular);\r\n    }\r\n\r\n    setUniforms (shader: IShader): void\r\n    {\r\n        //  TODO - Only set if dirty (different to bound light?)\r\n\r\n        shader.setUniform('uLightPosition', this.position.toArray());\r\n        shader.setUniform('uLightAmbient', this.ambient.toArray());\r\n        shader.setUniform('uLightDiffuse', this.diffuse.toArray());\r\n        shader.setUniform('uLightSpecular', this.specular.toArray());\r\n    }\r\n\r\n    private update (): void\r\n    {\r\n        this.isDirty = true;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.position.destroy();\r\n\r\n        this.ambient.destroy();\r\n        this.diffuse.destroy();\r\n        this.specular.destroy();\r\n    }\r\n}\r\n","import { Geometry } from '../geometry/Geometry';\r\nimport { Mesh } from '../mesh/Mesh';\r\nimport { PlaneGeometry } from '../../geom3d/PlaneGeometry';\r\n\r\nexport class Plane extends Mesh\r\n{\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, width: number = 1, height: number = 1, widthSegments: number = 1, heightSegments: number = 1)\r\n    {\r\n        const data = PlaneGeometry(null, 0, 0, 0, 0, 1, 2, 1, -1, width, height, 1, widthSegments, heightSegments);\r\n\r\n        const geometry = new Geometry(data);\r\n\r\n        super(x, y, z, geometry);\r\n    }\r\n}\r\n","import { Flush, PopFramebuffer, SetFramebuffer } from '../../renderer/webgl1/renderpass';\r\nimport { GetHeight, GetResolution, GetWidth } from '../../config';\r\n\r\nimport { CreateDepthBuffer } from '../../renderer/webgl1/fbo/CreateDepthBuffer';\r\nimport { CreateFramebuffer } from '../../renderer/webgl1/fbo/CreateFramebuffer';\r\nimport { DIRTY_CONST } from '../../gameobjects/DIRTY_CONST';\r\nimport { DrawTexturedQuad } from '../../renderer/webgl1/draw/DrawTexturedQuad';\r\nimport { GLTextureBinding } from '../../renderer/webgl1/textures/GLTextureBinding';\r\nimport { IRenderLayer3D } from './IRenderLayer3D';\r\nimport { IRenderPass } from '../../renderer/webgl1/renderpass/IRenderPass';\r\nimport { Layer } from '../../gameobjects/layer/Layer';\r\nimport { Texture } from '../../textures/Texture';\r\n\r\nexport class RenderLayer3D extends Layer implements IRenderLayer3D\r\n{\r\n    texture: Texture;\r\n    framebuffer: WebGLFramebuffer;\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.type = 'RenderLayer';\r\n\r\n        this.willRender = true;\r\n        this.willRenderChildren = true;\r\n        this.willCacheChildren = true;\r\n\r\n        this.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n\r\n        const width = GetWidth();\r\n        const height = GetHeight();\r\n        const resolution = GetResolution();\r\n\r\n        //  TODO: Allow them to set this via a filterArea\r\n        //  TODO: This code is duplicate of Shader constructor, consolidate\r\n        const texture = new Texture(null, width * resolution, height * resolution);\r\n\r\n        const binding = new GLTextureBinding(texture);\r\n\r\n        texture.binding = binding;\r\n\r\n        binding.framebuffer = CreateFramebuffer(binding.texture);\r\n        binding.depthbuffer = CreateDepthBuffer(binding.framebuffer, texture.width, texture.height);\r\n\r\n        this.texture = texture;\r\n        this.framebuffer = binding.framebuffer;\r\n    }\r\n\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        if (this.numChildren > 0)\r\n        {\r\n            Flush(renderPass);\r\n\r\n            if (!this.willCacheChildren || this.isDirty(DIRTY_CONST.CHILD_CACHE))\r\n            {\r\n                //  This RenderLayer has dirty children\r\n                SetFramebuffer(renderPass, this.framebuffer, true);\r\n\r\n                this.clearDirty(DIRTY_CONST.CHILD_CACHE);\r\n            }\r\n            else\r\n            {\r\n                //  This RenderLayer doesn't have any dirty children, so we'll use the previous fbo contents\r\n                SetFramebuffer(renderPass, this.framebuffer, false);\r\n\r\n                this.postRenderGL(renderPass);\r\n            }\r\n        }\r\n    }\r\n\r\n    postRenderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        Flush(renderPass);\r\n\r\n        PopFramebuffer(renderPass);\r\n\r\n        DrawTexturedQuad(renderPass, this.texture);\r\n\r\n        this.clearDirty(DIRTY_CONST.TRANSFORM);\r\n    }\r\n}\r\n","import { CreateVertexSet } from '../gameobjects3d/geometry/CreateVertexSet';\r\nimport { Normalize } from '../math/vec3/Normalize';\r\nimport { Vec3 } from '../math/vec3/Vec3';\r\nimport { VertexSet } from '../gameobjects3d/geometry/VertexSet';\r\n\r\nexport function SphereGeometry (radius = 1, widthSegments = 3, heightSegments = 3, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI): VertexSet\r\n{\r\n    widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\r\n    heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\r\n\r\n    const thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\r\n\r\n    const data = CreateVertexSet();\r\n\r\n    // buffers\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs,\r\n        indices\r\n    } = data;\r\n\r\n    let index = 0;\r\n\r\n    const grid = [];\r\n\r\n    const vertex = new Vec3();\r\n    const normal = new Vec3();\r\n\r\n    // generate vertices, normals and uvs\r\n\r\n    for (let iy = 0; iy <= heightSegments; iy++)\r\n    {\r\n        const verticesRow = [];\r\n\r\n        const v = iy / heightSegments;\r\n\r\n        // special case for the poles\r\n\r\n        let uOffset = 0;\r\n\r\n        if (iy === 0 && thetaStart === 0)\r\n        {\r\n            uOffset = 0.5 / widthSegments;\r\n        }\r\n        else if (iy === heightSegments && thetaEnd == Math.PI)\r\n        {\r\n            uOffset = - 0.5 / widthSegments;\r\n        }\r\n\r\n        for (let ix = 0; ix <= widthSegments; ix++)\r\n        {\r\n            const u = ix / widthSegments;\r\n\r\n            // vertex\r\n\r\n            vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n            vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\r\n            vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n\r\n            vertices.push(vertex.x, vertex.y, vertex.z);\r\n\r\n            // normal\r\n\r\n            Normalize(vertex, normal);\r\n\r\n            normals.push(normal.x, normal.y, normal.z);\r\n\r\n            // uv\r\n\r\n            uvs.push(u + uOffset, 1 - v);\r\n\r\n            verticesRow.push(index++);\r\n        }\r\n\r\n        grid.push(verticesRow);\r\n    }\r\n\r\n    // indices\r\n\r\n    for (let iy = 0; iy < heightSegments; iy++)\r\n    {\r\n        for (let ix = 0; ix < widthSegments; ix++)\r\n        {\r\n            const a = grid[ iy ][ ix + 1 ];\r\n            const b = grid[ iy ][ ix ];\r\n            const c = grid[ iy + 1 ][ ix ];\r\n            const d = grid[ iy + 1 ][ ix + 1 ];\r\n\r\n            if (iy !== 0 || thetaStart > 0)\r\n            {\r\n                indices.push(a, b, d);\r\n            }\r\n\r\n            if (iy !== heightSegments - 1 || thetaEnd < Math.PI)\r\n            {\r\n                indices.push(b, c, d);\r\n            }\r\n        }\r\n    }\r\n\r\n    data.numberOfVertices = vertices.length;\r\n\r\n    return data;\r\n}\r\n","import { Geometry } from '../geometry/Geometry';\r\nimport { Mesh } from '../mesh/Mesh';\r\nimport { SphereGeometry } from '../../geom3d/SphereGeometry';\r\n\r\nexport class Sphere extends Mesh\r\n{\r\n    constructor (x: number = 0, y: number = 0, z: number = 0, radius = 1, widthSegments = 3, heightSegments = 3, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI)\r\n    {\r\n        const data = SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength);\r\n\r\n        const geometry = new Geometry(data);\r\n\r\n        super(x, y, z, geometry);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Calculates the area of the circle.\r\n *\r\n * @function Phaser.Geom.Circle.Area\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get the area of.\r\n *\r\n * @return {number} The area of the Circle.\r\n */\r\nexport function Area (circle: ICircle): number\r\n{\r\n    return (circle.radius > 0) ? Math.PI * circle.radius * circle.radius : 0;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Check to see if the Circle contains the given x / y coordinates.\r\n *\r\n * @function Phaser.Geom.Circle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check.\r\n * @param {number} x - The x coordinate to check within the circle.\r\n * @param {number} y - The y coordinate to check within the circle.\r\n *\r\n * @return {boolean} True if the coordinates are within the circle, otherwise false.\r\n */\r\nexport function Contains (circle: ICircle, x: number, y: number): boolean\r\n{\r\n    //  Check if x/y are within the bounds first\r\n    if (circle.radius > 0 && x >= circle.left && x <= circle.right && y >= circle.top && y <= circle.bottom)\r\n    {\r\n        const dx = (circle.x - x) * (circle.x - x);\r\n        const dy = (circle.y - y) * (circle.y - y);\r\n\r\n        return (dx + dy) <= (circle.radius * circle.radius);\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\n\r\n/**\r\n * @classdesc\r\n * A Circle object.\r\n *\r\n * This is a geometry object, containing numerical values and related methods to inspect and modify them.\r\n * It is not a Game Object, in that you cannot add it to the display list, and it has no texture.\r\n * To render a Circle you should look at the capabilities of the Graphics class.\r\n *\r\n * @class Circle\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x=0] - The x position of the center of the circle.\r\n * @param {number} [y=0] - The y position of the center of the circle.\r\n * @param {number} [radius=0] - The radius of the circle.\r\n */\r\nexport class Circle\r\n{\r\n    x: number;\r\n    y: number;\r\n\r\n    private _radius: number;\r\n    private _diameter: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, radius: number = 0)\r\n    {\r\n        this.set(x, y, radius);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, radius: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains (x: number, y: number): boolean\r\n    {\r\n        return Contains(this, x, y);\r\n    }\r\n\r\n    get radius (): number\r\n    {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius (value: number)\r\n    {\r\n        this._radius = value;\r\n        this._diameter = value * 2;\r\n    }\r\n\r\n    get diameter (): number\r\n    {\r\n        return this._diameter;\r\n    }\r\n\r\n    set diameter (value: number)\r\n    {\r\n        this._diameter = value;\r\n        this._radius = value * 0.5;\r\n    }\r\n\r\n    get left (): number\r\n    {\r\n        return this.x - this._radius;\r\n    }\r\n\r\n    set left (value: number)\r\n    {\r\n        this.x = value + this._radius;\r\n    }\r\n\r\n    get right (): number\r\n    {\r\n        return this.x + this._radius;\r\n    }\r\n\r\n    set right (value: number)\r\n    {\r\n        this.x = value - this._radius;\r\n    }\r\n\r\n    get top (): number\r\n    {\r\n        return this.y - this._radius;\r\n    }\r\n\r\n    set top (value: number)\r\n    {\r\n        this.y = value + this._radius;\r\n    }\r\n\r\n    get bottom (): number\r\n    {\r\n        return this.y + this._radius;\r\n    }\r\n\r\n    set bottom (value: number)\r\n    {\r\n        this.y = value - this._radius;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Returns the circumference of the given Circle.\r\n *\r\n * @function Phaser.Geom.Circle.Circumference\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get the circumference of.\r\n *\r\n * @return {number} The circumference of the Circle.\r\n */\r\nexport function Circumference (circle: ICircle): number\r\n{\r\n    return 2 * (Math.PI * circle.radius);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a Point object containing the coordinates of a point on the circumference of the Circle based on the given angle.\r\n *\r\n * @function Phaser.Geom.Circle.CircumferencePoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get the circumference point on.\r\n * @param {number} angle - The angle from the center of the Circle to the circumference to return the point from. Given in radians.\r\n * @param {(Phaser.Geom.Point|object)} [out] - A Point, or point-like object, to store the results in. If not given a Point will be created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object where the `x` and `y` properties are the point on the circumference.\r\n */\r\nexport function CircumferencePoint (circle: ICircle, angle: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        circle.x + (circle.radius * Math.cos(angle)),\r\n        circle.y + (circle.radius * Math.sin(angle))\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Circle } from './Circle';\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Creates a new Circle instance based on the values contained in the given source.\r\n *\r\n * @function Phaser.Geom.Circle.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Geom.Circle|object)} source - The Circle to be cloned. Can be an instance of a Circle or a circle-like object, with x, y and radius properties.\r\n *\r\n * @return {Phaser.Geom.Circle} A clone of the source Circle.\r\n */\r\nexport function Clone (source: ICircle): Circle\r\n{\r\n    return new Circle(source.x, source.y, source.radius);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\nimport { ICircle } from './ICircle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Check to see if the Circle contains the given Point object.\r\n *\r\n * @function Phaser.Geom.Circle.ContainsPoint\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check.\r\n * @param {(Phaser.Geom.Point|object)} point - The Point object to check if it's within the Circle or not.\r\n *\r\n * @return {boolean} True if the Point coordinates are within the circle, otherwise false.\r\n */\r\nexport function ContainsPoint (circle: ICircle, point: Vec2): boolean\r\n{\r\n    return Contains(circle, point.x, point.y);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\nimport { ICircle } from './ICircle';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\n\r\n/**\r\n * Check to see if the Circle contains all four points of the given Rectangle object.\r\n *\r\n * @function Phaser.Geom.Circle.ContainsRect\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check.\r\n * @param {(Phaser.Geom.Rectangle|object)} rect - The Rectangle object to check if it's within the Circle or not.\r\n *\r\n * @return {boolean} True if all of the Rectangle coordinates are within the circle, otherwise false.\r\n */\r\nexport function ContainsRect (circle: ICircle, rect: IRectangle): boolean\r\n{\r\n    return (\r\n        Contains(circle, rect.x, rect.y) &&\r\n        Contains(circle, rect.right, rect.y) &&\r\n        Contains(circle, rect.x, rect.bottom) &&\r\n        Contains(circle, rect.right, rect.bottom)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Copies the `x`, `y` and `radius` properties from the `source` Circle\r\n * into the given `dest` Circle, then returns the `dest` Circle.\r\n *\r\n * @function Phaser.Geom.Circle.CopyFrom\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Circle} O - [dest,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} source - The source Circle to copy the values from.\r\n * @param {Phaser.Geom.Circle} dest - The destination Circle to copy the values to.\r\n *\r\n * @return {Phaser.Geom.Circle} The destination Circle.\r\n */\r\nexport function CopyFrom (source: ICircle, dest: ICircle): ICircle\r\n{\r\n    return dest.set(source.x, source.y, source.radius);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Compares the `x`, `y` and `radius` properties of the two given Circles.\r\n * Returns `true` if they all match, otherwise returns `false`.\r\n *\r\n * @function Phaser.Geom.Circle.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The first Circle to compare.\r\n * @param {Phaser.Geom.Circle} toCompare - The second Circle to compare.\r\n *\r\n * @return {boolean} `true` if the two Circles equal each other, otherwise `false`.\r\n */\r\nexport function Equals (circle: ICircle, toCompare: ICircle): boolean\r\n{\r\n    return (\r\n        circle.x === toCompare.x &&\r\n        circle.y === toCompare.y &&\r\n        circle.radius === toCompare.radius\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\nimport { Rectangle } from '../rectangle/Rectangle';\r\n\r\n/**\r\n * Returns the bounds of the Circle object.\r\n *\r\n * @function Phaser.Geom.Circle.GetBounds\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get the bounds from.\r\n * @param {(Phaser.Geom.Rectangle|object)} [out] - A Rectangle, or rectangle-like object, to store the circle bounds in. If not given a new Rectangle will be created.\r\n *\r\n * @return {(Phaser.Geom.Rectangle|object)} The Rectangle object containing the Circles bounds.\r\n */\r\nexport function GetBounds (circle: ICircle, out: Rectangle = new Rectangle()): Rectangle\r\n{\r\n    return out.set(\r\n        circle.left,\r\n        circle.top,\r\n        circle.diameter,\r\n        circle.diameter\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CircumferencePoint } from './CircumferencePoint';\r\nimport { FromPercent } from '../../math/FromPercent';\r\nimport { ICircle } from './ICircle';\r\nimport { MATH_CONST } from '../../math/const';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a Point object containing the coordinates of a point on the circumference of the Circle\r\n * based on the given angle normalized to the range 0 to 1. I.e. a value of 0.5 will give the point\r\n * at 180 degrees around the circle.\r\n *\r\n * @function Phaser.Geom.Circle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get the circumference point on.\r\n * @param {number} position - A value between 0 and 1, where 0 equals 0 degrees, 0.5 equals 180 degrees and 1 equals 360 around the circle.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to store the return values in. If not given a Point object will be created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point, or point-like object, containing the coordinates of the point around the circle.\r\n */\r\nexport function GetPoint (circle: ICircle, position: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const angle = FromPercent(position, 0, MATH_CONST.PI2);\r\n\r\n    return CircumferencePoint(circle, angle, out);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Circumference } from './Circumference';\r\nimport { CircumferencePoint } from './CircumferencePoint';\r\nimport { FromPercent } from '../../math/FromPercent';\r\nimport { ICircle } from './ICircle';\r\nimport { MATH_CONST } from '../../math/const';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns an array of Point objects containing the coordinates of the points around the circumference of the Circle,\r\n * based on the given quantity or stepRate values.\r\n *\r\n * @function Phaser.Geom.Circle.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get the points from.\r\n * @param {number} step - Sets the quantity by getting the circumference of the circle and dividing it by the stepRate.\r\n * @param {integer} [quantity=0] - The amount of points to return. If a falsey value the quantity will be derived from the `stepRate` instead.\r\n * @param {array} [output] - An array to insert the points in to. If not provided a new array will be created.\r\n *\r\n * @return {Phaser.Geom.Point[]} An array of Point objects pertaining to the points around the circumference of the circle.\r\n */\r\nexport function GetPoints (circle: ICircle, step: number, quantity: number = 0, out: Vec2[] = []): Vec2[]\r\n{\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity)\r\n    {\r\n        quantity = Circumference(circle) / step;\r\n    }\r\n\r\n    for (let i = 0; i < quantity; i++)\r\n    {\r\n        const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\r\n\r\n        out.push(CircumferencePoint(circle, angle));\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Offsets the Circle by the values given.\r\n *\r\n * @function Phaser.Geom.Circle.Offset\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Circle} O - [circle,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to be offset (translated.)\r\n * @param {number} x - The amount to horizontally offset the Circle by.\r\n * @param {number} y - The amount to vertically offset the Circle by.\r\n *\r\n * @return {Phaser.Geom.Circle} The Circle that was offset.\r\n */\r\nexport function Offset (circle: ICircle, x: number, y: number): ICircle\r\n{\r\n    circle.x += x;\r\n    circle.y += y;\r\n\r\n    return circle;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Offsets the Circle by the values given in the `x` and `y` properties of the Point object.\r\n *\r\n * @function Phaser.Geom.Circle.OffsetVec2\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Circle} O - [circle,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to be offset (translated.)\r\n * @param {(Phaser.Geom.Point|object)} point - The Point object containing the values to offset the Circle by.\r\n *\r\n * @return {Phaser.Geom.Circle} The Circle that was offset.\r\n */\r\nexport function OffsetPoint (circle: ICircle, point: Vec2): ICircle\r\n{\r\n    circle.x += point.x;\r\n    circle.y += point.y;\r\n\r\n    return circle;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a uniformly distributed random point from anywhere within the given Circle.\r\n *\r\n * @function Phaser.Geom.Circle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get a random point from.\r\n * @param {(Phaser.Geom.Point|object)} [out] - A Point or point-like object to set the random `x` and `y` values in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object with the random values set in the `x` and `y` properties.\r\n */\r\nexport function Random (circle: ICircle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const t = 2 * Math.PI * Math.random();\r\n    const u = Math.random() + Math.random();\r\n    const r = (u > 1) ? 2 - u : u;\r\n    const x = r * Math.cos(t);\r\n    const y = r * Math.sin(t);\r\n\r\n    return out.set(\r\n        circle.x + (x * circle.radius),\r\n        circle.y + (y * circle.radius)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\n\r\n/**\r\n * Calculates the area of the Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.Area\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the area of.\r\n *\r\n * @return {number} The area of the Ellipse.\r\n */\r\nexport function Area (ellipse: IEllipse): number\r\n{\r\n    if ((ellipse.width <= 0 || ellipse.height <= 0))\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    //  units squared\r\n    return (ellipse.getMajorRadius() * ellipse.getMinorRadius() * Math.PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\n\r\n/**\r\n * Returns the circumference of the given Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.Circumference\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the circumference of.\r\n *\r\n * @return {number} The circumference of th Ellipse.\r\n */\r\nexport function Circumference (ellipse: IEllipse): number\r\n{\r\n    const rx = ellipse.width / 2;\r\n    const ry = ellipse.height / 2;\r\n    const h = Math.pow((rx - ry), 2) / Math.pow((rx + ry), 2);\r\n\r\n    return (Math.PI * (rx + ry)) * (1 + ((3 * h) / (10 + Math.sqrt(4 - (3 * h)))));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a Point object containing the coordinates of a point on the circumference of the Ellipse based on the given angle.\r\n *\r\n * @function Phaser.Geom.Ellipse.CircumferencePoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the circumference point on.\r\n * @param {number} angle - The angle from the center of the Ellipse to the circumference to return the point from. Given in radians.\r\n * @param {(Phaser.Geom.Point|object)} [out] - A Point, or point-like object, to store the results in. If not given a Point will be created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object where the `x` and `y` properties are the point on the circumference.\r\n */\r\nexport function CircumferencePoint (ellipse: IEllipse, angle: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const halfWidth = ellipse.width / 2;\r\n    const halfHeight = ellipse.height / 2;\r\n\r\n    return out.set(\r\n        ellipse.x + halfWidth * Math.cos(angle),\r\n        ellipse.y + halfHeight * Math.sin(angle)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\n\r\n/**\r\n * Check to see if the Ellipse contains the given x / y coordinates.\r\n *\r\n * @function Phaser.Geom.Ellipse.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to check.\r\n * @param {number} x - The x coordinate to check within the ellipse.\r\n * @param {number} y - The y coordinate to check within the ellipse.\r\n *\r\n * @return {boolean} True if the coordinates are within the ellipse, otherwise false.\r\n */\r\nexport function Contains (ellipse: IEllipse, x: number, y: number): boolean\r\n{\r\n    if (ellipse.width <= 0 || ellipse.height <= 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    //  Normalize the coords to an ellipse with center 0,0 and a radius of 0.5\r\n    let normx = ((x - ellipse.x) / ellipse.width);\r\n    let normy = ((y - ellipse.y) / ellipse.height);\r\n\r\n    normx *= normx;\r\n    normy *= normy;\r\n\r\n    return (normx + normy < 0.25);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\n\r\n/**\r\n * @classdesc\r\n * An Ellipse object.\r\n *\r\n * This is a geometry object, containing numerical values and related methods to inspect and modify them.\r\n * It is not a Game Object, in that you cannot add it to the display list, and it has no texture.\r\n * To render an Ellipse you should look at the capabilities of the Graphics class.\r\n *\r\n * @class Ellipse\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x=0] - The x position of the center of the ellipse.\r\n * @param {number} [y=0] - The y position of the center of the ellipse.\r\n * @param {number} [width=0] - The width of the ellipse.\r\n * @param {number} [height=0] - The height of the ellipse.\r\n */\r\nexport class Ellipse\r\n{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, width: number = 0, height: number = 0)\r\n    {\r\n        this.set(x, y, width, height);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, width: number = 0, height: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check to see if the Ellipse contains the given x / y coordinates.\r\n     *\r\n     * @method Phaser.Geom.Ellipse#contains\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The x coordinate to check within the ellipse.\r\n     * @param {number} y - The y coordinate to check within the ellipse.\r\n     *\r\n     * @return {boolean} True if the coordinates are within the ellipse, otherwise false.\r\n     */\r\n    contains (x: number, y: number): boolean\r\n    {\r\n        return Contains(this, x, y);\r\n    }\r\n\r\n    /**\r\n     * Returns the minor radius of the ellipse. Also known as the Semi Minor Axis.\r\n     *\r\n     * @method Phaser.Geom.Ellipse#getMinorRadius\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The minor radius.\r\n     */\r\n    getMinorRadius (): number\r\n    {\r\n        return Math.min(this.width, this.height) / 2;\r\n    }\r\n\r\n    /**\r\n     * Returns the major radius of the ellipse. Also known as the Semi Major Axis.\r\n     *\r\n     * @method Phaser.Geom.Ellipse#getMajorRadius\r\n     * @since 3.0.0\r\n     *\r\n     * @return {number} The major radius.\r\n     */\r\n    getMajorRadius (): number\r\n    {\r\n        return Math.max(this.width, this.height) / 2;\r\n    }\r\n\r\n    get left (): number\r\n    {\r\n        return this.x - (this.width / 2);\r\n    }\r\n\r\n    set left (value: number)\r\n    {\r\n        this.x = value + (this.width / 2);\r\n    }\r\n\r\n    get right (): number\r\n    {\r\n        return this.x + (this.width / 2);\r\n    }\r\n\r\n    set right (value: number)\r\n    {\r\n        this.x = value - (this.width / 2);\r\n    }\r\n\r\n    get top (): number\r\n    {\r\n        return this.y - (this.height / 2);\r\n    }\r\n\r\n    set top (value: number)\r\n    {\r\n        this.y = value + (this.height / 2);\r\n    }\r\n\r\n    get bottom (): number\r\n    {\r\n        return this.y + (this.height / 2);\r\n    }\r\n\r\n    set bottom (value: number)\r\n    {\r\n        this.y = value - (this.height / 2);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Ellipse } from './Ellipse';\r\nimport { IEllipse } from './IEllipse';\r\n\r\n/**\r\n * Creates a new Ellipse instance based on the values contained in the given source.\r\n *\r\n * @function Phaser.Geom.Ellipse.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} source - The Ellipse to be cloned. Can be an instance of an Ellipse or a ellipse-like object, with x, y, width and height properties.\r\n *\r\n * @return {Phaser.Geom.Ellipse} A clone of the source Ellipse.\r\n */\r\nexport function Clone (source: IEllipse): Ellipse\r\n{\r\n    return new Ellipse(source.x, source.y, source.width, source.height);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\nimport { IEllipse } from './IEllipse';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Check to see if the Ellipse contains the given Point object.\r\n *\r\n * @function Phaser.Geom.Ellipse.ContainsPoint\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to check.\r\n * @param {(Phaser.Geom.Point|object)} point - The Point object to check if it's within the Circle or not.\r\n *\r\n * @return {boolean} True if the Point coordinates are within the circle, otherwise false.\r\n */\r\nexport function ContainsPoint (ellipse: IEllipse, point: Vec2): boolean\r\n{\r\n    return Contains(ellipse, point.x, point.y);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\nimport { IEllipse } from './IEllipse';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\n\r\n/**\r\n * Check to see if the Ellipse contains all four points of the given Rectangle object.\r\n *\r\n * @function Phaser.Geom.Ellipse.ContainsRect\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to check.\r\n * @param {(Phaser.Geom.Rectangle|object)} rect - The Rectangle object to check if it's within the Ellipse or not.\r\n *\r\n * @return {boolean} True if all of the Rectangle coordinates are within the ellipse, otherwise false.\r\n */\r\nexport function ContainsRect (ellipse: IEllipse, rect: IRectangle): boolean\r\n{\r\n    return (\r\n        Contains(ellipse, rect.x, rect.y) &&\r\n        Contains(ellipse, rect.right, rect.y) &&\r\n        Contains(ellipse, rect.x, rect.bottom) &&\r\n        Contains(ellipse, rect.right, rect.bottom)\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\n\r\n/**\r\n * Copies the `x`, `y`, `width` and `height` properties from the `source` Ellipse\r\n * into the given `dest` Ellipse, then returns the `dest` Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.CopyFrom\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Ellipse} O - [dest,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} source - The source Ellipse to copy the values from.\r\n * @param {Phaser.Geom.Ellipse} dest - The destination Ellipse to copy the values to.\r\n *\r\n * @return {Phaser.Geom.Ellipse} The destination Ellipse.\r\n */\r\nexport function CopyFrom (source: IEllipse, dest: IEllipse): IEllipse\r\n{\r\n    return dest.set(source.x, source.y, source.width, source.height);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\n\r\n/**\r\n * Compares the `x`, `y`, `width` and `height` properties of the two given Ellipses.\r\n * Returns `true` if they all match, otherwise returns `false`.\r\n *\r\n * @function Phaser.Geom.Ellipse.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The first Ellipse to compare.\r\n * @param {Phaser.Geom.Ellipse} toCompare - The second Ellipse to compare.\r\n *\r\n * @return {boolean} `true` if the two Ellipse equal each other, otherwise `false`.\r\n */\r\nexport function Equals (ellipse: IEllipse, toCompare: IEllipse): boolean\r\n{\r\n    return (\r\n        ellipse.x === toCompare.x &&\r\n        ellipse.y === toCompare.y &&\r\n        ellipse.width === toCompare.width &&\r\n        ellipse.height === toCompare.height\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\nimport { Rectangle } from '../rectangle/Rectangle';\r\n\r\n/**\r\n * Returns the bounds of the Ellipse object.\r\n *\r\n * @function Phaser.Geom.Ellipse.GetBounds\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the bounds from.\r\n * @param {(Phaser.Geom.Rectangle|object)} [out] - A Rectangle, or rectangle-like object, to store the ellipse bounds in. If not given a new Rectangle will be created.\r\n *\r\n * @return {(Phaser.Geom.Rectangle|object)} The Rectangle object containing the Ellipse bounds.\r\n */\r\nexport function GetBounds (ellipse: IEllipse, out: Rectangle = new Rectangle()): Rectangle\r\n{\r\n    return out.set(\r\n        ellipse.left,\r\n        ellipse.top,\r\n        ellipse.width,\r\n        ellipse.height\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CircumferencePoint } from './CircumferencePoint';\r\nimport { FromPercent } from '../../math/FromPercent';\r\nimport { IEllipse } from './IEllipse';\r\nimport { MATH_CONST } from '../../math/const';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a Point object containing the coordinates of a point on the circumference of the Ellipse\r\n * based on the given angle normalized to the range 0 to 1. I.e. a value of 0.5 will give the point\r\n * at 180 degrees around the circle.\r\n *\r\n * @function Phaser.Geom.Ellipse.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the circumference point on.\r\n * @param {number} position - A value between 0 and 1, where 0 equals 0 degrees, 0.5 equals 180 degrees and 1 equals 360 around the ellipse.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to store the return values in. If not given a Point object will be created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point, or point-like object, containing the coordinates of the point around the ellipse.\r\n */\r\nexport function GetPoint (ellipse: IEllipse, position: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const angle = FromPercent(position, 0, MATH_CONST.PI2);\r\n\r\n    return CircumferencePoint(ellipse, angle, out);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Circumference } from './Circumference';\r\nimport { CircumferencePoint } from './CircumferencePoint';\r\nimport { FromPercent } from '../../math/FromPercent';\r\nimport { IEllipse } from './IEllipse';\r\nimport { MATH_CONST } from '../../math/const';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns an array of Point objects containing the coordinates of the points around the circumference of the Ellipse,\r\n * based on the given quantity or stepRate values.\r\n *\r\n * @function Phaser.Geom.Ellipse.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get the points from.\r\n * @param {integer} quantity - The amount of points to return. If a falsey value the quantity will be derived from the `stepRate` instead.\r\n * @param {number} [stepRate] - Sets the quantity by getting the circumference of the ellipse and dividing it by the stepRate.\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An array to insert the points in to. If not provided a new array will be created.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} An array of Point objects pertaining to the points around the circumference of the ellipse.\r\n */\r\nexport function GetPoints (ellipse: IEllipse, step: number, quantity: number = 0,  out: Vec2[] = []): Vec2[]\r\n{\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity)\r\n    {\r\n        quantity = Circumference(ellipse) / step;\r\n    }\r\n\r\n    for (let i = 0; i < quantity; i++)\r\n    {\r\n        const angle = FromPercent(i / quantity, 0, MATH_CONST.PI2);\r\n\r\n        out.push(CircumferencePoint(ellipse, angle));\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\n\r\n/**\r\n * Offsets the Ellipse by the values given.\r\n *\r\n * @function Phaser.Geom.Ellipse.Offset\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Ellipse} O - [ellipse,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to be offset (translated.)\r\n * @param {number} x - The amount to horizontally offset the Ellipse by.\r\n * @param {number} y - The amount to vertically offset the Ellipse by.\r\n *\r\n * @return {Phaser.Geom.Ellipse} The Ellipse that was offset.\r\n */\r\nexport function Offset (ellipse: IEllipse, x: number, y: number): IEllipse\r\n{\r\n    ellipse.x += x;\r\n    ellipse.y += y;\r\n\r\n    return ellipse;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Offsets the Ellipse by the values given in the `x` and `y` properties of the Point object.\r\n *\r\n * @function Phaser.Geom.Ellipse.OffsetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Ellipse} O - [ellipse,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to be offset (translated.)\r\n * @param {(Phaser.Geom.Point|object)} point - The Point object containing the values to offset the Ellipse by.\r\n *\r\n * @return {Phaser.Geom.Ellipse} The Ellipse that was offset.\r\n */\r\nexport function OffsetPoint (ellipse: IEllipse, point: Vec2): IEllipse\r\n{\r\n    ellipse.x += point.x;\r\n    ellipse.y += point.y;\r\n\r\n    return ellipse;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IEllipse } from './IEllipse';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a uniformly distributed random point from anywhere within the given Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get a random point from.\r\n * @param {(Phaser.Geom.Point|object)} [out] - A Point or point-like object to set the random `x` and `y` values in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object with the random values set in the `x` and `y` properties.\r\n */\r\nexport function Random (ellipse: IEllipse, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const p = Math.random() * Math.PI * 2;\r\n    const s = Math.sqrt(Math.random());\r\n\r\n    out.x = ellipse.x + ((s * Math.cos(p)) * ellipse.width / 2);\r\n    out.y = ellipse.y + ((s * Math.sin(p)) * ellipse.height / 2);\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Distance } from '../../math/vec2/Distance';\r\nimport { ICircle } from '../circle/ICircle';\r\n\r\n/**\r\n * Checks if two Circles intersect.\r\n *\r\n * @function Phaser.Geom.Intersects.CircleToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circleA - The first Circle to check for intersection.\r\n * @param {Phaser.Geom.Circle} circleB - The second Circle to check for intersection.\r\n *\r\n * @return {boolean} `true` if the two Circles intersect, otherwise `false`.\r\n */\r\nexport function CircleToCircle (circleA: ICircle, circleB: ICircle): boolean\r\n{\r\n    return (Distance(circleA, circleB) <= (circleA.radius + circleB.radius));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from '../circle/ICircle';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\n\r\n/**\r\n * Checks for intersection between a circle and a rectangle.\r\n *\r\n * @function Phaser.Geom.Intersects.CircleToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The circle to be checked.\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle to be checked.\r\n *\r\n * @return {boolean} `true` if the two objects intersect, otherwise `false`.\r\n */\r\nexport function CircleToRectangle (circle: ICircle, rect: IRectangle): boolean\r\n{\r\n    const halfWidth = rect.width / 2;\r\n    const halfHeight = rect.height / 2;\r\n\r\n    const cx = Math.abs(circle.x - rect.x - halfWidth);\r\n    const cy = Math.abs(circle.y - rect.y - halfHeight);\r\n    const xDist = halfWidth + circle.radius;\r\n    const yDist = halfHeight + circle.radius;\r\n\r\n    if (cx > xDist || cy > yDist)\r\n    {\r\n        return false;\r\n    }\r\n    else if (cx <= halfWidth || cy <= halfHeight)\r\n    {\r\n        return true;\r\n    }\r\n    else\r\n    {\r\n        const xCornerDist = cx - halfWidth;\r\n        const yCornerDist = cy - halfHeight;\r\n        const xCornerDistSq = xCornerDist * xCornerDist;\r\n        const yCornerDistSq = yCornerDist * yCornerDist;\r\n        const maxCornerDistSq = circle.radius * circle.radius;\r\n\r\n        return (xCornerDistSq + yCornerDistSq <= maxCornerDistSq);\r\n    }\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CircleToCircle } from './CircleToCircle';\r\nimport { ICircle } from '../circle/ICircle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if two Circles intersect and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetCircleToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circleA - The first Circle to check for intersection.\r\n * @param {Phaser.Geom.Circle} circleB - The second Circle to check for intersection.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetCircleToCircle (circleA: ICircle, circleB: ICircle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (CircleToCircle(circleA, circleB))\r\n    {\r\n        const x0 = circleA.x;\r\n        const y0 = circleA.y;\r\n        const r0 = circleA.radius;\r\n\r\n        const x1 = circleB.x;\r\n        const y1 = circleB.y;\r\n        const r1 = circleB.radius;\r\n\r\n        let coefficientA: number;\r\n        let coefficientB: number;\r\n        let coefficientC: number;\r\n        let lambda: number;\r\n        let x: number;\r\n\r\n        if (y0 === y1)\r\n        {\r\n            x = ((r1 * r1) - (r0 * r0) - (x1 * x1) + (x0 * x0)) / (2 * (x0 - x1));\r\n\r\n            coefficientA = 1;\r\n            coefficientB = -2 * y1;\r\n            coefficientC = (x1 * x1) + (x * x) - (2 * x1 * x) + (y1 * y1) - (r1 * r1);\r\n\r\n            lambda = (coefficientB * coefficientB) - (4 * coefficientA * coefficientC);\r\n\r\n            if (lambda === 0)\r\n            {\r\n                out.push(new Vec2(x, (-coefficientB / (2 * coefficientA))));\r\n            }\r\n            else if (lambda > 0)\r\n            {\r\n                out.push(new Vec2(x, (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA)));\r\n                out.push(new Vec2(x, (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA)));\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const v1 = (x0 - x1) / (y0 - y1);\r\n            const n = (r1 * r1 - r0 * r0 - x1 * x1 + x0 * x0 - y1 * y1 + y0 * y0) / (2 * (y0 - y1));\r\n\r\n            coefficientA = (v1 * v1) + 1;\r\n            coefficientB = (2 * y0 * v1) - (2 * n * v1) - (2 * x0);\r\n            coefficientC = (x0 * x0) + (y0 * y0) + (n * n) - (r0 * r0) - (2 * y0 * n);\r\n\r\n            lambda = (coefficientB * coefficientB) - (4 * coefficientA * coefficientC);\r\n\r\n            if (lambda === 0)\r\n            {\r\n                x = (-coefficientB / (2 * coefficientA));\r\n                out.push(new Vec2(x, (n - (x * v1))));\r\n            }\r\n            else if (lambda > 0)\r\n            {\r\n                x = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\r\n                out.push(new Vec2(x, (n - (x * v1))));\r\n\r\n                x = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\r\n                out.push(new Vec2(x, (n - (x * v1))));\r\n            }\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from '../circle/Contains';\r\nimport { ICircle } from '../circle/ICircle';\r\nimport { ILine } from '../line/ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\nconst tmp: Vec2 = new Vec2();\r\n\r\n/**\r\n * Checks for intersection between the line segment and circle.\r\n *\r\n * Based on code by [Matt DesLauriers](https://github.com/mattdesl/line-circle-collision/blob/master/LICENSE.md).\r\n *\r\n * @function Phaser.Geom.Intersects.LineToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line segment to check.\r\n * @param {Phaser.Geom.Circle} circle - The circle to check against the line.\r\n * @param {(Phaser.Geom.Point|any)} [nearest] - An optional Point-like object. If given the closest point on the Line where the circle intersects will be stored in this object.\r\n *\r\n * @return {boolean} `true` if the two objects intersect, otherwise `false`.\r\n */\r\nexport function LineToCircle (line: ILine, circle: ICircle, nearest?: Vec2): boolean\r\n{\r\n    if (!nearest)\r\n    {\r\n        nearest = tmp;\r\n    }\r\n\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    if (Contains(circle, x1, y1))\r\n    {\r\n        nearest.set(x1, y1);\r\n\r\n        return true;\r\n    }\r\n\r\n    if (Contains(circle, x2, y2))\r\n    {\r\n        nearest.set(x2, y2);\r\n\r\n        return true;\r\n    }\r\n\r\n    const dx = x2 - x1;\r\n    const dy = y2 - y1;\r\n\r\n    const lcx = circle.x - x1;\r\n    const lcy = circle.y - y1;\r\n\r\n    //  project lc onto d, resulting in vector p\r\n    const dLen2 = (dx * dx) + (dy * dy);\r\n    let px = dx;\r\n    let py = dy;\r\n\r\n    if (dLen2 > 0)\r\n    {\r\n        const dp = ((lcx * dx) + (lcy * dy)) / dLen2;\r\n\r\n        px *= dp;\r\n        py *= dp;\r\n    }\r\n\r\n    nearest.set(x1 + px, y1 + py);\r\n\r\n    //  len2 of p\r\n    const pLen2 = (px * px) + (py * py);\r\n\r\n    return (\r\n        pLen2 <= dLen2 &&\r\n        ((px * dx) + (py * dy)) >= 0 &&\r\n        Contains(circle, nearest.x, nearest.y)\r\n    );\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from '../circle/ICircle';\r\nimport { ILine } from '../line/ILine';\r\nimport { LineToCircle } from './LineToCircle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks for intersection between the line segment and circle,\r\n * and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetLineToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line segment to check.\r\n * @param {Phaser.Geom.Circle} circle - The circle to check against the line.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetLineToCircle (line: ILine, circle: ICircle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (LineToCircle(line, circle))\r\n    {\r\n        const { x1, y1, x2, y2 } = line;\r\n\r\n        const cr = circle.radius;\r\n\r\n        const lDirX = x2 - x1;\r\n        const lDirY = y2 - y1;\r\n        const oDirX = x1 - circle.x;\r\n        const oDirY = y1 - circle.y;\r\n\r\n        const coefficientA = lDirX * lDirX + lDirY * lDirY;\r\n        const coefficientB = 2 * (lDirX * oDirX + lDirY * oDirY);\r\n        const coefficientC = oDirX * oDirX + oDirY * oDirY - cr * cr;\r\n\r\n        const lambda = (coefficientB * coefficientB) - (4 * coefficientA * coefficientC);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        if (lambda === 0)\r\n        {\r\n            const root = -coefficientB / (2 * coefficientA);\r\n\r\n            x = x1 + root * lDirX;\r\n            y = y1 + root * lDirY;\r\n\r\n            if (root >= 0 && root <= 1)\r\n            {\r\n                out.push(new Vec2(x, y));\r\n            }\r\n        }\r\n        else if (lambda > 0)\r\n        {\r\n            const root1 = (-coefficientB - Math.sqrt(lambda)) / (2 * coefficientA);\r\n\r\n            x = x1 + root1 * lDirX;\r\n            y = y1 + root1 * lDirY;\r\n\r\n            if (root1 >= 0 && root1 <= 1)\r\n            {\r\n                out.push(new Vec2(x, y));\r\n            }\r\n\r\n            const root2 = (-coefficientB + Math.sqrt(lambda)) / (2 * coefficientA);\r\n\r\n            x = x1 + root2 * lDirX;\r\n            y = y1 + root2 * lDirY;\r\n\r\n            if (root2 >= 0 && root2 <= 1)\r\n            {\r\n                out.push(new Vec2(x, y));\r\n            }\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { CircleToRectangle } from './CircleToRectangle';\r\nimport { GetEdges } from '../rectangle/GetEdges';\r\nimport { GetLineToCircle } from './GetLineToCircle';\r\nimport { ICircle } from '../circle/ICircle';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks for intersection between a circle and a rectangle,\r\n * and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetCircleToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The circle to be checked.\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle to be checked.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetCircleToRectangle (circle: ICircle, rect: IRectangle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (CircleToRectangle(circle, rect))\r\n    {\r\n        const [ line1, line2, line3, line4 ] = GetEdges(rect);\r\n\r\n        GetLineToCircle(line1, circle, out);\r\n        GetLineToCircle(line2, circle, out);\r\n        GetLineToCircle(line3, circle, out);\r\n        GetLineToCircle(line4, circle, out);\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from '../line/ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if two Lines intersect.\r\n * If the Lines are identical, they will be treated as parallel and thus non-intersecting.\r\n * \r\n * This is based off an explanation and expanded math presented by Paul Bourke:\r\n * See http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/\r\n *\r\n * @function Phaser.Geom.Intersects.LineToLine\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line1 - The first Line to check.\r\n * @param {Phaser.Geom.Line} line2 - The second Line to check.\r\n * @param {Phaser.Geom.Point} [out] - A Point in which to optionally store the point of intersection.\r\n *\r\n * @return {boolean} `true` if the two Lines intersect, and the `out` object will be populated, if given. Otherwise, `false`.\r\n */\r\nexport function LineToLine (line1: ILine, line2: ILine, out?: Vec2): boolean\r\n{\r\n    const { x1, y1, x2, y2 } = line1;\r\n    const { x1: x3, y1: y3, x2: x4, y2: y4 } = line2;\r\n\r\n    const numA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\r\n    const numB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\r\n    const deNom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n\r\n    //  Make sure there is not a division by zero - this also indicates that the lines are parallel.\r\n    //  If numA and numB were both equal to zero the lines would be on top of each other (coincidental).\r\n    //  This check is not done because it is not necessary for this implementation (the parallel check accounts for this).\r\n\r\n    if (deNom === 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    //  Calculate the intermediate fractional point that the lines potentially intersect.\r\n\r\n    const uA = numA / deNom;\r\n    const uB = numB / deNom;\r\n\r\n    //  The fractional point will be between 0 and 1 inclusive if the lines intersect.\r\n    //  If the fractional calculation is larger than 1 or smaller than 0 the lines would need to be longer to intersect.\r\n\r\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1)\r\n    {\r\n        if (out)\r\n        {\r\n            out.set(\r\n                x1 + (uA * (x2 - x1)),\r\n                y1 + (uA * (y2 - y1))\r\n            );\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from '../line/ILine';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\n\r\n/**\r\n * Checks for intersection between the Line and a Rectangle shape, or a rectangle-like\r\n * object, with public `x`, `y`, `right` and `bottom` properties, such as a Sprite or Body.\r\n *\r\n * An intersection is considered valid if:\r\n *\r\n * The line starts within, or ends within, the Rectangle.\r\n * The line segment intersects one of the 4 rectangle edges.\r\n *\r\n * The for the purposes of this function rectangles are considered 'solid'.\r\n *\r\n * @function Phaser.Geom.Intersects.LineToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line to check for intersection.\r\n * @param {(Phaser.Geom.Rectangle|object)} rect - The Rectangle to check for intersection.\r\n *\r\n * @return {boolean} `true` if the Line and the Rectangle intersect, `false` otherwise.\r\n */\r\nexport function LineToRectangle (line: ILine, rect: IRectangle): boolean\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n    const { x, y, right, bottom } = rect;\r\n\r\n    let t = 0;\r\n\r\n    //  If the start or end of the line is inside the rect then we assume\r\n    //  collision, as rects are solid for our use-case.\r\n\r\n    if ((x1 >= x && x1 <= right && y1 >= y && y1 <= bottom) ||\r\n        (x2 >= x && x2 <= right && y2 >= y && y2 <= bottom))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (x1 < x && x2 >= x)\r\n    {\r\n        //  Left edge\r\n        t = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\r\n\r\n        if (t > y && t <= bottom)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    else if (x1 > right && x2 <= right)\r\n    {\r\n        //  Right edge\r\n        t = y1 + (y2 - y1) * (right - x1) / (x2 - x1);\r\n\r\n        if (t >= y && t <= bottom)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    if (y1 < y && y2 >= y)\r\n    {\r\n        //  Top edge\r\n        t = x1 + (x2 - x1) * (y - y1) / (y2 - y1);\r\n\r\n        if (t >= x && t <= right)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    else if (y1 > bottom && y2 <= bottom)\r\n    {\r\n        //  Bottom edge\r\n        t = x1 + (x2 - x1) * (bottom - y1) / (y2 - y1);\r\n\r\n        if (t >= x && t <= right)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from '../rectangle/GetEdges';\r\nimport { ILine } from '../line/ILine';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\nimport { LineToLine } from './LineToLine';\r\nimport { LineToRectangle } from './LineToRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks for intersection between the Line and a Rectangle shape,\r\n * and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetLineToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line to check for intersection.\r\n * @param {(Phaser.Geom.Rectangle|object)} rect - The Rectangle to check for intersection.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetLineToRectangle (line: ILine, rect: IRectangle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (LineToRectangle(line, rect))\r\n    {\r\n        const [ lineA, lineB, lineC, lineD ] = GetEdges(rect);\r\n\r\n        const points = [ new Vec2(), new Vec2(), new Vec2(), new Vec2() ];\r\n\r\n        const results = [\r\n            LineToLine(lineA, line, points[0]),\r\n            LineToLine(lineB, line, points[1]),\r\n            LineToLine(lineC, line, points[2]),\r\n            LineToLine(lineD, line, points[3])\r\n        ];\r\n\r\n        for (let i = 0; i < results.length; i++)\r\n        {\r\n            if (results[i])\r\n            {\r\n                out.push(points[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\nimport { Rectangle } from '../rectangle/Rectangle';\r\nimport { RectangleToRectangle } from './RectangleToRectangle';\r\n\r\n/**\r\n * Checks if two Rectangle shapes intersect and returns the area of this intersection as Rectangle object.\r\n *\r\n * If optional `output` parameter is omitted, new Rectangle object is created and returned. If there is intersection, it will contain intersection area. If there is no intersection, it wil be empty Rectangle (all values set to zero).\r\n *\r\n * If Rectangle object is passed as `output` and there is intersection, then intersection area data will be loaded into it and it will be returned. If there is no intersection, it will be returned without any change.\r\n *\r\n * @function Phaser.Geom.Intersects.GetRectangleIntersection\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Rectangle} O - [output,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle object.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle object.\r\n * @param {Phaser.Geom.Rectangle} [output] - Optional Rectangle object. If given, the intersection data will be loaded into it (in case of no intersection, it will be left unchanged). Otherwise, new Rectangle object will be created and returned with either intersection data or empty (all values set to zero), if there is no intersection.\r\n *\r\n * @return {Phaser.Geom.Rectangle} A rectangle object with intersection data.\r\n */\r\nexport function GetRectangleIntersection (rectA: IRectangle, rectB: IRectangle, out: Rectangle = new Rectangle()): Rectangle\r\n{\r\n    if (RectangleToRectangle(rectA, rectB))\r\n    {\r\n        const x = Math.max(rectA.x, rectB.x);\r\n        const y = Math.max(rectA.y, rectB.y);\r\n\r\n        return out.set(\r\n            x,\r\n            y,\r\n            Math.min(rectA.right, rectB.right) - x,\r\n            Math.min(rectA.bottom, rectB.bottom) - y\r\n        );\r\n    }\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from '../rectangle/GetEdges';\r\nimport { GetLineToRectangle } from './GetLineToRectangle';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\nimport { RectangleToRectangle } from './RectangleToRectangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if two Rectangles intersect and returns the intersection points as a Point object array.\r\n *\r\n * A Rectangle intersects another Rectangle if any part of its bounds is within the other Rectangle's bounds. As such, the two Rectangles are considered \"solid\". A Rectangle with no width or no height will never intersect another Rectangle.\r\n *\r\n * @function Phaser.Geom.Intersects.GetRectangleToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to check for intersection.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to check for intersection.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetRectangleToRectangle (rectA: IRectangle, rectB: IRectangle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (RectangleToRectangle(rectA, rectB))\r\n    {\r\n        const [ lineA, lineB, lineC, lineD ] = GetEdges(rectA);\r\n\r\n        GetLineToRectangle(lineA, rectB, out);\r\n        GetLineToRectangle(lineB, rectB, out);\r\n        GetLineToRectangle(lineC, rectB, out);\r\n        GetLineToRectangle(lineD, rectB, out);\r\n    }\r\n\r\n    return out;\r\n}\r\n","import { ITriangle } from './ITriangle';\r\nimport { Line } from '../line/Line';\r\n\r\nexport function GetEdges (triangle: ITriangle): Line[]\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    const edge1 = new Line(x1, y1, x2, y2);\r\n    const edge2 = new Line(x2, y2, x3, y3);\r\n    const edge3 = new Line(x3, y3, x1, y1);\r\n\r\n    return [ edge1, edge2, edge3 ];\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\n\r\n/**\r\n * Checks if a point (as a pair of coordinates) is inside a Triangle's bounds.\r\n * \r\n * http://www.blackpawn.com/texts/pointinpoly/\r\n *\r\n * @function Phaser.Geom.Triangle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to check.\r\n * @param {number} x - The X coordinate of the point to check.\r\n * @param {number} y - The Y coordinate of the point to check.\r\n *\r\n * @return {boolean} `true` if the point is inside the Triangle, otherwise `false`.\r\n */\r\nexport function Contains (triangle: ITriangle, x: number, y: number): boolean\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    const v0x = x3 - x1;\r\n    const v0y = y3 - y1;\r\n\r\n    const v1x = x2 - x1;\r\n    const v1y = y2 - y1;\r\n\r\n    const v2x = x - x1;\r\n    const v2y = y - y1;\r\n\r\n    const dot00 = (v0x * v0x) + (v0y * v0y);\r\n    const dot01 = (v0x * v1x) + (v0y * v1y);\r\n    const dot02 = (v0x * v2x) + (v0y * v2y);\r\n    const dot11 = (v1x * v1x) + (v1y * v1y);\r\n    const dot12 = (v1x * v2x) + (v1y * v2y);\r\n\r\n    // Compute barycentric coordinates\r\n    const b = ((dot00 * dot11) - (dot01 * dot01));\r\n    const inv = (b === 0) ? 0 : (1 / b);\r\n    const u = ((dot11 * dot02) - (dot01 * dot12)) * inv;\r\n    const v = ((dot00 * dot12) - (dot01 * dot02)) * inv;\r\n\r\n    return (u >= 0 && v >= 0 && (u + v < 1));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\nimport { ITriangle } from './ITriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Filters an array of point-like objects to only those contained within a triangle.\r\n * If `returnFirst` is true, will return an array containing only the first point in the provided array that is within the triangle (or an empty array if there are no such points).\r\n *\r\n * http://www.blackpawn.com/texts/pointinpoly/\r\n *\r\n * points is an array of Point-like objects with public x/y properties\r\n * returns an array containing all points that are within the triangle, or an empty array if none\r\n * if 'returnFirst' is true it will return after the first point within the triangle is found\r\n *\r\n * @function Phaser.Geom.Triangle.ContainsArray\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The triangle that the points are being checked in.\r\n * @param {Phaser.Geom.Point[]} points - An array of point-like objects (objects that have an `x` and `y` property)\r\n * @param {boolean} [returnFirst=false] - If `true`, return an array containing only the first point found that is within the triangle.\r\n * @param {array} [out] - If provided, the points that are within the triangle will be appended to this array instead of being added to a new array. If `returnFirst` is true, only the first point found within the triangle will be appended. This array will also be returned by this function.\r\n *\r\n * @return {Phaser.Geom.Point[]} An array containing all the points from `points` that are within the triangle, if an array was provided as `out`, points will be appended to that array and it will also be returned here.\r\n */\r\nexport function ContainsArray (triangle: ITriangle, points: Vec2[], returnFirst: boolean = false, out: Vec2[] = []): Vec2[]\r\n{\r\n    let skip = false;\r\n\r\n    points.forEach(point =>\r\n    {\r\n        if (skip)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const { x, y } = point;\r\n\r\n        if (Contains(triangle, x, y))\r\n        {\r\n            out.push(new Vec2(x, y));\r\n\r\n            if (returnFirst)\r\n            {\r\n                skip = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from '../rectangle/Contains';\r\nimport { ContainsArray } from '../triangle/ContainsArray';\r\nimport { Decompose } from '../rectangle/Decompose';\r\nimport { GetEdges as GetRectangleEdges } from '../rectangle/GetEdges';\r\nimport { GetEdges as GetTriangleEdges } from '../triangle/GetEdges';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { LineToLine } from './LineToLine';\r\n\r\n/**\r\n * Checks for intersection between Rectangle shape and Triangle shape.\r\n *\r\n * @function Phaser.Geom.Intersects.RectangleToTriangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - Rectangle object to test.\r\n * @param {Phaser.Geom.Triangle} triangle - Triangle object to test.\r\n *\r\n * @return {boolean} A value of `true` if objects intersect; otherwise `false`.\r\n */\r\nexport function RectangleToTriangle (rect: IRectangle, triangle: ITriangle): boolean\r\n{\r\n    //  First the cheapest ones:\r\n\r\n    if (\r\n        triangle.left > rect.right ||\r\n        triangle.right < rect.x ||\r\n        triangle.top > rect.bottom ||\r\n        triangle.bottom < rect.y)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const [ triA, triB, triC ] = GetTriangleEdges(triangle);\r\n\r\n    //  Are any of the triangle points within the rectangle?\r\n\r\n    if (Contains(rect, triA.x1, triA.y1) || Contains(rect, triA.x2, triA.y2))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (Contains(rect, triB.x1, triB.y1) || Contains(rect, triB.x2, triB.y2))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (Contains(rect, triC.x1, triC.y1) || Contains(rect, triC.x2, triC.y2))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    //  Cheap tests over, now to see if any of the lines intersect ...\r\n\r\n    const [ rectA, rectB, rectC, rectD ] = GetRectangleEdges(rect);\r\n\r\n    if (LineToLine(triA, rectA) || LineToLine(triA, rectB) || LineToLine(triA, rectC) || LineToLine(triA, rectD))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (LineToLine(triB, rectA) || LineToLine(triB, rectB) || LineToLine(triB, rectC) || LineToLine(triB, rectD))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (LineToLine(triC, rectA) || LineToLine(triC, rectB) || LineToLine(triC, rectC) || LineToLine(triC, rectD))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    //  None of the lines intersect, so are any rectangle points within the triangle?\r\n\r\n    const within = ContainsArray(triangle, Decompose(rect), true);\r\n\r\n    return (within.length > 0);\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from '../triangle/GetEdges';\r\nimport { GetLineToRectangle } from './GetLineToRectangle';\r\nimport { IRectangle } from '../rectangle/IRectangle';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { RectangleToTriangle } from './RectangleToTriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks for intersection between Rectangle shape and Triangle shape,\r\n * and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetRectangleToTriangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rect - Rectangle object to test.\r\n * @param {Phaser.Geom.Triangle} triangle - Triangle object to test.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetRectangleToTriangle (rect: IRectangle, triangle: ITriangle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (RectangleToTriangle(rect, triangle))\r\n    {\r\n        const [ lineA, lineB, lineC ] = GetEdges(triangle);\r\n\r\n        GetLineToRectangle(lineA, rect, out);\r\n        GetLineToRectangle(lineB, rect, out);\r\n        GetLineToRectangle(lineC, rect, out);\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from '../triangle/Contains';\r\nimport { GetEdges } from '../triangle/GetEdges';\r\nimport { ICircle } from '../circle/ICircle';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { LineToCircle } from './LineToCircle';\r\n\r\n/**\r\n * Checks if a Triangle and a Circle intersect.\r\n *\r\n * A Circle intersects a Triangle if its center is located within it or if any of the Triangle's sides intersect the Circle. As such, the Triangle and the Circle are considered \"solid\" for the intersection.\r\n *\r\n * @function Phaser.Geom.Intersects.TriangleToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to check for intersection.\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check for intersection.\r\n *\r\n * @return {boolean} `true` if the Triangle and the `Circle` intersect, otherwise `false`.\r\n */\r\nexport function TriangleToCircle (triangle: ITriangle, circle: ICircle): boolean\r\n{\r\n    //  First the cheapest ones:\r\n\r\n    if (\r\n        triangle.left > circle.right ||\r\n        triangle.right < circle.left ||\r\n        triangle.top > circle.bottom ||\r\n        triangle.bottom < circle.top)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    if (Contains(triangle, circle.x, circle.y))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    const [ line1, line2, line3 ] = GetEdges(triangle);\r\n\r\n    return (\r\n        LineToCircle(line1, circle) ||\r\n        LineToCircle(line2, circle) ||\r\n        LineToCircle(line3, circle)\r\n    );\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from '../triangle/GetEdges';\r\nimport { GetLineToCircle } from './GetLineToCircle';\r\nimport { ICircle } from '../circle/ICircle';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { TriangleToCircle } from './TriangleToCircle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if a Triangle and a Circle intersect, and returns the intersection points as a Point object array.\r\n *\r\n * A Circle intersects a Triangle if its center is located within it or if any of the Triangle's sides intersect the Circle. As such, the Triangle and the Circle are considered \"solid\" for the intersection.\r\n *\r\n * @function Phaser.Geom.Intersects.GetTriangleToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to check for intersection.\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check for intersection.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetTriangleToCircle (triangle: ITriangle, circle: ICircle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (TriangleToCircle(triangle, circle))\r\n    {\r\n        const [ lineA, lineB, lineC ] = GetEdges(triangle);\r\n\r\n        GetLineToCircle(lineA, circle, out);\r\n        GetLineToCircle(lineB, circle, out);\r\n        GetLineToCircle(lineC, circle, out);\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from '../triangle/Contains';\r\nimport { GetEdges } from '../triangle/GetEdges';\r\nimport { ILine } from '../line/ILine';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { LineToLine } from './LineToLine';\r\n\r\n/**\r\n * Checks if a Triangle and a Line intersect.\r\n *\r\n * The Line intersects the Triangle if it starts inside of it, ends inside of it, or crosses any of the Triangle's sides. Thus, the Triangle is considered \"solid\".\r\n *\r\n * @function Phaser.Geom.Intersects.TriangleToLine\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to check with.\r\n * @param {Phaser.Geom.Line} line - The Line to check with.\r\n *\r\n * @return {boolean} `true` if the Triangle and the Line intersect, otherwise `false`.\r\n */\r\nexport function TriangleToLine (triangle: ITriangle, line: ILine): boolean\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    //  If the Triangle contains either the start or end point of the line, it intersects\r\n    if (Contains(triangle, x1, y1) || Contains(triangle, x2, y2))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    const [ line1, line2, line3 ] = GetEdges(triangle);\r\n\r\n    //  Now check the line against each line of the Triangle\r\n    return (\r\n        LineToLine(line1, line) ||\r\n        LineToLine(line2, line) ||\r\n        LineToLine(line3, line)\r\n    );\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from '../triangle/GetEdges';\r\nimport { ILine } from '../line/ILine';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { LineToLine } from './LineToLine';\r\nimport { TriangleToLine } from './TriangleToLine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if a Triangle and a Line intersect, and returns the intersection points as a Point object array.\r\n *\r\n * The Line intersects the Triangle if it starts inside of it, ends inside of it, or crosses any of the Triangle's sides. Thus, the Triangle is considered \"solid\".\r\n *\r\n * @function Phaser.Geom.Intersects.GetTriangleToLine\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to check with.\r\n * @param {Phaser.Geom.Line} line - The Line to check with.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetTriangleToLine (triangle: ITriangle, line: ILine, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (TriangleToLine(triangle, line))\r\n    {\r\n        const [ lineA, lineB, lineC ] = GetEdges(triangle);\r\n\r\n        const points = [ new Vec2(), new Vec2(), new Vec2() ];\r\n\r\n        const results = [\r\n            LineToLine(lineA, line, points[0]),\r\n            LineToLine(lineB, line, points[1]),\r\n            LineToLine(lineC, line, points[2])\r\n        ];\r\n\r\n        for (let i = 0; i < results.length; i++)\r\n        {\r\n            if (results[i])\r\n            {\r\n                out.push(points[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Decomposes a Triangle into an array of its points.\r\n *\r\n * @function Phaser.Geom.Triangle.Decompose\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to decompose.\r\n * @param {array} [out] - An array to store the points into.\r\n *\r\n * @return {array} The provided `out` array, or a new array if none was provided, with three objects with `x` and `y` properties representing each point of the Triangle appended to it.\r\n */\r\nexport function Decompose (triangle: ITriangle, out: Vec2[] = []): Vec2[]\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    out.push(\r\n        new Vec2(x1, y1),\r\n        new Vec2(x2, y2),\r\n        new Vec2(x3, y3)\r\n    );\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ContainsArray } from '../triangle/ContainsArray';\r\nimport { Decompose } from '../triangle/Decompose';\r\nimport { GetEdges } from '../triangle/GetEdges';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { LineToLine } from './LineToLine';\r\n\r\n/**\r\n * Checks if two Triangles intersect.\r\n *\r\n * A Triangle intersects another Triangle if any pair of their lines intersects or if any point of one Triangle is within the other Triangle. Thus, the Triangles are considered \"solid\".\r\n *\r\n * @function Phaser.Geom.Intersects.TriangleToTriangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangleA - The first Triangle to check for intersection.\r\n * @param {Phaser.Geom.Triangle} triangleB - The second Triangle to check for intersection.\r\n *\r\n * @return {boolean} `true` if the Triangles intersect, otherwise `false`.\r\n */\r\nexport function TriangleToTriangle (triangleA: ITriangle, triangleB: ITriangle): boolean\r\n{\r\n    //  First the cheapest ones:\r\n    if (\r\n        triangleA.left > triangleB.right ||\r\n        triangleA.right < triangleB.left ||\r\n        triangleA.top > triangleB.bottom ||\r\n        triangleA.bottom < triangleB.top)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const [ lineAA, lineAB, lineAC ] = GetEdges(triangleA);\r\n    const [ lineBA, lineBB, lineBC ] = GetEdges(triangleB);\r\n\r\n    //  Now check the lines against each line of TriangleB\r\n    if (\r\n        LineToLine(lineAA, lineBA) ||\r\n        LineToLine(lineAA, lineBB) ||\r\n        LineToLine(lineAA, lineBC) ||\r\n        LineToLine(lineAB, lineBA) ||\r\n        LineToLine(lineAB, lineBB) ||\r\n        LineToLine(lineAB, lineBC) ||\r\n        LineToLine(lineAC, lineBA) ||\r\n        LineToLine(lineAC, lineBB) ||\r\n        LineToLine(lineAC, lineBC)\r\n    )\r\n    {\r\n        return true;\r\n    }\r\n\r\n    //  Nope, so check to see if any of the points of triangleA are within triangleB\r\n\r\n    const withinA = ContainsArray(triangleB, Decompose(triangleA), true);\r\n\r\n    if (withinA.length > 0)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    //  Finally check to see if any of the points of triangleB are within triangleA\r\n\r\n    const withinB = ContainsArray(triangleA, Decompose(triangleB), true);\r\n\r\n    return (withinB.length > 0);\r\n}\r\n","/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from '../triangle/GetEdges';\r\nimport { GetTriangleToLine } from './GetTriangleToLine';\r\nimport { ITriangle } from '../triangle/ITriangle';\r\nimport { TriangleToTriangle } from './TriangleToTriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if two Triangles intersect, and returns the intersection points as a Point object array.\r\n *\r\n * A Triangle intersects another Triangle if any pair of their lines intersects or if any point of one Triangle is within the other Triangle. Thus, the Triangles are considered \"solid\".\r\n *\r\n * @function Phaser.Geom.Intersects.GetTriangleToTriangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangleA - The first Triangle to check for intersection.\r\n * @param {Phaser.Geom.Triangle} triangleB - The second Triangle to check for intersection.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nexport function GetTriangleToTriangle (triangleA: ITriangle, triangleB: ITriangle, out: Vec2[] = []): Vec2[]\r\n{\r\n    if (TriangleToTriangle(triangleA, triangleB))\r\n    {\r\n        const [ lineA, lineB, lineC ] = GetEdges(triangleB);\r\n\r\n        GetTriangleToLine(triangleA, lineA, out);\r\n        GetTriangleToLine(triangleA, lineB, out);\r\n        GetTriangleToLine(triangleA, lineC, out);\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Florian Mertens\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from '../line/ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if the a Point falls between the two end-points of a Line, based on the given line thickness.\r\n *\r\n * Assumes that the line end points are circular, not square.\r\n *\r\n * @function Phaser.Geom.Intersects.PointToLine\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Geom.Point|any)} point - The point, or point-like object to check.\r\n * @param {Phaser.Geom.Line} line - The line segment to test for intersection on.\r\n * @param {number} [lineThickness=1] - The line thickness. Assumes that the line end points are circular.\r\n *\r\n * @return {boolean} `true` if the Point falls on the Line, otherwise `false`.\r\n */\r\nexport function PointToLine (point: Vec2, line: ILine, lineThickness: number = 1): boolean\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n    const { x: px, y: py } = point;\r\n\r\n    const L2 = (((x2 - x1) * (x2 - x1)) + ((y2 - y1) * (y2 - y1)));\r\n\r\n    if (L2 === 0)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const r = (((px - x1) * (x2 - x1)) + ((py - y1) * (y2 - y1))) / L2;\r\n\r\n    //  Assume line thickness is circular\r\n    if (r < 0)\r\n    {\r\n        //  Outside line1\r\n        return (Math.sqrt(((x1 - px) * (x1 - px)) + ((y1 - py) * (y1 - py))) <= lineThickness);\r\n    }\r\n    else if ((r >= 0) && (r <= 1))\r\n    {\r\n        //  On the line segment\r\n        const s = (((y1 - py) * (x2 - x1)) - ((x1 - px) * (y2 - y1))) / L2;\r\n\r\n        return (Math.abs(s) * Math.sqrt(L2) <= lineThickness);\r\n    }\r\n    else\r\n    {\r\n        //  Outside line2\r\n        return (Math.sqrt(((x2 - px) * (x2 - px)) + ((y2 - py) * (y2 - py))) <= lineThickness);\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from '../line/ILine';\r\nimport { PointToLine } from './PointToLine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Checks if a Point is located on the given line segment.\r\n *\r\n * @function Phaser.Geom.Intersects.PointToLineSegment\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Point} point - The Point to check for intersection.\r\n * @param {Phaser.Geom.Line} line - The line segment to check for intersection.\r\n *\r\n * @return {boolean} `true` if the Point is on the given line segment, otherwise `false`.\r\n */\r\nexport function PointToLineSegment (point: Vec2, line: ILine): boolean\r\n{\r\n    if (!PointToLine(point, line))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const { x1, y1, x2, y2 } = line;\r\n    const { x, y } = point;\r\n\r\n    const xMin = Math.min(x1, x2);\r\n    const xMax = Math.max(x1, x2);\r\n    const yMin = Math.min(y1, y2);\r\n    const yMax = Math.max(y1, y2);\r\n\r\n    return ((x >= xMin && x <= xMax) && (y >= yMin && y <= yMax));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Calculate the angle of the line in radians.\r\n *\r\n * @function Phaser.Geom.Line.Angle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the angle of.\r\n *\r\n * @return {number} The angle of the line, in radians.\r\n */\r\nexport function Angle (line: ILine): number\r\n{\r\n    return Math.atan2(line.y2 - line.y1, line.x2 - line.x1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Using Bresenham's line algorithm this will return an array of all coordinates on this line.\r\n *\r\n * The `start` and `end` points are rounded before this runs as the algorithm works on integers.\r\n *\r\n * @function Phaser.Geom.Line.BresenhamPoints\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line.\r\n * @param {integer} [stepRate=1] - The optional step rate for the points on the line.\r\n * @param {Phaser.Types.Math.Vector2Like[]} [results] - An optional array to push the resulting coordinates into.\r\n *\r\n * @return {Phaser.Types.Math.Vector2Like[]} The array of coordinates on the line.\r\n */\r\nexport function BresenhamPoints (line: ILine, stepRate: number = 1, results: Vec2[] = []): Vec2[]\r\n{\r\n    let x1 = Math.round(line.x1);\r\n    let y1 = Math.round(line.y1);\r\n    const x2 = Math.round(line.x2);\r\n    const y2 = Math.round(line.y2);\r\n\r\n    const dx = Math.abs(x2 - x1);\r\n    const dy = Math.abs(y2 - y1);\r\n    const sx = (x1 < x2) ? 1 : -1;\r\n    const sy = (y1 < y2) ? 1 : -1;\r\n    let err = dx - dy;\r\n\r\n    results.push(new Vec2(x1, y1));\r\n\r\n    let i = 1;\r\n\r\n    while (!((x1 === x2) && (y1 === y2)))\r\n    {\r\n        const e2 = err << 1;\r\n\r\n        if (e2 > -dy)\r\n        {\r\n            err -= dy;\r\n            x1 += sx;\r\n        }\r\n\r\n        if (e2 < dx)\r\n        {\r\n            err += dx;\r\n            y1 += sy;\r\n        }\r\n\r\n        if (i % stepRate === 0)\r\n        {\r\n            results.push(new Vec2(x1, y1));\r\n        }\r\n\r\n        i++;\r\n    }\r\n\r\n    return results;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Center a line on the given coordinates.\r\n *\r\n * @function Phaser.Geom.Line.CenterOn\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to center.\r\n * @param {number} x - The horizontal coordinate to center the line on.\r\n * @param {number} y - The vertical coordinate to center the line on.\r\n *\r\n * @return {Phaser.Geom.Line} The centered line.\r\n */\r\nexport function CenterOn (line: ILine, x: number, y: number): ILine\r\n{\r\n    const tx = x - ((line.x1 + line.x2) / 2);\r\n    const ty = y - ((line.y1 + line.y2) / 2);\r\n\r\n    line.x1 += tx;\r\n    line.y1 += ty;\r\n\r\n    line.x2 += tx;\r\n    line.y2 += ty;\r\n\r\n    return line;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Line } from './Line';\r\n\r\n/**\r\n * Clone the given line.\r\n *\r\n * @function Phaser.Geom.Line.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} source - The source line to clone.\r\n *\r\n * @return {Phaser.Geom.Line} The cloned line.\r\n */\r\nexport function Clone (source: ILine): Line\r\n{\r\n    return new Line(source.x1, source.y1, source.x2, source.y2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Copy the values of one line to a destination line.\r\n *\r\n * @function Phaser.Geom.Line.CopyFrom\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [dest,$return]\r\n *\r\n * @param {Phaser.Geom.Line} source - The source line to copy the values from.\r\n * @param {Phaser.Geom.Line} dest - The destination line to copy the values to.\r\n *\r\n * @return {Phaser.Geom.Line} The destination line.\r\n */\r\nexport function CopyFrom (source: ILine, dest: ILine): ILine\r\n{\r\n    return dest.set(source.x1, source.y1, source.x2, source.y2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Compare two lines for strict equality.\r\n *\r\n * @function Phaser.Geom.Line.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The first line to compare.\r\n * @param {Phaser.Geom.Line} toCompare - The second line to compare.\r\n *\r\n * @return {boolean} Whether the two lines are equal.\r\n */\r\nexport function Equals (line: ILine, toCompare: ILine): boolean\r\n{\r\n    return (\r\n        line.x1 === toCompare.x1 &&\r\n        line.y1 === toCompare.y1 &&\r\n        line.x2 === toCompare.x2 &&\r\n        line.y2 === toCompare.y2\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Calculate the length of the given line.\r\n *\r\n * @function Phaser.Geom.Line.Length\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the length of.\r\n *\r\n * @return {number} The length of the line.\r\n */\r\nexport function Length (line: ILine): number\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Length } from './Length';\r\n\r\n/**\r\n * Extends the start and end points of a Line by the given amounts.\r\n *\r\n * The amounts can be positive or negative. Positive points will increase the length of the line,\r\n * while negative ones will decrease it.\r\n *\r\n * If no `right` value is provided it will extend the length of the line equally in both directions.\r\n *\r\n * Pass a value of zero to leave the start or end point unchanged.\r\n *\r\n * @function Phaser.Geom.Line.Extend\r\n * @since 3.16.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line instance to extend.\r\n * @param {number} left - The amount to extend the start of the line by.\r\n * @param {number} [right] - The amount to extend the end of the line by. If not given it will be set to the `left` value.\r\n *\r\n * @return {Phaser.Geom.Line} The modified Line instance.\r\n */\r\nexport function Extend (line: ILine, left: number, right: number = left): ILine\r\n{\r\n    const length = Length(line);\r\n\r\n    const slopX = line.x2 - line.x1;\r\n    const slopY = line.y2 - line.y1;\r\n\r\n    if (left)\r\n    {\r\n        line.x1 = line.x1 - slopX / length * left;\r\n        line.y1 = line.y1 - slopY / length * left;\r\n    }\r\n\r\n    if (right)\r\n    {\r\n        line.x2 = line.x2 + slopX / length * right;\r\n        line.y2 = line.y2 + slopY / length * right;\r\n    }\r\n\r\n    return line;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Get the midpoint of the given line.\r\n *\r\n * @function Phaser.Geom.Line.GetMidPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to get the midpoint of.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point object to store the midpoint in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The midpoint of the Line.\r\n */\r\nexport function GetMidPoint (line: ILine, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    out.x = (line.x1 + line.x2) / 2;\r\n    out.y = (line.y1 + line.y2) / 2;\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Florian Mertens\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Get the nearest point on a line perpendicular to the given point.\r\n *\r\n * @function Phaser.Geom.Line.GetNearestPoint\r\n * @since 3.16.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to get the nearest point on.\r\n * @param {(Phaser.Geom.Point|object)} point - The point to get the nearest point to.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point, or point-like object, to store the coordinates of the nearest point on the line.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The nearest point on the line.\r\n */\r\nexport function GetNearestPoint (line: ILine, point: Vec2, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    const L2 = (((x2 - x1) * (x2 - x1)) + ((y2 - y1) * (y2 - y1)));\r\n\r\n    if (L2 === 0)\r\n    {\r\n        return out;\r\n    }\r\n\r\n    const r = (((point.x - x1) * (x2 - x1)) + ((point.y - y1) * (y2 - y1))) / L2;\r\n\r\n    out.x = x1 + (r * (x2 - x1));\r\n    out.y = y1 + (r * (y2 - y1));\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Angle } from './Angle';\r\nimport { ILine } from './ILine';\r\nimport { MATH_CONST } from '../../math/const';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Calculate the normal of the given line.\r\n *\r\n * The normal of a line is a vector that points perpendicular from it.\r\n *\r\n * @function Phaser.Geom.Line.GetNormal\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the normal of.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point object to store the normal in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The normal of the Line.\r\n */\r\nexport function GetNormal (line: ILine, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const a = Angle(line) - MATH_CONST.HALF_PI;\r\n\r\n    out.x = Math.cos(a);\r\n    out.y = Math.sin(a);\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Get a point on a line that's a given percentage along its length.\r\n *\r\n * @function Phaser.Geom.Line.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line.\r\n * @param {number} position - A value between 0 and 1, where 0 is the start, 0.5 is the middle and 1 is the end of the line.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An optional point, or point-like object, to store the coordinates of the point on the line.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The point on the line.\r\n */\r\nexport function GetPoint (line: ILine, position: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    out.x = line.x1 + (line.x2 - line.x1) * position;\r\n    out.y = line.y1 + (line.y2 - line.y1) * position;\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Length } from './Length';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Get a number of points along a line's length.\r\n *\r\n * Provide a `quantity` to get an exact number of points along the line.\r\n *\r\n * Provide a `stepRate` to ensure a specific distance between each point on the line. Set `quantity` to `0` when\r\n * providing a `stepRate`.\r\n *\r\n * @function Phaser.Geom.Line.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point[]} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line.\r\n * @param {integer} quantity - The number of points to place on the line. Set to `0` to use `stepRate` instead.\r\n * @param {number} [stepRate] - The distance between each point on the line. When set, `quantity` is implied and should be set to `0`.\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An optional array of Points, or point-like objects, to store the coordinates of the points on the line.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} An array of Points, or point-like objects, containing the coordinates of the points on the line.\r\n */\r\nexport function GetPoints (line: ILine, quantity: number, stepRate: number = 0, out: Vec2[] = []): Vec2[]\r\n{\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity)\r\n    {\r\n        quantity = Length(line) / stepRate;\r\n    }\r\n\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    for (let i = 0; i < quantity; i++)\r\n    {\r\n        const position = i / quantity;\r\n\r\n        const x = x1 + (x2 - x1) * position;\r\n        const y = y1 + (y2 - y1) * position;\r\n\r\n        out.push(new Vec2(x, y));\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       Florian Mertens\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Get the shortest distance from a Line to the given Point.\r\n *\r\n * @function Phaser.Geom.Line.GetShortestDistance\r\n * @since 3.16.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to get the distance from.\r\n * @param {(Phaser.Geom.Point|object)} point - The point to get the shortest distance to.\r\n *\r\n * @return {number} The shortest distance from the line to the point.\r\n */\r\nexport function GetShortestDistance (line: ILine, point: Vec2): number\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    const L2 = (((x2 - x1) * (x2 - x1)) + ((y2 - y1) * (y2 - y1)));\r\n\r\n    if (L2 === 0)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    const s = (((y1 - point.y) * (x2 - x1)) - ((x1 - point.x) * (y2 - y1))) / L2;\r\n\r\n    return Math.abs(s) * Math.sqrt(L2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Calculate the height of the given line.\r\n *\r\n * @function Phaser.Geom.Line.Height\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the height of.\r\n *\r\n * @return {number} The height of the line.\r\n */\r\nexport function Height (line: ILine): number\r\n{\r\n    return Math.abs(line.y1 - line.y2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Angle } from './Angle';\r\nimport { ILine } from './ILine';\r\nimport { MATH_CONST } from '../../math/const';\r\nimport { Wrap } from '../../math/Wrap';\r\n\r\n/**\r\n * Get the angle of the normal of the given line in radians.\r\n *\r\n * @function Phaser.Geom.Line.NormalAngle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the angle of the normal of.\r\n *\r\n * @return {number} The angle of the normal of the line in radians.\r\n */\r\nexport function NormalAngle (line: ILine): number\r\n{\r\n    const angle = Angle(line) - MATH_CONST.HALF_PI;\r\n\r\n    return Wrap(angle, -Math.PI, Math.PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Angle } from './Angle';\r\nimport { ILine } from './ILine';\r\nimport { MATH_CONST } from '../../math/const';\r\n\r\n/**\r\n * Returns the x component of the normal vector of the given line.\r\n *\r\n * @function Phaser.Geom.Line.NormalX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line object to get the normal value from.\r\n *\r\n * @return {number} The x component of the normal vector of the line.\r\n */\r\nexport function NormalX (line: ILine): number\r\n{\r\n    return Math.cos(Angle(line) - MATH_CONST.HALF_PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Angle } from './Angle';\r\nimport { ILine } from './ILine';\r\nimport { MATH_CONST } from '../../math/const';\r\n\r\n/**\r\n * The Y value of the normal of the given line.\r\n * The normal of a line is a vector that points perpendicular from it.\r\n *\r\n * @function Phaser.Geom.Line.NormalY\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the normal of.\r\n *\r\n * @return {number} The Y value of the normal of the Line.\r\n */\r\nexport function NormalY (line: ILine): number\r\n{\r\n    return Math.sin(Angle(line) - MATH_CONST.HALF_PI);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Offset a line by the given amount.\r\n *\r\n * @function Phaser.Geom.Line.Offset\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to offset.\r\n * @param {number} x - The horizontal offset to add to the line.\r\n * @param {number} y - The vertical offset to add to the line.\r\n *\r\n * @return {Phaser.Geom.Line} The offset line.\r\n */\r\nexport function Offset (line: ILine, x: number, y: number): ILine\r\n{\r\n    line.x1 += x;\r\n    line.y1 += y;\r\n\r\n    line.x2 += x;\r\n    line.y2 += y;\r\n\r\n    return line;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Calculate the perpendicular slope of the given line.\r\n *\r\n * @function Phaser.Geom.Line.PerpSlope\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the perpendicular slope of.\r\n *\r\n * @return {number} The perpendicular slope of the line.\r\n */\r\nexport function PerpSlope (line: ILine): number\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    return -((x2 - x1) / (y2 - y1));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a random point on a given Line.\r\n *\r\n * @function Phaser.Geom.Line.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line to calculate the random Point on.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An instance of a Point to be modified.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A random Point on the Line.\r\n */\r\nexport function Random (line: ILine, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const t = Math.random();\r\n\r\n    out.x = line.x1 + t * (line.x2 - line.x1);\r\n    out.y = line.y1 + t * (line.y2 - line.y1);\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Angle } from './Angle';\r\nimport { ILine } from './ILine';\r\nimport { NormalAngle } from './NormalAngle';\r\n\r\n/**\r\n * Calculate the reflected angle between two lines.\r\n *\r\n * This is the outgoing angle based on the angle of Line 1 and the normalAngle of Line 2.\r\n *\r\n * @function Phaser.Geom.Line.ReflectAngle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} lineA - The first line.\r\n * @param {Phaser.Geom.Line} lineB - The second line.\r\n *\r\n * @return {number} The reflected angle between each line.\r\n */\r\nexport function ReflectAngle (lineA: ILine, lineB: ILine): number\r\n{\r\n    return (2 * NormalAngle(lineB) - Math.PI - Angle(lineA));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Rotate a line around the given coordinates by the given angle in radians.\r\n *\r\n * @function Phaser.Geom.Line.RotateAroundXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to rotate.\r\n * @param {number} x - The horizontal coordinate to rotate the line around.\r\n * @param {number} y - The vertical coordinate to rotate the line around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Line} The rotated line.\r\n */\r\nexport function RotateAroundXY (line: ILine, x: number, y: number, angle: number): ILine\r\n{\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n\r\n    let tx = line.x1 - x;\r\n    let ty = line.y1 - y;\r\n\r\n    line.x1 = tx * c - ty * s + x;\r\n    line.y1 = tx * s + ty * c + y;\r\n\r\n    tx = line.x2 - x;\r\n    ty = line.y2 - y;\r\n\r\n    line.x2 = tx * c - ty * s + x;\r\n    line.y2 = tx * s + ty * c + y;\r\n\r\n    return line;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { RotateAroundXY } from './RotateAroundXY';\r\n\r\n/**\r\n * Rotate a line around its midpoint by the given angle in radians.\r\n *\r\n * @function Phaser.Geom.Line.Rotate\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to rotate.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Line} The rotated line.\r\n */\r\nexport function Rotate (line: ILine, angle: number): ILine\r\n{\r\n    const x = (line.x1 + line.x2) / 2;\r\n    const y = (line.y1 + line.y2) / 2;\r\n\r\n    return RotateAroundXY(line, x, y, angle);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\nimport { RotateAroundXY } from './RotateAroundXY';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Rotate a line around a point by the given angle in radians.\r\n *\r\n * @function Phaser.Geom.Line.RotateAroundPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to rotate.\r\n * @param {(Phaser.Geom.Point|object)} point - The point to rotate the line around.\r\n * @param {number} angle - The angle of rotation in radians.\r\n *\r\n * @return {Phaser.Geom.Line} The rotated line.\r\n */\r\nexport function RotateAroundPoint (line: ILine, point: Vec2, angle: number): ILine\r\n{\r\n    return RotateAroundXY(line, point.x, point.y, angle);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Set a line to a given position, angle and length.\r\n *\r\n * @function Phaser.Geom.Line.SetToAngle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Line} O - [line,$return]\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to set.\r\n * @param {number} x - The horizontal start position of the line.\r\n * @param {number} y - The vertical start position of the line.\r\n * @param {number} angle - The angle of the line in radians.\r\n * @param {number} length - The length of the line.\r\n *\r\n * @return {Phaser.Geom.Line} The updated line.\r\n */\r\nexport function SetToAngle (line: ILine, x: number, y: number, angle: number, length: number): ILine\r\n{\r\n    line.x1 = x;\r\n    line.y1 = y;\r\n\r\n    line.x2 = x + (Math.cos(angle) * length);\r\n    line.y2 = y + (Math.sin(angle) * length);\r\n\r\n    return line;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Calculate the slope of the given line.\r\n *\r\n * @function Phaser.Geom.Line.Slope\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the slope of.\r\n *\r\n * @return {number} The slope of the line.\r\n */\r\nexport function Slope (line: ILine): number\r\n{\r\n    const { x1, y1, x2, y2 } = line;\r\n\r\n    return (y2 - y1) / (x2 - x1);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ILine } from './ILine';\r\n\r\n/**\r\n * Calculate the width of the given line.\r\n *\r\n * @function Phaser.Geom.Line.Width\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line to calculate the width of.\r\n *\r\n * @return {number} The width of the line.\r\n */\r\nexport function Width (line: ILine): number\r\n{\r\n    return Math.abs(line.x1 - line.x2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\n\r\n/**\r\n * Returns the 2D area of a triangle. The area value is always non-negative.\r\n *\r\n * @function Phaser.Geom.Triangle.Area\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to use.\r\n *\r\n * @return {number} The area of the Triangle, always non-negative.\r\n */\r\nexport function Area (triangle: ITriangle): number\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    return Math.abs(((x3 - x1) * (y2 - y1) - (x2 - x1) * (y3 - y1)) / 2);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\n\r\n/**\r\n * @classdesc\r\n * A triangle is a plane created by connecting three points.\r\n * The first two arguments specify the first point, the middle two arguments\r\n * specify the second point, and the last two arguments specify the third point.\r\n *\r\n * @class Triangle\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x1=0] - `x` coordinate of the first point.\r\n * @param {number} [y1=0] - `y` coordinate of the first point.\r\n * @param {number} [x2=0] - `x` coordinate of the second point.\r\n * @param {number} [y2=0] - `y` coordinate of the second point.\r\n * @param {number} [x3=0] - `x` coordinate of the third point.\r\n * @param {number} [y3=0] - `y` coordinate of the third point.\r\n */\r\nexport class Triangle\r\n{\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n    x3: number;\r\n    y3: number;\r\n\r\n    constructor (x1: number = 0, y1: number = 0, x2: number = 0, y2: number = 0, x3: number = 0, y3: number = 0)\r\n    {\r\n        this.set(x1, y1, x2, y2, x3, y3);\r\n    }\r\n\r\n    set (x1: number = 0, y1: number = 0, x2: number = 0, y2: number = 0, x3: number = 0, y3: number = 0): this\r\n    {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n\r\n        this.x3 = x3;\r\n        this.y3 = y3;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains (x: number, y: number): boolean\r\n    {\r\n        return Contains(this, x, y);\r\n    }\r\n\r\n    get left (): number\r\n    {\r\n        return Math.min(this.x1, this.x2, this.x3);\r\n    }\r\n\r\n    set left (value: number)\r\n    {\r\n        let diff = 0;\r\n\r\n        if (this.x1 <= this.x2 && this.x1 <= this.x3)\r\n        {\r\n            diff = this.x1 - value;\r\n        }\r\n        else if (this.x2 <= this.x1 && this.x2 <= this.x3)\r\n        {\r\n            diff = this.x2 - value;\r\n        }\r\n        else\r\n        {\r\n            diff = this.x3 - value;\r\n        }\r\n\r\n        this.x1 -= diff;\r\n        this.x2 -= diff;\r\n        this.x3 -= diff;\r\n    }\r\n\r\n    get right (): number\r\n    {\r\n        return Math.max(this.x1, this.x2, this.x3);\r\n    }\r\n\r\n    set right (value: number)\r\n    {\r\n        let diff = 0;\r\n\r\n        if (this.x1 >= this.x2 && this.x1 >= this.x3)\r\n        {\r\n            diff = this.x1 - value;\r\n        }\r\n        else if (this.x2 >= this.x1 && this.x2 >= this.x3)\r\n        {\r\n            diff = this.x2 - value;\r\n        }\r\n        else\r\n        {\r\n            diff = this.x3 - value;\r\n        }\r\n\r\n        this.x1 -= diff;\r\n        this.x2 -= diff;\r\n        this.x3 -= diff;\r\n    }\r\n\r\n    get top (): number\r\n    {\r\n        return Math.min(this.y1, this.y2, this.y3);\r\n    }\r\n\r\n    set top (value: number)\r\n    {\r\n        let diff = 0;\r\n\r\n        if (this.y1 <= this.y2 && this.y1 <= this.y3)\r\n        {\r\n            diff = this.y1 - value;\r\n        }\r\n        else if (this.y2 <= this.y1 && this.y2 <= this.y3)\r\n        {\r\n            diff = this.y2 - value;\r\n        }\r\n        else\r\n        {\r\n            diff = this.y3 - value;\r\n        }\r\n\r\n        this.y1 -= diff;\r\n        this.y2 -= diff;\r\n        this.y3 -= diff;\r\n    }\r\n\r\n    get bottom (): number\r\n    {\r\n        return Math.max(this.y1, this.y2, this.y3);\r\n    }\r\n\r\n    set bottom (value: number)\r\n    {\r\n        let diff = 0;\r\n\r\n        if (this.y1 >= this.y2 && this.y1 >= this.y3)\r\n        {\r\n            diff = this.y1 - value;\r\n        }\r\n        else if (this.y2 >= this.y1 && this.y2 >= this.y3)\r\n        {\r\n            diff = this.y2 - value;\r\n        }\r\n        else\r\n        {\r\n            diff = this.y3 - value;\r\n        }\r\n\r\n        this.y1 -= diff;\r\n        this.y2 -= diff;\r\n        this.y3 -= diff;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Triangle } from './Triangle';\r\n\r\n/**\r\n * Builds an equilateral triangle. In the equilateral triangle, all the sides are the same length (congruent) and all the angles are the same size (congruent).\r\n * The x/y specifies the top-middle of the triangle (x1/y1) and length is the length of each side.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildEquilateral\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - x coordinate of the top point of the triangle.\r\n * @param {number} y - y coordinate of the top point of the triangle.\r\n * @param {number} length - Length of each side of the triangle.\r\n *\r\n * @return {Triangle} The Triangle object of the given size.\r\n */\r\nexport function BuildEquilateral (x: number, y: number, length: number): Triangle\r\n{\r\n    const height = length * (Math.sqrt(3) / 2);\r\n\r\n    const x1 = x;\r\n    const y1 = y;\r\n\r\n    const x2 = x + (length / 2);\r\n    const y2 = y + height;\r\n\r\n    const x3 = x - (length / 2);\r\n    const y3 = y + height;\r\n\r\n    return new Triangle(x1, y1, x2, y2, x3, y3);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Triangle } from './Triangle';\r\n\r\n/**\r\n * Builds a right triangle, i.e. one which has a 90-degree angle and two acute angles.\r\n * The x/y is the coordinate of the 90 degree angle (and will map to x1/y1 in the resulting Triangle)\r\n * w/h can be positive or negative and represent the length of each side\r\n *\r\n * @function Phaser.Geom.Triangle.BuildRight\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The X coordinate of the right angle, which will also be the first X coordinate of the constructed Triangle.\r\n * @param {number} y - The Y coordinate of the right angle, which will also be the first Y coordinate of the constructed Triangle.\r\n * @param {number} width - The length of the side which is to the left or to the right of the right angle.\r\n * @param {number} height - The length of the side which is above or below the right angle.\r\n *\r\n * @return {Triangle} The constructed right Triangle.\r\n */\r\nexport function BuildRight (x: number, y: number, width: number, height: number = width): Triangle\r\n{\r\n    //  90 degree angle\r\n    const x1 = x;\r\n    const y1 = y;\r\n\r\n    const x2 = x;\r\n    const y2 = y - height;\r\n\r\n    const x3 = x + width;\r\n    const y3 = y;\r\n\r\n    return new Triangle(x1, y1, x2, y2, x3, y3);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n\r\n/**\r\n * Calculates the position of a Triangle's centroid, which is also its center of mass (center of gravity).\r\n *\r\n * The centroid is the point in a Triangle at which its three medians (the lines drawn from the vertices to the bisectors of the opposite sides) meet. It divides each one in a 2:1 ratio.\r\n * \r\n * The three medians (the lines drawn from the vertices to the bisectors of the opposite sides)\r\n * meet in the centroid or center of mass (center of gravity).\r\n * The centroid divides each median in a ratio of 2:1\r\n *\r\n * @function Phaser.Geom.Triangle.Centroid\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to use.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to store the coordinates in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The `out` object with modified `x` and `y` properties, or a new Point if none was provided.\r\n */\r\nexport function Centroid (triangle: ITriangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    return out.set(\r\n        (triangle.x1 + triangle.x2 + triangle.x3) / 3,\r\n        (triangle.y1 + triangle.y2 + triangle.y3) / 3\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\n\r\n/**\r\n * Moves each point (vertex) of a Triangle by a given offset, thus moving the entire Triangle by that offset.\r\n *\r\n * @function Phaser.Geom.Triangle.Offset\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to move.\r\n * @param {number} x - The horizontal offset (distance) by which to move each point. Can be positive or negative.\r\n * @param {number} y - The vertical offset (distance) by which to move each point. Can be positive or negative.\r\n *\r\n * @return {Phaser.Geom.Triangle} The modified Triangle.\r\n */\r\nexport function Offset (triangle: ITriangle, x: number, y: number): ITriangle\r\n{\r\n    triangle.x1 += x;\r\n    triangle.y1 += y;\r\n\r\n    triangle.x2 += x;\r\n    triangle.y2 += y;\r\n\r\n    triangle.x3 += x;\r\n    triangle.y3 += y;\r\n\r\n    return triangle;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Centroid } from './Centroid';\r\nimport { ITriangle } from './ITriangle';\r\nimport { Offset } from './Offset';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * @callback CenterFunction\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to return the center coordinates of.\r\n *\r\n * @return {Phaser.Math.Vector2} The center point of the Triangle according to the function.\r\n */\r\n\r\ntype CenterFunction = (triangle: ITriangle) => Vec2;\r\n\r\n/**\r\n * Positions the Triangle so that it is centered on the given coordinates.\r\n *\r\n * @function Phaser.Geom.Triangle.CenterOn\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The triangle to be positioned.\r\n * @param {number} x - The horizontal coordinate to center on.\r\n * @param {number} y - The vertical coordinate to center on.\r\n * @param {CenterFunction} [centerFunc] - The function used to center the triangle. Defaults to Centroid centering.\r\n *\r\n * @return {Phaser.Geom.Triangle} The Triangle that was centered.\r\n */\r\nexport function CenterOn (triangle: ITriangle, x: number, y: number, centerFunc: CenterFunction = Centroid): ITriangle\r\n{\r\n    //  Get the center of the triangle\r\n    const center = centerFunc(triangle);\r\n\r\n    //  Difference\r\n    const diffX = x - center.x;\r\n    const diffY = y - center.y;\r\n\r\n    return Offset(triangle, diffX, diffY);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Computes the determinant of a 2x2 matrix. Uses standard double-precision arithmetic, so is susceptible to round-off error.\r\n *\r\n * Adapted from http://bjornharrtell.github.io/jsts/doc/api/jsts_geom_Triangle.js.html\r\n *\r\n * @function det\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {number} m00 - The [0,0] entry of the matrix.\r\n * @param {number} m01 - The [0,1] entry of the matrix.\r\n * @param {number} m10 - The [1,0] entry of the matrix.\r\n * @param {number} m11 - The [1,1] entry of the matrix.\r\n *\r\n * @return {number} the determinant.\r\n */\r\nfunction Det (m00: number, m01: number, m10: number, m11: number): number\r\n{\r\n    return (m00 * m11) - (m01 * m10);\r\n}\r\n\r\n/**\r\n * Computes the circumcentre of a triangle. The circumcentre is the centre of\r\n * the circumcircle, the smallest circle which encloses the triangle. It is also\r\n * the common intersection point of the perpendicular bisectors of the sides of\r\n * the triangle, and is the only point which has equal distance to all three\r\n * vertices of the triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.CircumCenter\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Math.Vector2} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to get the circumcenter of.\r\n * @param {Phaser.Math.Vector2} [out] - The Vector2 object to store the position in. If not given, a new Vector2 instance is created.\r\n *\r\n * @return {Phaser.Math.Vector2} A Vector2 object holding the coordinates of the circumcenter of the Triangle.\r\n */\r\nexport function CircumCenter (triangle: ITriangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const cx = triangle.x3;\r\n    const cy = triangle.y3;\r\n\r\n    const ax = triangle.x1 - cx;\r\n    const ay = triangle.y1 - cy;\r\n\r\n    const bx = triangle.x2 - cx;\r\n    const by = triangle.y2 - cy;\r\n\r\n    const denom = 2 * Det(ax, ay, bx, by);\r\n    const numx = Det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\r\n    const numy = Det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\r\n\r\n    return out.set(\r\n        cx - numx / denom,\r\n        cy + numy / denom\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ICircle } from './ICircle';\r\n\r\n/**\r\n * Check to see if the Circle contains the given x / y coordinates.\r\n *\r\n * @function Phaser.Geom.Circle.Contains\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to check.\r\n * @param {number} x - The x coordinate to check within the circle.\r\n * @param {number} y - The y coordinate to check within the circle.\r\n *\r\n * @return {boolean} True if the coordinates are within the circle, otherwise false.\r\n */\r\nexport function Contains (circle: ICircle, x: number, y: number): boolean\r\n{\r\n    //  Check if x/y are within the bounds first\r\n    if (circle.radius > 0 && x >= circle.left && x <= circle.right && y >= circle.top && y <= circle.bottom)\r\n    {\r\n        const dx = (circle.x - x) * (circle.x - x);\r\n        const dy = (circle.y - y) * (circle.y - y);\r\n\r\n        return (dx + dy) <= (circle.radius * circle.radius);\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\n\r\n/**\r\n * @classdesc\r\n * A Circle object.\r\n *\r\n * This is a geometry object, containing numerical values and related methods to inspect and modify them.\r\n * It is not a Game Object, in that you cannot add it to the display list, and it has no texture.\r\n * To render a Circle you should look at the capabilities of the Graphics class.\r\n *\r\n * @class Circle\r\n * @memberof Phaser.Geom\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} [x=0] - The x position of the center of the circle.\r\n * @param {number} [y=0] - The y position of the center of the circle.\r\n * @param {number} [radius=0] - The radius of the circle.\r\n */\r\nexport class Circle\r\n{\r\n    x: number;\r\n    y: number;\r\n\r\n    private _radius: number;\r\n    private _diameter: number;\r\n\r\n    constructor (x: number = 0, y: number = 0, radius: number = 0)\r\n    {\r\n        this.set(x, y, radius);\r\n    }\r\n\r\n    set (x: number = 0, y: number = 0, radius: number = 0): this\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n\r\n        return this;\r\n    }\r\n\r\n    contains (x: number, y: number): boolean\r\n    {\r\n        return Contains(this, x, y);\r\n    }\r\n\r\n    get radius (): number\r\n    {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius (value: number)\r\n    {\r\n        this._radius = value;\r\n        this._diameter = value * 2;\r\n    }\r\n\r\n    get diameter (): number\r\n    {\r\n        return this._diameter;\r\n    }\r\n\r\n    set diameter (value: number)\r\n    {\r\n        this._diameter = value;\r\n        this._radius = value * 0.5;\r\n    }\r\n\r\n    get left (): number\r\n    {\r\n        return this.x - this._radius;\r\n    }\r\n\r\n    set left (value: number)\r\n    {\r\n        this.x = value + this._radius;\r\n    }\r\n\r\n    get right (): number\r\n    {\r\n        return this.x + this._radius;\r\n    }\r\n\r\n    set right (value: number)\r\n    {\r\n        this.x = value - this._radius;\r\n    }\r\n\r\n    get top (): number\r\n    {\r\n        return this.y - this._radius;\r\n    }\r\n\r\n    set top (value: number)\r\n    {\r\n        this.y = value + this._radius;\r\n    }\r\n\r\n    get bottom (): number\r\n    {\r\n        return this.y + this._radius;\r\n    }\r\n\r\n    set bottom (value: number)\r\n    {\r\n        this.y = value - this._radius;\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Circle } from '../Circle/Circle';\r\nimport { ITriangle } from './ITriangle';\r\n\r\n/**\r\n * Finds the circumscribed circle (circumcircle) of a Triangle object.\r\n * The circumcircle is the circle which touches all of the triangle's vertices.\r\n *\r\n * Adapted from https://gist.github.com/mutoo/5617691\r\n *\r\n * @function Phaser.Geom.Triangle.CircumCircle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Circle} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to use as input.\r\n * @param {Phaser.Geom.Circle} [out] - An optional Circle to store the result in.\r\n *\r\n * @return {Phaser.Geom.Circle} The updated `out` Circle, or a new Circle if none was provided.\r\n */\r\nexport function CircumCircle (triangle: ITriangle, out: Circle = new Circle()): Circle\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    const A = x2 - x1;\r\n    const B = y2 - y1;\r\n    const C = x3 - x1;\r\n    const D = y3 - y1;\r\n    const E = A * (x1 + x2) + B * (y1 + y2);\r\n    const F = C * (x1 + x3) + D * (y1 + y3);\r\n    const G = 2 * (A * (y3 - y2) - B * (x3 - x2));\r\n\r\n    //  If the points of the triangle are collinear, then just find the\r\n    //  extremes and use the midpoint as the center of the circumcircle.\r\n\r\n    if (Math.abs(G) < 0.000001)\r\n    {\r\n        const minX = Math.min(x1, x2, x3);\r\n        const minY = Math.min(y1, y2, y3);\r\n\r\n        const dx = (Math.max(x1, x2, x3) - minX) * 0.5;\r\n        const dy = (Math.max(y1, y2, y3) - minY) * 0.5;\r\n\r\n        return out.set(\r\n            minX + dx,\r\n            minY + dy,\r\n            Math.sqrt(dx * dx + dy * dy)\r\n        );\r\n    }\r\n    else\r\n    {\r\n        const cx = (D * E - B * F) / G;\r\n        const cy = (A * F - C * E) / G;\r\n\r\n        const dx = cx - x1;\r\n        const dy = cy - y1;\r\n\r\n        return out.set(\r\n            cx,\r\n            cy,\r\n            Math.sqrt(dx * dx + dy * dy)\r\n        );\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { Triangle } from './Triangle';\r\n\r\n\r\n/**\r\n * Clones a Triangle object.\r\n *\r\n * @function Phaser.Geom.Triangle.Clone\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} source - The Triangle to clone.\r\n *\r\n * @return {Phaser.Geom.Triangle} A new Triangle identical to the given one but separate from it.\r\n */\r\nexport function Clone (source: ITriangle): Triangle\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = source;\r\n\r\n    return new Triangle(x1, y1, x2, y2, x3, y3);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Contains } from './Contains';\r\nimport { ITriangle } from './ITriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Tests if a triangle contains a point.\r\n *\r\n * @function Phaser.Geom.Triangle.ContainsPoint\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The triangle.\r\n * @param {(Phaser.Geom.Point|Phaser.Math.Vector2|any)} point - The point to test, or any point-like object with public `x` and `y` properties.\r\n *\r\n * @return {boolean} `true` if the point is within the triangle, otherwise `false`.\r\n */\r\nexport function ContainsPoint (triangle: ITriangle, point: Vec2): boolean\r\n{\r\n    return Contains(triangle, point.x, point.y);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\n\r\n/**\r\n * Copy the values of one Triangle to a destination Triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.CopyFrom\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [dest,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} source - The source Triangle to copy the values from.\r\n * @param {Phaser.Geom.Triangle} dest - The destination Triangle to copy the values to.\r\n *\r\n * @return {Phaser.Geom.Triangle} The destination Triangle.\r\n */\r\nexport function CopyFrom (source: ITriangle, dest: ITriangle): ITriangle\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = source;\r\n\r\n    return dest.set(x1, y1, x2, y2, x3, y3);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\n\r\n/**\r\n * Returns true if two triangles have the same coordinates.\r\n *\r\n * @function Phaser.Geom.Triangle.Equals\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The first triangle to check.\r\n * @param {Phaser.Geom.Triangle} toCompare - The second triangle to check.\r\n *\r\n * @return {boolean} `true` if the two given triangles have the exact same coordinates, otherwise `false`.\r\n */\r\nexport function Equals (triangle: ITriangle, toCompare: ITriangle): boolean\r\n{\r\n    return (\r\n        triangle.x1 === toCompare.x1 &&\r\n        triangle.y1 === toCompare.y1 &&\r\n        triangle.x2 === toCompare.x2 &&\r\n        triangle.y2 === toCompare.y2 &&\r\n        triangle.x3 === toCompare.x3 &&\r\n        triangle.y3 === toCompare.y3\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from './GetEdges';\r\nimport { ITriangle } from './ITriangle';\r\nimport { Length } from '../line/Length';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a Point from around the perimeter of a Triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to get the point on its perimeter from.\r\n * @param {number} position - The position along the perimeter of the triangle. A value between 0 and 1.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An option Point, or Point-like object to store the value in. If not given a new Point will be created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object containing the given position from the perimeter of the triangle.\r\n */\r\nexport function GetPoint (triangle: ITriangle, position: number, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const [ line1, line2, line3 ] = GetEdges(triangle);\r\n\r\n    if (position <= 0 || position >= 1)\r\n    {\r\n        return out.set(\r\n            line1.x1,\r\n            line1.y1\r\n        );\r\n    }\r\n\r\n    const length1 = Length(line1);\r\n    const length2 = Length(line2);\r\n    const length3 = Length(line3);\r\n\r\n    const perimeter = length1 + length2 + length3;\r\n\r\n    let p = perimeter * position;\r\n    let localPosition = 0;\r\n\r\n    //  Which line is it on?\r\n\r\n    if (p < length1)\r\n    {\r\n        //  Line 1\r\n        localPosition = p / length1;\r\n\r\n        const { x1, y1, x2, y2 } = line1;\r\n\r\n        return out.set(\r\n            x1 + (x2 - x1) * localPosition,\r\n            y1 + (y2 - y1) * localPosition\r\n        );\r\n    }\r\n    else if (p > length1 + length2)\r\n    {\r\n        //  Line 3\r\n        p -= length1 + length2;\r\n        localPosition = p / length3;\r\n\r\n        const { x1, y1, x2, y2 } = line3;\r\n\r\n        return out.set(\r\n            x1 + (x2 - x1) * localPosition,\r\n            y1 + (y2 - y1) * localPosition\r\n        );\r\n    }\r\n    else\r\n    {\r\n        //  Line 2\r\n        p -= length1;\r\n        localPosition = p / length2;\r\n\r\n        const { x1, y1, x2, y2 } = line2;\r\n\r\n        return out.set(\r\n            x1 + (x2 - x1) * localPosition,\r\n            y1 + (y2 - y1) * localPosition\r\n        );\r\n    }\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from './GetEdges';\r\nimport { ITriangle } from './ITriangle';\r\nimport { Length } from '../line/Length';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns an array of evenly spaced points on the perimeter of a Triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.GetPoints\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to get the points from.\r\n * @param {integer} quantity - The number of evenly spaced points to return. Set to 0 to return an arbitrary number of points based on the `stepRate`.\r\n * @param {number} stepRate - If `quantity` is 0, the distance between each returned point.\r\n * @param {(array|Phaser.Geom.Point[])} [out] - An array to which the points should be appended.\r\n *\r\n * @return {(array|Phaser.Geom.Point[])} The modified `out` array, or a new array if none was provided.\r\n */\r\nexport function GetPoints (triangle: ITriangle, quantity: number, stepRate: number, out: Vec2[] = []): Vec2[]\r\n{\r\n    const [ line1, line2, line3 ] = GetEdges(triangle);\r\n\r\n    const length1 = Length(line1);\r\n    const length2 = Length(line2);\r\n    const length3 = Length(line3);\r\n\r\n    const perimeter = length1 + length2 + length3;\r\n\r\n    //  If quantity is a falsey value (false, null, 0, undefined, etc) then we calculate it based on the stepRate instead.\r\n    if (!quantity)\r\n    {\r\n        quantity = perimeter / stepRate;\r\n    }\r\n\r\n    for (let i = 0; i < quantity; i++)\r\n    {\r\n        let p = perimeter * (i / quantity);\r\n        let localPosition = 0;\r\n        let point: Vec2;\r\n\r\n        if (p < length1)\r\n        {\r\n            //  Line 1\r\n            localPosition = p / length1;\r\n\r\n            const { x1, y1, x2, y2 } = line1;\r\n\r\n            point = new Vec2(\r\n                x1 + (x2 - x1) * localPosition,\r\n                y1 + (y2 - y1) * localPosition\r\n            );\r\n        }\r\n        else if (p > length1 + length2)\r\n        {\r\n            //  Line 3\r\n            p -= length1 + length2;\r\n            localPosition = p / length3;\r\n\r\n            const { x1, y1, x2, y2 } = line3;\r\n\r\n            point = new Vec2(\r\n                x1 + (x2 - x1) * localPosition,\r\n                y1 + (y2 - y1) * localPosition\r\n            );\r\n        }\r\n        else\r\n        {\r\n            //  Line 2\r\n            p -= length1;\r\n            localPosition = p / length2;\r\n\r\n            const { x1, y1, x2, y2 } = line2;\r\n\r\n            point = new Vec2(\r\n                x1 + (x2 - x1) * localPosition,\r\n                y1 + (y2 - y1) * localPosition\r\n            );\r\n        }\r\n\r\n        out.push(point);\r\n    }\r\n\r\n    return out;\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\nfunction GetLength (x1: number, y1: number, x2: number, y2: number): number\r\n{\r\n    const x = x1 - x2;\r\n    const y = y1 - y2;\r\n    const magnitude = (x * x) + (y * y);\r\n\r\n    return Math.sqrt(magnitude);\r\n}\r\n\r\n/**\r\n * Calculates the position of the incenter of a Triangle object.\r\n * This is the point where its three angle bisectors meet and it's also the center\r\n * of the incircle, which is the circle inscribed in the triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.InCenter\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to find the incenter of.\r\n * @param {Phaser.Geom.Point} [out] - An optional Point in which to store the coordinates.\r\n *\r\n * @return {Phaser.Geom.Point} Point (x, y) of the center pixel of the triangle.\r\n */\r\nexport function InCenter (triangle: ITriangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    const d1 = GetLength(x3, y3, x2, y2);\r\n    const d2 = GetLength(x1, y1, x3, y3);\r\n    const d3 = GetLength(x2, y2, x1, y1);\r\n\r\n    const p = d1 + d2 + d3;\r\n\r\n    return out.set(\r\n        (x1 * d1 + x2 * d2 + x3 * d3) / p,\r\n        (y1 * d1 + y2 * d2 + y3 * d3) / p\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { GetEdges } from './GetEdges';\r\nimport { ITriangle } from './ITriangle';\r\nimport { Length } from '../line/Length';\r\n\r\n/**\r\n * Gets the length of the perimeter of the given triangle.\r\n * Calculated by adding together the length of each of the three sides.\r\n *\r\n * @function Phaser.Geom.Triangle.Perimeter\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to get the length from.\r\n *\r\n * @return {number} The length of the Triangle.\r\n */\r\nexport function Perimeter (triangle: ITriangle): number\r\n{\r\n    const [ line1, line2, line3 ] = GetEdges(triangle);\r\n\r\n    return (Length(line1) + Length(line2) + Length(line3));\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Returns a random Point from within the area of the given Triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to get a random point from.\r\n * @param {Phaser.Geom.Point} [out] - The Point object to store the position in. If not given, a new Point instance is created.\r\n *\r\n * @return {Phaser.Geom.Point} A Point object holding the coordinates of a random position within the Triangle.\r\n */\r\nexport function Random (triangle: ITriangle, out: Vec2 = new Vec2()): Vec2\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    //  Basis vectors\r\n    const ux = x2 - x1;\r\n    const uy = y2 - y1;\r\n\r\n    const vx = x3 - x1;\r\n    const vy = y3 - y1;\r\n\r\n    //  Random point within the unit square\r\n    let r = Math.random();\r\n    let s = Math.random();\r\n\r\n    //  Point outside the triangle? Remap it.\r\n    if (r + s >= 1)\r\n    {\r\n        r = 1 - r;\r\n        s = 1 - s;\r\n    }\r\n\r\n    return out.set(\r\n        x1 + ((ux * r) + (vx * s)),\r\n        y1 + ((uy * r) + (vy * s))\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\n\r\n/**\r\n * Rotates an entire Triangle at a given angle about a specific point.\r\n *\r\n * @function Phaser.Geom.Triangle.RotateAroundXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to rotate.\r\n * @param {number} x - The X coordinate of the point to rotate the Triangle about.\r\n * @param {number} y - The Y coordinate of the point to rotate the Triangle about.\r\n * @param {number} angle - The angle by which to rotate the Triangle, in radians.\r\n *\r\n * @return {Phaser.Geom.Triangle} The rotated Triangle.\r\n */\r\nexport function RotateAroundXY (triangle: ITriangle, x: number, y: number, angle: number): ITriangle\r\n{\r\n    const { x1, y1, x2, y2, x3, y3 } = triangle;\r\n\r\n    const c = Math.cos(angle);\r\n    const s = Math.sin(angle);\r\n\r\n    return triangle.set(\r\n        (x1 - x) * c - (y1 - y) * s + x,\r\n        (x1 - x) * s + (y1 - y) * c + y,\r\n        (x2 - x) * c - (y2 - y) * s + x,\r\n        (x2 - x) * s + (y2 - y) * c + y,\r\n        (x3 - x) * c - (y3 - y) * s + x,\r\n        (x3 - x) * s + (y3 - y) * c + y\r\n    );\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { InCenter } from './InCenter';\r\nimport { RotateAroundXY } from './RotateAroundXY';\r\n\r\n/**\r\n * Rotates a Triangle about its incenter, which is the point at which its three angle bisectors meet.\r\n *\r\n * @function Phaser.Geom.Triangle.Rotate\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to rotate.\r\n * @param {number} angle - The angle by which to rotate the Triangle, in radians.\r\n *\r\n * @return {Phaser.Geom.Triangle} The rotated Triangle.\r\n */\r\nexport function Rotate (triangle: ITriangle, angle: number): ITriangle\r\n{\r\n    const point = InCenter(triangle);\r\n\r\n    return RotateAroundXY(triangle, point.x, point.y, angle);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { ITriangle } from './ITriangle';\r\nimport { RotateAroundXY } from './RotateAroundXY';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\n/**\r\n * Rotates a Triangle at a certain angle about a given Point or object with public `x` and `y` properties.\r\n *\r\n * @function Phaser.Geom.Triangle.RotateAroundPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to rotate.\r\n * @param {Phaser.Geom.Point} point - The Point to rotate the Triangle about.\r\n * @param {number} angle - The angle by which to rotate the Triangle, in radians.\r\n *\r\n * @return {Phaser.Geom.Triangle} The rotated Triangle.\r\n */\r\nexport function RotateAroundPoint (triangle: ITriangle, point: Vec2, angle: number): ITriangle\r\n{\r\n    return RotateAroundXY(triangle, point.x, point.y, angle);\r\n}\r\n","import { Normalize, Subtract, Vec3 } from '../math/vec3';\r\n\r\nimport { CreateVertexSet } from '../gameobjects3d/geometry/CreateVertexSet';\r\nimport { VertexSet } from '../gameobjects3d/geometry/VertexSet';\r\n\r\nexport function TorusGeometry (radius: number = 1, tube: number = 0.4, radialSegments: number = 8, tubularSegments: number = 6, arc: number = Math.PI * 2): VertexSet\r\n{\r\n    const data = CreateVertexSet();\r\n\r\n    const {\r\n        vertices,\r\n        normals,\r\n        uvs,\r\n        indices\r\n    } = data;\r\n\r\n    // helper variables\r\n\r\n    const center = new Vec3();\r\n    const vertex = new Vec3();\r\n    const normal = new Vec3();\r\n\r\n    // generate vertices, normals and uvs\r\n\r\n    for (let j = 0; j <= radialSegments; j++)\r\n    {\r\n        for (let i = 0; i <= tubularSegments; i++)\r\n        {\r\n            const u = i / tubularSegments * arc;\r\n            const v = j / radialSegments * Math.PI * 2;\r\n\r\n            // vertex\r\n            vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\r\n            vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\r\n            vertex.z = tube * Math.sin(v);\r\n\r\n            vertices.push(vertex.x, vertex.y, vertex.z);\r\n\r\n            // normal\r\n            center.x = radius * Math.cos(u);\r\n            center.y = radius * Math.sin(u);\r\n\r\n            Subtract(vertex, center, normal);\r\n            Normalize(normal, normal);\r\n\r\n            normals.push(normal.x, normal.y, normal.z);\r\n\r\n            // uv\r\n            uvs.push(i / tubularSegments);\r\n            uvs.push(j / radialSegments);\r\n        }\r\n    }\r\n\r\n    // generate indices\r\n    for (let j = 1; j <= radialSegments; j++)\r\n    {\r\n        for (let i = 1; i <= tubularSegments; i++)\r\n        {\r\n            // indices\r\n\r\n            const a = (tubularSegments + 1) * j + i - 1;\r\n            const b = (tubularSegments + 1) * (j - 1) + i - 1;\r\n            const c = (tubularSegments + 1) * (j - 1) + i;\r\n            const d = (tubularSegments + 1) * j + i;\r\n\r\n            // faces\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d);\r\n        }\r\n    }\r\n\r\n    data.numberOfVertices = vertices.length;\r\n\r\n    return data;\r\n}\r\n","import { Emit } from '../../events';\r\nimport { IEventInstance } from '../../events/IEventInstance';\r\nimport { IKey } from './IKey';\r\n\r\nexport class Key implements IKey\r\n{\r\n    //  The KeyEvent.key identifier\r\n    readonly value: string;\r\n\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    //  Will it invoke preventDefault?\r\n    capture: boolean = true;\r\n\r\n    //  Is it currently down?\r\n    isDown: boolean = false;\r\n\r\n    //  Process this key?\r\n    enabled: boolean = true;\r\n\r\n    //  rate of repeats in ms\r\n    repeatRate: number = 0;\r\n\r\n    //  Can this key repeat, or do you have to release it before pressing again\r\n    canRepeat: boolean = true;\r\n\r\n    //  The game time this key was last pressed down\r\n    timeDown: number = 0;\r\n\r\n    //  The game time this key was last updated (i.e. if down and repeating)\r\n    timeUpdated: number = 0;\r\n\r\n    //  The game time this key was last released\r\n    timeUp: number = 0;\r\n\r\n    shiftKey: boolean;\r\n    ctrlKey: boolean;\r\n    altKey: boolean;\r\n\r\n    downCallback: (key: IKey) => void;\r\n    upCallback: (key: IKey) => void;\r\n\r\n    constructor (value: string)\r\n    {\r\n        this.value = value;\r\n        this.events = new Map();\r\n    }\r\n\r\n    getValue (): string\r\n    {\r\n        return this.value;\r\n    }\r\n\r\n    down (event: KeyboardEvent): void\r\n    {\r\n        if (!this.enabled)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.capture)\r\n        {\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.shiftKey = event.shiftKey;\r\n        this.ctrlKey = event.ctrlKey;\r\n        this.altKey = event.altKey;\r\n\r\n        if (this.isDown && this.canRepeat)\r\n        {\r\n            this.timeUpdated = event.timeStamp;\r\n\r\n            const delay = this.timeUpdated - this.timeDown;\r\n\r\n            //  Key is repeating\r\n            if (delay >= this.repeatRate)\r\n            {\r\n                Emit(this, 'keydown', this);\r\n\r\n                if (this.downCallback)\r\n                {\r\n                    this.downCallback(this);\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            //  Key is first down\r\n            this.isDown = true;\r\n\r\n            this.timeDown = event.timeStamp;\r\n            this.timeUpdated = event.timeStamp;\r\n\r\n            Emit(this, 'keydown', this);\r\n\r\n            if (this.downCallback)\r\n            {\r\n                this.downCallback(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    up (event: KeyboardEvent): void\r\n    {\r\n        if (!this.enabled)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (this.capture)\r\n        {\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.shiftKey = event.shiftKey;\r\n        this.ctrlKey = event.ctrlKey;\r\n        this.altKey = event.altKey;\r\n\r\n        if (this.isDown)\r\n        {\r\n            //  Key is up\r\n            this.isDown = false;\r\n            this.timeUp = event.timeStamp;\r\n            this.timeUpdated = event.timeStamp;\r\n\r\n            Emit(this, 'keyup', this);\r\n\r\n            if (this.upCallback)\r\n            {\r\n                this.upCallback(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        this.isDown = false;\r\n        this.timeUpdated = this.timeDown;\r\n        this.timeUp = this.timeDown;\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        this.downCallback = null;\r\n        this.upCallback = null;\r\n\r\n        this.events.clear();\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class AKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('a');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\nimport { Keyboard } from '../Keyboard';\r\n\r\nexport type ArrowKeysConfig = {\r\n    left: boolean;\r\n    right: boolean;\r\n    up: boolean;\r\n    down: boolean;\r\n    space: boolean;\r\n};\r\n\r\nexport class ArrowKeys\r\n{\r\n    left: Key;\r\n    right: Key;\r\n    up: Key;\r\n    down: Key;\r\n    space: Key;\r\n\r\n    constructor (keyboardManager: Keyboard, config?: ArrowKeysConfig)\r\n    {\r\n        const {\r\n            left = true,\r\n            right = true,\r\n            up = true,\r\n            down = true,\r\n            space = true\r\n        } = config;\r\n\r\n        const keys = keyboardManager.keys;\r\n\r\n        if (left)\r\n        {\r\n            this.left = new Key('ArrowLeft');\r\n\r\n            keys.set(this.left.value, this.left);\r\n        }\r\n\r\n        if (right)\r\n        {\r\n            this.right = new Key('ArrowRight');\r\n\r\n            keys.set(this.right.value, this.right);\r\n        }\r\n\r\n        if (up)\r\n        {\r\n            this.up = new Key('ArrowUp');\r\n\r\n            keys.set(this.up.value, this.up);\r\n        }\r\n\r\n        if (down)\r\n        {\r\n            this.down = new Key('ArrowDown');\r\n\r\n            keys.set(this.down.value, this.down);\r\n        }\r\n\r\n        if (space)\r\n        {\r\n            this.space = new Key(' ');\r\n\r\n            keys.set(this.space.value, this.space);\r\n        }\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class BKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('b');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class CKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('c');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class DKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('d');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class DownKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowDown');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class EKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('e');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class FKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('f');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class GKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('g');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class HKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('h');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class IKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('i');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class JKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('j');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class KKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('k');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class LKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('l');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class LeftKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowLeft');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class MKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('m');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class NKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('n');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class OKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('o');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class PKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('p');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class QKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('q');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class RKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('r');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class RightKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowRight');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class SKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('s');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class SpaceKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super(' ');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class TKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('t');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class UKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('u');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class UpKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('ArrowUp');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class VKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('v');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\nimport { Keyboard } from '../Keyboard';\r\n\r\nexport type WASDKeysConfig = {\r\n    W: boolean;\r\n    A: boolean;\r\n    S: boolean;\r\n    D: boolean;\r\n    space: boolean;\r\n};\r\n\r\nexport class WASDKeys\r\n{\r\n    W: Key;\r\n    A: Key;\r\n    S: Key;\r\n    D: Key;\r\n    space: Key;\r\n\r\n    constructor (keyboardManager: Keyboard, config?: WASDKeysConfig)\r\n    {\r\n        const {\r\n            W = true,\r\n            A = true,\r\n            S = true,\r\n            D = true,\r\n            space = true\r\n        } = config;\r\n\r\n        const keys = keyboardManager.keys;\r\n\r\n        if (W)\r\n        {\r\n            this.W = new Key('w');\r\n\r\n            keys.set(this.W.value, this.W);\r\n        }\r\n\r\n        if (A)\r\n        {\r\n            this.A = new Key('a');\r\n\r\n            keys.set(this.A.value, this.A);\r\n        }\r\n\r\n        if (S)\r\n        {\r\n            this.S = new Key('s');\r\n\r\n            keys.set(this.S.value, this.S);\r\n        }\r\n\r\n        if (D)\r\n        {\r\n            this.D = new Key('d');\r\n\r\n            keys.set(this.D.value, this.D);\r\n        }\r\n\r\n        if (space)\r\n        {\r\n            this.space = new Key(' ');\r\n\r\n            keys.set(this.space.value, this.space);\r\n        }\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class WKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('w');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class XKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('x');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class YKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('y');\r\n    }\r\n}\r\n","import { Key } from '../Key';\r\n\r\nexport class ZKey extends Key\r\n{\r\n    constructor ()\r\n    {\r\n        super('z');\r\n    }\r\n}\r\n","import { IKey } from './IKey';\r\n\r\nexport function GetKeyDownDuration (key: IKey): number\r\n{\r\n    if (key.isDown)\r\n    {\r\n        return key.timeUpdated - key.timeDown;\r\n    }\r\n    else\r\n    {\r\n        return key.timeUp - key.timeDown;\r\n    }\r\n}\r\n","import { Emit, EventEmitter } from '../../events';\r\n\r\nimport { IKey } from './IKey';\r\n\r\nexport class Keyboard extends EventEmitter\r\n{\r\n    keys: Map<string, IKey>;\r\n\r\n    private keydownHandler: { (event: KeyboardEvent): void; (this: Window, ev: KeyboardEvent): void };\r\n    private keyupHandler: { (event: KeyboardEvent): void; (this: Window, ev: KeyboardEvent): void };\r\n    private blurHandler: { (): void; (this: Window, ev: FocusEvent): void };\r\n\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    keyConversion: { [ key: string ]: string } = {\r\n        Up: 'ArrowUp',\r\n        Down: 'ArrowDown',\r\n        Left: 'ArrowLeft',\r\n        Right: 'ArrowRight',\r\n        Spacebar: ' ',\r\n        Win: 'Meta',\r\n        Scroll: 'ScrollLock',\r\n        Del: 'Delete',\r\n        Apps: 'ContextMenu',\r\n        Esc: 'Escape',\r\n        Add: '+',\r\n        Subtract: '-',\r\n        Multiply: '*',\r\n        Decimal: '.',\r\n        Divide: '/'\r\n    };\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.keydownHandler = (event: KeyboardEvent): void => this.onKeyDown(event);\r\n        this.keyupHandler = (event: KeyboardEvent): void => this.onKeyUp(event);\r\n        this.blurHandler = (): void => this.onBlur();\r\n\r\n        window.addEventListener('keydown', this.keydownHandler);\r\n        window.addEventListener('keyup', this.keyupHandler);\r\n        window.addEventListener('blur', this.blurHandler);\r\n\r\n        this.keys = new Map();\r\n    }\r\n\r\n    addKeys (...keys: IKey[]): void\r\n    {\r\n        keys.forEach(key =>\r\n        {\r\n            this.keys.set(key.getValue(), key);\r\n        });\r\n    }\r\n\r\n    clearKeys (): void\r\n    {\r\n        this.keys.clear();\r\n    }\r\n\r\n    private onBlur (): void\r\n    {\r\n        //  Iterate Keys and reset their state\r\n        this.keys.forEach(key =>\r\n        {\r\n            key.reset();\r\n        });\r\n    }\r\n\r\n    private getKeyValue (key: string): string\r\n    {\r\n        if (this.keyConversion.hasOwnProperty(key))\r\n        {\r\n            return this.keyConversion[key];\r\n        }\r\n        else\r\n        {\r\n            return key;\r\n        }\r\n    }\r\n\r\n    private onKeyDown (event: KeyboardEvent): void\r\n    {\r\n        const value = this.getKeyValue(event.key);\r\n\r\n        if (this.keys.has(value))\r\n        {\r\n            const key = this.keys.get(value);\r\n\r\n            key.down(event);\r\n        }\r\n\r\n        //  Key specific event\r\n        Emit(this, 'keydown-' + value, event);\r\n\r\n        //  Global keydown event\r\n        Emit(this, 'keydown', event);\r\n    }\r\n\r\n    private onKeyUp (event: KeyboardEvent): void\r\n    {\r\n        const value = this.getKeyValue(event.key);\r\n\r\n        if (this.keys.has(value))\r\n        {\r\n            const key = this.keys.get(value);\r\n\r\n            key.up(event);\r\n        }\r\n\r\n        //  Key specific event\r\n        Emit(this, 'keyup-' + value, event);\r\n\r\n        //  Global keyup event\r\n        Emit(this, 'keyup', event);\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        window.removeEventListener('keydown', this.keydownHandler);\r\n        window.removeEventListener('keyup', this.keyupHandler);\r\n        window.removeEventListener('blur', this.blurHandler);\r\n\r\n        Emit(this, 'destroy');\r\n    }\r\n}\r\n","import { IKey } from './IKey';\r\n\r\nexport function SetKeyRepeatRate (rate: number, ...keys: IKey[]): IKey[]\r\n{\r\n    keys.forEach(key =>\r\n    {\r\n        key.repeatRate = rate;\r\n    });\r\n\r\n    return keys;\r\n}\r\n","import { Emit, EventEmitter } from '../../events';\r\n\r\nimport { Append } from '../../math/matrix2d/Append';\r\nimport { GameInstance } from '../../GameInstance';\r\nimport { GlobalToLocal } from '../../math/matrix2d/GlobalToLocal';\r\nimport { IGameObject } from '../../gameobjects/IGameObject';\r\nimport { Vec2 } from '../../math/vec2/Vec2';\r\n\r\nexport class Mouse extends EventEmitter\r\n{\r\n    primaryDown: boolean = false;\r\n    auxDown: boolean = false;\r\n    secondaryDown: boolean = false;\r\n\r\n    blockContextMenu: boolean = true;\r\n\r\n    localPoint: Vec2;\r\n    hitPoint: Vec2;\r\n\r\n    private target: HTMLElement;\r\n    private resolution: number = 1;\r\n\r\n    private mousedownHandler: { (event: MouseEvent): void; (this: Window, ev: MouseEvent): void };\r\n    private mouseupHandler: { (event: MouseEvent): void; (this: Window, ev: MouseEvent): void };\r\n    private mousemoveHandler: { (event: MouseEvent): void; (this: Window, ev: MouseEvent): void };\r\n    private mousewheelHandler: { (event: MouseWheelEvent): void; (this: Window, ev: MouseWheelEvent): void };\r\n    private contextmenuHandler: { (event: MouseEvent): void; (this: Window, ev: MouseEvent): void };\r\n    private blurHandler: { (): void; (this: Window, ev: FocusEvent): void };\r\n\r\n    private transPoint: Vec2;\r\n\r\n    constructor (target?: HTMLElement)\r\n    {\r\n        super();\r\n\r\n        this.mousedownHandler = (event: MouseEvent): void => this.onMouseDown(event);\r\n        this.mouseupHandler = (event: MouseEvent): void => this.onMouseUp(event);\r\n        this.mousemoveHandler = (event: MouseEvent): void => this.onMouseMove(event);\r\n        this.mousewheelHandler = (event: MouseWheelEvent): void => this.onMouseWheel(event);\r\n        this.contextmenuHandler = (event: MouseEvent): void => this.onContextMenuEvent(event);\r\n        this.blurHandler = (): void => this.onBlur();\r\n\r\n        this.localPoint = new Vec2();\r\n        this.hitPoint = new Vec2();\r\n        this.transPoint = new Vec2();\r\n\r\n        if (!target)\r\n        {\r\n            target = GameInstance.get().renderer.canvas;\r\n        }\r\n\r\n        target.addEventListener('mousedown', this.mousedownHandler);\r\n        target.addEventListener('mouseup', this.mouseupHandler);\r\n        target.addEventListener('wheel', this.mousewheelHandler, { passive: false });\r\n        target.addEventListener('contextmenu', this.contextmenuHandler);\r\n\r\n        window.addEventListener('mouseup', this.mouseupHandler);\r\n        window.addEventListener('mousemove', this.mousemoveHandler);\r\n        window.addEventListener('blur', this.blurHandler);\r\n\r\n        this.target = target;\r\n    }\r\n\r\n    private onBlur (): void\r\n    {\r\n    }\r\n\r\n    private onMouseDown (event: MouseEvent): void\r\n    {\r\n        this.positionToPoint(event);\r\n\r\n        this.primaryDown = (event.button === 0);\r\n        this.auxDown = (event.button === 1);\r\n        this.secondaryDown = (event.button === 2);\r\n\r\n        Emit(this, 'pointerdown', this.localPoint.x, this.localPoint.y, event.button, event);\r\n    }\r\n\r\n    private onMouseUp (event: MouseEvent): void\r\n    {\r\n        this.positionToPoint(event);\r\n\r\n        this.primaryDown = !(event.button === 0);\r\n        this.auxDown = !(event.button === 1);\r\n        this.secondaryDown = !(event.button === 2);\r\n\r\n        Emit(this, 'pointerup', this.localPoint.x, this.localPoint.y, event.button, event);\r\n    }\r\n\r\n    private onMouseMove (event: MouseEvent): void\r\n    {\r\n        this.positionToPoint(event);\r\n\r\n        Emit(this, 'pointermove', this.localPoint.x, this.localPoint.y, event);\r\n    }\r\n\r\n    private onMouseWheel (event: MouseWheelEvent): void\r\n    {\r\n        Emit(this, 'wheel', event.deltaX, event.deltaY, event.deltaZ, event);\r\n    }\r\n\r\n    private onContextMenuEvent (event: MouseEvent): void\r\n    {\r\n        if (this.blockContextMenu)\r\n        {\r\n            event.preventDefault();\r\n        }\r\n\r\n        Emit(this, 'contextmenu', event);\r\n    }\r\n\r\n    positionToPoint (event: MouseEvent): Vec2\r\n    {\r\n        return this.localPoint.set(event.offsetX, event.offsetY);\r\n    }\r\n\r\n    getInteractiveChildren <T extends IGameObject> (parent: T, results: IGameObject[]): void\r\n    {\r\n        const children = parent.children;\r\n\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            const child = children[i];\r\n\r\n            if (!child.visible || !child.input.enabled)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            results.push(child);\r\n\r\n            if (child.input.enabledChildren && child.numChildren)\r\n            {\r\n                this.getInteractiveChildren(child, results);\r\n            }\r\n        }\r\n    }\r\n\r\n    checkHitArea <T extends IGameObject> (entity: T, px: number, py: number): boolean\r\n    {\r\n        if (entity.input.hitArea)\r\n        {\r\n            if (entity.input.hitArea.contains(px, py))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            return entity.transform.extent.contains(px, py);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hitTest <T extends IGameObject> (...entities: T[]): boolean\r\n    {\r\n        const localX = this.localPoint.x;\r\n        const localY = this.localPoint.y;\r\n        const point = this.transPoint;\r\n\r\n        for (let i: number = 0; i < entities.length; i++)\r\n        {\r\n            const entity = entities[i];\r\n\r\n            if (!entity.world)\r\n            {\r\n                //  Can't hit test an entity if it hasn't been added to a World yet\r\n                continue;\r\n            }\r\n\r\n            const mat = Append(entity.world.camera.worldTransform, entity.transform.world);\r\n\r\n            GlobalToLocal(mat, localX, localY, point);\r\n\r\n            if (this.checkHitArea(entity, point.x, point.y))\r\n            {\r\n                this.hitPoint.set(point.x, point.y);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hitTestChildren <T extends IGameObject> (parent: T, topOnly: boolean = true): IGameObject[]\r\n    {\r\n        const output: IGameObject[] = [];\r\n\r\n        if (!parent.visible)\r\n        {\r\n            return output;\r\n        }\r\n\r\n        //  Build a list of potential input candidates\r\n        const candidates: IGameObject[] = [];\r\n        const parentInput = parent.input;\r\n\r\n        if (parentInput && parentInput.enabled)\r\n        {\r\n            candidates.push(parent);\r\n        }\r\n\r\n        if (parentInput.enabledChildren && parent.numChildren)\r\n        {\r\n            this.getInteractiveChildren(parent, candidates);\r\n        }\r\n\r\n        for (let i: number = candidates.length - 1; i >= 0; i--)\r\n        {\r\n            const entity = candidates[i];\r\n\r\n            if (this.hitTest(entity))\r\n            {\r\n                output.push(entity);\r\n\r\n                if (topOnly)\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    shutdown (): void\r\n    {\r\n        const target = this.target;\r\n\r\n        target.removeEventListener('mousedown', this.mousedownHandler);\r\n        target.removeEventListener('mouseup', this.mouseupHandler);\r\n        target.removeEventListener('wheel', this.mousewheelHandler);\r\n        target.removeEventListener('contextmenu', this.contextmenuHandler);\r\n\r\n        window.removeEventListener('mouseup', this.mouseupHandler);\r\n        window.removeEventListener('mousemove', this.mousemoveHandler);\r\n        window.removeEventListener('blur', this.blurHandler);\r\n    }\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\n\r\nexport function SetInteractive <T extends IGameObject> (...children: T[]): T[]\r\n{\r\n    children.forEach(child =>\r\n    {\r\n        child.input.enabled = true;\r\n    });\r\n\r\n    return children;\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n\r\nimport { Frame } from '../Frame';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function AtlasParser (texture: Texture, data: any): void\r\n{\r\n    let frames;\r\n\r\n    if (Array.isArray(data.textures))\r\n    {\r\n        //  TP3 Format\r\n        frames = data.textures[0].frames;\r\n    }\r\n    else if (Array.isArray(data.frames))\r\n    {\r\n        //  TP2 Format Array\r\n        frames = data.frames;\r\n    }\r\n    else if (data.hasOwnProperty('frames'))\r\n    {\r\n        //  TP2 Format Hash\r\n        frames = Object.values(data.frames);\r\n    }\r\n    else\r\n    {\r\n        console.warn('Invalid Texture Atlas JSON');\r\n    }\r\n\r\n    if (frames)\r\n    {\r\n        let newFrame: Frame;\r\n\r\n        for (let i = 0; i < frames.length; i++)\r\n        {\r\n            const src = frames[i];\r\n\r\n            //  The frame values are the exact coordinates to cut the frame out of the atlas from\r\n            newFrame = texture.addFrame(src.filename, src.frame.x, src.frame.y, src.frame.w, src.frame.h);\r\n\r\n            //  These are the original (non-trimmed) sprite values\r\n            if (src.trimmed)\r\n            {\r\n                newFrame.setTrim(\r\n                    src.sourceSize.w,\r\n                    src.sourceSize.h,\r\n                    src.spriteSourceSize.x,\r\n                    src.spriteSourceSize.y,\r\n                    src.spriteSourceSize.w,\r\n                    src.spriteSourceSize.h\r\n                );\r\n            }\r\n            else\r\n            {\r\n                newFrame.setSourceSize(src.sourceSize.w, src.sourceSize.h);\r\n            }\r\n\r\n            if (src.rotated)\r\n            {\r\n                // newFrame.rotated = true;\r\n                // newFrame.updateUVsInverted();\r\n            }\r\n\r\n            if (src.anchor)\r\n            {\r\n                newFrame.setPivot(src.anchor.x, src.anchor.y);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Loader } from './Loader';\r\n\r\nexport class File\r\n{\r\n    key: string;\r\n    url: string;\r\n    responseType: XMLHttpRequestResponseType = 'text';\r\n    crossOrigin: string | undefined = undefined;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    data: any;\r\n\r\n    error: ErrorEvent | undefined;\r\n    config: unknown;\r\n    skipCache: boolean = false;\r\n    hasLoaded: boolean = false;\r\n    loader: Loader;\r\n    load: () => Promise<File>;\r\n\r\n    constructor (key: string, url: string, config?: unknown)\r\n    {\r\n        this.key = key;\r\n        this.url = url;\r\n        this.config = config;\r\n    }\r\n}\r\n","import { Loader } from './Loader';\r\n\r\nexport function GetURL (key: string, url: string, extension: string, loader?: Loader): string\r\n{\r\n    if (!url)\r\n    {\r\n        url = key + extension;\r\n    }\r\n\r\n    if ((/^(?:blob:|data:|http:\\/\\/|https:\\/\\/|\\/\\/)/).exec(url))\r\n    {\r\n        return url;\r\n    }\r\n    else if (loader)\r\n    {\r\n        return loader.baseURL + loader.path + url;\r\n    }\r\n    else\r\n    {\r\n        return url;\r\n    }\r\n}\r\n","import { File } from './File';\r\n\r\nexport function ImageTagLoader (file: File): Promise<File>\r\n{\r\n    file.data = new Image();\r\n\r\n    if (file.crossOrigin)\r\n    {\r\n        file.data.crossOrigin = file.crossOrigin;\r\n    }\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n        file.data.onload = (): void =>\r\n        {\r\n            if (file.data.onload)\r\n            {\r\n                file.data.onload = null;\r\n                file.data.onerror = null;\r\n                resolve(file);\r\n            }\r\n        };\r\n\r\n        file.data.onerror = (event: ErrorEvent): void =>\r\n        {\r\n            if (file.data.onload)\r\n            {\r\n                file.data.onload = null;\r\n                file.data.onerror = null;\r\n                file.error = event;\r\n                reject(file);\r\n            }\r\n        };\r\n\r\n        file.data.src = file.url;\r\n\r\n        // Image is immediately-available or cached\r\n\r\n        if (file.data.complete && file.data.width && file.data.height)\r\n        {\r\n            file.data.onload = null;\r\n            file.data.onerror = null;\r\n            resolve(file);\r\n        }\r\n    });\r\n}\r\n","import { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { IGLTextureBindingConfig } from '../../renderer/webgl1/textures/IGLTextureBindingConfig';\r\nimport { ImageTagLoader } from '../ImageTagLoader';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\n\r\nexport function ImageFile (key: string, url?: string, glConfig?: IGLTextureBindingConfig): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.png', file.loader);\r\n\r\n        if (file.loader)\r\n        {\r\n            file.crossOrigin = file.loader.crossOrigin;\r\n        }\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const textureManager = TextureManagerInstance.get();\r\n\r\n            if (textureManager.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                ImageTagLoader(file).then(file =>\r\n                {\r\n                    textureManager.add(file.key, file.data as HTMLImageElement, glConfig);\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","const caches = new Map();\r\n\r\nexport const Cache = {\r\n\r\n    get: (type: string): Map<string, unknown> =>\r\n    {\r\n        if (!caches.has(type))\r\n        {\r\n            caches.set(type, new Map());\r\n        }\r\n\r\n        return caches.get(type);\r\n    },\r\n\r\n    getEntry: (cache: string, entry: string): unknown =>\r\n    {\r\n        if (caches.has(cache))\r\n        {\r\n            return caches.get(cache).get(entry);\r\n        }\r\n    }\r\n\r\n};\r\n","import { File } from './File';\r\n\r\nexport function XHRLoader (file: File): Promise<File>\r\n{\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    xhr.open('GET', file.url, true);\r\n\r\n    xhr.responseType = file.responseType;\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n        xhr.onload = (): void =>\r\n        {\r\n            file.data = xhr.responseText;\r\n            file.hasLoaded = true;\r\n\r\n            resolve(file);\r\n        };\r\n\r\n        xhr.onerror = (): void =>\r\n        {\r\n            file.hasLoaded = true;\r\n\r\n            reject(file);\r\n\r\n        };\r\n\r\n        xhr.send();\r\n    });\r\n}\r\n","import { Cache } from '../../cache/Cache';\r\nimport { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { XHRLoader } from '../XHRLoader';\r\n\r\nexport function JSONFile (key: string, url?: string): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.json', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const cache = Cache.get('JSON');\r\n\r\n            if (!file.skipCache && cache.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                XHRLoader(file).then(file =>\r\n                {\r\n                    file.data = JSON.parse(file.data);\r\n\r\n                    if (!file.skipCache)\r\n                    {\r\n                        cache.set(file.key, file.data);\r\n                    }\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { AtlasParser } from '../../textures/parsers/AtlasParser';\r\nimport { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { IGLTextureBindingConfig } from '../../renderer/webgl1/textures/IGLTextureBindingConfig';\r\nimport { ImageFile } from './ImageFile';\r\nimport { JSONFile } from './JSONFile';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\n\r\nexport function AtlasFile (key: string, textureURL?: string, atlasURL?: string, glConfig?: IGLTextureBindingConfig): File\r\n{\r\n    const json = JSONFile(key, atlasURL);\r\n    const image = ImageFile(key, textureURL, glConfig);\r\n\r\n    const file = new File(key, '');\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        //  If called via a Loader, it has been set into the file const\r\n        json.url = GetURL(json.key, json.url, '.json', file.loader);\r\n        image.url = GetURL(image.key, image.url, '.png', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            json.skipCache = true;\r\n\r\n            json.load().then(() =>\r\n            {\r\n                image.load().then(() =>\r\n                {\r\n                    //  By this stage, the JSON and image are loaded and in the texture manager\r\n\r\n                    AtlasParser(TextureManagerInstance.get().get(key), json.data);\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(() =>\r\n                {\r\n                    reject(file);\r\n                });\r\n\r\n            }).catch(() =>\r\n            {\r\n                reject(file);\r\n            });\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { Frame } from '../Frame';\r\nimport { Texture } from '../Texture';\r\n\r\n/**\r\n * Read an integer value from an XML Node.\r\n *\r\n * @function getValue\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Node} node - The XML Node.\r\n * @param {string} attribute - The attribute to read.\r\n *\r\n * @return {integer} The parsed value.\r\n */\r\nfunction GetValue (node: any, attribute: string): number\r\n{\r\n    return parseInt(node.getAttribute(attribute), 10);\r\n}\r\n\r\ntype BitmapCharacter = {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    // centerX: number;\r\n    // centerY: number,\r\n    xOffset: number;\r\n    yOffset: number;\r\n    xAdvance: number;\r\n    // data: {};\r\n    kerning: Record<number, number>;\r\n};\r\n\r\ntype BitmapData = {\r\n    font: string;\r\n    size: number;\r\n    lineHeight: number;\r\n    chars: Record<number, BitmapCharacter>;\r\n};\r\n\r\nexport function BitmapTextParser (texture: Texture, xml: XMLDocument, frame?: Frame): BitmapData\r\n{\r\n    const xSpacing = 0;\r\n    const ySpacing = 0;\r\n\r\n    const info = xml.getElementsByTagName('info')[0];\r\n    const common = xml.getElementsByTagName('common')[0];\r\n\r\n    const data: BitmapData = {\r\n        font: info.getAttribute('face'),\r\n        size: GetValue(info, 'size'),\r\n        lineHeight: GetValue(common, 'lineHeight') + ySpacing,\r\n        chars: {}\r\n    };\r\n\r\n    const letters = xml.getElementsByTagName('char');\r\n\r\n    // var adjustForTrim = (frame !== undefined && frame.trimmed);\r\n\r\n    // if (adjustForTrim)\r\n    // {\r\n    //     var top = frame.height;\r\n    //     var left = frame.width;\r\n    // }\r\n\r\n    for (let i: number = 0; i < letters.length; i++)\r\n    {\r\n        const node = letters[i];\r\n\r\n        const charCode = GetValue(node, 'id');\r\n        const x = GetValue(node, 'x');\r\n        const y = GetValue(node, 'y');\r\n        const width = GetValue(node, 'width');\r\n        const height = GetValue(node, 'height');\r\n\r\n        //  Handle frame trim issues\r\n\r\n        // if (adjustForTrim)\r\n        // {\r\n        //     if (gx < left)\r\n        //     {\r\n        //         left = gx;\r\n        //     }\r\n\r\n        //     if (gy < top)\r\n        //     {\r\n        //         top = gy;\r\n        //     }\r\n        // }\r\n\r\n        data.chars[charCode] =\r\n        {\r\n            x,\r\n            y,\r\n            width,\r\n            height,\r\n            // centerX: Math.floor(width / 2),\r\n            // centerY: Math.floor(height / 2),\r\n            xOffset: GetValue(node, 'xoffset'),\r\n            yOffset: GetValue(node, 'yoffset'),\r\n            xAdvance: GetValue(node, 'xadvance') + xSpacing,\r\n            // data: {},\r\n            kerning: {}\r\n        };\r\n\r\n        texture.addFrame(charCode, x, y, width, height);\r\n    }\r\n\r\n    /*\r\n    if (adjustForTrim && top !== 0 && left !== 0)\r\n    {\r\n        //  Now we know the top and left coordinates of the glyphs in the original data\r\n        //  so we can work out how much to adjust the glyphs by\r\n\r\n        for (var code in data.chars)\r\n        {\r\n            var glyph = data.chars[code];\r\n\r\n            glyph.x -= frame.x;\r\n            glyph.y -= frame.y;\r\n        }\r\n    }\r\n    */\r\n\r\n    const kernings = xml.getElementsByTagName('kerning');\r\n\r\n    for (let i: number = 0; i < kernings.length; i++)\r\n    {\r\n        const kern = kernings[i];\r\n\r\n        const first = GetValue(kern, 'first');\r\n        const second = GetValue(kern, 'second');\r\n        const amount = GetValue(kern, 'amount');\r\n\r\n        data.chars[second].kerning[first] = amount;\r\n    }\r\n\r\n    return data;\r\n}\r\n","import { Cache } from '../../cache/Cache';\r\nimport { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { ParseXML } from '../../dom/ParseXML';\r\nimport { XHRLoader } from '../XHRLoader';\r\n\r\nexport function XMLFile (key: string, url?: string): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.xml', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const cache = Cache.get('XML');\r\n\r\n            if (!file.skipCache && cache.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                XHRLoader(file).then(file =>\r\n                {\r\n                    const xml = ParseXML(file.data);\r\n\r\n                    if (xml !== null)\r\n                    {\r\n                        file.data = xml;\r\n\r\n                        if (!file.skipCache)\r\n                        {\r\n                            cache.set(file.key, xml);\r\n                        }\r\n\r\n                        resolve(file);\r\n                    }\r\n                    else\r\n                    {\r\n                        reject(file);\r\n                    }\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { BitmapTextParser } from '../../textures/parsers/BitmapTextParser';\r\nimport { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { IGLTextureBindingConfig } from '../../renderer/webgl1/textures/IGLTextureBindingConfig';\r\nimport { ImageFile } from './ImageFile';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\nimport { XMLFile } from './XMLFile';\r\n\r\nexport function BitmapTextFile (key: string, textureURL?: string, fontDataURL?: string, glConfig?: IGLTextureBindingConfig): File\r\n{\r\n    const xml = XMLFile(key, fontDataURL);\r\n    const image = ImageFile(key, textureURL, glConfig);\r\n\r\n    const file = new File(key, '');\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        //  If called via a Loader, it has been set into the file const\r\n        xml.url = GetURL(xml.key, xml.url, '.xml', file.loader);\r\n        image.url = GetURL(image.key, image.url, '.png', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            xml.skipCache = true;\r\n\r\n            xml.load().then(() =>\r\n            {\r\n                image.load().then(() =>\r\n                {\r\n                    //  By this stage, the XML and image are loaded and in the texture manager\r\n                    const texture = TextureManagerInstance.get().get(key);\r\n\r\n                    const fontData = BitmapTextParser(texture, xml.data as XMLDocument);\r\n\r\n                    texture.data = fontData;\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(() =>\r\n                {\r\n                    reject(file);\r\n                });\r\n\r\n            }).catch(() =>\r\n            {\r\n                reject(file);\r\n            });\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { Cache } from '../../cache/Cache';\r\nimport { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { XHRLoader } from '../XHRLoader';\r\n\r\nexport function CSVFile (key: string, url?: string): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.csv', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const cache = Cache.get('CSV');\r\n\r\n            if (!file.skipCache && cache.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                XHRLoader(file).then(file =>\r\n                {\r\n                    if (!file.skipCache)\r\n                    {\r\n                        cache.set(file.key, file.data);\r\n                    }\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { Cache } from '../../cache/Cache';\r\nimport { File } from '../File';\r\nimport { Geometry } from '../../gameobjects3d/geometry/Geometry';\r\nimport { GetURL } from '../GetURL';\r\nimport { XHRLoader } from '../XHRLoader';\r\n\r\nexport type JSONGeometryMappingConfig = {\r\n    vertices?: string;\r\n    normals?: string;\r\n    uvs?: string;\r\n    numberOfVertices?: number;\r\n};\r\n\r\nexport function JSONGeometryFile (key: string, url?: string, mappingConfig?: JSONGeometryMappingConfig): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    const {\r\n        vertices = 'verts',\r\n        normals = 'normals',\r\n        uvs = 'uvs',\r\n        numberOfVertices = 0\r\n    } = mappingConfig;\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.json', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const cache = Cache.get('Geometry');\r\n\r\n            if (!file.skipCache && cache.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                XHRLoader(file).then(file =>\r\n                {\r\n                    const data = JSON.parse(file.data);\r\n\r\n                    const geom = new Geometry({\r\n                        vertices: data[vertices],\r\n                        normals: data[normals],\r\n                        uvs: data[uvs],\r\n                        numberOfVertices: numberOfVertices\r\n                    });\r\n\r\n                    file.data = geom;\r\n\r\n                    if (!file.skipCache)\r\n                    {\r\n                        cache.set(file.key, geom);\r\n                    }\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { Cache } from '../../cache/Cache';\r\nimport { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { XHRLoader } from '../XHRLoader';\r\n\r\nexport function OBJFile (key: string, url?: string): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.obj', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const cache = Cache.get('Obj');\r\n\r\n            if (!file.skipCache && cache.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                XHRLoader(file).then(file =>\r\n                {\r\n                    if (!file.skipCache)\r\n                    {\r\n                        cache.set(file.key, file.data);\r\n                    }\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { Cache } from '../../cache/Cache';\r\nimport { File } from '../File';\r\nimport { Geometry } from '../../gameobjects3d/geometry/Geometry';\r\nimport { GetBufferFromObj } from '../../gameobjects3d/geometry/GetBufferFromObj';\r\nimport { GetURL } from '../GetURL';\r\nimport { XHRLoader } from '../XHRLoader';\r\n\r\nexport function OBJGeometryFile (key: string, url?: string, flipUVs: boolean = true): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.obj', file.loader);\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const cache = Cache.get('Geometry');\r\n\r\n            if (!file.skipCache && cache.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                XHRLoader(file).then(file =>\r\n                {\r\n                    const models = GetBufferFromObj(file.data, flipUVs);\r\n\r\n                    file.data = models;\r\n\r\n                    if (!file.skipCache)\r\n                    {\r\n                        let key = file.key;\r\n\r\n                        models.forEach((model, index) =>\r\n                        {\r\n                            if (index > 0)\r\n                            {\r\n                                key = file.key + index.toString();\r\n                            }\r\n\r\n                            const geom = new Geometry(model.buffer);\r\n\r\n                            cache.set(key, geom);\r\n\r\n                        });\r\n                    }\r\n\r\n                    resolve(file);\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { IFrameConfig } from '../IFrameConfig';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function SpriteSheetParser (texture: Texture, x: number, y: number, width: number, height: number, frameConfig: IFrameConfig): void\r\n{\r\n    const {\r\n        frameWidth = null,\r\n        endFrame = -1,\r\n        margin = 0,\r\n        spacing = 0\r\n    } = frameConfig;\r\n\r\n    let {\r\n        frameHeight = null,\r\n        startFrame = 0\r\n    } = frameConfig;\r\n\r\n    if (!frameHeight)\r\n    {\r\n        frameHeight = frameWidth;\r\n    }\r\n\r\n    //  If missing we can't proceed\r\n    if (frameWidth === null)\r\n    {\r\n        throw new Error('SpriteSheetParser: Invalid frameWidth');\r\n    }\r\n\r\n    const row: number = Math.floor((width - margin + spacing) / (frameWidth + spacing));\r\n    const column: number = Math.floor((height - margin + spacing) / (frameHeight + spacing));\r\n    let total: number = row * column;\r\n\r\n    if (total === 0)\r\n    {\r\n        console.warn('SpriteSheetParser: Frame config will result in zero frames');\r\n    }\r\n\r\n    if (startFrame > total || startFrame < -total)\r\n    {\r\n        startFrame = 0;\r\n    }\r\n\r\n    if (startFrame < 0)\r\n    {\r\n        //  Allow negative skipframes.\r\n        startFrame = total + startFrame;\r\n    }\r\n\r\n    if (endFrame !== -1)\r\n    {\r\n        total = startFrame + (endFrame + 1);\r\n    }\r\n\r\n    let fx: number = margin;\r\n    let fy: number = margin;\r\n    let ax: number = 0;\r\n    let ay: number = 0;\r\n\r\n    for (let i: number = 0; i < total; i++)\r\n    {\r\n        ax = 0;\r\n        ay = 0;\r\n\r\n        const w: number = fx + frameWidth;\r\n        const h: number = fy + frameHeight;\r\n\r\n        if (w > width)\r\n        {\r\n            ax = w - width;\r\n        }\r\n\r\n        if (h > height)\r\n        {\r\n            ay = h - height;\r\n        }\r\n\r\n        texture.addFrame(i, x + fx, y + fy, frameWidth - ax, frameHeight - ay);\r\n\r\n        fx += frameWidth + spacing;\r\n\r\n        if (fx + frameWidth > width)\r\n        {\r\n            fx = margin;\r\n            fy += frameHeight + spacing;\r\n        }\r\n    }\r\n}\r\n","import { File } from '../File';\r\nimport { GetURL } from '../GetURL';\r\nimport { IFrameConfig } from '../../textures/IFrameConfig';\r\nimport { IGLTextureBindingConfig } from '../../renderer/webgl1/textures/IGLTextureBindingConfig';\r\nimport { ImageTagLoader } from '../ImageTagLoader';\r\nimport { SpriteSheetParser } from '../../textures/parsers/SpriteSheetParser';\r\nimport { TextureManagerInstance } from '../../textures/TextureManagerInstance';\r\n\r\nexport function SpriteSheetFile (key: string, url: string, frameConfig: IFrameConfig, glConfig?: IGLTextureBindingConfig): File\r\n{\r\n    const file = new File(key, url);\r\n\r\n    file.load = (): Promise<File> =>\r\n    {\r\n        file.url = GetURL(file.key, file.url, '.png', file.loader);\r\n\r\n        if (file.loader)\r\n        {\r\n            file.crossOrigin = file.loader.crossOrigin;\r\n        }\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            const textureManager = TextureManagerInstance.get();\r\n\r\n            if (textureManager.has(file.key))\r\n            {\r\n                resolve(file);\r\n            }\r\n            else\r\n            {\r\n                ImageTagLoader(file).then(file =>\r\n                {\r\n                    const texture = textureManager.add(file.key, file.data as HTMLImageElement, glConfig);\r\n\r\n                    if (texture)\r\n                    {\r\n                        SpriteSheetParser(texture, 0, 0, texture.width, texture.height, frameConfig);\r\n\r\n                        resolve(file);\r\n                    }\r\n                    else\r\n                    {\r\n                        reject(file);\r\n                    }\r\n\r\n                }).catch(file =>\r\n                {\r\n                    reject(file);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    return file;\r\n}\r\n","import { Emit, EventEmitter } from '../events';\r\n\r\nimport { File } from './File';\r\n\r\nexport class Loader extends EventEmitter\r\n{\r\n    baseURL: string = '';\r\n    path: string = '';\r\n    crossOrigin: string = 'anonymous';\r\n\r\n    //  -1 means load everything at once (only recommended on http/2 servers)\r\n    maxParallelDownloads: number = -1;\r\n\r\n    isLoading: boolean = false;\r\n    progress: number;\r\n\r\n    queue: Set<File>;\r\n    inflight: Set<File>;\r\n    completed: Set<File>;\r\n\r\n    onComplete: Function;\r\n    onError: Function;\r\n\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset (): void\r\n    {\r\n        this.isLoading = false;\r\n\r\n        this.queue = new Set();\r\n        this.inflight = new Set();\r\n        this.completed = new Set();\r\n\r\n        this.progress = 0;\r\n    }\r\n\r\n    add (...file: File[]): this\r\n    {\r\n        file.forEach(entity =>\r\n        {\r\n            entity.loader = this;\r\n\r\n            this.queue.add(entity);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    start (): Promise<Loader>\r\n    {\r\n        if (this.isLoading)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            this.completed.clear();\r\n            this.progress = 0;\r\n\r\n            if (this.queue.size > 0)\r\n            {\r\n                this.isLoading = true;\r\n\r\n                this.onComplete = resolve;\r\n                this.onError = reject;\r\n\r\n                // console.log('Loader.start');\r\n\r\n                Emit(this, 'start');\r\n\r\n                this.nextFile();\r\n            }\r\n            else\r\n            {\r\n                this.progress = 1;\r\n\r\n                Emit(this, 'complete');\r\n\r\n                resolve();\r\n                // onComplete();\r\n            }\r\n        });\r\n\r\n        /*\r\n        if (this.isLoading)\r\n        {\r\n            return this;\r\n        }\r\n\r\n        this.completed.clear();\r\n        this.progress = 0;\r\n\r\n        if (this.queue.size > 0)\r\n        {\r\n            this.isLoading = true;\r\n\r\n            this.onComplete = onComplete;\r\n\r\n            // console.log('Loader.start');\r\n\r\n            Emit(this, 'start');\r\n\r\n            this.nextFile();\r\n        }\r\n        else\r\n        {\r\n            this.progress = 1;\r\n\r\n            Emit(this, 'complete');\r\n\r\n            onComplete();\r\n        }\r\n\r\n        return this;\r\n        */\r\n    }\r\n\r\n    nextFile (): void\r\n    {\r\n        let limit = this.queue.size;\r\n\r\n        if (this.maxParallelDownloads !== -1)\r\n        {\r\n            limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\r\n        }\r\n\r\n        // console.log('Loader.nextFile', limit);\r\n\r\n        if (limit)\r\n        {\r\n            // console.log('Batching', limit, 'files to download');\r\n\r\n            const iterator = this.queue.values();\r\n\r\n            while (limit > 0)\r\n            {\r\n                const file = iterator.next().value;\r\n\r\n                // console.log('Loader.nextFile', file.key, '=>', file.url);\r\n\r\n                this.inflight.add(file);\r\n\r\n                this.queue.delete(file);\r\n\r\n                file.load()\r\n                    .then(\r\n                        (file: File) => this.fileComplete(file)\r\n                    )\r\n                    .catch(\r\n                        (file: File) => this.fileError(file)\r\n                    );\r\n\r\n                limit--;\r\n            }\r\n        }\r\n        else if (this.inflight.size === 0)\r\n        {\r\n            // console.log('Loader inflight zero');\r\n\r\n            this.stop();\r\n\r\n            // window.setTimeout(() => this.stop(), 0);\r\n        }\r\n    }\r\n\r\n    stop (): void\r\n    {\r\n        if (!this.isLoading)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.isLoading = false;\r\n\r\n        Emit(this, 'complete', this.completed);\r\n\r\n        this.onComplete();\r\n\r\n        this.completed.clear();\r\n    }\r\n\r\n    private updateProgress (file: File): void\r\n    {\r\n        this.inflight.delete(file);\r\n        this.completed.add(file);\r\n\r\n        const totalCompleted = this.completed.size;\r\n        const totalQueued = this.queue.size + this.inflight.size;\r\n\r\n        if (totalCompleted > 0)\r\n        {\r\n            this.progress = totalCompleted / (totalCompleted + totalQueued);\r\n        }\r\n\r\n        Emit(this, 'progress', this.progress, totalCompleted, totalQueued);\r\n\r\n        this.nextFile();\r\n    }\r\n\r\n    private fileComplete (file: File): void\r\n    {\r\n        Emit(this, 'filecomplete', file);\r\n\r\n        this.updateProgress(file);\r\n    }\r\n\r\n    private fileError (file: File): void\r\n    {\r\n        Emit(this, 'fileerror', file);\r\n\r\n        this.updateProgress(file);\r\n    }\r\n\r\n    totalFilesToLoad (): number\r\n    {\r\n        return this.queue.size + this.inflight.size;\r\n    }\r\n\r\n    setBaseURL (url: string = ''): this\r\n    {\r\n        if (url !== '' && url.substr(-1) !== '/')\r\n        {\r\n            url = url.concat('/');\r\n        }\r\n\r\n        this.baseURL = url;\r\n\r\n        return this;\r\n    }\r\n\r\n    setPath (path: string = ''): this\r\n    {\r\n        if (path !== '' && path.substr(-1) !== '/')\r\n        {\r\n            path = path.concat('/');\r\n        }\r\n\r\n        this.path = path;\r\n\r\n        return this;\r\n    }\r\n\r\n    setCORS (crossOrigin: string): this\r\n    {\r\n        this.crossOrigin = crossOrigin;\r\n\r\n        return this;\r\n    }\r\n\r\n    setMaxParallelDownloads (max: number): this\r\n    {\r\n        this.maxParallelDownloads = max;\r\n\r\n        return this;\r\n    }\r\n}\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const BlackPlastic = new Material({\r\n    ambient: [ 0, 0, 0 ],\r\n    diffuse: [ 0.01, 0.01, 0.01 ],\r\n    specular: [ 0.5, 0.5, 0.5 ],\r\n    shine: 0.25\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const BlackRubber = new Material({\r\n    ambient: [ 0.02, 0.02, 0.02 ],\r\n    diffuse: [ 0.01, 0.01, 0.01 ],\r\n    specular: [ 0.4, 0.4, 0.4 ],\r\n    shine: 0.078125\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Brass = new Material({\r\n    ambient: [ 0.329412, 0.223529, 0.027451 ],\r\n    diffuse: [ 0.780392, 0.568627, 0.113725 ],\r\n    specular: [ 0.992157, 0.941176, 0.807843 ],\r\n    shine: 0.21794872\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Bronze = new Material({\r\n    ambient: [ 0.2125, 0.1275, 0.054 ],\r\n    diffuse: [ 0.714, 0.4284, 0.18144 ],\r\n    specular: [ 0.393548, 0.271906, 0.166721 ],\r\n    shine: 0.2\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Chrome = new Material({\r\n    ambient: [ 0.25, 0.25, 0.25 ],\r\n    diffuse: [ 0.4, 0.4, 0.4 ],\r\n    specular: [ 0.774597, 0.774597, 0.774597 ],\r\n    shine: 0.6\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Copper = new Material({\r\n    ambient: [ 0.19125, 0.0735, 0.0225 ],\r\n    diffuse: [ 0.7038, 0.27048, 0.0828 ],\r\n    specular: [ 0.256777, 0.137622, 0.086014 ],\r\n    shine: 0.1\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const CyanPlastic = new Material({\r\n    ambient: [ 0, 0.1, 0.06 ],\r\n    diffuse: [ 0, 0.50980392, 0.50980392 ],\r\n    specular: [ 0.50196078, 0.50196078, 0.50196078 ],\r\n    shine: 0.25\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const CyanRubber = new Material({\r\n    ambient: [ 0, 0.05, 0.05 ],\r\n    diffuse: [ 0.4, 0.5, 0.5 ],\r\n    specular: [ 0.04, 0.7, 0.7 ],\r\n    shine: 0.078125\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Emerald = new Material({\r\n    ambient: [ 0.0215, 0.1745, 0.0215 ],\r\n    diffuse: [ 0.07568, 0.61424, 0.07568 ],\r\n    specular: [ 0.633, 0.727811, 0.633 ],\r\n    shine: 0.6\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Gold = new Material({\r\n    ambient: [ 0.24725, 0.1995, 0.0745 ],\r\n    diffuse: [ 0.75164, 0.60648, 0.22648 ],\r\n    specular: [ 0.628281, 0.555802, 0.366065 ],\r\n    shine: 0.4\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const GreenPlastic = new Material({\r\n    ambient: [ 0, 0, 0 ],\r\n    diffuse: [ 0.1, 0.35, 0.1 ],\r\n    specular: [ 0.45, 0.55, 0.45 ],\r\n    shine: 0.25\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const GreenRubber = new Material({\r\n    ambient: [ 0, 0.05, 0 ],\r\n    diffuse: [ 0.4, 0.5, 0.4 ],\r\n    specular: [ 0.04, 0.7, 0.04 ],\r\n    shine: 0.078125\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Jade = new Material({\r\n    ambient: [ 0.135, 0.2225, 0.1575 ],\r\n    diffuse: [ 0.54, 0.89, 0.63 ],\r\n    specular: [ 0.316228, 0.316228, 0.316228 ],\r\n    shine: 0.1\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Obsidian = new Material({\r\n    ambient: [ 0.05375, 0.05, 0.06625 ],\r\n    diffuse: [ 0.18275, 0.17, 0.22525 ],\r\n    specular: [ 0.332741, 0.328634, 0.346435 ],\r\n    shine: 0.3\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Pearl = new Material({\r\n    ambient: [ 0.25, 0.20725, 0.20725 ],\r\n    diffuse: [ 1, 0.829, 0.829 ],\r\n    specular: [ 0.296648, 0.296648, 0.296648 ],\r\n    shine: 0.088\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const RedPlastic = new Material({\r\n    ambient: [ 0, 0, 0 ],\r\n    diffuse: [ 0.5, 0, 0 ],\r\n    specular: [ 0.7, 0.6, 0.6 ],\r\n    shine: 0.25\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const RedRubber = new Material({\r\n    ambient: [ 0.05, 0, 0 ],\r\n    diffuse: [ 0.5, 0.4, 0.4 ],\r\n    specular: [ 0.7, 0.04, 0.04 ],\r\n    shine: 0.078125\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Ruby = new Material({\r\n    ambient: [ 0.1745, 0.01175, 0.01175 ],\r\n    diffuse: [ 0.61424, 0.04136, 0.04136 ],\r\n    specular: [ 0.727811, 0.626959, 0.626959 ],\r\n    shine: 0.6\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Silver = new Material({\r\n    ambient: [ 0.19225, 0.19225, 0.19225 ],\r\n    diffuse: [ 0.50754, 0.50754, 0.50754 ],\r\n    specular: [ 0.508273, 0.508273, 0.508273 ],\r\n    shine: 0.4\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const Turquoise = new Material({\r\n    ambient: [ 0.1, 0.18725, 0.1745 ],\r\n    diffuse: [ 0.396, 0.74151, 0.69102 ],\r\n    specular: [ 0.297254, 0.30829, 0.306678 ],\r\n    shine: 0.1\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const WhitePlastic = new Material({\r\n    ambient: [ 0, 0, 0 ],\r\n    diffuse: [ 0.55, 0.55, 0.55 ],\r\n    specular: [ 0.7, 0.7, 0.7 ],\r\n    shine: 0.25\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const WhiteRubber = new Material({\r\n    ambient: [ 0.05, 0.05, 0.05 ],\r\n    diffuse: [ 0.5, 0.5, 0.5 ],\r\n    specular: [ 0.7, 0.7, 0.7 ],\r\n    shine: 0.078125\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const YellowPlastic = new Material({\r\n    ambient: [ 0, 0, 0 ],\r\n    diffuse: [ 0.5, 0.5, 0 ],\r\n    specular: [ 0.6, 0.6, 0.5 ],\r\n    shine: 0.25\r\n});\r\n","import { Material } from '../gameobjects3d/material/Material';\r\n\r\nexport const YellowRubber = new Material({\r\n    ambient: [ 0.05, 0.05, 0 ],\r\n    diffuse: [ 0.5, 0.5, 0.4 ],\r\n    specular: [ 0.7, 0.7, 0.04 ],\r\n    shine: 0.078125\r\n});\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n */\r\nexport const Arne16 = [\r\n    '#000',\r\n    '#9D9D9D',\r\n    '#FFF',\r\n    '#BE2633',\r\n    '#E06F8B',\r\n    '#493C2B',\r\n    '#A46422',\r\n    '#EB8931',\r\n    '#F7E26B',\r\n    '#2F484E',\r\n    '#44891A',\r\n    '#A3CE27',\r\n    '#1B2632',\r\n    '#005784',\r\n    '#31A2F2',\r\n    '#B2DCEF'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette inspired by the Commodore 64.\r\n */\r\nexport const C64 = [\r\n    '#000',\r\n    '#fff',\r\n    '#8b4131',\r\n    '#7bbdc5',\r\n    '#8b41ac',\r\n    '#6aac41',\r\n    '#3931a4',\r\n    '#d5de73',\r\n    '#945a20',\r\n    '#5a4100',\r\n    '#bd736a',\r\n    '#525252',\r\n    '#838383',\r\n    '#acee8b',\r\n    '#7b73de',\r\n    '#acacac'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color CGA inspired palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n */\r\nexport const CGA = [\r\n    '#000',\r\n    '#2234d1',\r\n    '#0c7e45',\r\n    '#44aacc',\r\n    '#8a3622',\r\n    '#5c2e78',\r\n    '#aa5c3d',\r\n    '#b5b5b5',\r\n    '#5e606e',\r\n    '#4c81fb',\r\n    '#6cd947',\r\n    '#7be2f9',\r\n    '#eb8a60',\r\n    '#e23d69',\r\n    '#ffd93f',\r\n    '#fff'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color JMP palette by [Arne](http://androidarts.com/palette/16pal.htm)\r\n */\r\nexport const JMP = [\r\n    '#000',\r\n    '#191028',\r\n    '#46af45',\r\n    '#a1d685',\r\n    '#453e78',\r\n    '#7664fe',\r\n    '#833129',\r\n    '#9ec2e8',\r\n    '#dc534b',\r\n    '#e18d79',\r\n    '#d6b97b',\r\n    '#e9d8a1',\r\n    '#216c4b',\r\n    '#d365c8',\r\n    '#afaab9',\r\n    '#f5f4eb'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette inspired by Japanese computers like the MSX.\r\n */\r\nexport const MSX = [\r\n    '#000',\r\n    '#191028',\r\n    '#46af45',\r\n    '#a1d685',\r\n    '#453e78',\r\n    '#7664fe',\r\n    '#833129',\r\n    '#9ec2e8',\r\n    '#dc534b',\r\n    '#e18d79',\r\n    '#d6b97b',\r\n    '#e9d8a1',\r\n    '#216c4b',\r\n    '#d365c8',\r\n    '#afaab9',\r\n    '#fff'\r\n];\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * A 16 color palette as used in Pico8. */\r\nexport const PICO8 = [\r\n    '#000',\r\n    '#1D2B53',\r\n    '#7E2553',\r\n    '#008751',\r\n    '#AB5236',\r\n    '#5F574F',\r\n    '#C2C3C7',\r\n    '#FFF1E8',\r\n    '#FF004D',\r\n    '#FFA300',\r\n    '#FFEC27',\r\n    '#00E436',\r\n    '#29ADFF',\r\n    '#83769C',\r\n    '#FF77A8',\r\n    '#FFCCAA'\r\n];\r\n","import { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function GridTexture (color1: string, color2: string, width: number = 32, height: number = 32, cols: number = 2, rows: number = 2): Texture\r\n{\r\n    const ctx = CreateCanvas(width, height);\r\n\r\n    const colWidth = width / cols;\r\n    const rowHeight = height / rows;\r\n\r\n    ctx.fillStyle = color1;\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    ctx.fillStyle = color2;\r\n\r\n    for (let y: number = 0; y < rows; y++)\r\n    {\r\n        for (let x: number = (y % 2); x < cols; x += 2)\r\n        {\r\n            ctx.fillRect(x * colWidth, y * rowHeight, colWidth, rowHeight);\r\n        }\r\n    }\r\n\r\n    return new Texture(ctx.canvas);\r\n}\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2020 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nimport { Arne16 } from '../palettes/Arne16';\r\nimport { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\n/**\r\n * @callback Phaser.Types.Create.GenerateTextureCallback\r\n * @since 3.0.0\r\n *\r\n * @param {HTMLCanvasElement} canvas - The HTML Canvas element to operate on.\r\n * @param {CanvasRenderingContext2D} context - The context of the HTML Canvas element.\r\n */\r\n\r\n/**\r\n * @typedef {object} Phaser.Types.Create.GenerateTextureConfig\r\n * @since 3.0.0\r\n *\r\n * @property {array} [data=[]] - An array of data, where each row is a string of single values 0-9A-F, or the period character.\r\n * @property {HTMLCanvasElement} [canvas=null] - The HTML Canvas to draw the texture to.\r\n * @property {Phaser.Types.Create.Palette} [palette=Arne16] - The indexed palette that the data cell values map to.\r\n * @property {number} [pixelWidth=1] - The width of each 'pixel' in the generated texture.\r\n * @property {number} [pixelHeight=1] - The height of each 'pixel' in the generated texture.\r\n * @property {boolean} [resizeCanvas=true] - Should the canvas be resized before the texture is drawn?\r\n * @property {boolean} [clearCanvas=true] - Should the canvas be cleared before the texture is drawn?\r\n * @property {Phaser.Types.Create.GenerateTextureCallback} [preRender] - A callback to send the canvas to prior to the texture being drawn.\r\n * @property {Phaser.Types.Create.GenerateTextureCallback} [postRender] - A callback to send the canvas to after the texture has been drawn.\r\n */\r\n\r\nexport type PixelTextureConfig = {\r\n    data: string[];\r\n    canvas?: HTMLCanvasElement;\r\n    palette?: string[];\r\n    pixelWidth?: number;\r\n    pixelHeight?: number;\r\n    resizeCanvas?: boolean;\r\n    clearCanvas?: boolean;\r\n    preRender?: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void;\r\n    postRender?: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void;\r\n};\r\n\r\n/**\r\n * Generates a texture based on the given Create configuration object.\r\n *\r\n * The texture is drawn using a fixed-size indexed palette of 16 colors, where the hex value in the\r\n * data cells map to a single color. For example, if the texture config looked like this:\r\n *\r\n * ```javascript\r\n * var star = [\r\n *   '.....828.....',\r\n *   '....72227....',\r\n *   '....82228....',\r\n *   '...7222227...',\r\n *   '2222222222222',\r\n *   '8222222222228',\r\n *   '.72222222227.',\r\n *   '..787777787..',\r\n *   '..877777778..',\r\n *   '.78778887787.',\r\n *   '.27887.78872.',\r\n *   '.787.....787.'\r\n * ];\r\n *\r\n * this.textures.generate('star', { data: star, pixelWidth: 4 });\r\n * ```\r\n *\r\n * Then it would generate a texture that is 52 x 48 pixels in size, because each cell of the data array\r\n * represents 1 pixel multiplied by the `pixelWidth` value. The cell values, such as `8`, maps to color\r\n * number 8 in the palette. If a cell contains a period character `.` then it is transparent.\r\n *\r\n * The default palette is Arne16, but you can specify your own using the `palette` property.\r\n *\r\n * @function Phaser.Create.GenerateTexture\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Types.Create.GenerateTextureConfig} config - The Generate Texture Configuration object.\r\n *\r\n * @return {Texture} An HTMLCanvasElement which contains the generated texture drawn to it.\r\n */\r\nexport function PixelTexture (config: PixelTextureConfig): Texture\r\n{\r\n    const {\r\n        data = [],\r\n        palette = Arne16,\r\n        pixelWidth = 1,\r\n        pixelHeight = pixelWidth,\r\n        preRender = null,\r\n        postRender = null\r\n    } = config;\r\n\r\n    let {\r\n        canvas = null,\r\n        resizeCanvas = true,\r\n        clearCanvas = true\r\n    } = config;\r\n\r\n    const width = Math.floor(Math.abs(data[0].length * pixelWidth));\r\n    const height = Math.floor(Math.abs(data.length * pixelHeight));\r\n\r\n    if (!canvas)\r\n    {\r\n        canvas = CreateCanvas(width, height).canvas;\r\n        resizeCanvas = false;\r\n        clearCanvas = false;\r\n    }\r\n\r\n    if (resizeCanvas)\r\n    {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (clearCanvas)\r\n    {\r\n        ctx.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    //  preRender Callback?\r\n    if (preRender)\r\n    {\r\n        preRender(canvas, ctx);\r\n    }\r\n\r\n    //  Draw it\r\n    for (let y = 0; y < data.length; y++)\r\n    {\r\n        const row = data[y];\r\n\r\n        for (let x = 0; x < row.length; x++)\r\n        {\r\n            const d: string = row[x];\r\n\r\n            if (d !== '.' && d !== ' ')\r\n            {\r\n                ctx.fillStyle = palette[parseInt('0x' + d.toUpperCase())];\r\n                ctx.fillRect(x * pixelWidth, y * pixelHeight, pixelWidth, pixelHeight);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  postRender Callback?\r\n    if (postRender)\r\n    {\r\n        postRender(canvas, ctx);\r\n    }\r\n\r\n    return new Texture(canvas);\r\n}\r\n","import { CreateFramebuffer } from '../../renderer/webgl1/fbo/CreateFramebuffer';\r\nimport { GLTextureBinding } from '../../renderer/webgl1/textures/GLTextureBinding';\r\nimport { ISprite } from '../../gameobjects/sprite/ISprite';\r\nimport { Texture } from '../Texture';\r\nimport { WebGLRenderer } from '../../renderer/webgl1/WebGLRenderer';\r\nimport { gl } from '../../renderer/webgl1/GL';\r\n\r\nexport class RenderTexture extends Texture\r\n{\r\n    renderer: WebGLRenderer;\r\n    cameraMatrix: Float32Array;\r\n    projectionMatrix: Float32Array;\r\n\r\n    constructor (renderer: WebGLRenderer, width: number = 256, height: number = width)\r\n    {\r\n        super(null, width, height);\r\n\r\n        this.renderer = renderer;\r\n\r\n        /*\r\n        const [ texture, framebuffer ] = CreateFramebuffer(width, height);\r\n\r\n        this.binding = new GLTextureBinding(this);\r\n\r\n        this.binding.texture = texture;\r\n        this.binding.framebuffer = framebuffer;\r\n\r\n        this.projectionMatrix = Ortho(width, height);\r\n        this.cameraMatrix = new Float32Array([ 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, height, 0, 1 ]);\r\n        */\r\n    }\r\n\r\n    cls (): this\r\n    {\r\n        // const renderer = this.renderer;\r\n\r\n        // renderer.reset(this.binding.framebuffer, this.width, this.height);\r\n        // gl.clearColor(0, 0, 0, 0);\r\n        // gl.clear(gl.COLOR_BUFFER_BIT);\r\n        // renderer.reset();\r\n\r\n        return this;\r\n    }\r\n\r\n    batchStart (): this\r\n    {\r\n        // const renderer = this.renderer;\r\n\r\n        // renderer.reset(this.binding.framebuffer, this.width, this.height);\r\n\r\n        // renderer.currentShader.bind(this.projectionMatrix, this.cameraMatrix);\r\n\r\n        return this;\r\n    }\r\n\r\n    batchDraw (sprites: ISprite[]): this\r\n    {\r\n        // const renderer = this.renderer;\r\n\r\n        for (let i = 0, len = sprites.length; i < len; i++)\r\n        {\r\n            // sprites[i].renderGL(renderer);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    batchEnd (): this\r\n    {\r\n        const renderer = this.renderer;\r\n\r\n        // renderer.flush();\r\n\r\n        renderer.reset();\r\n\r\n        return this;\r\n    }\r\n\r\n    draw (...sprites: ISprite[]): this\r\n    {\r\n        this.batchStart();\r\n        this.batchDraw(sprites);\r\n        this.batchEnd();\r\n\r\n        return this;\r\n    }\r\n}\r\n","import { CreateCanvas } from '../CreateCanvas';\r\nimport { Texture } from '../Texture';\r\n\r\nexport function SolidColorTexture (color: string = 'rgba(0,0,0,0)', width: number = 32, height: number = 32): Texture\r\n{\r\n    const ctx = CreateCanvas(width, height);\r\n\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    return new Texture(ctx.canvas);\r\n}\r\n","import { Frame } from './Frame';\r\nimport { ITexture } from './ITexture';\r\n\r\nexport function GetFrames (texture: ITexture, frames: string[] | number[]): Frame[]\r\n{\r\n    const output: Frame[] = [];\r\n\r\n    frames.forEach((key: string | number) =>\r\n    {\r\n        output.push(texture.getFrame(key));\r\n    });\r\n\r\n    return output;\r\n}\r\n","import { Frame } from './Frame';\r\nimport { ITexture } from './ITexture';\r\n\r\nexport type GetFramesInRangeConfig =\r\n{\r\n    prefix?: string;\r\n    start?: number;\r\n    end: number;\r\n    zeroPad?: number;\r\n    suffix?: string;\r\n};\r\n\r\nexport function GetFramesInRange (texture: ITexture, config: GetFramesInRangeConfig): Frame[]\r\n{\r\n    const {\r\n        prefix = '',\r\n        start = 0,\r\n        zeroPad = 0,\r\n        suffix = ''\r\n    } = config;\r\n\r\n    let end = config.end;\r\n\r\n    const output: Frame[] = [];\r\n\r\n    const diff: number = (start < end) ? 1 : -1;\r\n\r\n    //  Adjust because we use i !== end in the for loop\r\n    end += diff;\r\n\r\n    for (let i: number = start; i !== end; i += diff)\r\n    {\r\n        const frameKey = (prefix + i.toString().padStart(zeroPad, '0') + suffix);\r\n\r\n        output.push(texture.getFrame(frameKey));\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { Texture } from './Texture';\r\n\r\nexport function SetFilter (linear: boolean, ...textures: Texture[]): Texture[]\r\n{\r\n    textures.forEach(texture =>\r\n    {\r\n        if (texture.binding)\r\n        {\r\n            texture.binding.setFilter(linear);\r\n        }\r\n    });\r\n\r\n    return textures;\r\n}\r\n","import { CreateCanvas } from './CreateCanvas';\r\nimport { IGLTextureBindingConfig } from '../renderer/webgl1/textures/IGLTextureBindingConfig';\r\nimport { Texture } from './Texture';\r\nimport { TextureManagerInstance } from './TextureManagerInstance';\r\n\r\nexport class TextureManager\r\n{\r\n    textures: Map<string, Texture>;\r\n\r\n    constructor ()\r\n    {\r\n        this.textures = new Map();\r\n\r\n        this.createDefaultTextures();\r\n\r\n        TextureManagerInstance.set(this);\r\n    }\r\n\r\n    private createDefaultTextures (): void\r\n    {\r\n        this.add('__BLANK', new Texture(CreateCanvas(32, 32).canvas));\r\n\r\n        const missing = CreateCanvas(32, 32);\r\n\r\n        missing.strokeStyle = '#0f0';\r\n        missing.moveTo(0, 0);\r\n        missing.lineTo(32, 32);\r\n        missing.stroke();\r\n        missing.strokeRect(0.5, 0.5, 31, 31);\r\n\r\n        this.add('__MISSING', new Texture(missing.canvas));\r\n\r\n        const white = CreateCanvas(32, 32);\r\n\r\n        white.fillStyle = '#fff';\r\n        white.fillRect(0, 0, 32, 32);\r\n\r\n        this.add('__WHITE', new Texture(white.canvas));\r\n    }\r\n\r\n    get (key: string): Texture\r\n    {\r\n        const textures = this.textures;\r\n\r\n        if (textures.has(key))\r\n        {\r\n            return textures.get(key);\r\n        }\r\n        else\r\n        {\r\n            return textures.get('__MISSING');\r\n        }\r\n    }\r\n\r\n    has (key: string): boolean\r\n    {\r\n        return this.textures.has(key);\r\n    }\r\n\r\n    add (key: string, source: Texture | HTMLImageElement, glConfig?: IGLTextureBindingConfig): Texture\r\n    {\r\n        let texture: Texture;\r\n        const textures = this.textures;\r\n\r\n        if (!textures.has(key))\r\n        {\r\n            if (source instanceof Texture)\r\n            {\r\n                texture = source;\r\n            }\r\n            else\r\n            {\r\n                texture = new Texture(source, 0, 0, glConfig);\r\n            }\r\n\r\n            texture.key = key;\r\n\r\n            textures.set(key, texture);\r\n        }\r\n\r\n        return texture;\r\n    }\r\n}\r\n","export function NOOP (): void\r\n{\r\n\r\n}\r\n","import { Clock } from './Clock';\r\nimport { ITimerEvent } from './ITimerEvent';\r\nimport { ITimerEventConfig } from './ITimerEventConfig';\r\nimport { NOOP } from './NOOP';\r\n\r\nexport function AddTimer (clock: Clock, config: ITimerEventConfig): void\r\n{\r\n    const {\r\n        duration = 0,\r\n        repeat = 0,\r\n        delay = -1,\r\n        onStart = NOOP,\r\n        onUpdate = NOOP,\r\n        onRepeat = NOOP,\r\n        onComplete = NOOP\r\n    } = config;\r\n\r\n    const timer: ITimerEvent = {\r\n        elapsed: duration,\r\n        duration,\r\n        repeat,\r\n        delay,\r\n        update: null,\r\n        onStart,\r\n        onUpdate,\r\n        onRepeat,\r\n        onComplete\r\n    };\r\n\r\n    timer.update = (delta: number): boolean =>\r\n    {\r\n        if (timer.delay > 0)\r\n        {\r\n            timer.delay -= delta;\r\n\r\n            if (timer.delay < 0)\r\n            {\r\n                timer.delay = 0;\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (timer.delay === 0)\r\n        {\r\n            timer.onStart();\r\n            timer.delay = -1;\r\n        }\r\n\r\n        if (timer.delay === -1)\r\n        {\r\n            timer.elapsed -= delta;\r\n\r\n            timer.onUpdate(delta, timer.elapsed / timer.duration);\r\n\r\n            if (timer.elapsed <= 0)\r\n            {\r\n                if (timer.repeat > 0)\r\n                {\r\n                    timer.repeat--;\r\n\r\n                    timer.elapsed = timer.duration;\r\n\r\n                    timer.onRepeat(timer.repeat);\r\n                }\r\n                else\r\n                {\r\n                    timer.elapsed = 0;\r\n\r\n                    timer.onComplete();\r\n                }\r\n            }\r\n        }\r\n\r\n        return (timer.elapsed === 0);\r\n    };\r\n\r\n    clock.events.add(timer);\r\n}\r\n","import { AddTimer } from './AddTimer';\r\nimport { Clock } from './Clock';\r\n\r\nexport function AddDelayedCall (clock: Clock, delay: number, callback: () => void): void\r\n{\r\n    AddTimer(clock,\r\n        {\r\n            duration: 0,\r\n            delay,\r\n            onComplete: callback\r\n        }\r\n    );\r\n}\r\n","import { IBaseWorld } from '../world/IBaseWorld';\r\nimport { ITimerEvent } from './ITimerEvent';\r\n\r\nexport class Clock\r\n{\r\n    world: IBaseWorld;\r\n\r\n    /**\r\n     * The current time of the Clock, in milliseconds.\r\n     *\r\n     * If accessed externally, this is equivalent to the `time` parameter normally passed to a Scene's `update` method.\r\n     */\r\n    now: number;\r\n\r\n    /**\r\n     * The scale of the Clock's time delta.\r\n     *\r\n     * The time delta is the time elapsed between two consecutive frames and influences the speed of time for this Clock and anything which uses it, such as its Timer Events. Values higher than 1 increase the speed of time, while values smaller than 1 decrease it. A value of 0 freezes time and is effectively equivalent to pausing the Clock.\r\n     */\r\n    timeScale: number;\r\n\r\n    events: Set<ITimerEvent>;\r\n\r\n    constructor (world: IBaseWorld)\r\n    {\r\n        this.world = world;\r\n\r\n        this.timeScale = 1;\r\n\r\n        this.events = new Set();\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        this.now = time;\r\n\r\n        delta *= this.timeScale;\r\n\r\n        this.events.forEach(timer =>\r\n        {\r\n            if (timer.update(delta))\r\n            {\r\n                this.events.delete(timer);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { IBaseWorld } from '../IBaseWorld';\r\nimport { IWorldRenderData } from '../IWorldRenderData';\r\n\r\nexport const WorldRenderEvent: string = 'worldrender';\r\n\r\nexport type WorldRenderEventHandler = (renderData: IWorldRenderData, world: IBaseWorld) => void;\r\n","import { IBaseWorld } from '../IBaseWorld';\r\n\r\nexport const WorldShutdownEvent: string = 'worldshutdown';\r\n\r\nexport type WorldShutdownEventHandler = (world: IBaseWorld) => void;\r\n","import { IWorldRenderData } from './IWorldRenderData';\r\nimport { SearchEntry } from '../display/SearchEntryType';\r\n\r\nexport function CalculateTotalRenderable (entry: SearchEntry, renderData: IWorldRenderData): void\r\n{\r\n    renderData.numRendered++;\r\n    renderData.numRenderable++;\r\n\r\n    if (entry.node.dirtyFrame >= renderData.gameFrame)\r\n    {\r\n        renderData.dirtyFrame++;\r\n    }\r\n\r\n    entry.children.forEach(child =>\r\n    {\r\n        if (child.children.length > 0)\r\n        {\r\n            CalculateTotalRenderable(child, renderData);\r\n        }\r\n    });\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { SearchEntry } from '../display/SearchEntryType';\r\n\r\nexport function HasDirtyChildren (parent: SearchEntry): boolean\r\n{\r\n    if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    const stack = [ parent ];\r\n\r\n    while (stack.length > 0)\r\n    {\r\n        const entry = stack.pop();\r\n\r\n        if (entry.node.isDirty(DIRTY_CONST.TRANSFORM))\r\n        {\r\n            return true;\r\n        }\r\n\r\n        const numChildren = entry.children.length;\r\n\r\n        if (numChildren > 0)\r\n        {\r\n            for (let i = 0; i < numChildren; i++)\r\n            {\r\n                stack.push(entry.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    stack.length = 0;\r\n\r\n    return false;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { HasDirtyChildren } from './HasDirtyChildren';\r\nimport { SearchEntry } from '../display/SearchEntryType';\r\n\r\nexport function UpdateCachedLayers (cachedLayers: SearchEntry[], dirtyCamera: boolean): void\r\n{\r\n    cachedLayers.forEach(layer =>\r\n    {\r\n        if (dirtyCamera || HasDirtyChildren(layer))\r\n        {\r\n            //  Camera is dirty, or layer has at least one dirty child\r\n            layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n        }\r\n        else\r\n        {\r\n            //  Camera is clean and no dirty children, so we can re-use layer cache\r\n            //  So let's remove the children for this layer\r\n            layer.children.length = 0;\r\n        }\r\n    });\r\n}\r\n","import { IGameObject } from '../gameobjects/IGameObject';\r\nimport { SearchEntry } from '../display/SearchEntryType';\r\n\r\nexport function WorldDepthFirstSearch (cachedLayers: SearchEntry[], parent: IGameObject, output: SearchEntry[] = []): SearchEntry[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const node = parent.children[i];\r\n\r\n        if (node.isRenderable())\r\n        {\r\n            const children: SearchEntry[] = [];\r\n\r\n            const entry = { node, children };\r\n\r\n            output.push(entry);\r\n\r\n            if (node.willRenderChildren && node.numChildren > 0)\r\n            {\r\n                if (node.willCacheChildren)\r\n                {\r\n                    cachedLayers.push(entry);\r\n                }\r\n\r\n                WorldDepthFirstSearch(cachedLayers, node, children);\r\n            }\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { CalculateTotalRenderable } from './CalculateTotalRenderable';\r\nimport { IBaseWorld } from './IBaseWorld';\r\nimport { SearchEntry } from '../display/SearchEntryType';\r\nimport { UpdateCachedLayers } from './UpdateCachedLayers';\r\nimport { WorldDepthFirstSearch } from './WorldDepthFirstSearch';\r\n\r\nexport function BuildRenderList (world: IBaseWorld): void\r\n{\r\n    const cachedLayers: SearchEntry[] = [];\r\n    const stack: SearchEntry[] = [];\r\n\r\n    //  entries is now populated with the n-tree search results, only containing nodes that will actually render\r\n    const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\r\n\r\n    const renderData = world.renderData;\r\n\r\n    //  We can now sweep through the entries and purge non-dirty children of cached layers,\r\n    //  before finally building the render list. We can only do this if the camera is clean.\r\n\r\n    if (cachedLayers.length > 0)\r\n    {\r\n        UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\r\n    }\r\n\r\n    //  TODO: numRenderable probably needs to move to the search function\r\n    entries.forEach(entry =>\r\n    {\r\n        if (entry.children.length > 0)\r\n        {\r\n            CalculateTotalRenderable(entry, renderData);\r\n        }\r\n        else\r\n        {\r\n            renderData.numRendered++;\r\n            renderData.numRenderable++;\r\n\r\n            if (entry.node.dirtyFrame >= renderData.gameFrame)\r\n            {\r\n                renderData.dirtyFrame++;\r\n            }\r\n        }\r\n    });\r\n\r\n    world.renderList = entries;\r\n\r\n    if (world.forceRefresh)\r\n    {\r\n        renderData.dirtyFrame++;\r\n\r\n        world.forceRefresh = false;\r\n    }\r\n\r\n    // console.log(entries);\r\n    // console.log(renderData);\r\n    // eslint-disable-next-line no-debugger\r\n    // debugger;\r\n}\r\n","import { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\n\r\nexport function MergeRenderData (sceneRenderData: ISceneRenderData, worldRenderData: IWorldRenderData): void\r\n{\r\n    sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\r\n    sceneRenderData.numTotalFrames += worldRenderData.numRendered;\r\n\r\n    if (worldRenderData.camera.dirtyRender)\r\n    {\r\n        sceneRenderData.numDirtyCameras++;\r\n    }\r\n\r\n    sceneRenderData.worldData.push(worldRenderData);\r\n}\r\n","import { IWorldRenderData } from './IWorldRenderData';\r\n\r\nexport function ResetWorldRenderData (renderData: IWorldRenderData, gameFrame: number): void\r\n{\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.dirtyFrame = 0;\r\n    renderData.numRendered = 0;\r\n    renderData.numRenderable = 0;\r\n}\r\n","import * as GameObjectEvents from '../gameobjects/events';\r\nimport * as WorldEvents from './events';\r\n\r\nimport { Begin, Flush } from '../renderer/webgl1/renderpass';\r\nimport { Emit, Off, On, Once } from '../events';\r\n\r\nimport { BuildRenderList } from './BuildRenderList';\r\nimport { ExactEquals } from '../math/matrix2d/ExactEquals';\r\nimport { GameObject } from '../gameobjects';\r\nimport { IBaseCamera } from '../camera/IBaseCamera';\r\nimport { IBaseWorld } from './IBaseWorld';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { IRenderPass } from '../renderer/webgl1/renderpass/IRenderPass';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\nimport { MergeRenderData } from './MergeRenderData';\r\nimport { RemoveChildren } from '../display';\r\nimport { ResetWorldRenderData } from './ResetWorldRenderData';\r\nimport { SearchEntry } from '../display/SearchEntryType';\r\n\r\nexport class BaseWorld extends GameObject implements IBaseWorld\r\n{\r\n    scene: IScene;\r\n\r\n    camera: IBaseCamera;\r\n    renderData: IWorldRenderData;\r\n    forceRefresh: boolean = false;\r\n    events: Map<string, Set<IEventInstance>>;\r\n    is3D: boolean = false;\r\n\r\n    renderList: SearchEntry[];\r\n\r\n    private _updateListener: IEventInstance;\r\n    private _renderListener: IEventInstance;\r\n    private _shutdownListener: IEventInstance;\r\n\r\n    constructor (scene: IScene)\r\n    {\r\n        super();\r\n\r\n        this.type = 'BaseWorld';\r\n        this.scene = scene;\r\n        this.world = this;\r\n\r\n        this.events = new Map();\r\n\r\n        this.renderList = [];\r\n\r\n        this._updateListener = On(scene, 'update', (delta: number, time: number) => this.update(delta, time));\r\n        this._renderListener = On(scene, 'render', (renderData: ISceneRenderData) => this.render(renderData));\r\n        this._shutdownListener = On(scene, 'shutdown', () => this.shutdown());\r\n        Once(scene, 'destroy', () => this.destroy());\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        if (!this.willUpdate)\r\n        {\r\n            return;\r\n        }\r\n\r\n        Emit(this, GameObjectEvents.UpdateEvent, delta, time, this);\r\n\r\n        super.update(delta, time);\r\n    }\r\n\r\n    postUpdate (delta: number, time: number): void\r\n    {\r\n        Emit(this, GameObjectEvents.PostUpdateEvent, delta, time, this);\r\n    }\r\n\r\n    render (sceneRenderData: ISceneRenderData): void\r\n    {\r\n        const renderData = this.renderData;\r\n\r\n        ResetWorldRenderData(renderData, sceneRenderData.gameFrame);\r\n\r\n        if (!this.willRender || !this.visible)\r\n        {\r\n            return;\r\n        }\r\n\r\n        BuildRenderList(this);\r\n\r\n        Emit(this, WorldEvents.WorldRenderEvent, renderData, this);\r\n\r\n        MergeRenderData(sceneRenderData, renderData);\r\n\r\n        this.camera.dirtyRender = false;\r\n    }\r\n\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        const currentCamera = renderPass.current2DCamera;\r\n        const camera = this.camera;\r\n\r\n        if (!currentCamera || !ExactEquals(camera.worldTransform, currentCamera.worldTransform))\r\n        {\r\n            Flush(renderPass);\r\n        }\r\n\r\n        Begin(renderPass, camera);\r\n\r\n        this.renderList.forEach(entry =>\r\n        {\r\n            if (entry.children.length > 0)\r\n            {\r\n                this.renderNode(entry, renderPass);\r\n            }\r\n            else\r\n            {\r\n                entry.node.renderGL(renderPass);\r\n            }\r\n        });\r\n    }\r\n\r\n    renderNode (entry: SearchEntry, renderPass: IRenderPass): void\r\n    {\r\n        entry.node.renderGL(renderPass);\r\n\r\n        entry.children.forEach(child =>\r\n        {\r\n            if (child.children.length > 0)\r\n            {\r\n                this.renderNode(child, renderPass);\r\n            }\r\n            else\r\n            {\r\n                child.node.renderGL(renderPass);\r\n            }\r\n        });\r\n\r\n        entry.node.postRenderGL(renderPass);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    postRenderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        //  Emit event?\r\n    }\r\n\r\n    shutdown (): void\r\n    {\r\n        const scene = this.scene;\r\n\r\n        Off(scene, 'update', this._updateListener);\r\n        Off(scene, 'render', this._renderListener);\r\n        Off(scene, 'shutdown', this._shutdownListener);\r\n\r\n        //  Clear the display list and reset the camera, but leave\r\n        //  everything in place so we can return to this World again\r\n        //  at a later stage\r\n\r\n        RemoveChildren(this);\r\n\r\n        Emit(this, WorldEvents.WorldShutdownEvent, this);\r\n\r\n        ResetWorldRenderData(this.renderData, 0);\r\n\r\n        if (this.camera)\r\n        {\r\n            this.camera.reset();\r\n        }\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        Emit(this, GameObjectEvents.DestroyEvent, this);\r\n\r\n        ResetWorldRenderData(this.renderData, 0);\r\n\r\n        if (this.camera)\r\n        {\r\n            this.camera.destroy();\r\n        }\r\n\r\n        this.events.clear();\r\n\r\n        this.camera = null;\r\n        this.renderData = null;\r\n        this.events = null;\r\n    }\r\n}\r\n","import { IBaseCamera } from '../camera/IBaseCamera';\r\nimport { IBaseWorld } from './IBaseWorld';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\n\r\nexport function CreateWorldRenderData (world: IBaseWorld, camera: IBaseCamera): IWorldRenderData\r\n{\r\n    return {\r\n        world,\r\n        camera,\r\n        gameFrame: 0,\r\n        dirtyFrame: 0,\r\n        numRendered: 0,\r\n        numRenderable: 0\r\n    };\r\n}\r\n","import { BaseWorld } from './BaseWorld';\r\nimport { CreateWorldRenderData } from './CreateWorldRenderData';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { IStaticCamera } from '../camera/IStaticCamera';\r\nimport { IStaticWorld } from './IStaticWorld';\r\nimport { StaticCamera } from '../camera/StaticCamera';\r\n\r\n//  A Static World is designed specifically to have a bounds of a fixed size\r\n//  and a camera that doesn't move at all (no scrolling, rotation, etc)\r\n//  Because it has a fixed size, there is no camera culling enabled.\r\n//  Games that use this kind of world include Pacman, Bejeweled and 2048.\r\n\r\nexport class StaticWorld extends BaseWorld implements IStaticWorld\r\n{\r\n    camera: IStaticCamera;\r\n\r\n    constructor (scene: IScene)\r\n    {\r\n        super(scene);\r\n\r\n        this.type = 'StaticWorld';\r\n\r\n        this.camera = new StaticCamera();\r\n\r\n        this.renderData = CreateWorldRenderData(this, this.camera);\r\n    }\r\n}\r\n","import { BaseWorld } from './BaseWorld';\r\nimport { Camera } from '../camera/Camera';\r\nimport { CreateWorldRenderData } from './CreateWorldRenderData';\r\nimport { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { ICamera } from '../camera/ICamera';\r\nimport { IGameObject } from '../gameobjects/IGameObject';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorld } from './IWorld';\r\nimport { IWorldRenderData } from './IWorldRenderData';\r\nimport { RectangleToRectangle } from '../geom/intersects';\r\n\r\nexport class World extends BaseWorld implements IWorld\r\n{\r\n    camera: ICamera;\r\n\r\n    enableCameraCull: boolean = true;\r\n\r\n    constructor (scene: IScene)\r\n    {\r\n        super(scene);\r\n\r\n        this.type = 'World';\r\n\r\n        this.camera = new Camera();\r\n\r\n        this.renderData = CreateWorldRenderData(this, this.camera);\r\n    }\r\n\r\n    //  TODO: An out-of-bounds parent with in-bounds children will be cull checked against in postRender, stop this.\r\n    //  TODO: Use circle-circle check when camera is rotated.\r\n    /*\r\n    addNode (node: IGameObject, renderData: IWorldRenderData): boolean\r\n    {\r\n        const cull = this.enableCameraCull;\r\n\r\n        if (node.isRenderable())\r\n        {\r\n            if (node.isDirty(DIRTY_CONST.PENDING_RENDER) || node === this)\r\n            {\r\n                //  Already been cull checked once, so add to renderList and return\r\n                renderData.renderList.push(node);\r\n            }\r\n            else if (!cull || (cull && RectangleToRectangle(node.bounds.get(), this.camera.bounds)))\r\n            {\r\n                renderData.renderList.push(node);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    */\r\n}\r\n","import { IBaseWorld3D } from '../IBaseWorld3D';\r\nimport { IWorld3DRenderData } from '../IWorld3DRenderData';\r\n\r\nexport const World3DRenderEvent: string = 'worldrender';\r\n\r\nexport type World3DRenderEventHandler = (renderData: IWorld3DRenderData, world: IBaseWorld3D) => void;\r\n","import { IBaseWorld3D } from '../IBaseWorld3D';\r\n\r\nexport const World3DShutdownEvent: string = 'worldshutdown';\r\n\r\nexport type World3DShutdownEventHandler = (world: IBaseWorld3D) => void;\r\n","import { IWorld3DRenderData } from './IWorld3DRenderData';\r\nimport { SearchEntry3D } from '../display3d/SearchEntry3DType';\r\n\r\nexport function CalculateTotalRenderable (entry: SearchEntry3D, renderData: IWorld3DRenderData): void\r\n{\r\n    renderData.numRendered++;\r\n    renderData.numRenderable++;\r\n\r\n    if (entry.node.dirtyFrame >= renderData.gameFrame)\r\n    {\r\n        renderData.dirtyFrame++;\r\n    }\r\n\r\n    entry.children.forEach(child =>\r\n    {\r\n        if (child.children.length > 0)\r\n        {\r\n            CalculateTotalRenderable(child, renderData);\r\n        }\r\n    });\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { SearchEntry3D } from '../display3d/SearchEntry3DType';\r\n\r\nexport function HasDirtyChildren (parent: SearchEntry3D): boolean\r\n{\r\n    if (parent.node.isDirty(DIRTY_CONST.CHILD_CACHE))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    const stack = [ parent ];\r\n\r\n    while (stack.length > 0)\r\n    {\r\n        const entry = stack.pop();\r\n\r\n        if (entry.node.isDirty(DIRTY_CONST.TRANSFORM))\r\n        {\r\n            return true;\r\n        }\r\n\r\n        const numChildren = entry.children.length;\r\n\r\n        if (numChildren > 0)\r\n        {\r\n            for (let i = 0; i < numChildren; i++)\r\n            {\r\n                stack.push(entry.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    stack.length = 0;\r\n\r\n    return false;\r\n}\r\n","import { DIRTY_CONST } from '../gameobjects/DIRTY_CONST';\r\nimport { HasDirtyChildren } from './HasDirtyChildren';\r\nimport { SearchEntry3D } from '../display3d/SearchEntry3DType';\r\n\r\nexport function UpdateCachedLayers (cachedLayers: SearchEntry3D[], dirtyCamera: boolean): void\r\n{\r\n    cachedLayers.forEach(layer =>\r\n    {\r\n        if (dirtyCamera || HasDirtyChildren(layer))\r\n        {\r\n            //  Camera is dirty, or layer has at least one dirty child\r\n            layer.node.setDirty(DIRTY_CONST.CHILD_CACHE);\r\n        }\r\n        else\r\n        {\r\n            //  Camera is clean and no dirty children, so we can re-use layer cache\r\n            //  So let's remove the children for this layer\r\n            layer.children.length = 0;\r\n        }\r\n    });\r\n}\r\n","import { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { SearchEntry3D } from '../display3d/SearchEntry3DType';\r\n\r\nexport function WorldDepthFirstSearch (cachedLayers: SearchEntry3D[], parent: IGameObject3D, output: SearchEntry3D[] = []): SearchEntry3D[]\r\n{\r\n    for (let i = 0; i < parent.numChildren; i++)\r\n    {\r\n        const node = parent.children[i];\r\n\r\n        if (node.isRenderable())\r\n        {\r\n            const children: SearchEntry3D[] = [];\r\n\r\n            const entry = { node, children };\r\n\r\n            output.push(entry);\r\n\r\n            if (node.willRenderChildren && node.numChildren > 0)\r\n            {\r\n                if (node.willCacheChildren)\r\n                {\r\n                    cachedLayers.push(entry);\r\n                }\r\n\r\n                WorldDepthFirstSearch(cachedLayers, node, children);\r\n            }\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n","import { CalculateTotalRenderable } from './CalculateTotalRenderable';\r\nimport { IBaseWorld3D } from './IBaseWorld3D';\r\nimport { SearchEntry3D } from '../display3d/SearchEntry3DType';\r\nimport { UpdateCachedLayers } from './UpdateCachedLayers';\r\nimport { WorldDepthFirstSearch } from './WorldDepthFirstSearch';\r\n\r\nexport function BuildRenderList (world: IBaseWorld3D): void\r\n{\r\n    const cachedLayers: SearchEntry3D[] = [];\r\n    const stack: SearchEntry3D[] = [];\r\n\r\n    //  entries is now populated with the n-tree search results, only containing nodes that will actually render\r\n    const entries = WorldDepthFirstSearch(cachedLayers, world, stack);\r\n\r\n    const renderData = world.renderData;\r\n\r\n    //  We can now sweep through the entries and purge non-dirty children of cached layers,\r\n    //  before finally building the render list. We can only do this if the camera is clean.\r\n\r\n    if (cachedLayers.length > 0)\r\n    {\r\n        UpdateCachedLayers(cachedLayers, world.camera.dirtyRender);\r\n    }\r\n\r\n    //  TODO: numRenderable probably needs to move to the search function\r\n    entries.forEach(entry =>\r\n    {\r\n        if (entry.children.length > 0)\r\n        {\r\n            CalculateTotalRenderable(entry, renderData);\r\n        }\r\n        else\r\n        {\r\n            renderData.numRendered++;\r\n            renderData.numRenderable++;\r\n\r\n            if (entry.node.dirtyFrame >= renderData.gameFrame)\r\n            {\r\n                renderData.dirtyFrame++;\r\n            }\r\n        }\r\n    });\r\n\r\n    world.renderList = entries;\r\n\r\n    if (world.forceRefresh)\r\n    {\r\n        renderData.dirtyFrame++;\r\n\r\n        world.forceRefresh = false;\r\n    }\r\n\r\n    // console.log(entries);\r\n    // console.log(renderData);\r\n    // eslint-disable-next-line no-debugger\r\n    // debugger;\r\n}\r\n","import { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorld3DRenderData } from './IWorld3DRenderData';\r\n\r\nexport function MergeRenderData (sceneRenderData: ISceneRenderData, worldRenderData: IWorld3DRenderData): void\r\n{\r\n    sceneRenderData.numDirtyFrames += worldRenderData.dirtyFrame;\r\n    sceneRenderData.numTotalFrames += worldRenderData.numRendered;\r\n\r\n    if (worldRenderData.camera.dirtyRender)\r\n    {\r\n        sceneRenderData.numDirtyCameras++;\r\n    }\r\n\r\n    sceneRenderData.worldData.push(worldRenderData);\r\n}\r\n","import { IWorld3DRenderData } from './IWorld3DRenderData';\r\n\r\nexport function ResetWorld3DRenderData (renderData: IWorld3DRenderData, gameFrame: number): void\r\n{\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.dirtyFrame = 0;\r\n    renderData.numRendered = 0;\r\n    renderData.numRenderable = 0;\r\n}\r\n","import * as GameObjectEvents from '../gameobjects/events';\r\nimport * as World3DEvents from './events';\r\n\r\nimport { Emit, Off, On, Once } from '../events';\r\n\r\nimport { BuildRenderList } from './BuildRenderList';\r\nimport { GameObject3D } from '../gameobjects3d/GameObject3D';\r\nimport { IBaseWorld3D } from './IBaseWorld3D';\r\nimport { ICamera3D } from '../camera3d/ICamera3D';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IGameObject3D } from '../gameobjects3d/IGameObject3D';\r\nimport { IRenderPass } from '../renderer/webgl1/renderpass/IRenderPass';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { ISceneRenderData } from '../scenes/ISceneRenderData';\r\nimport { IWorld3DRenderData } from './IWorld3DRenderData';\r\nimport { MergeRenderData } from './MergeRenderData';\r\nimport { RemoveChildren3D } from '../display3d/RemoveChildren3D';\r\nimport { ResetWorld3DRenderData } from './ResetWorld3DRenderData';\r\nimport { SearchEntry3D } from '../display3d/SearchEntry3DType';\r\n\r\nexport class BaseWorld3D extends GameObject3D implements IBaseWorld3D\r\n{\r\n    scene: IScene;\r\n\r\n    camera: ICamera3D;\r\n    renderData: IWorld3DRenderData;\r\n    forceRefresh: boolean = false;\r\n    events: Map<string, Set<IEventInstance>>;\r\n    is3D: boolean = true;\r\n    renderList: SearchEntry3D[];\r\n\r\n    private _updateListener: IEventInstance;\r\n    private _renderListener: IEventInstance;\r\n    private _shutdownListener: IEventInstance;\r\n\r\n    constructor (scene: IScene)\r\n    {\r\n        super();\r\n\r\n        this.type = 'BaseWorld';\r\n        this.scene = scene;\r\n        this.world = this;\r\n\r\n        this.events = new Map();\r\n\r\n        this.renderList = [];\r\n\r\n        this._updateListener = On(scene, 'update', (delta: number, time: number) => this.update(delta, time));\r\n        this._renderListener = On(scene, 'render', (renderData: ISceneRenderData) => this.render(renderData));\r\n        this._shutdownListener = On(scene, 'shutdown', () => this.shutdown());\r\n        Once(scene, 'destroy', () => this.destroy());\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        if (!this.willUpdate)\r\n        {\r\n            return;\r\n        }\r\n\r\n        Emit(this, GameObjectEvents.UpdateEvent, delta, time, this);\r\n\r\n        super.update(delta, time);\r\n    }\r\n\r\n    postUpdate (delta: number, time: number): void\r\n    {\r\n        Emit(this, GameObjectEvents.PostUpdateEvent, delta, time, this);\r\n    }\r\n\r\n    render (sceneRenderData: ISceneRenderData): void\r\n    {\r\n        const renderData = this.renderData;\r\n\r\n        ResetWorld3DRenderData(renderData, sceneRenderData.gameFrame);\r\n\r\n        if (!this.willRender || !this.visible)\r\n        {\r\n            return;\r\n        }\r\n\r\n        BuildRenderList(this);\r\n\r\n        Emit(this, World3DEvents.World3DRenderEvent, renderData, this);\r\n\r\n        MergeRenderData(sceneRenderData, renderData);\r\n\r\n        // if (this.camera)\r\n        // {\r\n        //     this.camera.dirtyRender = false;\r\n        // }\r\n    }\r\n\r\n    renderNode (entry: SearchEntry3D, renderPass: IRenderPass): void\r\n    {\r\n        entry.node.renderGL(renderPass);\r\n\r\n        entry.children.forEach(child =>\r\n        {\r\n            if (child.children.length > 0)\r\n            {\r\n                this.renderNode(child, renderPass);\r\n            }\r\n            else\r\n            {\r\n                child.node.renderGL(renderPass);\r\n            }\r\n        });\r\n\r\n        entry.node.postRenderGL(renderPass);\r\n    }\r\n\r\n    shutdown (): void\r\n    {\r\n        const scene = this.scene;\r\n\r\n        Off(scene, 'update', this._updateListener);\r\n        Off(scene, 'render', this._renderListener);\r\n        Off(scene, 'shutdown', this._shutdownListener);\r\n\r\n        //  Clear the display list and reset the camera, but leave\r\n        //  everything in place so we can return to this World again\r\n        //  at a later stage\r\n\r\n        RemoveChildren3D(this);\r\n\r\n        Emit(this, World3DEvents.World3DShutdownEvent, this);\r\n\r\n        ResetWorld3DRenderData(this.renderData, 0);\r\n\r\n        // if (this.camera)\r\n        // {\r\n        //     this.camera.reset();\r\n        // }\r\n    }\r\n\r\n    destroy (reparentChildren?: IGameObject3D): void\r\n    {\r\n        super.destroy(reparentChildren);\r\n\r\n        Emit(this, GameObjectEvents.DestroyEvent, this);\r\n\r\n        ResetWorld3DRenderData(this.renderData, 0);\r\n\r\n        // if (this.camera)\r\n        // {\r\n        //     this.camera.destroy();\r\n        // }\r\n\r\n        this.events.clear();\r\n\r\n        this.camera = null;\r\n        this.renderData = null;\r\n        this.events = null;\r\n    }\r\n}\r\n","import { ICamera3D } from '../camera3d/ICamera3D';\r\nimport { IWorld3D } from './IWorld3D';\r\nimport { IWorld3DRenderData } from './IWorld3DRenderData';\r\n\r\nexport function CreateWorld3DRenderData (world: IWorld3D, camera: ICamera3D): IWorld3DRenderData\r\n{\r\n    return {\r\n        world,\r\n        camera,\r\n        gameFrame: 0,\r\n        dirtyFrame: 0,\r\n        numRendered: 0,\r\n        numRenderable: 0\r\n    };\r\n}\r\n","export const AMBIENT_LIGHT_FRAG =\r\n`#define SHADER_NAME AMBIENT_LIGHT_FRAG\r\n\r\nprecision highp float;\r\n\r\nuniform vec3 uLightPosition;\r\nuniform vec3 uLightAmbient;\r\nuniform vec3 uLightDiffuse;\r\nuniform vec3 uLightSpecular;\r\n\r\nuniform vec3 uMaterialAmbient;\r\nuniform vec3 uMaterialDiffuse;\r\nuniform vec3 uMaterialSpecular;\r\nuniform float uMaterialShine;\r\n\r\nuniform vec3 uCameraPosition;\r\n\r\nuniform sampler2D uTexture;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec3 vNormal;\r\nvarying vec3 vPosition;\r\n\r\nvoid main (void)\r\n{\r\n    vec4 color = texture2D(uTexture, vTextureCoord);\r\n\r\n    vec3 ambient = uLightAmbient * uMaterialAmbient;\r\n\r\n    vec3 norm = normalize(vNormal);\r\n    vec3 lightDir = normalize(uLightPosition - vPosition);\r\n    float diff = max(dot(norm, lightDir), 0.0);\r\n    vec3 diffuse = uLightDiffuse * (diff * uMaterialDiffuse);\r\n\r\n    vec3 viewDir = normalize(uCameraPosition - vPosition);\r\n    vec3 reflectDir = reflect(-lightDir, norm);\r\n    float spec = pow(max(dot(viewDir, reflectDir), 0.0), uMaterialShine);\r\n    vec3 specular = uLightSpecular * (spec * uMaterialSpecular);\r\n\r\n    vec3 result = (ambient + diffuse + specular) * color.rgb;\r\n\r\n    gl_FragColor = vec4(result, color.a);\r\n}`;\r\n","export const AMBIENT_LIGHT_VERT = `\r\n#define SHADER_NAME AMBIENT_LIGHT_VERT\r\n\r\nprecision highp float;\r\n\r\nattribute vec3 aVertexPosition;\r\nattribute vec3 aVertexNormal;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat4 uViewProjectionMatrix;\r\nuniform mat4 uModelMatrix;\r\nuniform mat4 uNormalMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec3 vNormal;\r\nvarying vec3 vPosition;\r\n\r\nvoid main(void)\r\n{\r\n    vTextureCoord = aTextureCoord;\r\n\r\n    vPosition = vec3(uModelMatrix * vec4(aVertexPosition, 1.0));\r\n\r\n    vNormal = vec3(uNormalMatrix * vec4(aVertexNormal, 1.0));\r\n\r\n    gl_Position = uViewProjectionMatrix * uModelMatrix * vec4(aVertexPosition, 1.0);\r\n}\r\n`;\r\n","import * as GL_CONST from '../GL_CONST';\r\n\r\nimport { AMBIENT_LIGHT_FRAG } from '../glsl/AMBIENT_LIGHT_FRAG';\r\nimport { AMBIENT_LIGHT_VERT } from '../glsl/AMBIENT_LIGHT_VERT';\r\nimport { IShader } from './IShader';\r\nimport { Shader } from './Shader';\r\n\r\nexport class AmbientLightShader extends Shader implements IShader\r\n{\r\n    constructor ()\r\n    {\r\n        super();\r\n\r\n        const tempMat4 = new Float32Array(16).fill(0);\r\n        const tempVec3 = [ 0, 0, 0 ];\r\n\r\n        const config = {\r\n            fragmentShader: AMBIENT_LIGHT_FRAG,\r\n            vertexShader: AMBIENT_LIGHT_VERT,\r\n            attributes: {\r\n                aVertexPosition: { size: 3, type: GL_CONST.FLOAT, normalized: false, offset: 0 },\r\n                aVertexNormal: { size: 3, type: GL_CONST.FLOAT, normalized: false, offset: 12 },\r\n                aTextureCoord: { size: 2, type: GL_CONST.FLOAT, normalized: false, offset: 24 }\r\n            },\r\n            uniforms: {\r\n                uViewProjectionMatrix: tempMat4,\r\n                uNormalMatrix: tempMat4,\r\n                uModelMatrix: tempMat4,\r\n                uCameraPosition: tempVec3,\r\n\r\n                uTexture: 0,\r\n\r\n                uLightPosition: tempVec3,\r\n                uLightAmbient: tempVec3,\r\n                uLightDiffuse: tempVec3,\r\n                uLightSpecular: tempVec3,\r\n\r\n                uMaterialAmbient: tempVec3,\r\n                uMaterialDiffuse: tempVec3,\r\n                uMaterialSpecular: tempVec3,\r\n                uMaterialShine: 0\r\n            }\r\n        };\r\n\r\n        this.fromConfig(config);\r\n    }\r\n}\r\n","import { Clamp, DegToRad } from '../math';\r\nimport { FORWARD, Forward, RIGHT, Right, ScaleAndAdd, TransformMat4Zero, UP, Up, Vec3, Vec3Callback } from '../math/vec3';\r\nimport { FromRotationXYTranslation, Invert, LookAt, Matrix4, Multiply, Perspective, TargetTo } from '../math/mat4';\r\nimport { Quaternion, RotationYawPitchRoll } from '../math/quaternion';\r\n\r\nimport { GameInstance } from '../GameInstance';\r\nimport { IRectangle } from '../geom/rectangle/IRectangle';\r\nimport { IRenderer } from '../renderer/IRenderer';\r\nimport { Rectangle } from '../geom/rectangle';\r\n\r\nexport class NewCamera3D\r\n{\r\n    type: string;\r\n    renderer: IRenderer;\r\n\r\n    position: Vec3Callback;\r\n    rotation: Quaternion;\r\n\r\n    matrix: Matrix4; // the transform matrix\r\n    viewMatrix: Matrix4; // the inverse of the transform matrix\r\n    projectionMatrix: Matrix4; // perspective projection matrix\r\n    viewProjectionMatrix: Matrix4; // perspective projection matrix multiplied by the view matrix\r\n\r\n    forward: Vec3;\r\n    up: Vec3;\r\n    right: Vec3;\r\n\r\n    start: Vec3;\r\n\r\n    aspect: number;\r\n\r\n    isOrbit: boolean = false;\r\n\r\n    minDistance: number = 0;\r\n    maxDistance: number = Infinity;\r\n\r\n    minPolarAngle: number = 0;\r\n    maxPolarAngle: number = Math.PI;\r\n\r\n    minAzimuthAngle: number = -Infinity;\r\n    maxAzimuthAngle: number = Infinity;\r\n\r\n    dirtyRender: boolean = true;\r\n\r\n    panRate: number = 5;\r\n    zoomRate: number = 200;\r\n    rotateRate: number = -3;\r\n\r\n    viewport: IRectangle;\r\n\r\n    private _fov: number;\r\n    private _near: number;\r\n    private _far: number;\r\n\r\n    private _yaw: number = 0;\r\n    private _pitch: number = 0;\r\n    private _roll: number = 0;\r\n\r\n    constructor (fov: number = 45, near: number = 0.1, far: number = 1000)\r\n    {\r\n        this.type = 'Camera3D';\r\n\r\n        this._fov = fov;\r\n        this._near = near;\r\n        this._far = far;\r\n\r\n        this.matrix = new Matrix4();\r\n        this.viewMatrix = new Matrix4();\r\n        this.projectionMatrix = new Matrix4();\r\n        this.viewProjectionMatrix = new Matrix4();\r\n\r\n        this.position = new Vec3Callback(() => this.update());\r\n        this.rotation = new Quaternion();\r\n\r\n        const game = GameInstance.get();\r\n\r\n        const renderer = game.renderer;\r\n\r\n        this.viewport = new Rectangle(0, 0, renderer.width, renderer.height);\r\n\r\n        this.renderer = renderer;\r\n\r\n        this.forward = Forward();\r\n        this.up = Up();\r\n        this.right = Right();\r\n\r\n        this.start = new Vec3();\r\n\r\n        this.setAspectRatio();\r\n    }\r\n\r\n    update (): this\r\n    {\r\n        const matrix = this.matrix;\r\n        const view = this.viewMatrix;\r\n\r\n        FromRotationXYTranslation(this.rotation, this.position, !this.isOrbit, matrix);\r\n\r\n        TransformMat4Zero(FORWARD, matrix, this.forward);\r\n        TransformMat4Zero(UP, matrix, this.up);\r\n        TransformMat4Zero(RIGHT, matrix, this.right);\r\n\r\n        Invert(matrix, view);\r\n\r\n        Multiply(this.projectionMatrix, view, this.viewProjectionMatrix);\r\n\r\n        return this;\r\n    }\r\n\r\n    panX (amount: number): this\r\n    {\r\n        const pos = this.position;\r\n\r\n        if (!this.isOrbit)\r\n        {\r\n            ScaleAndAdd(pos, this.right, amount, pos);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    panY (amount: number): this\r\n    {\r\n        const pos = this.position;\r\n        const up = this.up;\r\n\r\n        if (this.isOrbit)\r\n        {\r\n            pos.y += up.y * amount;\r\n        }\r\n        else\r\n        {\r\n            ScaleAndAdd(pos, up, amount, pos);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    panZ (amount: number): this\r\n    {\r\n        const pos = this.position;\r\n\r\n        if (this.isOrbit)\r\n        {\r\n            pos.z += amount;\r\n        }\r\n        else\r\n        {\r\n            ScaleAndAdd(pos, this.forward, amount, pos);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    begin (x: number, y: number): void\r\n    {\r\n        this.start.set(x, y);\r\n    }\r\n\r\n    pan (x: number, y: number): void\r\n    {\r\n        const dx = x - this.start.x;\r\n        const dy = y - this.start.y;\r\n        const viewport = this.viewport;\r\n\r\n        this.panX(-dx * (this.panRate / viewport.width));\r\n        this.panY(dy * (this.panRate / viewport.height));\r\n\r\n        this.start.set(x, y);\r\n    }\r\n\r\n    rotate (x: number, y: number): void\r\n    {\r\n        const dx = x - this.start.x;\r\n        const dy = y - this.start.y;\r\n        const viewport = this.viewport;\r\n\r\n        this.rotation.x += dy * (this.rotateRate / viewport.height);\r\n        this.rotation.y += dx * (this.rotateRate / viewport.width);\r\n\r\n        this.start.set(x, y);\r\n\r\n        this.update();\r\n    }\r\n\r\n    zoom (delta: number): void\r\n    {\r\n        this.panZ(Clamp(delta, -1, 1) * (this.zoomRate / this.viewport.height));\r\n    }\r\n\r\n    /*\r\n    lookAt (target: IVec3Like, invert: boolean = false): this\r\n    {\r\n        if (invert)\r\n        {\r\n            LookAt(this.position, target, this.up, this.matrix);\r\n        }\r\n        else\r\n        {\r\n            LookAt(target, this.position, this.up, this.matrix);\r\n        }\r\n\r\n        GetRotation(this.matrix, this.rotation);\r\n\r\n        return this;\r\n    }\r\n\r\n    targetTo (target: IVec3Like): this\r\n    {\r\n        // TargetTo(this.direction, target, this.up, this.matrix);\r\n\r\n        GetRotation(this.matrix, this.rotation);\r\n\r\n        return this;\r\n    }\r\n    */\r\n\r\n    setAspectRatio (value?: number): this\r\n    {\r\n        if (!value)\r\n        {\r\n            const renderer = this.renderer;\r\n\r\n            value = renderer.width / renderer.height;\r\n        }\r\n\r\n        this.aspect = value;\r\n\r\n        return this.updateProjectionMatrix();\r\n    }\r\n\r\n    updateProjectionMatrix (): this\r\n    {\r\n        Perspective(DegToRad(this._fov), this.aspect, this._near, this._far, this.projectionMatrix);\r\n\r\n        return this;\r\n    }\r\n\r\n    get fov (): number\r\n    {\r\n        return this._fov;\r\n    }\r\n\r\n    set fov (value: number)\r\n    {\r\n        this._fov = Clamp(value, 0, 180);\r\n\r\n        this.updateProjectionMatrix();\r\n    }\r\n\r\n    get near (): number\r\n    {\r\n        return this._near;\r\n    }\r\n\r\n    set near (value: number)\r\n    {\r\n        if (value > 0)\r\n        {\r\n            this._near = value;\r\n\r\n            this.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get far (): number\r\n    {\r\n        return this._far;\r\n    }\r\n\r\n    set far (value: number)\r\n    {\r\n        if (value > 0)\r\n        {\r\n            this._far = value;\r\n\r\n            this.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get yaw (): number\r\n    {\r\n        return this._yaw;\r\n    }\r\n\r\n    set yaw (value: number)\r\n    {\r\n        this._yaw = value;\r\n\r\n        RotationYawPitchRoll(value, this._pitch, this._roll, this.rotation);\r\n    }\r\n\r\n    get pitch (): number\r\n    {\r\n        return this._pitch;\r\n    }\r\n\r\n    set pitch (value: number)\r\n    {\r\n        this._pitch = value;\r\n\r\n        RotationYawPitchRoll(this._yaw, value, this._roll, this.rotation);\r\n    }\r\n\r\n    get roll (): number\r\n    {\r\n        return this._roll;\r\n    }\r\n\r\n    set roll (value: number)\r\n    {\r\n        this._roll = value;\r\n\r\n        RotationYawPitchRoll(this._yaw, this._pitch, value, this.rotation);\r\n    }\r\n}\r\n","import { Flush, PopShader, PopVertexBuffer, SetShader, SetVertexBuffer } from '../renderer/webgl1/renderpass';\r\nimport { Light, LightConfig } from '../gameobjects3d/light/Light';\r\n\r\nimport { AmbientLightShader } from '../renderer/webgl1/shaders/AmbientLightShader';\r\nimport { BaseWorld3D } from './BaseWorld3D';\r\nimport { CreateWorld3DRenderData } from './CreateWorld3DRenderData';\r\nimport { IRenderPass } from '../renderer/webgl1/renderpass/IRenderPass';\r\nimport { IScene } from '../scenes/IScene';\r\nimport { IShader } from '../renderer/webgl1/shaders/IShader';\r\nimport { IWorld3D } from './IWorld3D';\r\nimport { NewCamera3D } from '../camera3d/NewCamera3D';\r\nimport { VertexBuffer } from '../renderer/webgl1/buffers/VertexBuffer';\r\n\r\n// export class World3D extends BaseWorld3D implements IWorld3D\r\nexport class World3D extends BaseWorld3D\r\n{\r\n    camera: NewCamera3D;\r\n\r\n    light: Light;\r\n\r\n    shader: IShader;\r\n\r\n    enableCameraCull: boolean = true;\r\n\r\n    constructor (scene: IScene, x: number = 0, y: number = 0, z: number = 0, lightConfig?: LightConfig)\r\n    {\r\n        super(scene);\r\n\r\n        this.type = 'World3D';\r\n\r\n        this.camera = new NewCamera3D();\r\n\r\n        this.camera.position.set(x, y, z);\r\n\r\n        this.light = new Light(lightConfig);\r\n\r\n        this.shader = new AmbientLightShader();\r\n\r\n        this.renderData = CreateWorld3DRenderData(this, this.camera);\r\n    }\r\n\r\n    renderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        Flush(renderPass);\r\n\r\n        const shader = this.shader;\r\n        const camera = this.camera;\r\n        const gl = renderPass.renderer.gl;\r\n\r\n        //  TODO - Use fbo anyway to avoid z-fighting with World2D?\r\n        // SetFramebuffer(renderPass, this.framebuffer, true);\r\n\r\n        // SetVertexBuffer(renderPass, this.buffer);\r\n        SetShader(renderPass, shader, 0);\r\n\r\n        shader.setUniform('uViewProjectionMatrix', camera.viewProjectionMatrix.data);\r\n        shader.setUniform('uCameraPosition', camera.position.toArray());\r\n\r\n        this.light.setUniforms(shader);\r\n\r\n        // BindTexture(this.cubeTexture);\r\n        // const textureIndex = SetTexture(renderPass, this.cubeTexture);\r\n\r\n        gl.enable(gl.DEPTH_TEST);\r\n\r\n        //  TODO - This is a per Mesh property:\r\n        // gl.enable(gl.CULL_FACE);\r\n\r\n        this.renderList.forEach(entry =>\r\n        {\r\n            if (entry.children.length > 0)\r\n            {\r\n                this.renderNode(entry, renderPass);\r\n            }\r\n            else\r\n            {\r\n                entry.node.renderGL(renderPass);\r\n            }\r\n        });\r\n    }\r\n\r\n    postRenderGL <T extends IRenderPass> (renderPass: T): void\r\n    {\r\n        const gl = renderPass.renderer.gl;\r\n\r\n        // Flush(renderPass);\r\n\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.CULL_FACE);\r\n\r\n        // UnbindTexture(renderPass);\r\n\r\n        // PopFramebuffer(renderPass);\r\n        // PopVertexBuffer(renderPass);\r\n        PopShader(renderPass);\r\n\r\n        // DrawTexturedQuad(renderPass, this.texture);\r\n    }\r\n}\r\n","import { ISceneRenderData } from './ISceneRenderData';\r\n\r\nexport function CreateSceneRenderData (): ISceneRenderData\r\n{\r\n    return {\r\n        gameFrame: 0,\r\n        numTotalFrames: 0,\r\n        numDirtyFrames: 0,\r\n        numDirtyCameras: 0,\r\n        worldData: []\r\n    };\r\n}\r\n","import { ISceneRenderData } from './ISceneRenderData';\r\n\r\nexport function ResetSceneRenderData (renderData: ISceneRenderData, gameFrame: number = 0): void\r\n{\r\n    renderData.gameFrame = gameFrame;\r\n    renderData.numTotalFrames = 0;\r\n    renderData.numDirtyFrames = 0;\r\n    renderData.numDirtyCameras = 0;\r\n    renderData.worldData.length = 0;\r\n}\r\n","import { SceneManager } from './SceneManager';\r\n\r\nlet instance: SceneManager;\r\n\r\nexport const SceneManagerInstance =\r\n{\r\n    get: (): SceneManager =>\r\n    {\r\n        return instance;\r\n    },\r\n\r\n    set: (manager: SceneManager | null): void =>\r\n    {\r\n        instance = manager;\r\n    }\r\n};\r\n","import { Emit, Once } from '../events';\r\n\r\nimport { CreateSceneRenderData } from './CreateSceneRenderData';\r\nimport { Game } from '../Game';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { GetScenes } from '../config';\r\nimport { IScene } from './IScene';\r\nimport { ISceneRenderData } from './ISceneRenderData';\r\nimport { ResetSceneRenderData } from './ResetSceneRenderData';\r\nimport { SceneManagerInstance } from './SceneManagerInstance';\r\n\r\nexport class SceneManager\r\n{\r\n    game: Game;\r\n\r\n    scenes: Map<string, IScene>  = new Map();\r\n\r\n    //  Used by Install to assign default scene keys when not specified\r\n    sceneIndex: number = 0;\r\n\r\n    //  Flush the cache\r\n    flush: boolean = false;\r\n\r\n    renderResult: ISceneRenderData = CreateSceneRenderData();\r\n\r\n    constructor ()\r\n    {\r\n        this.game = GameInstance.get();\r\n\r\n        SceneManagerInstance.set(this);\r\n\r\n        Once(this.game, 'boot', () => this.boot());\r\n    }\r\n\r\n    boot (): void\r\n    {\r\n        GetScenes().forEach(scene => new scene());\r\n    }\r\n\r\n    update (delta: number, time: number): void\r\n    {\r\n        for (const scene of this.scenes.values())\r\n        {\r\n            Emit(scene, 'update', delta, time);\r\n        }\r\n    }\r\n\r\n    render (gameFrame: number): ISceneRenderData\r\n    {\r\n        const results = this.renderResult;\r\n\r\n        ResetSceneRenderData(results, gameFrame);\r\n\r\n        for (const scene of this.scenes.values())\r\n        {\r\n            Emit(scene, 'render', results);\r\n        }\r\n\r\n        if (this.flush)\r\n        {\r\n            //  Invalidate the renderer cache\r\n            results.numDirtyFrames++;\r\n\r\n            //  And reset\r\n            this.flush = false;\r\n        }\r\n\r\n        return results;\r\n    }\r\n}\r\n","import { AddToDOM, DOMContentLoaded } from './dom';\r\nimport { Emit, EventEmitter } from './events';\r\nimport { GetBanner, GetParent, GetRenderer } from './config';\r\n\r\nimport { GameInstance } from './GameInstance';\r\nimport { IRenderer } from './renderer/IRenderer';\r\nimport { SceneManager } from './scenes/SceneManager';\r\nimport { TextureManager } from './textures/TextureManager';\r\n\r\nexport class Game extends EventEmitter\r\n{\r\n    readonly VERSION: string = '4.0.0-beta1';\r\n\r\n    isBooted: boolean = false;\r\n    isPaused: boolean = false;\r\n\r\n    willUpdate: boolean = true;\r\n    willRender: boolean = true;\r\n\r\n    lastTick: number = 0;\r\n    elapsed: number = 0;\r\n\r\n    //  The current game frame\r\n    frame: number = 0;\r\n\r\n    renderer: IRenderer;\r\n    textureManager: TextureManager;\r\n    sceneManager: SceneManager;\r\n\r\n    constructor (...settings: { (): void }[])\r\n    {\r\n        super();\r\n\r\n        GameInstance.set(this);\r\n\r\n        DOMContentLoaded(() => this.boot(settings));\r\n    }\r\n\r\n    boot (settings: { (): void }[]): void\r\n    {\r\n        //  Activate the settings post DOM Content Loaded\r\n        settings.forEach(setting => setting());\r\n\r\n        const renderer = GetRenderer();\r\n\r\n        this.renderer = new renderer();\r\n        this.textureManager = new TextureManager();\r\n        this.sceneManager = new SceneManager();\r\n\r\n        //  Only add to the DOM if they either didn't set a Parent, or expressly set it to be non-null\r\n        //  Otherwise we'll let them add the canvas to the DOM themselves\r\n        const parent = GetParent();\r\n\r\n        if (parent)\r\n        {\r\n            AddToDOM(this.renderer.canvas, parent);\r\n        }\r\n\r\n        this.isBooted = true;\r\n\r\n        GetBanner();\r\n\r\n        Emit(this, 'boot');\r\n\r\n        this.lastTick = performance.now();\r\n\r\n        this.step(this.lastTick);\r\n    }\r\n\r\n    pause (): void\r\n    {\r\n        this.isPaused = true;\r\n    }\r\n\r\n    resume (): void\r\n    {\r\n        this.isPaused = false;\r\n\r\n        this.lastTick = performance.now();\r\n    }\r\n\r\n    step (time: number): void\r\n    {\r\n        //  Note that privacy.resistFingerprinting can round this value to 100ms or more!\r\n        const delta = time - this.lastTick;\r\n\r\n        this.lastTick = time;\r\n        this.elapsed += delta;\r\n\r\n        if (!this.isPaused)\r\n        {\r\n            if (this.willUpdate)\r\n            {\r\n                this.sceneManager.update(delta, time);\r\n\r\n                Emit(this, 'update', delta, time);\r\n            }\r\n\r\n            if (this.willRender)\r\n            {\r\n                this.renderer.render(this.sceneManager.render(this.frame));\r\n            }\r\n        }\r\n\r\n        //  The frame always advances by 1 each step (even when paused)\r\n        this.frame++;\r\n\r\n        GameInstance.setFrame(this.frame);\r\n        GameInstance.setElapsed(this.elapsed);\r\n\r\n        requestAnimationFrame(now => this.step(now));\r\n    }\r\n\r\n    destroy (): void\r\n    {\r\n        //  TODO - Code destroy function\r\n    }\r\n}\r\n","import { ISceneConfig } from './ISceneConfig';\r\n\r\nexport function GetConfigValue<Property extends keyof ISceneConfig> (config: ISceneConfig, property: Property, defaultValue: ISceneConfig[Property]): ISceneConfig[Property]\r\n{\r\n    if (Object.prototype.hasOwnProperty.call(config, property))\r\n    {\r\n        return config[property];\r\n    }\r\n    else\r\n    {\r\n        return defaultValue;\r\n    }\r\n}\r\n","import { GetConfigValue } from './GetConfigValue';\r\nimport { IScene } from './IScene';\r\nimport { ISceneConfig } from './ISceneConfig';\r\nimport { SceneManagerInstance } from './SceneManagerInstance';\r\n\r\nexport function Install (scene: IScene, config: string | ISceneConfig = {}): void\r\n{\r\n    const sceneManager = SceneManagerInstance.get();\r\n\r\n    const size = sceneManager.scenes.size;\r\n    const sceneIndex = sceneManager.sceneIndex;\r\n    const firstScene = (size === 0);\r\n\r\n    if (typeof config === 'string')\r\n    {\r\n        scene.key = config;\r\n    }\r\n    else if (config || (!config && firstScene))\r\n    {\r\n        scene.key = GetConfigValue(config, 'key', 'scene' + sceneIndex.toString());\r\n    }\r\n\r\n    if (sceneManager.scenes.has(scene.key))\r\n    {\r\n        console.warn('Scene key already in use: ' + scene.key);\r\n    }\r\n    else\r\n    {\r\n        sceneManager.scenes.set(scene.key, scene);\r\n\r\n        sceneManager.flush = true;\r\n\r\n        sceneManager.sceneIndex++;\r\n    }\r\n}\r\n","// import { Emit } from '../events/Emit';\r\n\r\nimport { Game } from '../Game';\r\nimport { GameInstance } from '../GameInstance';\r\nimport { IEventEmitter } from '../events/IEventEmitter';\r\nimport { IEventInstance } from '../events/IEventInstance';\r\nimport { IScene } from './IScene';\r\nimport { ISceneConfig } from './ISceneConfig';\r\nimport { Install } from './Install';\r\n\r\nexport class Scene implements IScene, IEventEmitter\r\n{\r\n    key: string;\r\n    game: Game;\r\n    events: Map<string, Set<IEventInstance>>;\r\n\r\n    constructor (config?: string | ISceneConfig)\r\n    {\r\n        this.game = GameInstance.get();\r\n        this.events = new Map();\r\n\r\n        Install(this, config);\r\n    }\r\n\r\n    // shutdown (): void\r\n    // {\r\n    //     Emit(this, 'shutdown');\r\n    // }\r\n\r\n    // destroy (): void\r\n    // {\r\n    //     Emit(this, 'destroy');\r\n\r\n    //     this.events.clear();\r\n\r\n    //     this.game = null;\r\n    //     this.events = null;\r\n    // }\r\n}\r\n"],"names":["CONST","Zero","Add","Bezier","MathBezier","CatmullRom","MathCatmullRom","Scale","Clamp","MathClamp","Clone","CopyFrom","Equals","MathFuzzyEqual","Hermite","MathHermite","Multiply","Subtract","RotateX","RotateY","RotateZ","AddScalar","Dot","FuzzyEquals","Invert","Length","LengthSquared","MultiplyByFloats","Normalize","ScaleAndAdd","SubtractScalar","In","InOut","Out","Quadratic.Out","Cubic.Out","Quartic.Out","Quintic.Out","Sine.Out","Expo.Out","Circular.Out","Elastic.Out","Back.Out","Bounce.Out","Quadratic.In","Cubic.In","Quartic.In","Quintic.In","Sine.In","Expo.In","Circular.In","Elastic.In","Back.In","Bounce.In","Quadratic.InOut","Cubic.InOut","Quartic.InOut","Quintic.InOut","Sine.InOut","Expo.InOut","Circular.InOut","Elastic.InOut","Back.InOut","Bounce.InOut","Linear","P0","P1","P2","Determinant","Frobenius","Rotate","FromRotation","FromScaling","Translate","FromTranslation","Identity","MultiplyScalar","MultiplyScalarAndAdd","Abs","Angle","Ceil","Center","ClampScalar","Cross","DistanceSquared","Distance","Divide","DivideScalar","Floor","Fract","Inverse","Lerp","ManhattanDistance","ManhattanLength","Max","Min","Negate","One","Random","Round","RoundToZero","SetLength","TransformMat4","ClampLength","GetInfo","LogChildren","instance","SetTexture","GL_CONST.FLOAT","GL_CONST.UNSIGNED_BYTE","DrawTexturedQuad","GetVec3","GetVec2","SetFrame","RequestTexture","Area","Contains","ContainsPoint","ContainsRect","GetPoint","GetPoints","Offset","OffsetPoint","Circumference","CircumferencePoint","GetBounds","GetEdges","GetTriangleEdges","GetRectangleEdges","Decompose","CenterOn","Circle","Perimeter","RotateAroundXY","RotateAroundPoint","NOOP","GameObjectEvents.UpdateEvent","GameObjectEvents.PostUpdateEvent","WorldEvents.WorldRenderEvent","WorldEvents.WorldShutdownEvent","GameObjectEvents.DestroyEvent","CalculateTotalRenderable","HasDirtyChildren","UpdateCachedLayers","WorldDepthFirstSearch","BuildRenderList","MergeRenderData","World3DEvents.World3DRenderEvent","World3DEvents.World3DShutdownEvent"],"mappings":"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AG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAElC,OAAO,GAAG,CAAC,GAAG,CACV,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EACjC,GA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C,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAEvB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAEvB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC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"}