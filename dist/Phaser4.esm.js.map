{"version":3,"file":"Phaser4.esm.js","sources":["../src/device/audio/canPlayM4A.ts","../src/device/audio/canPlayMP3.ts","../src/device/audio/canPlayOGG.ts","../src/device/audio/canPlayOpus.ts","../src/device/audio/canPlayWAV.ts","../src/device/audio/canPlayWebM.ts","../src/device/audio/hasAudio.ts","../src/device/audio/hasWebAudio.ts","../src/device/audio/GetAudio.ts","../src/device/audio/index.ts","../src/device/browser/isChrome.ts","../src/device/browser/isEdge.ts","../src/device/browser/isFirefox.ts","../src/device/os/isiOS.ts","../src/device/browser/isMobileSafari.ts","../src/device/browser/isMSIE.ts","../src/device/browser/isOpera.ts","../src/device/os/isWindowsPhone.ts","../src/device/browser/isSafari.ts","../src/device/browser/isSilk.ts","../src/device/browser/isTrident.ts","../src/device/browser/GetBrowser.ts","../src/device/browser/index.ts","../src/device/os/isAndroid.ts","../src/device/os/isChromeOS.ts","../src/device/os/isCordova.ts","../src/device/os/isCrosswalk.ts","../src/device/os/isEjecta.ts","../src/device/os/isNode.ts","../src/device/os/isElectron.ts","../src/device/os/isKindle.ts","../src/device/os/isLinux.ts","../src/device/os/isMacOS.ts","../src/device/os/isNodeWebkit.ts","../src/device/os/isWebApp.ts","../src/device/os/isWindows.ts","../src/device/os/GetOS.ts","../src/device/os/index.ts","../src/device/video/canPlayH264Video.ts","../src/device/video/canPlayHLSVideo.ts","../src/device/video/canPlayOGGVideo.ts","../src/device/video/canPlayVP9Video.ts","../src/device/video/canPlayWebMVideo.ts","../src/device/video/GetVideo.ts","../src/device/video/index.ts","../src/device/index.ts","../src/dom/GetElement.ts","../src/dom/AddToDOM.ts","../src/dom/DOMContentLoaded.ts","../src/dom/ParseXML.ts","../src/dom/RemoveFromDOM.ts","../src/events/EventEmitter.ts","../src/gameobjects/animatedsprite/AddAnimation.ts","../src/gameobjects/animatedsprite/AddAnimationFromAtlas.ts","../src/geom/rectangle/Contains.ts","../src/geom/rectangle/Rectangle.ts","../src/gameobjects/gameobject/GameObject.ts","../src/gameobjects/transformgameobject/const.ts","../src/math/matrix2d/Matrix2D.ts","../src/math/matrix2d/Copy.ts","../src/gameobjects/transformgameobject/TransformGameObject.ts","../src/gameobjects/container/Container.ts","../src/textures/Frame.ts","../src/renderer/webgl1/GL.ts","../src/renderer/webgl1/SetGLTextureFilterMode.ts","../src/renderer/webgl1/DeleteGLTexture.ts","../src/renderer/webgl1/DeleteFramebuffer.ts","../src/math/pow2/IsSizePowerOfTwo.ts","../src/renderer/webgl1/CreateGLTexture.ts","../src/renderer/webgl1/UpdateGLTexture.ts","../src/textures/Texture.ts","../src/GameInstance.ts","../src/gameobjects/sprite/SetFrame.ts","../src/gameobjects/sprite/SetTexture.ts","../src/gameobjects/sprite/Sprite.ts","../src/gameobjects/animatedsprite/AnimatedSprite.ts","../src/gameobjects/animatedsprite/ClearAnimations.ts","../src/gameobjects/animatedsprite/Play.ts","../src/gameobjects/animatedsprite/RemoveAnimation.ts","../src/gameobjects/animatedsprite/Stop.ts","../src/gameobjects/container/RemoveChild.ts","../src/gameobjects/container/SetParent.ts","../src/gameobjects/container/AddChild.ts","../src/gameobjects/container/AddChildAt.ts","../src/gameobjects/container/RemoveChildren.ts","../src/gameobjects/container/DestroyChildren.ts","../src/gameobjects/container/GetChildAt.ts","../src/gameobjects/container/GetChildIndex.ts","../src/gameobjects/container/RemoveChildAt.ts","../src/gameobjects/container/ReparentChildren.ts","../src/gameobjects/container/SwapChildren.ts","../src/gameobjects/gameobject/SetBounds.ts","../src/gameobjects/gameobject/SetName.ts","../src/gameobjects/gameobject/SetScene.ts","../src/gameobjects/gameobject/SetType.ts","../src/gameobjects/gameobject/SetVisible.ts","../src/renderer/webgl1/PackColor.ts","../src/renderer/webgl1/PackColors.ts","../src/gameobjects/sprite/SetQuadAlpha.ts","../src/gameobjects/sprite/SetQuadTint.ts","../src/gameobjects/text/SetBackgroundStyle.ts","../src/gameobjects/text/SetCornerRadius.ts","../src/gameobjects/text/SetFillStyle.ts","../src/gameobjects/text/SetFixedSize.ts","../src/gameobjects/text/SetFont.ts","../src/gameobjects/text/SetLineDash.ts","../src/gameobjects/text/SetLineSpacing.ts","../src/gameobjects/text/SetLineWidth.ts","../src/gameobjects/text/SetPadding.ts","../src/gameobjects/text/SetStrokeStyle.ts","../src/gameobjects/text/SetText.ts","../src/gameobjects/text/SetTextAlign.ts","../src/gameobjects/text/SetTextBaseline.ts","../src/textures/CreateCanvas.ts","../src/textures/types/CanvasTexture.ts","../src/gameobjects/text/Text.ts","../src/gameobjects/transformgameobject/SetOrigin.ts","../src/gameobjects/transformgameobject/SetPosition.ts","../src/gameobjects/transformgameobject/SetRotation.ts","../src/gameobjects/transformgameobject/SetScale.ts","../src/gameobjects/transformgameobject/SetSize.ts","../src/gameobjects/transformgameobject/SetSkew.ts","../src/math/angle/Between.ts","../src/math/angle/BetweenPoints.ts","../src/math/angle/BetweenPointsY.ts","../src/math/angle/BetweenY.ts","../src/math/const.ts","../src/math/angle/CounterClockwise.ts","../src/math/angle/Normalize.ts","../src/math/angle/Reverse.ts","../src/math/angle/RotateTo.ts","../src/math/angle/ShortestBetween.ts","../src/math/Wrap.ts","../src/math/angle/Wrap.ts","../src/math/angle/WrapDegrees.ts","../src/math/angle/index.ts","../src/math/distance/DistanceBetween.ts","../src/math/distance/DistanceBetweenPoints.ts","../src/math/distance/DistanceBetweenPointsSquared.ts","../src/math/distance/DistanceChebyshev.ts","../src/math/distance/DistancePower.ts","../src/math/distance/DistanceSnake.ts","../src/math/distance/DistanceSquared.ts","../src/math/distance/index.ts","../src/math/fuzzy/Ceil.ts","../src/math/fuzzy/Equal.ts","../src/math/fuzzy/Floor.ts","../src/math/fuzzy/GreaterThan.ts","../src/math/fuzzy/LessThan.ts","../src/math/fuzzy/index.ts","../src/math/Factorial.ts","../src/math/Bernstein.ts","../src/math/interpolation/BezierInterpolation.ts","../src/math/CatmullRom.ts","../src/math/interpolation/CatmullRomInterpolation.ts","../src/math/interpolation/CubicBezierInterpolation.ts","../src/math/Linear.ts","../src/math/interpolation/LinearInterpolation.ts","../src/math/interpolation/QuadraticBezierInterpolation.ts","../src/math/SmoothStep.ts","../src/math/interpolation/SmoothStepInterpolation.ts","../src/math/SmootherStep.ts","../src/math/interpolation/SmootherStepInterpolation.ts","../src/math/interpolation/index.ts","../src/math/matrix2d/Add.ts","../src/math/matrix2d/CopyToContext.ts","../src/math/matrix2d/Determinant.ts","../src/math/matrix2d/Frobenius.ts","../src/math/vec2/Vec2.ts","../src/math/matrix2d/GlobalToLocal.ts","../src/math/matrix2d/Invert.ts","../src/math/matrix2d/ITRS.ts","../src/math/matrix2d/ITRSS.ts","../src/math/matrix2d/LocalToGlobal.ts","../src/math/matrix2d/Multiply.ts","../src/math/matrix2d/MultiplyScalar.ts","../src/math/matrix2d/MultiplyScalarAndAdd.ts","../src/math/matrix2d/Rotate.ts","../src/math/matrix2d/Scale.ts","../src/math/matrix2d/SetToContext.ts","../src/math/matrix2d/Skew.ts","../src/math/matrix2d/Subtract.ts","../src/math/matrix2d/Translate.ts","../src/math/matrix2d/Zero.ts","../src/math/matrix2d-funcs/Add.ts","../src/math/matrix2d-funcs/Append.ts","../src/math/matrix2d-funcs/Clone.ts","../src/math/matrix2d-funcs/Equals.ts","../src/math/matrix2d-funcs/ExactEquals.ts","../src/math/matrix2d-funcs/Rotate.ts","../src/math/matrix2d-funcs/FromRotation.ts","../src/math/matrix2d-funcs/Scale.ts","../src/math/matrix2d-funcs/FromScaling.ts","../src/math/matrix2d-funcs/Translate.ts","../src/math/matrix2d-funcs/FromTranslation.ts","../src/math/matrix2d-funcs/Identity.ts","../src/math/matrix2d-funcs/Invert.ts","../src/math/matrix2d-funcs/Multiply.ts","../src/math/matrix2d-funcs/MultiplyScalar.ts","../src/math/matrix2d-funcs/MultiplyScalarAndAdd.ts","../src/math/matrix2d-funcs/Subtract.ts","../src/math/matrix2d-funcs/Zero.ts","../src/math/pow2/GetPowerOfTwo.ts","../src/math/pow2/IsValuePowerOfTwo.ts","../src/math/pow2/index.ts","../src/math/snap/SnapCeil.ts","../src/math/snap/SnapFloor.ts","../src/math/snap/SnapTo.ts","../src/math/snap/index.ts","../src/math/Average.ts","../src/math/Between.ts","../src/math/CeilTo.ts","../src/math/Clamp.ts","../src/math/DegToRad.ts","../src/math/Difference.ts","../src/math/FloatBetween.ts","../src/math/FloorTo.ts","../src/math/FromPercent.ts","../src/math/GetSpeed.ts","../src/math/MaxAdd.ts","../src/math/MinSub.ts","../src/math/Percent.ts","../src/math/RadToDeg.ts","../src/math/RoundAwayFromZero.ts","../src/math/RoundTo.ts","../src/math/SinCosTableGenerator.ts","../src/math/ToXY.ts","../src/math/TransformXY.ts","../src/math/Within.ts","../src/textures/palettes/Arne16.ts","../src/textures/palettes/C64.ts","../src/textures/palettes/CGA.ts","../src/textures/palettes/JMP.ts","../src/textures/palettes/MSX.ts","../src/textures/palettes/index.ts","../src/textures/parsers/AtlasParser.ts","../src/textures/parsers/BitmapTextParser.ts","../src/textures/parsers/SpriteSheetParser.ts","../src/textures/types/GridTexture.ts","../src/textures/types/PixelTexture.ts","../src/gameobjects/sprite/RenderWebGL.ts","../src/renderer/webgl1/Ortho.ts","../src/renderer/webgl1/CreateFramebuffer.ts","../src/textures/types/RenderTexture.ts","../src/textures/types/SolidColorTexture.ts","../src/textures/TextureManager.ts","../src/renderer/webgl1/shaders/CheckShaderMaxIfStatements.ts","../src/renderer/webgl1/shaders/MultiTextureQuadShader.ts","../src/config/BackgroundColor.ts","../src/config/Scenes.ts","../src/config/Size.ts","../src/config/WebGLContext.ts","../src/renderer/webgl1/WebGLRenderer.ts","../src/scenes/GetConfigValue.ts","../src/scenes/SceneManager.ts","../src/Game.ts","../src/camera/Camera.ts","../src/geom/intersects/RectangleToRectangle.ts","../src/world/World.ts","../src/scenes/Scene.ts","../src/camera/StaticCamera.ts","../src/world/StaticWorld.ts","../src/scenes/StaticScene.ts","../src/loader/Loader.ts"],"sourcesContent":["export function canPlayM4A (audioElement: HTMLAudioElement = document.createElement('audio')): boolean\n{\n    return ((audioElement.canPlayType('audio/x-m4a') !== '') || (audioElement.canPlayType('audio/aac') !== ''));\n}\n","export function canPlayMP3 (audioElement: HTMLAudioElement = document.createElement('audio')): boolean\n{\n    return (audioElement.canPlayType('audio/mpeg; codecs=\"mp3\"') !== '');\n}\n","export function canPlayOGG (audioElement: HTMLAudioElement = document.createElement('audio')): boolean\n{\n    return (audioElement.canPlayType('audio/ogg; codecs=\"vorbis\"') !== '');\n}\n","export function canPlayOpus (audioElement: HTMLAudioElement = document.createElement('audio')): boolean\n{\n    return ((audioElement.canPlayType('audio/ogg; codecs=\"opus\"') !== '') || (audioElement.canPlayType('audio/webm; codecs=\"opus\"') !== ''));\n}\n","export function canPlayWAV (audioElement: HTMLAudioElement = document.createElement('audio')): boolean\n{\n    return (audioElement.canPlayType('audio/wav; codecs=\"1\"') !== '');\n}\n","export function canPlayWebM (audioElement: HTMLAudioElement = document.createElement('audio')): boolean\n{\n    return (audioElement.canPlayType('audio/webm; codecs=\"vorbis\"') !== '');\n}\n","export function hasAudio (): boolean\n{\n    return (window.hasOwnProperty('Audio'));\n}\n","export function hasWebAudio (): boolean\n{\n    return (window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext'));\n}\n","import { canPlayM4A } from './canPlayM4A';\nimport { canPlayMP3 } from './canPlayMP3';\nimport { canPlayOGG } from './canPlayOGG';\nimport { canPlayOpus } from './canPlayOpus';\nimport { canPlayWAV } from './canPlayWAV';\nimport { canPlayWebM } from './canPlayWebM';\nimport { hasAudio } from './hasAudio';\nimport { hasWebAudio } from './hasWebAudio';\nimport { IDeviceAudioResult } from './IDeviceAudioResult';\n\nexport function GetAudio (): IDeviceAudioResult\n{\n    const result: IDeviceAudioResult = {\n        audioData: hasAudio(),\n        m4a: false,\n        mp3: false,\n        ogg: false,\n        opus: false,\n        wav: false,\n        webAudio: hasWebAudio(),\n        webm: false\n    };\n\n    if (result.audioData)\n    {\n        const audioElement: HTMLAudioElement = document.createElement('audio');\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown\n        try\n        {\n            const canPlay: boolean = !!audioElement.canPlayType;\n\n            if (canPlay)\n            {\n                result.m4a = canPlayM4A(audioElement);\n                result.mp3 = canPlayMP3(audioElement);\n                result.ogg = canPlayOGG(audioElement);\n                result.opus = canPlayOpus(audioElement);\n                result.wav = canPlayWAV(audioElement);\n                result.webm = canPlayWebM(audioElement);\n            }\n        }\n        catch (error)\n        {\n            result.audioData = false;\n        }\n    }\n\n    return result;\n}\n","//  @namespace Phaser.Device.Audio\n\nimport { canPlayM4A } from './canPlayM4A';\nimport { canPlayMP3 } from './canPlayMP3';\nimport { canPlayOGG } from './canPlayOGG';\nimport { canPlayOpus } from './canPlayOpus';\nimport { canPlayWAV } from './canPlayWAV';\nimport { canPlayWebM } from './canPlayWebM';\nimport { GetAudio } from './GetAudio';\nimport { hasAudio } from './hasAudio';\nimport { hasWebAudio } from './hasWebAudio';\n\nexport {\n    canPlayM4A,\n    canPlayMP3,\n    canPlayOGG,\n    canPlayOpus,\n    canPlayWAV,\n    canPlayWebM,\n    GetAudio,\n    hasAudio,\n    hasWebAudio\n};\n","export function isChrome (): { chrome: boolean, chromeVersion: number }\n{\n    const chrome = (/Chrome\\/(\\d+)/).test(navigator.userAgent);\n    const chromeVersion = (chrome) ? parseInt(RegExp.$1, 10) : 0;\n\n    return {\n        chrome,\n        chromeVersion\n    };\n}\n","export function isEdge (): { edge: boolean }\n{\n    const edge = (/Edge\\/\\d+/).test(navigator.userAgent);\n\n    return {\n        edge\n    };\n}\n","export function isFirefox (): { firefox: boolean, firefoxVersion: number }\n{\n    const firefox = (/Firefox\\D+(\\d+)/).test(navigator.userAgent);\n    const firefoxVersion = (firefox) ? parseInt(RegExp.$1, 10) : 0;\n\n    return {\n        firefox,\n        firefoxVersion\n    };\n}\n","interface IGetIOSResult {\n    iOS: boolean;\n    iOSVersion: number;\n    iPhone: boolean;\n    iPad: boolean;\n}\n\nexport function isiOS (): IGetIOSResult\n{\n    const ua: string = navigator.userAgent;\n\n    const result: IGetIOSResult = {\n        iOS: false,\n        iOSVersion: 0,\n        iPhone: false,\n        iPad: false\n    };\n\n    if (/iP[ao]d|iPhone/i.test(ua))\n    {\n        (navigator.appVersion).match(/OS (\\d+)/);\n\n        result.iOS = true;\n        result.iOSVersion = parseInt(RegExp.$1, 10);\n        result.iPhone = (ua.toLowerCase().indexOf('iphone') !== -1);\n        result.iPad = (ua.toLowerCase().indexOf('ipad') !== -1);\n    }\n\n    return result;\n}\n","import { isiOS } from '../os/isiOS';\n\nexport function isMobileSafari (): { mobileSafari: boolean }\n{\n    const { iOS } = isiOS();\n\n    const mobileSafari = ((/AppleWebKit/).test(navigator.userAgent) && iOS);\n\n    return {\n        mobileSafari\n    };\n}\n","export function isMSIE (): { ie: boolean, ieVersion: number }\n{\n    const ie = (/MSIE (\\d+\\.\\d+);/).test(navigator.userAgent);\n    const ieVersion = (ie) ? parseInt(RegExp.$1, 10) : 0;\n\n    return {\n        ie,\n        ieVersion\n    };\n}\n","export function isOpera (): { opera: boolean }\n{\n    const opera = (/Opera/).test(navigator.userAgent);\n\n    return {\n        opera\n    };\n}\n","export function isWindowsPhone (): boolean\n{\n    const ua: string = navigator.userAgent;\n\n    return (/Windows Phone/i.test(ua) || (/IEMobile/i).test(ua));\n}\n","import { isWindowsPhone } from '../os/isWindowsPhone';\n\nexport function isSafari (): { safari: boolean, safariVersion: number }\n{\n    const ua: string = navigator.userAgent;\n\n    const safari = ((/Safari/).test(ua) && !isWindowsPhone());\n    const safariVersion = ((/Version\\/(\\d+)\\./).test(ua)) ? parseInt(RegExp.$1, 10) : 0;\n\n    return {\n        safari,\n        safariVersion\n    };\n}\n","export function isSilk (): { silk: boolean }\n{\n    const silk = (/Silk/).test(navigator.userAgent);\n\n    return {\n        silk\n    };\n}\n","export function isTrident (): { trident: boolean, tridentVersion: number, tridentIEVersion: number }\n{\n    const trident = (/Trident\\/(\\d+\\.\\d+)(.*)rv:(\\d+\\.\\d+)/).test(navigator.userAgent);\n    const tridentVersion = (trident) ? parseInt(RegExp.$1, 10) : 0;\n    const tridentIEVersion = (trident) ? parseInt(RegExp.$3, 10) : 0;\n\n    return {\n        trident,\n        tridentVersion,\n        tridentIEVersion\n    };\n}\n","import { IDeviceBrowserResult } from './IDeviceBrowserResult';\nimport { isChrome } from './isChrome';\nimport { isEdge } from './isEdge';\nimport { isFirefox } from './isFirefox';\nimport { isMobileSafari } from './isMobileSafari';\nimport { isMSIE } from './isMSIE';\nimport { isOpera } from './isOpera';\nimport { isSafari } from './isSafari';\nimport { isSilk } from './isSilk';\nimport { isTrident } from './isTrident';\n\nexport function GetBrowser (): IDeviceBrowserResult\n{\n    const { chrome, chromeVersion } = isChrome();\n    const { edge } = isEdge();\n    const { firefox, firefoxVersion } = isFirefox();\n    let { ie, ieVersion } = isMSIE();\n    const { mobileSafari } = isMobileSafari();\n    const { opera } = isOpera();\n    const { safari, safariVersion } = isSafari();\n    const { silk } = isSilk();\n    const { trident, tridentVersion, tridentIEVersion } = isTrident();\n\n    if (trident)\n    {\n        ie = true;\n        ieVersion = tridentIEVersion;\n    }\n\n    const result: IDeviceBrowserResult = {\n        chrome,\n        chromeVersion,\n        edge,\n        firefox,\n        firefoxVersion,\n        ie,\n        ieVersion,\n        mobileSafari,\n        opera,\n        safari,\n        safariVersion,\n        silk,\n        trident,\n        tridentVersion\n    };\n\n    return result;\n}\n","//  @namespace Phaser.Device.Browser\n\nimport { GetBrowser } from './GetBrowser';\nimport { isChrome } from './isChrome';\nimport { isEdge } from './isEdge';\nimport { isFirefox } from './isFirefox';\nimport { isMobileSafari } from './isMobileSafari';\nimport { isMSIE } from './isMSIE';\nimport { isOpera } from './isOpera';\nimport { isSafari } from './isSafari';\nimport { isSilk } from './isSilk';\nimport { isTrident } from './isTrident';\n\nexport {\n    GetBrowser,\n    isChrome,\n    isEdge,\n    isFirefox,\n    isMobileSafari,\n    isMSIE,\n    isOpera,\n    isSafari,\n    isSilk,\n    isTrident\n};\n","export function isAndroid (): boolean\n{\n    return (/Android/.test(navigator.userAgent));\n}\n","export function isChromeOS (): boolean\n{\n    return (/CrOS/.test(navigator.userAgent));\n}\n","export function isCordova (): boolean\n{\n    return (window.hasOwnProperty('cordova'));\n}\n","export function isCrosswalk (): boolean\n{\n    return ((/Crosswalk/).test(navigator.userAgent));\n}\n","export function isEjecta (): boolean\n{\n    return (window.hasOwnProperty('ejecta'));\n}\n","export function isNode (): boolean\n{\n    return (typeof process !== 'undefined' && typeof process.versions === 'object' && process.versions.hasOwnProperty('node'));\n}\n","import { isNode } from './isNode';\n\nexport function isElectron (): boolean\n{\n    return (isNode() && !!process.versions['electron']);\n}\n","export function isKindle (): boolean\n{\n    // This will NOT detect early generations of Kindle Fire, I think there is no reliable way...\n    // E.g. \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.1.0-80) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Safari/533.16 Silk-Accelerated=true\"\n    const ua: string = navigator.userAgent;\n\n    return ((/Kindle/.test(ua) || (/\\bKF[A-Z][A-Z]+/).test(ua) || (/Silk.*Mobile Safari/).test(ua)));\n}\n","export function isLinux (): boolean\n{\n    return (/Linux/.test(navigator.userAgent));\n}\n","export function isMacOS (): boolean\n{\n    const ua: string = navigator.userAgent;\n\n    return (/Mac OS/.test(ua) && !(/like Mac OS/.test(ua)));\n}\n","import { isNode } from './isNode';\n\nexport function isNodeWebkit (): boolean\n{\n    return (isNode() && !!process.versions['node-webkit']);\n}\n","export function isWebApp (): boolean\n{\n    return (navigator.hasOwnProperty('standalone'));\n}\n","export function isWindows (): boolean\n{\n    return (/Windows/.test(navigator.userAgent));\n}\n","import { IDeviceOSResult } from './IDeviceOSResult';\nimport { isAndroid } from './isAndroid';\nimport { isChromeOS } from './isChromeOS';\nimport { isCordova } from './isCordova';\nimport { isCrosswalk } from './isCrosswalk';\nimport { isEjecta } from './isEjecta';\nimport { isElectron } from './isElectron';\nimport { isiOS } from './isiOS';\nimport { isKindle } from './isKindle';\nimport { isLinux } from './isLinux';\nimport { isMacOS } from './isMacOS';\nimport { isNode } from './isNode';\nimport { isNodeWebkit } from './isNodeWebkit';\nimport { isWebApp } from './isWebApp';\nimport { isWindows } from './isWindows';\nimport { isWindowsPhone } from './isWindowsPhone';\n\nexport function GetOS (): IDeviceOSResult\n{\n    const ua: string = navigator.userAgent;\n\n    const { iOS, iOSVersion, iPad, iPhone } = isiOS();\n\n    const result: IDeviceOSResult = {\n        android: isAndroid(),\n        chromeOS: isChromeOS(),\n        cordova: isCordova(),\n        crosswalk: isCrosswalk(),\n        desktop: false,\n        ejecta: isEjecta(),\n        electron: isElectron(),\n        iOS,\n        iOSVersion,\n        iPad,\n        iPhone,\n        kindle: isKindle(),\n        linux: isLinux(),\n        macOS: isMacOS(),\n        node: isNode(),\n        nodeWebkit: isNodeWebkit(),\n        pixelRatio: 1,\n        webApp: isWebApp(),\n        windows: isWindows(),\n        windowsPhone: isWindowsPhone()\n    };\n\n    if (result.windowsPhone)\n    {\n        result.android = false;\n        result.iOS = false;\n        result.macOS = false;\n        result.windows = true;\n    }\n\n    const silk: boolean = (/Silk/).test(ua);\n\n    if (result.windows || result.macOS || (result.linux && !silk) || result.chromeOS)\n    {\n        result.desktop = true;\n    }\n\n    //  Windows Phone / Table reset\n    if (result.windowsPhone || ((/Windows NT/i.test(ua)) && (/Touch/i.test(ua))))\n    {\n        result.desktop = false;\n    }\n\n    return result;\n}\n","//  @namespace Phaser.Device.OS\n\nimport { GetOS } from './GetOS';\nimport { isAndroid } from './isAndroid';\nimport { isChromeOS } from './isChromeOS';\nimport { isCordova } from './isCordova';\nimport { isCrosswalk } from './isCrosswalk';\nimport { isEjecta } from './isEjecta';\nimport { isElectron } from './isElectron';\nimport { isiOS } from './isiOS';\nimport { isKindle } from './isKindle';\nimport { isLinux } from './isLinux';\nimport { isMacOS } from './isMacOS';\nimport { isNode } from './isNode';\nimport { isNodeWebkit } from './isNodeWebkit';\nimport { isWebApp } from './isWebApp';\nimport { isWindows } from './isWindows';\nimport { isWindowsPhone } from './isWindowsPhone';\n\nexport {\n    GetOS,\n    isAndroid,\n    isChromeOS,\n    isCordova,\n    isCrosswalk,\n    isEjecta,\n    isElectron,\n    isiOS,\n    isKindle,\n    isLinux,\n    isMacOS,\n    isNode,\n    isNodeWebkit,\n    isWebApp,\n    isWindows,\n    isWindowsPhone\n};\n","export function canPlayH264Video (videoElement: HTMLVideoElement = document.createElement('video')): boolean\n{\n    return (videoElement.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') !== '');\n}\n","export function canPlayHLSVideo (videoElement: HTMLVideoElement = document.createElement('video')): boolean\n{\n    return (videoElement.canPlayType('application/x-mpegURL; codecs=\"avc1.42E01E\"') !== '');\n}\n","export function canPlayOGGVideo (videoElement: HTMLVideoElement = document.createElement('video')): boolean\n{\n    return (videoElement.canPlayType('video/ogg; codecs=\"theora\"') !== '');\n}\n","export function canPlayVP9Video (videoElement: HTMLVideoElement = document.createElement('video')): boolean\n{\n    return (videoElement.canPlayType('video/webm; codecs=\"vp9\"') !== '');\n}\n","export function canPlayWebMVideo (videoElement: HTMLVideoElement = document.createElement('video')): boolean\n{\n    return (videoElement.canPlayType('video/webm; codecs=\"vp8, vorbis\"') !== '');\n}\n","import { canPlayH264Video } from './canPlayH264Video';\nimport { canPlayHLSVideo } from './canPlayHLSVideo';\nimport { canPlayOGGVideo } from './canPlayOGGVideo';\nimport { canPlayVP9Video } from './canPlayVP9Video';\nimport { canPlayWebMVideo } from './canPlayWebMVideo';\nimport { IDeviceVideoResult } from './IDeviceVideoResult';\n\nexport function GetVideo (): IDeviceVideoResult\n{\n    const result: IDeviceVideoResult = {\n        h264Video: false,\n        hlsVideo: false,\n        mp4Video: false,\n        oggVideo: false,\n        vp9Video: false,\n        webmVideo: false\n    };\n\n    const videoElement: HTMLVideoElement = document.createElement('video');\n\n    // IE9 Running on Windows Server SKU can cause an exception to be thrown\n    try\n    {\n        const canPlay: boolean = !!videoElement.canPlayType;\n\n        if (canPlay)\n        {\n            result.h264Video = canPlayH264Video(videoElement);\n            result.hlsVideo = canPlayHLSVideo(videoElement);\n            result.oggVideo = canPlayOGGVideo(videoElement);\n            result.vp9Video = canPlayVP9Video(videoElement);\n            result.webmVideo = canPlayWebMVideo(videoElement);\n        }\n    }\n    catch (error)\n    {\n        //  Nothing to do here\n    }\n\n    //  Duplicate the result for Phaser 3 compatibility\n    result.mp4Video = result.hlsVideo;\n\n    return result;\n}\n","//  @namespace Phaser.Device.Video\n\nimport { canPlayH264Video } from './canPlayH264Video';\nimport { canPlayHLSVideo } from './canPlayHLSVideo';\nimport { canPlayOGGVideo } from './canPlayOGGVideo';\nimport { canPlayVP9Video } from './canPlayVP9Video';\nimport { canPlayWebMVideo } from './canPlayWebMVideo';\nimport { GetVideo } from './GetVideo';\n\nexport {\n    canPlayH264Video,\n    canPlayHLSVideo,\n    canPlayOGGVideo,\n    canPlayVP9Video,\n    canPlayWebMVideo,\n    GetVideo\n};\n","//  @namespace Phaser.Device\n\nimport * as Audio from './audio';\nimport * as Browser from './browser';\nimport * as OS from './os';\nimport * as Video from './video';\n\nexport default {\n    Audio,\n    Browser,\n    OS,\n    Video\n};\n\nexport * from './audio';\nexport * from './browser';\nexport * from './os';\nexport * from './video';\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Attempts to get the target DOM element based on the given value, which can be either\n * a string, in which case it will be looked-up by ID, or an element node. If nothing\n * can be found it will return a reference to the document.body.\n *\n * @function Phaser.DOM.GetElement\n * @since 4.0.0\n *\n * @param {(string | HTMLElement)} [target] - The DOM element to look-up.\n * \n * @returns {HTMLElement} The HTML Element that was found.\n */\nexport default function GetElement (target?: string | HTMLElement): HTMLElement\n{\n    let element: HTMLElement;\n\n    if (target)\n    {\n        if (typeof target === 'string')\n        {\n            //  Hopefully an element ID\n            element = document.getElementById(target);\n        }\n        else if (typeof target === 'object' && target.nodeType === 1)\n        {\n            //  Quick test for a HTMLElement\n            element = target;\n        }\n    }\n\n    if (!element)\n    {\n        element = document.body;\n    }\n\n    return element;\n}\n","import GetElement from './GetElement';\n\nexport default function AddToDOM (element: HTMLElement, parent?: string | HTMLElement): HTMLElement\n{\n    const target: HTMLElement = GetElement(parent);\n\n    target.appendChild(element);\n\n    return element;\n}\n","export default function DOMContentLoaded (callback: () => void)\n{\n    const readyState = document.readyState;\n\n    if (readyState === 'complete' || readyState === 'interactive')\n    {\n        callback();\n\n        return;\n    }\n\n    const check = () =>\n    {\n        document.removeEventListener('deviceready', check, true);\n        document.removeEventListener('DOMContentLoaded', check, true);\n        window.removeEventListener('load', check, true);\n\n        callback();\n    };\n\n    if (!document.body)\n    {\n        window.setTimeout(check, 20);\n    }\n    else if (window.hasOwnProperty('cordova'))\n    {\n        document.addEventListener('deviceready', check, true);\n    }\n    else\n    {\n        document.addEventListener('DOMContentLoaded', check, true);\n        window.addEventListener('load', check, true);\n    }\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Takes the given data string and parses it as XML using the native DOMParser interface.\n * The parsed XML object is returned, or `null` if there was an error while parsing the data.\n *\n * @function Phaser.DOM.ParseXML\n * @since 3.0.0\n *\n * @param {string} data - The XML source stored in a string.\n *\n * @return {?XMLDocument} The parsed XML data, or `null` if the data could not be parsed.\n */\nexport default function ParseXML (data: string): XMLDocument | null\n{\n    let xml: XMLDocument;\n\n    try \n    {\n        const parser = new DOMParser();\n\n        xml = parser.parseFromString(data, 'text/xml');\n\n        if (!xml || !xml.documentElement || xml.getElementsByTagName('parsererror').length)\n        {\n            return null;\n        }\n        else\n        {\n            return xml;\n        }\n    }\n    catch (error)\n    {\n        return null;\n    }\n}\n","export default function RemoveFromDOM (element: HTMLElement)\n{\n    if (element.parentNode)\n    {\n        element.parentNode.removeChild(element);\n    }\n}\n","class EE\n{\n    callback: Function;\n    context: any;\n    once: boolean;\n\n    constructor (callback: Function, context: any, once: boolean = false)\n    {\n        this.callback = callback;\n        this.context = context;\n        this.once = once;\n    }\n}\n\nexport default class EventEmitter\n{\n    private _events: Map<string, Set<EE>>;\n\n    constructor ()\n    {\n        this._events = new Map();\n    }\n\n    on (event: string, callback: Function, context: any = this, once: boolean = false)\n    {\n        if (typeof callback !== 'function')\n        {\n            throw new TypeError('The listener must be a function');\n        }\n\n        const listener = new EE(callback, context, once);\n        const listeners = this._events.get(event);\n\n        if (!listeners)\n        {\n            this._events.set(event, new Set([ listener ]));\n        }\n        else\n        {\n            listeners.add(listener);\n        }\n\n        return this;\n    }\n\n    once (event: string, callback: Function, context: any = this)\n    {\n        return this.on(event, callback, context, true);\n    }\n\n    /**\n     * Clear an event by name.\n     */\n    clearEvent (event: string)\n    {\n        this._events.delete(event);\n\n        return this;\n    }\n\n    /**\n     * Return an array listing the events for which the emitter has registered listeners.\n     */\n    eventNames (): string[]\n    {\n        return [ ...this._events.keys() ];\n    }\n\n    /**\n     * Return the listeners registered for a given event.\n     */\n    listeners (event: string): Function[]\n    {\n        const out = [];\n\n        const listeners = this._events.get(event);\n\n        listeners.forEach((ee) => {\n\n            out.push(ee.callback);\n\n        });\n\n        return out;\n    }\n\n    /**\n     * Return the number of listeners listening to a given event.\n     */\n    listenerCount (event: string): number\n    {\n        const listeners = this._events.get(event);\n\n        return (listeners) ? listeners.size : 0;\n    }\n\n    /**\n     * Calls each of the listeners registered for a given event.\n     */\n    emit (event: string, ...args: any[]): boolean\n    {\n        if (!this._events.has(event))\n        {\n            return false;\n        }\n\n        const listeners = this._events.get(event);\n\n        for (const ee of listeners)\n        {\n            ee.callback.apply(ee.context, args);\n\n            if (ee.once)\n            {\n                listeners.delete(ee);\n            }\n        }\n\n        if (listeners.size === 0)\n        {\n            this._events.delete(event);\n        }\n\n        return true;\n    }\n\n    /**\n     * Remove the listeners of a given event.\n     * \n     * @param event \n     * @param callback \n     * @param context \n     * @param once \n     */\n    off (event: string, callback?: Function, context?: any, once?: boolean)\n    {\n        if (!callback)\n        {\n            //  Remove all events matching the given key\n            this._events.delete(event);\n        }\n        else\n        {\n            const listeners = this._events.get(event);\n            const hasContext: boolean = !context;\n            const hasOnce: boolean = (once !== undefined);\n\n            for (const ee of listeners)\n            {\n                if (ee.callback === callback && (hasContext && ee.context === console) && (hasOnce && ee.once === once))\n                {\n                    listeners.delete(ee);\n                }\n            }\n\n            if (listeners.size === 0)\n            {\n                this._events.delete(event);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove all listeners, or those of the specified event.\n     * \n     * @param event \n     */\n    removeAllListeners (event?: string)\n    {\n        if (!event)\n        {\n            this._events.clear();\n        }\n        else\n        {\n            this._events.delete(event);\n        }\n    }\n}\n","import IAnimatedSprite from './IAnimatedSprite';\n\nexport default function AddAnimation (key: string, frames: string[] | number[], ...sprite: IAnimatedSprite[])\n{\n    sprite.forEach(entity => {\n\n        if (!entity.anims.has(key))\n        {\n            entity.anims.set(key, entity.texture.getFrames(frames));\n        }\n\n    });\n}\n","import IAnimatedSprite from './IAnimatedSprite';\n\nexport type AtlasFrameConfig = {\n    key: string,\n    prefix?: string,\n    start?: number,\n    end: number,\n    zeroPad?: number,\n    suffix?: string\n};\n\nexport default function AddAnimationFromAtlas (config: AtlasFrameConfig, ...sprite: IAnimatedSprite[])\n{\n    const {\n        key,\n        prefix = '',\n        start = 0,\n        end,\n        zeroPad = 0,\n        suffix = ''\n    } = config;\n\n    sprite.forEach(entity => {\n\n        if (!entity.anims.has(key))\n        {\n            entity.anims.set(key, entity.texture.getFramesInRange(prefix, start, end, zeroPad, suffix));\n        }\n\n    });\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport IRectangle from './IRectangle';\n\n/**\n * Checks if a given point is inside a Rectangle's bounds.\n *\n * @function Phaser.Geom.Rectangle.Contains\n * @since 3.0.0\n *\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to check.\n * @param {number} x - The X coordinate of the point to check.\n * @param {number} y - The Y coordinate of the point to check.\n *\n * @return {boolean} `true` if the point is within the Rectangle's bounds, otherwise `false`.\n */\nexport default function Contains (rect: IRectangle, x: number, y: number): boolean\n{\n    if (rect.width <= 0 || rect.height <= 0)\n    {\n        return false;\n    }\n\n    return (rect.x <= x && rect.x + rect.width >= x && rect.y <= y && rect.y + rect.height >= y);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Contains from './Contains';\n\nexport default class Rectangle\n{\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor (x: number = 0, y: number = 0, width: number = 0, height: number = 0)\n    {\n        this.set(x, y, width, height);\n    }\n\n    set (x: number = 0, y: number = 0, width: number = 0, height: number = 0)\n    {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n\n        return this;\n    }\n\n    contains (x: number, y: number): boolean\n    {\n        return Contains(this, x, y);\n    }\n\n    set right (value: number)\n    {\n        if (value <= this.x)\n        {\n            this.width = 0;\n        }\n        else\n        {\n            this.width = value - this.x;\n        }\n    }\n\n    get right (): number\n    {\n        return this.x + this.width;\n    }\n\n    set bottom (value: number)\n    {\n        if (value <= this.y)\n        {\n            this.height = 0;\n        }\n        else\n        {\n            this.height = value - this.y;\n        }\n    }\n\n    get bottom (): number\n    {\n        return this.y + this.height;\n    }\n}\n","import IInteractiveArea from '../../input/IInteractiveArea';\nimport Rectangle from '../../geom/rectangle/Rectangle';\nimport IParent from '../container/IParent';\nimport IBaseScene from '../../scenes/IBaseScene';\n\n//  The Base Game Object which all Scene entites extend\n\nexport default class GameObject\n{\n    scene: IBaseScene;\n    name: string = '';\n    type: string = 'GameObject';\n\n    willRender: boolean = true;\n    willUpdate: boolean = true;\n\n    dirtyRender: boolean = true;\n    dirtyUpdate: boolean = true;\n    dirtyFrame: number = 0;\n\n    parent: IParent;\n    isParent: boolean = false;\n\n    visible: boolean = true;\n\n    inputEnabled: boolean = false;\n    inputEnabledChildren: boolean = true;\n    inputHitArea: IInteractiveArea;\n\n    fixBounds: boolean = false;\n    bounds: Rectangle = new Rectangle();\n\n    constructor ()\n    {\n    }\n\n    isRenderable (): boolean\n    {\n        return (this.visible && this.willRender);\n    }\n\n    setDirtyRender (setFrame: boolean = true)\n    {\n        this.dirtyRender = true;\n\n        const scene = this.scene;\n\n        if (setFrame && scene)\n        {\n            this.dirtyFrame = scene.game.frame;\n        }\n\n        return this;\n    }\n\n    setDirtyUpdate ()\n    {\n        this.dirtyUpdate = true;\n\n        return this;\n    }\n\n    getBounds (includeChildren: boolean = false): Rectangle\n    {\n        return this.bounds;\n    }\n\n    setBounds (x: number, y: number, width: number, height: number)\n    {\n        this.bounds.set(x, y, width, height);\n\n        return this;\n    }\n\n    update ()\n    {\n    }\n\n    updateTransform ()\n    {\n        return this;\n    }\n\n    render ()\n    {\n    }\n\n    destroy (reparentChildren?: IParent)\n    {\n        this.scene = null;\n    }\n}\n","export default {\n    POSITION_X: 0,\n    POSITION_Y: 1,\n    ORIGIN_X: 2,\n    ORIGIN_Y: 3,\n    SKEW_X: 4,\n    SKEW_Y: 5,\n    SCALE_X: 6,\n    SCALE_Y: 7,\n    ROTATION: 8,\n    ANGLE: 9\n}\n","//  A Matrix2D contains six elements in a short-form of the 3x3 Matrix, with the last column ignored.\n\n//  |----|----|----|\n//  | a  | b  | 0  |\n//  |----|----|----|\n//  | c  | d  | 0  |\n//  |----|----|----|\n//  | tx | ty | 1  |\n//  |----|----|----|\n\nexport default class Matrix2D\n{\n    a: number;\n    b: number;\n    c: number;\n    d: number;\n    tx: number;\n    ty: number;\n\n    /**\n     * Creates an instance of Matrix2D.\n     * \n     * @param {number} [a=1] - X scale.\n     * @param {number} [b=0] - X skew.\n     * @param {number} [c=0] - Y skew.\n     * @param {number} [d=1] - Y scale.\n     * @param {number} [tx=0] - X translation\n     * @param {number} [ty=0] - Y translation\n     * @memberof Matrix2D\n     */\n    constructor (a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0)\n    {\n        this.set(a, b, c, d, tx, ty);\n    }\n\n    set (a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0): Matrix2D\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    }\n\n    identity (): Matrix2D\n    {\n        return this.set();\n    }\n\n    toArray (): number[]\n    {\n        return [ this.a, this.b, this.c, this.d, this.tx, this.ty ];\n    }\n\n    fromArray (src: number[]): Matrix2D\n    {\n        return this.set(src[0], src[1], src[2], src[3], src[4], src[5]);\n    }\n\n    [Symbol.iterator] ()\n    {\n        const data = this.toArray();\n\n        return data[Symbol.iterator]();\n    }\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Copy the values from the src Matrix to the target Matrix and return the target Matrix.\n\nexport default function Copy (src: IMatrix2D, target: IMatrix2D): IMatrix2D\n{\n    return target.set(src.a, src.b, src.c, src.d, src.tx, src.ty);\n}\n","import GameObject from '../gameobject/GameObject';\nimport CONST from './const';\nimport Matrix2D from '../../math/matrix2d/Matrix2D';\nimport Copy from '../../math/matrix2d/Copy';\n\nexport default class TransformGameObject extends GameObject\n{\n    private transformBuffer: ArrayBuffer;\n\n    transformData: Float32Array;\n    localTransform: Matrix2D;\n    worldTransform: Matrix2D;\n\n    width: number;\n    height: number;\n\n    constructor (x: number = 0, y: number = 0)\n    {\n        super();\n\n        const byte = Float32Array.BYTES_PER_ELEMENT;\n\n        const buffer = new ArrayBuffer(10 * byte);\n\n        this.transformBuffer = buffer;\n\n        /**\n         * transformData:\n         * 0 = position x\n         * 1 = position y\n         * 2 = origin x\n         * 3 = origin y\n         * 4 = skew x\n         * 5 = skew y\n         * 6 = scale x\n         * 7 = scale y\n         * 8 = rotation\n         * 9 = angle\n         */\n        this.transformData = new Float32Array(buffer, 0, 10);\n        this.localTransform = new Matrix2D();\n        this.worldTransform = new Matrix2D();\n\n        this.transformData.set([ x, y, 0.5, 0.5, 0, 0, 1, 1, 0, 0 ]);\n\n        this.width = 0;\n        this.height = 0;\n\n        this.updateCache();\n    }\n\n    updateCache ()\n    {\n        const transform = this.localTransform;\n\n        const { rotation, skewX, skewY, scaleX, scaleY, x, y } = this;\n\n        transform.set(\n            Math.cos(rotation + skewY) * scaleX,\n            Math.sin(rotation + skewY) * scaleX,\n            -Math.sin(rotation - skewX) * scaleY,\n            Math.cos(rotation - skewX) * scaleY,\n            x,\n            y\n        );\n\n        return this.updateTransform();\n    }\n\n    updateTransform ()\n    {\n        this.setDirtyRender();\n\n        const parent = this.parent;\n\n        const lt = this.localTransform;\n        const wt = this.worldTransform;\n\n        lt.tx = this.x;\n        lt.ty = this.y;\n\n        if (!parent)\n        {\n            Copy(lt, wt);\n\n            return this;\n        }\n\n        const { a, b, c, d, tx, ty } = lt;\n        const { a: pa, b: pb, c: pc, d: pd, tx: ptx, ty: pty } = parent.worldTransform;\n\n        wt.set(\n            a  * pa + b  * pc,\n            a  * pb + b  * pd,\n            c  * pa + d  * pc,\n            c  * pb + d  * pd,\n            tx * pa + ty * pc + ptx,\n            tx * pb + ty * pd + pty\n        );\n\n        return this;\n    }\n\n    setSize (width: number, height: number)\n    {\n        this.width = width;\n        this.height = height;\n\n        return this;\n    }\n\n    setOrigin (originX: number, originY: number = originX)\n    {\n        const data = this.transformData;\n\n        data[CONST.ORIGIN_X] = originX;\n        data[CONST.ORIGIN_Y] = originY;\n\n        return this;\n    }\n\n    setPosition (x: number, y: number = x)\n    {\n        const data = this.transformData;\n\n        data[CONST.POSITION_X] = x;\n        data[CONST.POSITION_Y] = y;\n\n        return this.updateTransform();\n    }\n\n    setRotation (rotation: number)\n    {\n        const data = this.transformData;\n\n        if (rotation !== data[CONST.ROTATION])\n        {\n            data[CONST.ROTATION] = rotation;\n\n            this.updateCache();\n        }\n\n        return this;\n    }\n\n    setScale (scaleX: number, scaleY: number = scaleX)\n    {\n        const data = this.transformData;\n\n        data[CONST.SCALE_X] = scaleX;\n        data[CONST.SCALE_Y] = scaleY;\n\n        return this.updateCache();\n    }\n\n    setSkew (skewX: number, skewY: number = skewX)\n    {\n        const data = this.transformData;\n\n        data[CONST.SKEW_X] = skewX;\n        data[CONST.SKEW_Y] = skewY;\n\n        return this.updateCache();\n    }\n\n    destroy ()\n    {\n        super.destroy();\n\n        this.localTransform = null;\n        this.worldTransform = null;\n        this.transformBuffer = null;\n        this.transformData = null;\n    }\n\n    set x (value: number)\n    {\n        this.transformData[CONST.POSITION_X] = value;\n\n        this.updateTransform();\n    }\n\n    get x (): number\n    {\n        return this.transformData[CONST.POSITION_X];\n    }\n\n    set y (value: number)\n    {\n        this.transformData[CONST.POSITION_Y] = value;\n\n        this.updateTransform();\n    }\n\n    get y (): number\n    {\n        return this.transformData[CONST.POSITION_Y];\n    }\n\n    get originX (): number\n    {\n        return this.transformData[CONST.ORIGIN_X];\n    }\n\n    set originX (value: number)\n    {\n        this.transformData[CONST.ORIGIN_X] = value;\n    }\n\n    get originY (): number\n    {\n        return this.transformData[CONST.ORIGIN_Y];\n    }\n\n    set originY (value: number)\n    {\n        this.transformData[CONST.ORIGIN_Y] = value;\n    }\n\n    set skewX (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SKEW_X])\n        {\n            data[CONST.SKEW_X] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get skewX (): number\n    {\n        return this.transformData[CONST.SKEW_X];\n    }\n\n    set skewY (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SKEW_Y])\n        {\n            data[CONST.SKEW_Y] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get skewY (): number\n    {\n        return this.transformData[CONST.SKEW_Y];\n    }\n\n    set scaleX (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SCALE_X])\n        {\n            data[CONST.SCALE_X] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get scaleX (): number\n    {\n        return this.transformData[CONST.SCALE_X];\n    }\n\n    set scaleY (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SCALE_Y])\n        {\n            data[CONST.SCALE_Y] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get scaleY (): number\n    {\n        return this.transformData[CONST.SCALE_Y];\n    }\n\n    set rotation (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.ROTATION])\n        {\n            data[CONST.ROTATION] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get rotation (): number\n    {\n        return this.transformData[CONST.ROTATION];\n    }\n}\n","import IGameObject from '../gameobject/IGameObject';\nimport TransformGameObject from '../transformgameobject/TransformGameObject';\nimport IParent from './IParent';\n\nexport default class Container extends TransformGameObject\n{\n    children: IGameObject[];\n\n    private _alpha: number = 1;\n\n    constructor (x: number = 0, y: number = 0)\n    {\n        super(x, y);\n\n        this.children = [];\n        this.isParent = true;\n        this.type = 'Container';\n    }\n\n    update (delta?: number, time?: number)\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            let child = children[i];\n\n            if (child && child.willUpdate)\n            {\n                child.update(delta, time);\n            }\n        }\n    }\n\n    destroy (reparentChildren?: IParent)\n    {\n        // if (reparentChildren)\n        // {\n        //     this.reparentChildren(reparentChildren);\n        // }\n        // else\n        // {\n        //     this.destroyChildren();\n        // }\n\n        this.children = null;\n\n        super.destroy();\n    }\n\n    get numChildren (): number\n    {\n        return this.children.length;\n    }\n\n    get alpha (): number\n    {\n        return this._alpha;\n    }\n\n    set alpha (value: number)\n    {\n        if (value !== this._alpha)\n        {\n            this._alpha = value;\n\n            this.setDirtyRender();\n        }\n    }\n}\n","import Texture from './Texture';\n\nexport default class Frame\n{\n    texture: Texture;\n    key: string | number;\n\n    //  This is the actual area of the texture to draw to canvas / webgl, including any extruded data.\n    //  This is the same as the 'trimmed' + 'extruded' area from an atlas.\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    trimmed: boolean = false;\n\n    //  Original size of the image before being trimmed or added to an atlas (which can add extrude data to it).\n    sourceSizeWidth: number;\n    sourceSizeHeight: number;\n\n    //  The size of the image having been trimmed, before being added to the atlas (i.e. doesn't have any extrusion values in it)\n    spriteSourceSizeX: number;\n    spriteSourceSizeY: number;\n    spriteSourceSizeWidth: number;\n    spriteSourceSizeHeight: number;\n\n    pivot: { x: number, y: number };\n\n    u0: number;\n    v0: number;\n    u1: number;\n    v1: number;\n\n    constructor (texture: Texture, key: string | number, x: number, y: number, width: number, height: number)\n    {\n        this.texture = texture;\n        this.key = key;\n\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n\n        this.updateUVs();\n    }\n\n    setPivot (x: number, y: number)\n    {\n        this.pivot = { x, y };\n    }\n\n    setSize (width: number, height: number)\n    {\n        this.width = width;\n        this.height = height;\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n\n        this.updateUVs();\n    }\n\n    setSourceSize (width: number, height: number)\n    {\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n    }\n\n    setTrim (width: number, height: number, x: number, y: number, w: number, h: number)\n    {\n        this.trimmed = true;\n\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n\n        this.spriteSourceSizeX = x;\n        this.spriteSourceSizeY = y;\n        this.spriteSourceSizeWidth = w;\n        this.spriteSourceSizeHeight = h;\n    }\n\n    updateUVs ()\n    {\n        const { x, y, width, height } = this;\n\n        const baseTextureWidth = this.texture.width;\n        const baseTextureHeight = this.texture.height;\n\n        this.u0 = x / baseTextureWidth;\n        this.v0 = y / baseTextureHeight;\n\n        this.u1 = (x + width) / baseTextureWidth;\n        this.v1 = (y + height) / baseTextureHeight;\n    }\n}\n","let gl: WebGLRenderingContext;\n\nfunction get ()\n{\n    return gl;\n}\n\nfunction set (context: WebGLRenderingContext)\n{\n    gl = context;\n}\n\nexport default {\n    get,\n    set\n}\n","import GL from './GL';\n\nexport default function SetGLTextureFilterMode (texture: WebGLTexture, linear: boolean = true)\n{\n    const gl = GL.get();\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n}\n","import GL from './GL';\n\nexport default function DeleteGLTexture (texture: WebGLTexture)\n{\n    const gl = GL.get();\n\n    if (gl.isTexture(texture))\n    {\n        gl.deleteTexture(texture);\n    }\n}\n","import GL from './GL';\n\nexport default function DeleteFramebuffer (framebuffer: WebGLFramebuffer)\n{\n    const gl = GL.get();\n\n    if (gl.isFramebuffer(framebuffer))\n    {\n        gl.deleteFramebuffer(framebuffer);\n    }\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Checks if the given `width` and `height` are a power of two.\n * Useful for checking texture dimensions.\n *\n * @function Phaser.Math.Pow2.IsSize\n * @since 3.0.0\n *\n * @param {number} width - The width.\n * @param {number} height - The height.\n *\n * @return {boolean} `true` if `width` and `height` are a power of two, otherwise `false`.\n */\nexport default function IsSizePowerOfTwo (width: number, height: number): boolean\n{\n    if (width < 1 || height < 1)\n    {\n        return false;\n    }\n\n    return ((width & (width - 1)) === 0) && ((height & (height - 1)) === 0);\n}\n","import GL from './GL';\nimport IsSizePowerOfTwo from '../../math/pow2/IsSizePowerOfTwo';\n\nexport default function CreateGLTexture (source?: TexImageSource, width?: number, height?: number, potClamp: boolean = true, linear: boolean = true): WebGLTexture\n{\n    const gl = GL.get();\n    const glTexture: WebGLTexture = gl.createTexture();\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    if (source)\n    {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n\n        width = source.width;\n        height = source.height;\n    }\n    else\n    {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n\n    const pot = (source && IsSizePowerOfTwo(width, height));\n\n    const wrap = (pot && potClamp) ? gl.REPEAT : gl.CLAMP_TO_EDGE;\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\n    if (pot)\n    {\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    return glTexture;\n}\n","import GL from './GL';\n\nexport default function UpdateGLTexture (source: TexImageSource, dstTexture: WebGLTexture, flipY: boolean = false)\n{\n    const gl = GL.get();\n    const width = source.width;\n    const height = source.height;\n\n    if (width > 0 && height > 0)\n    {\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, dstTexture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n    }\n}\n","import Frame from './Frame';\nimport SetGLTextureFilterMode from '../renderer/webgl1/SetGLTextureFilterMode';\nimport DeleteGLTexture from '../renderer/webgl1/DeleteGLTexture';\nimport DeleteFramebuffer from '../renderer/webgl1/DeleteFramebuffer';\nimport CreateGLTexture from '../renderer/webgl1/CreateGLTexture';\nimport UpdateGLTexture from '../renderer/webgl1/UpdateGLTexture';\n\nexport default class Texture\n{\n    //  Unique identifier of this Texture, if stored in the Texture Manager\n    key: string = '';\n\n    width: number;\n    height: number;\n\n    image: TexImageSource;\n\n    glTexture: WebGLTexture;\n    glIndex: number = 0;\n    glIndexCounter: number = -1;\n    glFramebuffer: WebGLFramebuffer;\n\n    firstFrame: Frame;\n\n    frames: Map<string | number, Frame>;\n\n    data: any;\n\n    constructor (image?: TexImageSource, width?: number, height?: number)\n    {\n        if (image)\n        {\n            width = image.width;\n            height = image.height;\n        }\n\n        this.image = image;\n\n        this.width = width;\n        this.height = height;\n\n        this.frames = new Map();\n\n        this.data = {};\n\n        this.add('__BASE', 0, 0, width, height);\n    }\n\n    add (key: string | number, x: number, y: number, width: number, height: number): Frame\n    {\n        if (this.frames.has(key))\n        {\n            return null;\n        }\n\n        let frame = new Frame(this, key, x, y, width, height);\n\n        this.frames.set(key, frame);\n\n        if (!this.firstFrame || this.firstFrame.key === '__BASE')\n        {\n            this.firstFrame = frame;\n        }\n\n        return frame;\n    }\n\n    get (key?: string | number | Frame)\n    {\n        //  null, undefined, empty string, zero\n        if (!key)\n        {\n            return this.firstFrame;\n        }\n\n        if (key instanceof Frame)\n        {\n            key = key.key;\n        }\n\n        let frame: Frame = this.frames.get(key);\n\n        if (!frame)\n        {\n            console.warn('Texture.frame missing: ' + key);\n\n            frame = this.firstFrame;\n        }\n\n        return frame;\n    }\n\n    getFrames (frames: string[] | number[]): Frame[]\n    {\n        const output: Frame[] = [];\n\n        frames.forEach((key: string | number) => {\n\n            output.push(this.get(key));\n\n        });\n\n        return output;\n    }\n\n    getFramesInRange (prefix: string, start: number, end: number, zeroPad: number = 0, suffix: string = ''): Frame[]\n    {\n        const frameKeys = [];\n\n        const diff: number = (start < end) ? 1 : -1;\n\n        //  Adjust because we use i !== end in the for loop\n        end += diff;\n\n        for (let i: number = start; i !== end; i += diff)\n        {\n            frameKeys.push(prefix + i.toString().padStart(zeroPad, '0') + suffix);\n        }\n\n        return this.getFrames(frameKeys);\n    }\n\n    setSize (width: number, height: number)\n    {\n        this.width = width;\n        this.height = height;\n\n        const frame = this.frames.get('__BASE');\n\n        frame.setSize(width, height);\n    }\n\n    setFilter (linear: boolean)\n    {\n        SetGLTextureFilterMode(this.glTexture, linear);\n    }\n    \n    createGL ()\n    {\n        if (this.glTexture)\n        {\n            DeleteGLTexture(this.glTexture);\n        }\n\n        this.glTexture = CreateGLTexture(this.image);\n    }\n\n    updateGL ()\n    {\n        if (!this.glTexture)\n        {\n            this.glTexture = CreateGLTexture(this.image);\n        }\n        else\n        {\n            UpdateGLTexture(this.image, this.glTexture);\n        }\n    }\n\n    destroy ()\n    {\n        this.frames.clear();\n\n        this.image = null;\n        this.firstFrame = null;\n        this.data = null;\n\n        DeleteGLTexture(this.glTexture);\n        DeleteFramebuffer(this.glFramebuffer);\n    }\n}\n","import Game from './Game';\n\nlet gameInstance: Game;\n\nfunction get ()\n{\n    return gameInstance;\n}\n\nfunction set (game: Game | null)\n{\n    gameInstance = game;\n}\n\nexport default {\n    get,\n    set\n}\n","import ISprite from './ISprite';\nimport Frame from '../../textures/Frame';\n\nexport default function SetFrame (key?: string | number | Frame, ...sprite: ISprite[])\n{\n    sprite.forEach(entity => {\n\n        let frame: Frame = entity.texture.get(key);\n\n        if (frame === entity.frame)\n        {\n            return;\n        }\n    \n        entity.frame = frame;\n    \n        entity.setSize(frame.sourceSizeWidth, frame.sourceSizeHeight);\n        entity.setBounds(entity.x, entity.y, entity.width, entity.height);\n    \n        if (frame.pivot)\n        {\n            entity.setOrigin(frame.pivot.x, frame.pivot.y);\n        }\n    \n        let data = entity.vertexData;\n    \n        //  This rarely changes, so we'll set it here, rather than every game step:\n    \n        data[2] = frame.u0;\n        data[3] = frame.v0;\n    \n        data[8] = frame.u0;\n        data[9] = frame.v1;\n    \n        data[14] = frame.u1;\n        data[15] = frame.v1;\n    \n        data[20] = frame.u1;\n        data[21] = frame.v0;\n    \n        entity.setDirtyRender();\n    \n        entity.hasTexture = true;\n\n    });\n}\n","import ISprite from './ISprite';\nimport Texture from '../../textures/Texture';\nimport Frame from '../../textures/Frame';\nimport GameInstance from '../../GameInstance';\nimport SetFrame from './SetFrame';\n\nexport default function SetTexture (key: string | Texture, frame: string | number | Frame, ...sprite: ISprite[])\n{\n    sprite.forEach(entity => {\n\n        if (!key)\n        {\n            return;\n        }\n    \n        if (key instanceof Texture)\n        {\n            entity.texture = key;\n        }\n        else\n        {\n            entity.texture = GameInstance.get().textures.get(key);\n        }\n    \n        if (!entity.texture)\n        {\n            console.warn('Invalid Texture key: ' + key);\n        }\n        else\n        {\n            if (!entity.texture.glTexture)\n            {\n                entity.texture.createGL();\n            }\n\n            SetFrame(frame, entity);\n        }\n\n    });\n}\n","import Container from '../container/Container';\nimport Texture from '../../textures/Texture';\nimport Frame from '../../textures/Frame';\nimport IContainer from '../container/IContainer';\nimport Rectangle from '../../geom/rectangle/Rectangle';\nimport SetTexture from './SetTexture';\nimport SetFrame from './SetFrame';\n\nexport default class Sprite extends Container\n{\n    texture: Texture;\n    frame: Frame;\n    hasTexture: boolean = false;\n\n    vertexData: Float32Array;\n    vertexColor: Uint32Array;\n\n    vertexAlpha: Float32Array;\n    vertexTint: Uint32Array;\n\n    private _tint: number = 0xffffff;\n    private _prevTextureID: number = -1;\n\n    constructor (x: number, y: number, texture: string | Texture, frame?: string | number)\n    {\n        super(x, y);\n\n        this.vertexData = new Float32Array(24).fill(0);\n        this.vertexColor = new Uint32Array(4).fill(4294967295);\n\n        this.vertexAlpha = new Float32Array(4).fill(1);\n        this.vertexTint = new Uint32Array(4).fill(0xffffff);\n\n        this.type = 'Sprite';\n        this.setTexture(texture, frame);\n        this.setBounds(x, y, this.width, this.height);\n    }\n\n    getBounds (includeChildren: boolean = false): Rectangle\n    {\n        if (this.dirtyRender)\n        {\n            this.updateVertices();\n        }\n\n        super.getBounds(includeChildren);\n\n        return this.bounds;\n    }\n\n    setTexture (key: string | Texture, frame?: string | number)\n    {\n        SetTexture(key, frame, this);\n\n        return this;\n    }\n\n    setFrame (key?: string | number | Frame)\n    {\n        SetFrame(key, this);\n\n        return this;\n    }\n\n    isRenderable (): boolean\n    {\n        return (this.visible && this.willRender && this.hasTexture && this.alpha > 0);\n    }\n\n    updateVertices ()\n    {\n        const data = this.vertexData;\n\n        this.dirtyRender = false;\n\n        const frame = this.frame;\n        const originX = this.originX;\n        const originY = this.originY;\n\n        let w0: number;\n        let w1: number;\n        let h0: number;\n        let h1: number;\n\n        const [ a, b, c, d, tx, ty ] = this.worldTransform;\n\n        if (frame.trimmed)\n        {\n            w1 = frame.spriteSourceSizeX - (originX * frame.sourceSizeWidth);\n            w0 = w1 + frame.spriteSourceSizeWidth;\n\n            h1 = frame.spriteSourceSizeY - (originY * frame.sourceSizeHeight);\n            h0 = h1 + frame.spriteSourceSizeHeight;\n        }\n        else\n        {\n            w1 = -originX * frame.sourceSizeWidth;\n            w0 = w1 + frame.sourceSizeWidth;\n\n            h1 = -originY * frame.sourceSizeHeight;\n            h0 = h1 + frame.sourceSizeHeight;\n        }\n\n        const x0 = (w1 * a) + (h1 * c) + tx;\n        const y0 = (w1 * b) + (h1 * d) + ty;\n\n        const x1 = (w1 * a) + (h0 * c) + tx;\n        const y1 = (w1 * b) + (h0 * d) + ty;\n\n        const x2 = (w0 * a) + (h0 * c) + tx;\n        const y2 = (w0 * b) + (h0 * d) + ty;\n\n        const x3 = (w0 * a) + (h1 * c) + tx;\n        const y3 = (w0 * b) + (h1 * d) + ty;\n\n        //  top left\n        data[0] = x0;\n        data[1] = y0;\n\n        //  bottom left\n        data[6] = x1;\n        data[7] = y1;\n\n        //  bottom right\n        data[12] = x2;\n        data[13] = y2;\n\n        //  top right\n        data[18] = x3;\n        data[19] = y3;\n\n        const bounds = this.bounds;\n\n        bounds.x = Math.min(x0, x1, x2, x3);\n        bounds.y = Math.min(y0, y1, y2, y3);\n        bounds.right = Math.max(x0, x1, x2, x3);\n        bounds.bottom = Math.max(y0, y1, y2, y3);\n    }\n\n    uploadBuffers (F32: Float32Array, U32: Uint32Array, offset: number, setTexture: boolean = true)\n    {\n        //  Skip all of this if not dirty\n        if (this.dirtyRender)\n        {\n            this.updateVertices();\n        }\n\n        const data = this.vertexData;\n        const textureIndex = this.texture.glIndex;\n\n        //  Do we have a different texture ID?\n        if (setTexture && textureIndex !== this._prevTextureID)\n        {\n            this._prevTextureID = textureIndex;\n\n            data[4] = textureIndex;\n            data[10] = textureIndex;\n            data[16] = textureIndex;\n            data[22] = textureIndex;\n        }\n\n        //  Copy the data to the array buffer\n        F32.set(data, offset);\n\n        const color = this.vertexColor;\n\n        //  Copy the vertex colors to the Uint32 view (as the data copy above overwrites them)\n        U32[offset + 5] = color[0];\n        U32[offset + 11] = color[2];\n        U32[offset + 17] = color[3];\n        U32[offset + 23] = color[1];\n    }\n\n    destroy (reparentChildren?: IContainer)\n    {\n        super.destroy(reparentChildren);\n\n        this.texture = null;\n        this.frame = null;\n        this.hasTexture = false;\n        this.vertexData = null;\n        this.vertexColor = null;\n        this.vertexAlpha = null;\n        this.vertexTint = null;\n    }\n\n    get tint (): number\n    {\n        return this._tint;\n    }\n\n    set tint (value: number)\n    {\n        this._tint = value;\n\n        // this.setTint(value);\n    }\n}\n\n/*\n    vertexData array structure:\n\n    0 = topLeft.x\n    1 = topLeft.y\n    2 = frame.u0\n    3 = frame.v0\n    4 = textureIndex\n    5 = topLeft.packedColor\n\n    6 = bottomLeft.x\n    7 = bottomLeft.y\n    8 = frame.u0\n    9 = frame.v1\n    10 = textureIndex\n    11 = bottomLeft.packedColor\n\n    12 = bottomRight.x\n    13 = bottomRight.y\n    14 = frame.u1\n    15 = frame.v1\n    16 = textureIndex\n    17 = bottomRight.packedColor\n\n    18 = topRight.x\n    19 = topRight.y\n    20 = frame.u1\n    21 = frame.v0\n    22 = textureIndex\n    23 = topRight.packedColor\n*/\n","import Sprite from '../sprite/Sprite';\nimport IAnimationData from './IAnimationData';\nimport Frame from '../../textures/Frame';\nimport IContainer from '../container/IContainer';\n\nexport default class AnimatedSprite extends Sprite\n{\n    anims: Map<string, Frame[]>;\n    animData: IAnimationData;\n\n    constructor (x: number, y: number, texture: string, frame?: string | number)\n    {\n        super(x, y, texture, frame);\n\n        this.type = 'AnimatedSprite';\n\n        this.anims = new Map();\n    \n        //  Holds all the data for the current animation only\n        this.animData = {\n            currentAnim: '',\n            currentFrames: [],\n            frameIndex: 0,\n            animSpeed: 0,\n            nextFrameTime: 0,\n            repeatCount: 0,\n            isPlaying: false,\n            yoyo: false,\n            pendingStart: false,\n            playingForward: true,\n            delay: 0,\n            repeatDelay: 0,\n            onStart: null,\n            onRepeat: null,\n            onComplete: null\n        };\n    }\n\n    private stop ()\n    {\n        const data = this.animData;\n\n        data.isPlaying = false;\n        data.currentAnim = '';\n\n        if (data.onComplete)\n        {\n            data.onComplete(this, data.currentAnim);\n        }\n\n        return this;\n    }\n\n    nextFrame ()\n    {\n        const data = this.animData;\n\n        data.frameIndex++;\n\n        //  There are no more frames, do we yoyo or repeat or end?\n        if (data.frameIndex === data.currentFrames.length)\n        {\n            if (data.yoyo)\n            {\n                data.frameIndex--;\n                data.playingForward = false;\n            }\n            else if (data.repeatCount === -1 || data.repeatCount > 0)\n            {\n                data.frameIndex = 0;\n\n                if (data.repeatCount !== -1)\n                {\n                    data.repeatCount--;\n                }\n\n                if (data.onRepeat)\n                {\n                    data.onRepeat(this, data.currentAnim);\n                }\n\n                data.nextFrameTime += data.repeatDelay;\n            }\n            else\n            {\n                data.frameIndex--;\n\n                return this.stop();\n            }\n        }\n\n        this.setFrame(data.currentFrames[data.frameIndex]);\n\n        data.nextFrameTime += data.animSpeed;\n\n        return this;\n    }\n\n    prevFrame ()\n    {\n        const data = this.animData;\n\n        data.frameIndex--;\n\n        //  There are no more frames, do we repeat or end?\n        if (data.frameIndex === -1)\n        {\n            if (data.repeatCount === -1 || data.repeatCount > 0)\n            {\n                data.frameIndex = 0;\n                data.playingForward = true;\n\n                if (data.repeatCount !== -1)\n                {\n                    data.repeatCount--;\n                }\n\n                if (data.onRepeat)\n                {\n                    data.onRepeat(this, data.currentAnim);\n                }\n\n                data.nextFrameTime += data.repeatDelay;\n            }\n            else\n            {\n                data.frameIndex = 0;\n\n                return this.stop();\n            }\n        }\n\n        this.setFrame(data.currentFrames[data.frameIndex]);\n\n        data.nextFrameTime += data.animSpeed;\n\n        return this;\n    }\n\n    update (delta: number, now: number)\n    {\n        super.update(delta, now);\n\n        const data = this.animData;\n\n        if (!data.isPlaying)\n        {\n            return;\n        }\n\n        data.nextFrameTime -= delta * 1000;\n        \n        //  Clamp to zero, otherwise a huge delta could cause animation playback issues\n        data.nextFrameTime = Math.max(data.nextFrameTime, 0);\n\n        //  It's time for a new frame\n        if (data.nextFrameTime === 0)\n        {\n            //  Is this the start of our animation?\n            if (data.pendingStart)\n            {\n                if (data.onStart)\n                {\n                    data.onStart(this, data.currentAnim);\n                }\n\n                data.pendingStart = false;\n                data.nextFrameTime = data.animSpeed;\n            }\n            else if (data.playingForward)\n            {\n                this.nextFrame();\n            }\n            else\n            {\n                this.prevFrame();\n            }\n        }\n    }\n\n    get isPlaying (): boolean\n    {\n        return this.animData.isPlaying;\n    }\n\n    get isPlayingForward (): boolean\n    {\n        return (this.animData.isPlaying && this.animData.playingForward);\n    }\n\n    get currentAnimation (): string\n    {\n        return this.animData.currentAnim;\n    }\n\n    destroy (reparentChildren?: IContainer)\n    {\n        super.destroy(reparentChildren);\n\n        this.anims.clear();\n        this.animData = null;\n    }\n}\n","import IAnimatedSprite from './IAnimatedSprite';\n\nexport default function ClearAnimations (...sprite: IAnimatedSprite[])\n{\n    sprite.forEach(entity => {\n\n        entity.anims.clear();\n\n    });\n}\n","import IAnimationPlayConfig from './IAnimationPlayConfig';\nimport IAnimatedSprite from './IAnimatedSprite';\n\nexport default function Play (key: string, config: IAnimationPlayConfig = {}, ...sprite: IAnimatedSprite[])\n{\n    const {\n        speed = 24,\n        repeat = 0,\n        yoyo = false,\n        startFrame = 0,\n        delay = 0,\n        repeatDelay = 0,\n        onStart = null,\n        onRepeat = null,\n        onComplete = null,\n        forceRestart = false\n    } = config;\n\n    sprite.forEach(entity => {\n\n        const data = entity.animData;\n\n        if (data.isPlaying)\n        {\n            if (data.currentAnim !== key)\n            {\n                //  Stop\n                data.isPlaying = false;\n                data.currentAnim = '';\n            \n                if (data.onComplete)\n                {\n                    data.onComplete(entity, data.currentAnim);\n                }\n            }\n            else if (!forceRestart)\n            {\n                //  This animation is already playing? Just return then.\n                return;\n            }\n        }\n    \n        if (entity.anims.has(key))\n        {\n            data.currentFrames = entity.anims.get(key);\n            data.currentAnim = key;\n            data.frameIndex = startFrame;\n            data.animSpeed = 1000 / speed;\n            data.nextFrameTime = data.animSpeed + delay;\n            data.isPlaying = true;\n            data.playingForward = true;\n            data.yoyo = yoyo;\n            data.repeatCount = repeat;\n            data.delay = delay;\n            data.repeatDelay = repeatDelay;\n            data.onStart = onStart;\n            data.onRepeat = onRepeat;\n            data.onComplete = onComplete;\n    \n            //  If there is no start delay, we set the first frame immediately\n            if (delay === 0)\n            {\n                entity.setFrame(data.currentFrames[data.frameIndex]);\n    \n                if (onStart)\n                {\n                    onStart(entity, key);\n                }\n            }\n            else\n            {\n                data.pendingStart = true;\n            }\n        }\n\n    });\n}\n","import IAnimatedSprite from './IAnimatedSprite';\n\nexport default function RemoveAnimation (key: string, ...sprite: IAnimatedSprite[])\n{\n    sprite.forEach(entity => {\n\n        entity.anims.delete(key);\n\n    });\n}\n","import IAnimatedSprite from './IAnimatedSprite';\n\nexport default function Stop (...sprite: IAnimatedSprite[])\n{\n    sprite.forEach(entity => {\n\n        const data = entity.animData;\n\n        data.isPlaying = false;\n        data.currentAnim = '';\n    \n        if (data.onComplete)\n        {\n            data.onComplete(entity, data.currentAnim);\n        }\n    \n    });\n}\n","import IGameObject from '../gameobject/IGameObject';\nimport IParent from './IParent';\n\nexport default function RemoveChild (parent: IParent, ...child: IGameObject[])\n{\n    const children = parent.children;\n\n    child.forEach(entity => {\n\n        let index: number = children.indexOf(entity);\n\n        if (index > -1)\n        {\n            children.splice(index, 1);\n\n            entity.parent = null;\n        }\n\n    });\n}\n","import IGameObject from '../gameobject/IGameObject';\nimport IParent from './IParent';\nimport RemoveChild from './RemoveChild';\n\nexport default function SetParent (parent: IParent, ...child: IGameObject[])\n{\n    child.forEach(entity => {\n\n        if (entity.parent)\n        {\n            RemoveChild(entity.parent, entity);\n        }\n\n        entity.scene = parent.scene;\n        entity.parent = parent;\n\n    });\n}\n","import IGameObject from '../gameobject/IGameObject';\nimport IParent from './IParent';\nimport SetParent from './SetParent';\n\nexport default function AddChild (parent: IParent, ...child: IGameObject[])\n{\n    child.forEach(entity => {\n\n        SetParent(parent, entity);\n\n        parent.children.push(entity);\n\n        entity.updateTransform();\n\n    });\n}\n","import IGameObject from '../gameobject/IGameObject';\nimport IParent from './IParent';\nimport SetParent from './SetParent';\n\nexport default function AddChildAt (parent: IParent, index: number, ...child: IGameObject[])\n{\n    const children = parent.children;\n\n    if (index >= 0 && index <= children.length)\n    {\n        child.reverse().forEach(entity => {\n\n            SetParent(parent, entity);\n\n            children.splice(index, 0, entity);\n\n            entity.updateTransform();\n    \n        });\n    }\n}\n","import IParent from './IParent';\nimport IGameObject from '../gameobject/IGameObject';\n\nexport default function RemoveChildren (parent: IParent, beginIndex: number = 0, endIndex?: number): IGameObject[]\n{\n    const children = parent.children;\n\n    if (endIndex === undefined)\n    {\n        endIndex = children.length;\n    }\n\n    const range = endIndex - beginIndex;\n\n    if (range > 0 && range <= endIndex)\n    {\n        const removed = children.splice(beginIndex, range);\n\n        removed.forEach(child => {\n\n            child.parent = null;\n\n        });\n\n        return removed;\n    }\n    else\n    {\n        return [];\n    }\n}\n","import IParent from './IParent';\nimport RemoveChildren from './RemoveChildren';\n\nexport default function DestroyChildren (parent: IParent, beginIndex: number = 0, endIndex?: number)\n{\n    const removed = RemoveChildren(parent, beginIndex, endIndex);\n\n    removed.forEach(child => {\n\n        child.destroy();\n\n    });\n}\n","import IParent from './IParent';\nimport IGameObject from '../gameobject/IGameObject';\n\nexport default function GetChildAt (parent: IParent, index: number): IGameObject\n{\n    const children = parent.children;\n\n    if (index < 0 || index > children.length)\n    {\n        throw new Error('Index out of bounds: ' + index);\n    }\n\n    return children[index];\n}\n","import IParent from './IParent';\nimport IGameObject from '../gameobject/IGameObject';\n\nexport default function GetChildIndex (parent: IParent, child: IGameObject): number\n{\n    return parent.children.indexOf(child);\n}\n","import IParent from './IParent';\nimport GetChildAt from './GetChildAt';\nimport IGameObject from '../gameobject/IGameObject';\n\nexport default function RemoveChildAt (parent: IParent, ...index: number[]): IGameObject[]\n{\n    const children = parent.children;\n    const removed: IGameObject[] = [];\n    \n    //  Sort into numeric order\n    index.sort((a, b) => a - b);\n\n    //  Work through the array in reverse\n    index.reverse().forEach(entity => {\n\n        let child = GetChildAt(parent, entity);\n\n        if (child)\n        {\n            children.splice(entity, 1);\n\n            child.parent = null;\n\n            removed.push(child);\n        }\n\n    });\n\n    return removed;\n}\n","import IParent from './IParent';\nimport IGameObject from '../gameobject/IGameObject';\nimport RemoveChildren from './RemoveChildren';\nimport SetParent from './SetParent';\n\nexport default function ReparentChildren (parent: IParent, newParent: IParent, beginIndex: number = 0, endIndex?: number): IGameObject[]\n{\n    const moved = RemoveChildren(parent, beginIndex, endIndex);\n\n    moved.forEach(child => {\n\n        SetParent(newParent, child);\n\n    });\n\n    return moved;\n}\n","import IGameObject from '../gameobject/IGameObject';\nimport GetChildIndex from './GetChildIndex';\n\nexport default function SwapChildren (child1: IGameObject, child2: IGameObject)\n{\n    if (child1.parent === child2.parent)\n    {\n        const children = child1.parent.children;\n\n        const index1 = GetChildIndex(child1.parent, child1);\n        const index2 = GetChildIndex(child2.parent, child2);\n\n        if (index1 !== index2)\n        {\n            children[index1] = child2;\n            children[index2] = child1;\n        }\n    }\n}\n","import IGameObject from './IGameObject';\n\nexport default function SetBounds (x: number, y: number, width: number, height: number, ...child: IGameObject[])\n{\n    child.forEach(entity => {\n\n        entity.bounds.set(x, y, width, height);\n\n    });\n}\n","import IGameObject from './IGameObject';\n\nexport default function SetName (name: string, ...child: IGameObject[])\n{\n    child.forEach(entity => {\n\n        entity.name = name;\n\n    });\n}\n","import IGameObject from './IGameObject';\nimport IBaseScene from '../../scenes/IBaseScene';\n\nexport default function SetScene (scene: IBaseScene, ...child: IGameObject[])\n{\n    child.forEach(entity => {\n\n        entity.scene = scene;\n\n    });\n}\n","import IGameObject from './IGameObject';\n\nexport default function SetType (type: string, ...child: IGameObject[])\n{\n    child.forEach(entity => {\n\n        entity.type = type;\n\n    });\n}\n","import IGameObject from './IGameObject';\n\nexport default function SetVisible (visible: boolean, ...child: IGameObject[])\n{\n    child.forEach(entity => {\n\n        entity.visible = visible;\n\n    });\n}\n","export default function PackColor (rgb: number, alpha: number): number\n{\n    let ua = ((alpha * 255) | 0) & 0xFF;\n\n    return ((ua << 24) | rgb) >>> 0;\n}\n","import ISprite from '../../gameobjects/sprite/ISprite';\nimport PackColor from './PackColor';\n\nexport default function PackColors (sprite: ISprite)\n{\n    const alpha = sprite.vertexAlpha;\n    const tint = sprite.vertexTint;\n    const color = sprite.vertexColor;\n\n    //  In lots of cases, this *never* changes, so cache it here:\n    color[0] = PackColor(tint[0], alpha[0]);\n    color[1] = PackColor(tint[1], alpha[1]);\n    color[2] = PackColor(tint[2], alpha[2]);\n    color[3] = PackColor(tint[3], alpha[3]);\n\n    return sprite.setDirtyRender();\n}\n","import PackColors from '../../renderer/webgl1/PackColors';\nimport ISprite from './ISprite';\n\nexport default function SetQuadAlpha (topLeft: number, topRight: number, bottomLeft: number, bottomRight: number, ...sprite: ISprite[])\n{\n    sprite.forEach(entity => {\n\n        let alpha = entity.vertexAlpha;\n\n        alpha[0] = topLeft;\n        alpha[1] = topRight;\n        alpha[2] = bottomLeft;\n        alpha[3] = bottomRight;\n    \n        PackColors(entity);\n    \n    });\n}\n","import PackColors from '../../renderer/webgl1/PackColors';\nimport ISprite from './ISprite';\n\nexport default function SetQuadTint (topLeft: number, topRight: number, bottomLeft: number, bottomRight: number, ...sprite: ISprite[])\n{\n    sprite.forEach(entity => {\n\n        let tint = entity.vertexTint;\n\n        tint[0] = topLeft;\n        tint[1] = topRight;\n        tint[2] = bottomLeft;\n        tint[3] = bottomRight;\n    \n        PackColors(entity);\n    \n    });\n}\n","import IText from './IText';\n\nexport default function SetBackgroundStyle (style: string | CanvasGradient | CanvasPattern, cornerRadius: number | null, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.backgroundStyle = style;\n\n        if (cornerRadius !== null)\n        {\n            entity.cornerRadius = cornerRadius;\n        }\n\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetCornerRadius (cornerRadius: number, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.cornerRadius = cornerRadius;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetFillStyle (style: string | CanvasGradient | CanvasPattern, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.fillStyle = style;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetFixedSize (width: number, height: number, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.fixedWidth = width;\n        entity.fixedHeight = height;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetFont (font: string, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.font = font;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetLineDash (segments: number[], ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.lineDash = segments;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetLineSpacing (spacing: number, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.lineSpacing = spacing;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetLineWidth (width: number, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.lineWidth = width;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetPadding (left: number, right: number, top: number, bottom: number, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        const padding = entity.padding;\n\n        padding.left = left;\n        padding.right = right;\n        padding.top = top;\n        padding.bottom = bottom;\n\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetStrokeStyle (style: string | CanvasGradient | CanvasPattern, lineWidth: number, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.strokeStyle = style;\n\n        if (lineWidth)\n        {\n            entity.lineWidth = lineWidth;\n        }\n\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetText (value: string | string[], ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.setText(value);\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetTextAlign (align: CanvasTextAlign, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.textAlign = align;\n        entity.updateText();\n\n    });\n}\n","import IText from './IText';\n\nexport default function SetTextBaseline (baseline: CanvasTextBaseline, ...text: IText[])\n{\n    text.forEach(entity => {\n\n        entity.textBaseline = baseline;\n        entity.updateText();\n\n    });\n}\n","export default function CreateCanvas (width: number, height: number): CanvasRenderingContext2D\n{\n    const canvas = document.createElement('canvas');\n\n    canvas.width = width;\n    canvas.height = height;\n\n    return canvas.getContext('2d');\n}\n","import CreateCanvas from '../CreateCanvas';\nimport Texture from '../Texture';\n\nexport default function CanvasTexture (width: number = 32, height: number = 32): Texture\n{\n    const ctx = CreateCanvas(width, height);\n\n    return new Texture(ctx.canvas);\n}\n","import Sprite from '../sprite/Sprite';\nimport CreateGLTexture from '../../renderer/webgl1/CreateGLTexture';\nimport IContainer from '../container/IContainer';\nimport CanvasTexture from '../../textures/types/CanvasTexture';\nimport GameInstance from '../../GameInstance';\n\nexport type VerticalTextAlignment = 'ascent' | 'lineheight';\n\nexport default class Text extends Sprite\n{\n    private _text: string;\n\n    preRenderCallback: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void;\n    wordWrapCallback: (text: string) => string;\n   \n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n    splitRegExp: RegExp = /(?:\\r\\n|\\r|\\n)/;\n    padding = { left: 0, right: 0, top: 0, bottom: 0 };\n    verticalAlign: VerticalTextAlignment = 'ascent';\n    lineSpacing: number = 0;\n    resolution: number;\n    font: string = '16px monospace';\n    fillStyle: string | CanvasGradient | CanvasPattern = '#fff';\n    strokeStyle: string | CanvasGradient | CanvasPattern = '';\n    backgroundStyle: string | CanvasGradient | CanvasPattern = '';\n    cornerRadius: number = 0;\n    textAlign: CanvasTextAlign = 'left';\n    textBaseline: CanvasTextBaseline = 'alphabetic';\n    lineWidth: number = 0;\n    lineDash: number[] = [];\n    fixedWidth: number;\n    fixedHeight: number;\n    antialias: boolean = false;\n\n    constructor (x: number, y: number, text: string | string[] = '', font?: string, fillStyle?: string | CanvasGradient | CanvasPattern)\n    {\n        super(x, y, CanvasTexture());\n\n        this.type = 'Text';\n\n        const game = GameInstance.get();\n\n        this.resolution = game.renderer.resolution;\n\n        this.canvas = this.texture.image as HTMLCanvasElement;\n        this.context = this.canvas.getContext('2d');\n\n        this.texture.glTexture = CreateGLTexture(this.canvas, 32, 32, false, this.antialias);\n\n        if (font)\n        {\n            this.font = font;\n        }\n\n        if (fillStyle)\n        {\n            this.fillStyle = fillStyle;\n        }\n\n        this.setText(text);\n    }\n\n    private syncContext (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D)\n    {\n        if (this.preRenderCallback)\n        {\n            this.preRenderCallback(canvas, ctx);\n        }\n\n        ctx.font = this.font;\n        ctx.textBaseline = this.textBaseline;\n        ctx.textAlign = this.textAlign;\n        ctx.fillStyle = this.fillStyle;\n        ctx.strokeStyle = this.strokeStyle;\n        ctx.lineWidth = this.lineWidth;\n        ctx.lineCap = 'round';\n        ctx.lineJoin = 'round';\n        ctx.setLineDash(this.lineDash);\n        ctx.imageSmoothingEnabled = this.antialias;\n\n        //  TODO Shadows\n    }\n\n    updateText (): this\n    {\n        const canvas = this.canvas;\n        const ctx = this.context;\n        const resolution = this.resolution;\n\n        let lines = this._text.split(this.splitRegExp);\n\n        const padding = this.padding;\n        const fillStyle = this.fillStyle;\n        const strokeStyle = this.strokeStyle;\n        const strokeWidth = this.lineWidth;\n        const lineSpacing = this.lineSpacing;\n        const strokeWidthHalf = (strokeWidth > 0) ? strokeWidth / 2 : 0;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        this.syncContext(canvas, ctx);\n\n        //  Use specifically for measureText\n        ctx.textAlign = 'start';\n\n        //  Measure each line and add them together (note: measure text excludes stroke style!)\n\n        let maxWidth: number = 0;\n        let maxHeight: number = 0;\n        let y: number = 0;\n\n        const lineMetrics = [];\n\n        const vAlignAscent: boolean = (this.verticalAlign === 'ascent');\n\n        //  Work out an average line height for this font\n        let metrics = ctx.measureText('|MÉq');\n\n        const averageLineHeight: number = Math.ceil(Math.abs(metrics.actualBoundingBoxAscent) + Math.abs(metrics.actualBoundingBoxDescent)) + strokeWidth;\n\n        for (let i: number = 0; i < lines.length; i++)\n        {\n            let metrics = ctx.measureText(lines[i]);\n\n            let left = metrics.actualBoundingBoxLeft;\n            let right = metrics.actualBoundingBoxRight;\n            let ascent = metrics.actualBoundingBoxAscent;\n            let descent = metrics.actualBoundingBoxDescent;\n\n            //  Zero for a carriage-return, but we still need to add in the space\n            if ((!ascent && !descent) || lines[i] === '')\n            {\n                ascent = averageLineHeight;\n                descent = 0;\n            }\n\n            let lineWidth = Math.ceil(Math.abs(left) + Math.abs(right)) + strokeWidth;\n            let lineHeight = Math.ceil(Math.abs(ascent) + Math.abs(descent)) + strokeWidth;\n\n            if (vAlignAscent)\n            {\n                y += ascent + strokeWidthHalf;\n\n                if (i > 0)\n                {\n                    y += lineSpacing + strokeWidthHalf;\n                }\n\n                maxHeight = y + descent + strokeWidthHalf;\n            }\n            else\n            {\n                y = maxHeight + ((lineHeight - descent) - strokeWidthHalf);\n\n                maxHeight += lineHeight;\n\n                if (i < lines.length - 1)\n                {\n                    maxHeight += lineSpacing;\n                }\n            }\n\n            maxWidth = Math.max(maxWidth, lineWidth);\n\n            lineMetrics.push({ lineWidth, lineHeight, ascent, descent, left, right, y });\n        }\n\n        //  Account for lineSpacing + padding\n        maxWidth += padding.left + padding.right;\n        maxHeight += padding.top + padding.bottom;\n\n        const displayWidth = (this.fixedWidth) ? this.fixedWidth : maxWidth;\n        const displayHeight = (this.fixedHeight) ? this.fixedHeight : maxHeight;\n\n        const canvasWidth = Math.ceil(displayWidth * resolution);\n        const canvasHeight = Math.ceil(displayHeight * resolution);\n\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight)\n        {\n            canvas.width = canvasWidth;\n            canvas.height = canvasHeight;\n    \n            this.texture.setSize(displayWidth, displayHeight);\n            this.setSize(displayWidth, displayHeight);\n        }\n\n        ctx.save();\n        ctx.scale(resolution, resolution);\n\n        this.syncContext(canvas, ctx);\n\n        const backgroundStyle = this.backgroundStyle;\n\n        if (backgroundStyle)\n        {\n            ctx.save();\n\n            ctx.fillStyle = backgroundStyle;\n            ctx.strokeStyle = backgroundStyle;\n\n            const cornerRadius = this.cornerRadius;\n            const halfRadius = (cornerRadius > 0) ? cornerRadius / 2 : 0;\n\n            if (cornerRadius)\n            {\n                ctx.lineWidth = cornerRadius;\n                \n                ctx.strokeRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n            }\n\n            ctx.fillRect(halfRadius, halfRadius, displayWidth - cornerRadius, displayHeight - cornerRadius);\n\n            ctx.restore();\n        }\n\n        //  Text Alignment\n        const textAlign = this.textAlign;\n        const isCenter: boolean = (textAlign === 'center');\n        const isRight: boolean = (textAlign === 'right' || textAlign === 'end');\n\n        const yOffset = ((displayHeight - maxHeight) / 2) + padding.top;\n\n        for (let i: number = 0; i < lines.length; i++)\n        {\n            let line = lines[i];\n            let metrics = lineMetrics[i];\n\n            let tx = padding.left + metrics.left + strokeWidthHalf;\n            let ty = yOffset + metrics.y;\n\n            if (isCenter)\n            {\n                tx = displayWidth / 2;\n            }\n            else if (isRight)\n            {\n                tx = displayWidth - strokeWidthHalf;\n            }\n\n            if (strokeStyle)\n            {\n                ctx.strokeText(line, tx, ty);\n            }\n\n            if (fillStyle)\n            {\n                ctx.fillText(line, tx, ty);\n            }\n        }\n\n        ctx.restore();\n\n        this.texture.updateGL();\n\n        this.setDirtyRender(true);\n\n        return this;\n    }\n\n    get text (): string | string[]\n    {\n        return this._text;\n    }\n\n    set text (value: string | string[])\n    {\n        this.setText(value);\n    }\n\n    setText (value: string | string[] = ''): this\n    {\n        if (Array.isArray(value))\n        {\n            value = value.join('\\n');\n        }\n\n        if (value !== this._text)\n        {\n            this._text = value.toString();\n\n            this.updateText();\n        }\n\n        return this;\n    }\n\n    destroy (reparentChildren?: IContainer)\n    {\n        this.texture.destroy();\n\n        this.fillStyle = null;\n        this.strokeStyle = null;\n        this.backgroundStyle = null;\n\n        this.canvas = null;\n        this.context = null;\n\n        super.destroy(reparentChildren);\n    }\n}\n","import ITransformGameObject from './ITransformGameObject';\nimport CONST from './const';\n\nexport default function SetOrigin (originX: number, originY: number, ...child: ITransformGameObject[])\n{\n    child.forEach(entity => {\n\n        let data = entity.transformData;\n\n        data[CONST.ORIGIN_X] = originX;\n        data[CONST.ORIGIN_Y] = originY;\n    });\n}\n","import ITransformGameObject from './ITransformGameObject';\nimport CONST from './const';\n\nexport default function SetPosition (x: number, y: number, ...child: ITransformGameObject[])\n{\n    child.forEach(entity => {\n\n        let data = entity.transformData;\n\n        data[CONST.POSITION_X] = x;\n        data[CONST.POSITION_Y] = y;\n\n        entity.updateTransform();\n\n    });\n}\n","import ITransformGameObject from './ITransformGameObject';\nimport CONST from './const';\n\nexport default function SetRotation (rotation: number, ...child: ITransformGameObject[])\n{\n    child.forEach(entity => {\n\n        let data = entity.transformData;\n\n        if (rotation !== data[CONST.ROTATION])\n        {\n            data[CONST.ROTATION] = rotation;\n\n            entity.updateCache();\n        }\n\n    });\n}\n","import ITransformGameObject from './ITransformGameObject';\nimport CONST from './const';\n\nexport default function SetScale (scaleX: number, scaleY: number, ...child: ITransformGameObject[])\n{\n    child.forEach(entity => {\n\n        let data = entity.transformData;\n\n        data[CONST.SCALE_X] = scaleX;\n        data[CONST.SCALE_Y] = scaleY;\n\n        entity.updateTransform();\n\n    });\n}\n","import ITransformGameObject from './ITransformGameObject';\n\nexport default function SetSize (width: number, height: number, ...child: ITransformGameObject[])\n{\n    child.forEach(entity => {\n\n        entity.width = width;\n        entity.height = height;\n\n    });\n}\n","import ITransformGameObject from './ITransformGameObject';\nimport CONST from './const';\n\nexport default function SetSkew (skewX: number, skewY: number, ...child: ITransformGameObject[])\n{\n    child.forEach(entity => {\n\n        let data = entity.transformData;\n\n        data[CONST.SKEW_X] = skewX;\n        data[CONST.SKEW_Y] = skewY;\n\n        entity.updateCache();\n\n    });\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Find the angle of a segment from (x1, y1) -> (x2, y2).\n *\n * @function Phaser.Math.Angle.Between\n * @since 3.0.0\n *\n * @param {number} x1 - The x coordinate of the first point.\n * @param {number} y1 - The y coordinate of the first point.\n * @param {number} x2 - The x coordinate of the second point.\n * @param {number} y2 - The y coordinate of the second point.\n *\n * @return {number} The angle in radians.\n */\nexport default function Between (x1: number, y1: number, x2: number, y2: number): number\n{\n    return Math.atan2(y2 - y1, x2 - x1);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport IVec2 from '../vec2/IVec2';\n\n/**\n * Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y).\n *\n * Calculates the angle of the vector from the first point to the second point.\n *\n * @function Phaser.Math.Angle.BetweenPoints\n * @since 3.0.0\n *\n * @param {IVec2} point1 - The first point.\n * @param {IVec2} point2 - The second point.\n *\n * @return {number} The angle in radians.\n */\nexport default function BetweenPoints (point1: IVec2, point2: IVec2): number\n{\n    return Math.atan2(point2.y - point1.y, point2.x - point1.x);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport IVec2 from '../vec2/IVec2';\n\n/**\n * Find the angle of a segment from (point1.x, point1.y) -> (point2.x, point2.y).\n *\n * The difference between this method and {@link Phaser.Math.Angle.BetweenPoints} is that this assumes the y coordinate\n * travels down the screen.\n *\n * @function Phaser.Math.Angle.BetweenPointsY\n * @since 3.0.0\n *\n * @param {IVec2} point1 - The first point.\n * @param {IVec2} point2 - The second point.\n *\n * @return {number} The angle in radians.\n */\nexport default function BetweenPointsY (point1: IVec2, point2: IVec2): number\n{\n    return Math.atan2(point2.x - point1.x, point2.y - point1.y);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Find the angle of a segment from (x1, y1) -> (x2, y2).\n *\n * The difference between this method and {@link Phaser.Math.Angle.Between} is that this assumes the y coordinate\n * travels down the screen.\n *\n * @function Phaser.Math.Angle.BetweenY\n * @since 3.0.0\n *\n * @param {number} x1 - The x coordinate of the first point.\n * @param {number} y1 - The y coordinate of the first point.\n * @param {number} x2 - The x coordinate of the second point.\n * @param {number} y2 - The y coordinate of the second point.\n *\n * @return {number} The angle in radians.\n */\nexport default function BetweenY (x1: number, y1: number, x2: number, y2: number): number\n{\n    return Math.atan2(x2 - x1, y2 - y1);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nexport default {\n\n    /**\n     * The value of PI * 2.\n     * \n     * @name Phaser.Math.PI2\n     * @type {number}\n     * @since 3.0.0\n     */\n    PI2: Math.PI * 2,\n\n    /**\n     * The value of PI * 0.5.\n     * \n     * @name Phaser.Math.TAU\n     * @type {number}\n     * @since 3.0.0\n     */\n    TAU: Math.PI * 0.5,\n\n    /**\n     * An epsilon value (1.0e-6)\n     * \n     * @name Phaser.Math.EPSILON\n     * @type {number}\n     * @since 3.0.0\n     */\n    EPSILON: 1.0e-6,\n\n    /**\n     * For converting degrees to radians (PI / 180)\n     * \n     * @name Phaser.Math.DEG_TO_RAD\n     * @type {number}\n     * @since 3.0.0\n     */\n    DEG_TO_RAD: Math.PI / 180,\n\n    /**\n     * For converting radians to degrees (180 / PI)\n     * \n     * @name Phaser.Math.RAD_TO_DEG\n     * @type {number}\n     * @since 3.0.0\n     */\n    RAD_TO_DEG: 180 / Math.PI,\n\n    /**\n     * The minimum safe integer this browser supports.\n     * We use a const for backward compatibility with Internet Explorer.\n     * \n     * @name Phaser.Math.MIN_SAFE_INTEGER\n     * @type {number}\n     * @since 3.21.0\n     */\n    MIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER || -9007199254740991,\n\n    /**\n     * The maximum safe integer this browser supports.\n     * We use a const for backward compatibility with Internet Explorer.\n     * \n     * @name Phaser.Math.MAX_SAFE_INTEGER\n     * @type {number}\n     * @since 3.21.0\n     */\n    MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991\n\n};\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport CONST from '../const';\n\n/**\n * Takes an angle in Phasers default clockwise format and converts it so that\n * 0 is North, 90 is West, 180 is South and 270 is East,\n * therefore running counter-clockwise instead of clockwise.\n * \n * You can pass in the angle from a Game Object using:\n * \n * ```javascript\n * var converted = CounterClockwise(gameobject.rotation);\n * ```\n * \n * All values for this function are in radians.\n *\n * @function Phaser.Math.Angle.CounterClockwise\n * @since 3.16.0\n *\n * @param {number} angle - The angle to convert, in radians.\n *\n * @return {number} The converted angle, in radians.\n */\nexport default function CounterClockwise (angle: number): number\n{\n    if (angle > Math.PI)\n    {\n        angle -= CONST.PI2;\n    }\n\n    return Math.abs((((angle + CONST.TAU) % CONST.PI2) - CONST.PI2) % CONST.PI2);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Normalize an angle to the [0, 2pi] range.\n *\n * @function Phaser.Math.Angle.Normalize\n * @since 3.0.0\n *\n * @param {number} angle - The angle to normalize, in radians.\n *\n * @return {number} The normalized angle, in radians.\n */\nexport default function Normalize (angle: number): number\n{\n    angle = angle % (2 * Math.PI);\n\n    if (angle >= 0)\n    {\n        return angle;\n    }\n    else\n    {\n        return angle + 2 * Math.PI;\n    }\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Normalize from './Normalize';\n\n/**\n * Reverse the given angle.\n *\n * @function Phaser.Math.Angle.Reverse\n * @since 3.0.0\n *\n * @param {number} angle - The angle to reverse, in radians.\n *\n * @return {number} The reversed angle, in radians.\n */\nexport default function Reverse (angle: number): number\n{\n    return Normalize(angle + Math.PI);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport MATH_CONST from '../const';\n\n/**\n * Rotates `currentAngle` towards `targetAngle`, taking the shortest rotation distance. The `lerp` argument is the amount to rotate by in this call.\n *\n * @function Phaser.Math.Angle.RotateTo\n * @since 3.0.0\n *\n * @param {number} currentAngle - The current angle, in radians.\n * @param {number} targetAngle - The target angle to rotate to, in radians.\n * @param {number} [lerp=0.05] - The lerp value to add to the current angle.\n *\n * @return {number} The adjusted angle.\n */\nexport default function RotateTo (currentAngle: number, targetAngle: number, lerp: number = 0.05): number\n{\n    if (currentAngle === targetAngle)\n    {\n        return currentAngle;\n    }\n\n    if (Math.abs(targetAngle - currentAngle) <= lerp || Math.abs(targetAngle - currentAngle) >= (MATH_CONST.PI2 - lerp))\n    {\n        currentAngle = targetAngle;\n    }\n    else\n    {\n        if (Math.abs(targetAngle - currentAngle) > Math.PI)\n        {\n            if (targetAngle < currentAngle)\n            {\n                targetAngle += MATH_CONST.PI2;\n            }\n            else\n            {\n                targetAngle -= MATH_CONST.PI2;\n            }\n        }\n\n        if (targetAngle > currentAngle)\n        {\n            currentAngle += lerp;\n        }\n        else if (targetAngle < currentAngle)\n        {\n            currentAngle -= lerp;\n        }\n    }\n\n    return currentAngle;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Gets the shortest angle between `angle1` and `angle2`.\n *\n * Both angles must be in the range -180 to 180, which is the same clamped\n * range that `sprite.angle` uses, so you can pass in two sprite angles to\n * this method and get the shortest angle back between the two of them.\n *\n * The angle returned will be in the same range. If the returned angle is\n * greater than 0 then it's a counter-clockwise rotation, if < 0 then it's\n * a clockwise rotation.\n *\n * TODO: Wrap the angles in this function?\n *\n * @function Phaser.Math.Angle.ShortestBetween\n * @since 3.0.0\n *\n * @param {number} angle1 - The first angle in the range -180 to 180.\n * @param {number} angle2 - The second angle in the range -180 to 180.\n *\n * @return {number} The shortest angle, in degrees. If greater than zero it's a counter-clockwise rotation.\n */\nexport default function ShortestBetween (angle1: number, angle2: number): number\n{\n    const difference = angle2 - angle1;\n\n    if (difference === 0)\n    {\n        return 0;\n    }\n\n    const times = Math.floor((difference - (-180)) / 360);\n\n    return difference - (times * 360);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Wrap the given `value` between `min` and `max.\n *\n * @function Phaser.Math.Wrap\n * @since 3.0.0\n *\n * @param {number} value - The value to wrap.\n * @param {number} min - The minimum value.\n * @param {number} max - The maximum value.\n *\n * @return {number} The wrapped value.\n */\nexport default function Wrap (value: number, min: number, max: number): number\n{\n    const range = max - min;\n\n    return (min + ((((value - min) % range) + range) % range));\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport MathWrap from '../Wrap';\n\n/**\n * Wrap an angle.\n *\n * Wraps the angle to a value in the range of -PI to PI.\n *\n * @function Phaser.Math.Angle.Wrap\n * @since 3.0.0\n *\n * @param {number} angle - The angle to wrap, in radians.\n *\n * @return {number} The wrapped angle, in radians.\n */\nexport default function Wrap (angle: number): number\n{\n    return MathWrap(angle, -Math.PI, Math.PI);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Wrap from '../Wrap';\n\n/**\n * Wrap an angle in degrees.\n *\n * Wraps the angle to a value in the range of -180 to 180.\n *\n * @function Phaser.Math.Angle.WrapDegrees\n * @since 3.0.0\n *\n * @param {number} angle - The angle to wrap, in degrees.\n *\n * @return {number} The wrapped angle, in degrees.\n */\nexport default function WrapDegrees (angle: number): number\n{\n    return Wrap(angle, -180, 180);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Between from './Between';\nimport BetweenPoints from './BetweenPoints';\nimport BetweenPointsY from './BetweenPointsY';\nimport BetweenY from './BetweenY';\nimport CounterClockwise from './CounterClockwise';\nimport Normalize from './Normalize';\nimport Reverse from './Reverse';\nimport RotateTo from './RotateTo';\nimport ShortestBetween from './ShortestBetween';\nimport Wrap from './Wrap';\nimport WrapDegrees from './WrapDegrees';\n\n/**\n * @namespace Phaser.Math.Angle\n */\n\nexport {\n    Between,\n    BetweenPoints,\n    BetweenPointsY,\n    BetweenY,\n    CounterClockwise,\n    Normalize,\n    Reverse,\n    RotateTo,\n    ShortestBetween,\n    Wrap,\n    WrapDegrees\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the distance between two sets of coordinates (points).\n *\n * @function Phaser.Math.Distance.Between\n * @since 3.0.0\n *\n * @param {number} x1 - The x coordinate of the first point.\n * @param {number} y1 - The y coordinate of the first point.\n * @param {number} x2 - The x coordinate of the second point.\n * @param {number} y2 - The y coordinate of the second point.\n *\n * @return {number} The distance between each point.\n */\nexport default function DistanceBetween (x1: number, y1: number, x2: number, y2: number): number\n{\n    const dx = x1 - x2;\n    const dy = y1 - y2;\n\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/**\n * @author       samme\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport IVec2 from '../vec2/IVec2';\n\n/**\n * Calculate the distance between two points.\n *\n * @function Phaser.Math.Distance.BetweenPoints\n * @since 3.22.0\n *\n * @param {IVec2} a - The first point.\n * @param {IVec2} b - The second point.\n *\n * @return {number} The distance between the points.\n */\nexport default function DistanceBetweenPoints (a: IVec2, b: IVec2): number\n{\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/**\n * @author       samme\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport IVec2 from '../vec2/IVec2';\n\n/**\n * Calculate the squared distance between two points.\n *\n * @function Phaser.Math.Distance.BetweenPointsSquared\n * @since 3.22.0\n *\n * @param {IVec2} a - The first point.\n * @param {IVec2} b - The second point.\n *\n * @return {number} The squared distance between the points.\n */\nexport default function DistanceBetweenPointsSquared (a: IVec2, b: IVec2): number\n{\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n\n    return dx * dx + dy * dy;\n}\n","/**\n * @author       samme\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the Chebyshev distance between two sets of coordinates (points).\n *\n * Chebyshev distance (or chessboard distance) is the maximum of the horizontal and vertical distances.\n * It's the effective distance when movement can be horizontal, vertical, or diagonal.\n *\n * @function Phaser.Math.Distance.Chebyshev\n * @since 3.22.0\n *\n * @param {number} x1 - The x coordinate of the first point.\n * @param {number} y1 - The y coordinate of the first point.\n * @param {number} x2 - The x coordinate of the second point.\n * @param {number} y2 - The y coordinate of the second point.\n *\n * @return {number} The distance between each point.\n */\nexport default function ChebyshevDistance (x1: number, y1: number, x2: number, y2: number): number\n{\n    return Math.max(Math.abs(x1 - x2), Math.abs(y1 - y2));\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the distance between two sets of coordinates (points) to the power of `pow`.\n *\n * @function Phaser.Math.Distance.Power\n * @since 3.0.0\n *\n * @param {number} x1 - The x coordinate of the first point.\n * @param {number} y1 - The y coordinate of the first point.\n * @param {number} x2 - The x coordinate of the second point.\n * @param {number} y2 - The y coordinate of the second point.\n * @param {number} [pow=2] - The exponent.\n *\n * @return {number} The distance between each point.\n */\nexport default function DistancePower (x1: number, y1: number, x2: number, y2: number, pow: number = 2): number\n{\n    return Math.sqrt(Math.pow(x2 - x1, pow) + Math.pow(y2 - y1, pow));\n}\n","/**\n * @author       samme\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the snake distance between two sets of coordinates (points).\n *\n * Snake distance (rectilinear distance, Manhattan distance) is the sum of the horizontal and vertical distances.\n * It's the effective distance when movement is allowed only horizontally or vertically (but not both).\n *\n * @function Phaser.Math.Distance.Snake\n * @since 3.22.0\n *\n * @param {number} x1 - The x coordinate of the first point.\n * @param {number} y1 - The y coordinate of the first point.\n * @param {number} x2 - The x coordinate of the second point.\n * @param {number} y2 - The y coordinate of the second point.\n *\n * @return {number} The distance between each point.\n */\nexport default function SnakeDistance (x1: number, y1: number, x2: number, y2: number): number\n{\n    return Math.abs(x1 - x2) + Math.abs(y1 - y2);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the distance between two sets of coordinates (points), squared.\n *\n * @function Phaser.Math.Distance.Squared\n * @since 3.0.0\n *\n * @param {number} x1 - The x coordinate of the first point.\n * @param {number} y1 - The y coordinate of the first point.\n * @param {number} x2 - The x coordinate of the second point.\n * @param {number} y2 - The y coordinate of the second point.\n *\n * @return {number} The distance between each point, squared.\n */\nexport default function DistanceSquared (x1: number, y1: number, x2: number, y2: number): number\n{\n    const dx = x1 - x2;\n    const dy = y1 - y2;\n\n    return dx * dx + dy * dy;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Between from './DistanceBetween';\nimport BetweenPoints from './DistanceBetweenPoints';\nimport BetweenPointsSquared from './DistanceBetweenPointsSquared';\nimport Chebyshev from './DistanceChebyshev';\nimport Power from './DistancePower';\nimport Snake from './DistanceSnake';\nimport Squared from './DistanceSquared';\n\n/**\n * @namespace Phaser.Math.Distance\n */\n\nexport {\n    Between,\n    BetweenPoints,\n    BetweenPointsSquared,\n    Chebyshev,\n    Power,\n    Snake,\n    Squared\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the fuzzy ceiling of the given value.\n *\n * @function Phaser.Math.Fuzzy.Ceil\n * @since 3.0.0\n *\n * @param {number} value - The value.\n * @param {number} [epsilon=0.0001] - The epsilon.\n *\n * @return {number} The fuzzy ceiling of the value.\n */\nexport default function Ceil (value: number, epsilon: number = 0.0001): number\n{\n    return Math.ceil(value - epsilon);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Check whether the given values are fuzzily equal.\n *\n * Two numbers are fuzzily equal if their difference is less than `epsilon`.\n *\n * @function Phaser.Math.Fuzzy.Equal\n * @since 3.0.0\n *\n * @param {number} a - The first value.\n * @param {number} b - The second value.\n * @param {number} [epsilon=0.0001] - The epsilon.\n *\n * @return {boolean} `true` if the values are fuzzily equal, otherwise `false`.\n */\nexport default function Equal (a: number, b: number, epsilon: number = 0.0001): boolean\n{\n    return Math.abs(a - b) < epsilon;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the fuzzy floor of the given value.\n *\n * @function Phaser.Math.Fuzzy.Floor\n * @since 3.0.0\n *\n * @param {number} value - The value.\n * @param {number} [epsilon=0.0001] - The epsilon.\n *\n * @return {number} The floor of the value.\n */\nexport default function Floor (value: number, epsilon: number = 0.0001): number\n{\n    return Math.floor(value + epsilon);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Check whether `a` is fuzzily greater than `b`.\n *\n * `a` is fuzzily greater than `b` if it is more than `b - epsilon`.\n *\n * @function Phaser.Math.Fuzzy.GreaterThan\n * @since 3.0.0\n *\n * @param {number} a - The first value.\n * @param {number} b - The second value.\n * @param {number} [epsilon=0.0001] - The epsilon.\n *\n * @return {boolean} `true` if `a` is fuzzily greater than than `b`, otherwise `false`.\n */\nexport default function GreaterThan (a: number, b: number, epsilon: number = 0.0001): boolean\n{\n    return a > b - epsilon;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Check whether `a` is fuzzily less than `b`.\n *\n * `a` is fuzzily less than `b` if it is less than `b + epsilon`.\n *\n * @function Phaser.Math.Fuzzy.LessThan\n * @since 3.0.0\n *\n * @param {number} a - The first value.\n * @param {number} b - The second value.\n * @param {number} [epsilon=0.0001] - The epsilon.\n *\n * @return {boolean} `true` if `a` is fuzzily less than `b`, otherwise `false`.\n */\nexport default function LessThan (a: number, b: number, epsilon: number = 0.0001): boolean\n{\n    return a < b + epsilon;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Ceil from './Ceil';\nimport Equal from './Equal';\nimport Floor from './Floor';\nimport GreaterThan from './GreaterThan';\nimport LessThan from './LessThan';\n\n/**\n * @namespace Phaser.Math.Fuzzy\n */\n\nexport {\n    Ceil,\n    Equal,\n    Floor,\n    GreaterThan,\n    LessThan\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculates the factorial of a given number for integer values greater than 0.\n *\n * @function Phaser.Math.Factorial\n * @since 3.0.0\n *\n * @param {number} value - A positive integer to calculate the factorial of.\n *\n * @return {number} The factorial of the given number.\n */\nexport default function Factorial (value: number): number\n{\n    if (value === 0)\n    {\n        return 1;\n    }\n\n    let res = value;\n\n    while (--value)\n    {\n        res *= value;\n    }\n\n    return res;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Factorial from './Factorial';\n\n/**\n * Calculates the Bernstein basis from the three factorial coefficients.\n *\n * @function Phaser.Math.Bernstein\n * @since 3.0.0\n *\n * @param {number} n - The first value.\n * @param {number} i - The second value.\n *\n * @return {number} The Bernstein basis of Factorial(n) / Factorial(i) / Factorial(n - i)\n */\nexport default function Bernstein (n: number, i: number): number\n{\n    return Factorial(n) / Factorial(i) / Factorial(n - i);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Bernstein from '../Bernstein';\n\n/**\n * A bezier interpolation method.\n *\n * @function Phaser.Math.Interpolation.Bezier\n * @since 3.0.0\n *\n * @param {number[]} v - The input array of values to interpolate between.\n * @param {number} k - The percentage of interpolation, between 0 and 1.\n *\n * @return {number} The interpolated value.\n */\nexport default function BezierInterpolation (v: number[], k: number): number\n{\n    let b = 0;\n    const n = v.length - 1;\n\n    for (let i = 0; i <= n; i++)\n    {\n        b += Math.pow(1 - k, n - i) * Math.pow(k, i) * v[i] * Bernstein(n, i);\n    }\n\n    return b;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculates a Catmull-Rom value from the given points, based on an alpha of 0.5.\n *\n * @function Phaser.Math.CatmullRom\n * @since 3.0.0\n *\n * @param {number} t - The amount to interpolate by.\n * @param {number} p0 - The first control point.\n * @param {number} p1 - The second control point.\n * @param {number} p2 - The third control point.\n * @param {number} p3 - The fourth control point.\n *\n * @return {number} The Catmull-Rom value.\n */\nexport default function CatmullRom (t: number, p0: number, p1: number, p2: number, p3: number): number\n{\n    const v0 = (p2 - p0) * 0.5;\n    const v1 = (p3 - p1) * 0.5;\n    const t2 = t * t;\n    const t3 = t * t2;\n\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport CatmullRom from '../CatmullRom';\n\n/**\n * A Catmull-Rom interpolation method.\n *\n * @function Phaser.Math.Interpolation.CatmullRom\n * @since 3.0.0\n *\n * @param {number[]} v - The input array of values to interpolate between.\n * @param {number} k - The percentage of interpolation, between 0 and 1.\n *\n * @return {number} The interpolated value.\n */\nexport default function CatmullRomInterpolation (v: number[], k: number): number\n{\n    const m = v.length - 1;\n    let f = m * k;\n    let i = Math.floor(f);\n\n    if (v[0] === v[m])\n    {\n        if (k < 0)\n        {\n            i = Math.floor(f = m * (1 + k));\n        }\n\n        return CatmullRom(f - i, v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m]);\n    }\n    else\n    {\n        if (k < 0)\n        {\n            return v[0] - (CatmullRom(-f, v[0], v[0], v[1], v[1]) - v[0]);\n        }\n\n        if (k > 1)\n        {\n            return v[m] - (CatmullRom(f - m, v[m], v[m], v[m - 1], v[m - 1]) - v[m]);\n        }\n\n        return CatmullRom(f - i, v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2]);\n    }\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * @ignore\n */\nfunction P0 (t: number, p: number)\n{\n    const k = 1 - t;\n\n    return k * k * k * p;\n}\n\n/**\n * @ignore\n */\nfunction P1 (t: number, p: number)\n{\n    const k = 1 - t;\n\n    return 3 * k * k * t * p;\n}\n\n/**\n * @ignore\n */\nfunction P2 (t: number, p: number)\n{\n    return 3 * (1 - t) * t * t * p;\n}\n\n/**\n * @ignore\n */\nfunction P3 (t: number, p: number)\n{\n    return t * t * t * p;\n}\n\n/**\n * A cubic bezier interpolation method.\n *\n * https://medium.com/@adrian_cooney/bezier-interpolation-13b68563313a\n *\n * @function Phaser.Math.Interpolation.CubicBezier\n * @since 3.0.0\n *\n * @param {number} t - The percentage of interpolation, between 0 and 1.\n * @param {number} p0 - The start point.\n * @param {number} p1 - The first control point.\n * @param {number} p2 - The second control point.\n * @param {number} p3 - The end point.\n *\n * @return {number} The interpolated value.\n */\nexport default function CubicBezierInterpolation (t: number, p0: number, p1: number, p2: number, p3: number): number\n{\n    return P0(t, p0) + P1(t, p1) + P2(t, p2) + P3(t, p3);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculates a linear (interpolation) value over t.\n *\n * @function Phaser.Math.Linear\n * @since 3.0.0\n *\n * @param {number} p0 - The first point.\n * @param {number} p1 - The second point.\n * @param {number} t - The percentage between p0 and p1 to return, represented as a number between 0 and 1.\n *\n * @return {number} The step t% of the way between p0 and p1.\n */\nexport default function Linear (p0: number, p1: number, t: number): number\n{\n    return (p1 - p0) * t + p0;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Linear from '../Linear';\n\n/**\n * A linear interpolation method.\n *\n * @function Phaser.Math.Interpolation.Linear\n * @since 3.0.0\n * @see {@link https://en.wikipedia.org/wiki/Linear_interpolation}\n *\n * @param {number[]} v - The input array of values to interpolate between.\n * @param {!number} k - The percentage of interpolation, between 0 and 1.\n *\n * @return {!number} The interpolated value.\n */\nexport default function LinearInterpolation (v: number[], k: number): number\n{\n    const m = v.length - 1;\n    const f = m * k;\n    const i = Math.floor(f);\n\n    if (k < 0)\n    {\n        return Linear(v[0], v[1], f);\n    }\n    else if (k > 1)\n    {\n        return Linear(v[m], v[m - 1], m - f);\n    }\n    else\n    {\n        return Linear(v[i], v[(i + 1 > m) ? m : i + 1], f - i);\n    }\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * @ignore\n */\nfunction P0 (t: number, p: number)\n{\n    const k = 1 - t;\n\n    return k * k * p;\n}\n\n/**\n * @ignore\n */\nfunction P1 (t: number, p: number)\n{\n    return 2 * (1 - t) * t * p;\n}\n\n/**\n * @ignore\n */\nfunction P2 (t: number, p: number)\n{\n    return t * t * p;\n}\n\n// https://github.com/mrdoob/three.js/blob/master/src/extras/core/Interpolations.js\n\n/**\n * A quadratic bezier interpolation method.\n *\n * @function Phaser.Math.Interpolation.QuadraticBezier\n * @since 3.2.0\n *\n * @param {number} t - The percentage of interpolation, between 0 and 1.\n * @param {number} p0 - The start point.\n * @param {number} p1 - The control point.\n * @param {number} p2 - The end point.\n *\n * @return {number} The interpolated value.\n */\nexport default function QuadraticBezierInterpolation (t: number, p0: number, p1: number, p2: number): number\n{\n    return P0(t, p0) + P1(t, p1) + P2(t, p2);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate a smooth interpolation percentage of `x` between `min` and `max`.\n *\n * The function receives the number `x` as an argument and returns 0 if `x` is less than or equal to the left edge,\n * 1 if `x` is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial,\n * between 0 and 1 otherwise.\n *\n * @function Phaser.Math.SmoothStep\n * @since 3.0.0\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep}\n *\n * @param {number} x - The input value.\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\n *\n * @return {number} The percentage of interpolation, between 0 and 1.\n */\nexport default function SmoothStep (x: number, min: number, max: number): number\n{\n    if (x <= min)\n    {\n        return 0;\n    }\n\n    if (x >= max)\n    {\n        return 1;\n    }\n\n    x = (x - min) / (max - min);\n\n    return x * x * (3 - 2 * x);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport SmoothStep from '../SmoothStep';\n\n/**\n * A Smooth Step interpolation method.\n *\n * @function Phaser.Math.Interpolation.SmoothStep\n * @since 3.9.0\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep}\n *\n * @param {number} t - The percentage of interpolation, between 0 and 1.\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\n *\n * @return {number} The interpolated value.\n */\nexport default function SmoothStepInterpolation (t: number, min: number, max: number): number\n{\n    return min + (max - min) * SmoothStep(t, 0, 1);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate a smoother interpolation percentage of `x` between `min` and `max`.\n *\n * The function receives the number `x` as an argument and returns 0 if `x` is less than or equal to the left edge,\n * 1 if `x` is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial,\n * between 0 and 1 otherwise.\n *\n * Produces an even smoother interpolation than {@link Phaser.Math.SmoothStep}.\n *\n * @function Phaser.Math.SmootherStep\n * @since 3.0.0\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\n *\n * @param {number} x - The input value.\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\n *\n * @return {number} The percentage of interpolation, between 0 and 1.\n */\nexport default function SmootherStep (x: number, min: number, max: number): number\n{\n    x = Math.max(0, Math.min(1, (x - min) / (max - min)));\n\n    return x * x * x * (x * (x * 6 - 15) + 10);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport SmootherStep from '../SmootherStep';\n\n/**\n * A Smoother Step interpolation method.\n *\n * @function Phaser.Math.Interpolation.SmootherStep\n * @since 3.9.0\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\n *\n * @param {number} t - The percentage of interpolation, between 0 and 1.\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\n *\n * @return {number} The interpolated value.\n */\nexport default function SmootherStepInterpolation (t: number, min: number, max: number): number\n{\n    return min + (max - min) * SmootherStep(t, 0, 1);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Bezier from './BezierInterpolation';\nimport CatmullRom from './CatmullRomInterpolation';\nimport CubicBezier from './CubicBezierInterpolation';\nimport Linear from './LinearInterpolation';\nimport QuadraticBezier from './QuadraticBezierInterpolation';\nimport SmoothStep from './SmoothStepInterpolation';\nimport SmootherStep from './SmootherStepInterpolation';\n\n/**\n * @namespace Phaser.Math.Interpolation\n */\n\nexport {\n    Bezier,\n    CatmullRom,\n    CubicBezier,\n    Linear,\n    QuadraticBezier,\n    SmoothStep,\n    SmootherStep\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Adds the src Matrix to the target Matrix and returns the target.\n\nexport default function Add (target: IMatrix2D, src: IMatrix2D): IMatrix2D\n{\n    target.a += src.a;\n    target.b += src.b;\n    target.c += src.c;\n    target.d += src.d;\n    target.tx += src.tx;\n    target.ty += src.ty;\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n// Copy the values from src Matrix to the given Canvas Rendering Context.\n// This will use the Context.transform method.\n\nexport default function CopyToContext (src: IMatrix2D, context: CanvasRenderingContext2D): CanvasRenderingContext2D\n{\n    const { a, b, c, d, tx, ty } = src;\n\n    context.transform(a, b, c, d, tx, ty);\n\n    return context;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Return the determinant for the src Matrix.\n\nexport default function Determinant (src: IMatrix2D): number\n{\n    const { a, b, c, d } = src;\n\n    return (a * d) - (b * c);\n}\n","import IMatrix2D from './IMatrix2D';\n\nexport default function Frobenius (src: IMatrix2D): number\n{\n    return(Math.hypot(src.a, src.b, src.c, src.d, src.tx, src.ty, 1));\n}\n","export default class Vec2\n{\n    /**\n     * X component\n     *\n     * @type {number}\n     * @memberof Vec2\n     */\n    x: number;\n\n    /**\n     * Y component\n     *\n     * @type {number}\n     * @memberof Vec2\n     */\n    y: number;\n\n    /**\n     * Creates an instance of a Vector2.\n     * \n     * @param {number} [x=0] - X component\n     * @param {number} [y=0] - Y component\n     * @memberof Vec2\n     */\n    constructor (x: number = 0, y: number = 0)\n    {\n        this.set(x, y);\n    }\n\n    set (x: number = 0, y: number = 0)\n    {\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n\n    /**\n     * Returns a new array containg the Vector2 component values.\n     *\n     * @returns {number[]}\n     * @memberof Vec2\n     */\n    getArray (): number[]\n    {\n        return [ this.x, this.y ];\n    }\n\n    /**\n     * Sets the values of this Vector2 based on the given array, or array-like object, such as a Float32.\n     * \n     * The source must have 2 elements, starting from index 0 through to index 1.\n     *\n     * @param {number[]} src - The source array to copy the values from.\n     * @returns {Vec2}\n     * @memberof Vec2\n     */\n    fromArray (src: number[]): Vec2\n    {\n        return this.set(src[0], src[1]);\n    }\n\n    [Symbol.iterator] ()\n    {\n        const data = this.getArray();\n\n        return data[Symbol.iterator]();\n    }\n}\n","import IMatrix2D from './IMatrix2D';\nimport Vec2 from '../vec2/Vec2';\n\nexport default function GlobalToLocal (mat: IMatrix2D, x: number, y: number, outPoint: Vec2 = new Vec2()): Vec2\n{\n    const { a, b, c, d, tx, ty } = mat;\n\n    const id: number = 1 / ((a * d) + (c * -b));\n\n    outPoint.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\n    outPoint.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\n\n    return outPoint;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Inverts the target Matrix and then returns it\n\nexport default function Invert (target: IMatrix2D): IMatrix2D\n{\n    const { a, b, c, d, tx, ty } = target;\n\n    let determinant: number = a * d - b * c;\n\n    if (determinant)\n    {\n        determinant = 1 / determinant;\n  \n        target.set(\n            d * determinant,\n            -b * determinant,\n            -c * determinant,\n            a * determinant,\n            (c * ty - d * tx) * determinant,\n            (b * tx - a * ty) * determinant\n        );\n    }\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Apply the identity, translate, rotate and scale operations on the target Matrix then returns it.\n\nexport default function ITRS (target: IMatrix2D, x: number, y: number, angle: number, scaleX: number, scaleY: number): IMatrix2D\n{\n    if (angle === 0)\n    {\n        return target.set(1, 0, 0, 1, x, y);\n    }\n    else\n    {\n        const sin = Math.sin(angle);\n        const cos = Math.cos(angle);\n\n        return target.set(\n            cos * scaleX,\n            sin * scaleX,\n            -sin * scaleY,\n            cos * scaleY,\n            x,\n            y\n        );\n    }\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Apply the identity, translate, rotate, scale and skew operations on the target Matrix then returns it.\n\nexport default function ITRSS (target: IMatrix2D, x: number, y: number, angle: number = 0, scaleX: number = 1, scaleY: number = 1, skewX: number = 0, skewY: number = 0): IMatrix2D\n{\n    if (angle === 0)\n    {\n        return target.set(1, 0, 0, 1, x, y);\n    }\n    else\n    {\n        const sin = Math.sin(angle);\n        const cos = Math.cos(angle);\n\n        return target.set(\n            cos * scaleX,\n            sin * scaleX,\n            -sin * scaleY,\n            cos * scaleY,\n            x,\n            y\n        );\n    }\n}\n","import IMatrix2D from './IMatrix2D';\nimport Vec2 from '../vec2/Vec2';\n\nexport default function LocalToGlobal (mat: IMatrix2D, x: number, y: number, outPoint: Vec2 = new Vec2()): Vec2\n{\n    const { a, b, c, d, tx, ty } = mat;\n\n    outPoint.x = (a * x) + (c * y) + tx;\n    outPoint.y = (b * x) + (d * y) + ty;\n\n    return outPoint;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Multiplies the target Matrix by the src Matrix and returns the target.\n\nexport default function Multiply (target: IMatrix2D, src: IMatrix2D): IMatrix2D\n{\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = target;\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = src;\n    \n    target.a = a0 * a1 + c0 * b1;\n    target.b = b0 * a1 + d0 * b1;\n    target.c = a0 * c1 + c0 * d1;\n    target.d = b0 * c1 + d0 * d1;\n    target.tx = a0 * tx1 + c0 * ty1 + tx0;\n    target.ty = b0 * tx1 + d0 * ty1 + ty0;\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Multiplies the target Matrix by the given amount, then returns the target Matrix.\n\nexport default function MultiplyScalar (target: IMatrix2D, scale: number): IMatrix2D\n{\n    target.a *= scale;\n    target.b *= scale;\n    target.c *= scale;\n    target.d *= scale;\n    target.tx *= scale;\n    target.ty *= scale;\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Multiplies the target Matrix by the given amount, then returns the target Matrix.\n\nexport default function MultiplyScalarAndAdd (target: IMatrix2D, src: IMatrix2D, scale: number): IMatrix2D\n{\n    const { a, b, c, d, tx, ty } = src;\n\n    target.a += (a * scale);\n    target.b += (b * scale);\n    target.c += (c * scale);\n    target.d += (d * scale);\n    target.tx += (tx * scale);\n    target.ty += (ty * scale);\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Rotates the target Matrix by the angle (in radians), then returns the target Matrix.\n\nexport default function Rotate (target: IMatrix2D, angle: number): IMatrix2D\n{\n    const { a, b, c, d, tx, ty } = target;\n\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    return target.set(\n        (a * cos) + (c * sin),\n        (b * cos) + (d * sin),\n        (a * -sin) + (c * cos),\n        (b * -sin) + (d * cos),\n        tx,\n        ty\n    );\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Scales the target Matrix by the given amounts, then returns the target Matrix.\n\nexport default function Scale (target: IMatrix2D, scaleX: number, scaleY: number): IMatrix2D\n{\n    target.a *= scaleX;\n    target.b *= scaleX;\n    target.c *= scaleY;\n    target.d *= scaleY;\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n// Copy the values from the src Matrix to the given Canvas Rendering Context.\n// This will use the Context.setTransform method.\n\nexport default function SetToContext (src: IMatrix2D, context: CanvasRenderingContext2D): CanvasRenderingContext2D\n{\n    const { a, b, c, d, tx, ty } = src;\n\n    context.setTransform(a, b, c, d, tx, ty);\n\n    return context;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Skews the target Matrix by the given angles (in radians), then returns the target Matrix\n\nexport default function Skew (target: IMatrix2D, angleX: number, angleY: number): IMatrix2D\n{\n    target.b += Math.tan(angleX);\n    target.c += Math.tan(angleY);\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Subtracts the src Matrix from the target Matrix and returns the target.\n\nexport default function Subtract (target: IMatrix2D, src: IMatrix2D): IMatrix2D\n{\n    const { a, b, c, d, tx, ty } = src;\n\n    target.a -= a;\n    target.b -= b;\n    target.c -= c;\n    target.d -= d;\n    target.tx -= tx;\n    target.ty -= ty;\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Translates the target Matrix and returns the target\n\nexport default function Translate (target: IMatrix2D, x: number, y: number): IMatrix2D\n{\n    const { a, b, c, d, tx, ty } = target;\n\n    target.tx = (a * x) + (c * y) + tx;\n    target.ty = (b * x) + (d * y) + ty;\n\n    return target;\n}\n","import IMatrix2D from './IMatrix2D';\n\n//  Zeroes the target Matrix and returns the target\n\nexport default function Zero (target: IMatrix2D): IMatrix2D\n{\n    return target.set(0, 0, 0, 0, 0, 0);\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\n//  Adds a to b and returns the values in a new Matrix2D\n\nexport default function Add (a: IMatrix2D, b: IMatrix2D): Matrix2D\n{\n    return new Matrix2D(\n        a.a + b.a,\n        a.b + b.b,\n        a.c + b.c,\n        a.c + b.c,\n        a.tx + b.tx,\n        a.ty + b.ty\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function Append (mat1: IMatrix2D, mat2: IMatrix2D, out: Matrix2D = new Matrix2D()): Matrix2D\n{\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = mat1;\n    const { a: a2, b: b2, c: c2, d: d2, tx: tx2, ty: ty2 } = mat2;\n\n    return out.set(\n        (a2 * a1) + (b2 * c1),\n        (a2 * b1) + (b2 * d1),\n        (c2 * a1) + (d2 * c1),\n        (c2 * b1) + (d2 * d1),\n        (tx2 * a1) + (ty2 * c1) + tx1,\n        (tx2 * b1) + (ty2 * d1) + ty1\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\n//  Clones the src matrix to a new Matrix2D.\n\nexport default function Clone (src: IMatrix2D): Matrix2D\n{\n    return new Matrix2D(src.a, src.b, src.c, src.d, src.tx, src.ty);\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\n\n//  Compares the a and b matrix and returns if they are equal, based on the epsilon.\n\nexport default function Equals (a: IMatrix2D, b: IMatrix2D, epsilon: number = 0.000001): boolean\n{\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = a;\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = b;\n\n    return (\n        Math.abs(a0 - a1) <= epsilon * Math.max(1, Math.abs(a0), Math.abs(a1)) &&\n        Math.abs(b0 - b1) <= epsilon * Math.max(1, Math.abs(b0), Math.abs(b1)) &&\n        Math.abs(c0 - c1) <= epsilon * Math.max(1, Math.abs(c0), Math.abs(c1)) &&\n        Math.abs(d0 - d1) <= epsilon * Math.max(1, Math.abs(d0), Math.abs(d1)) &&\n        Math.abs(tx0 - tx1) <= epsilon * Math.max(1, Math.abs(tx0), Math.abs(tx1)) &&\n        Math.abs(ty0 - ty1) <= epsilon * Math.max(1, Math.abs(ty0), Math.abs(ty1))\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\n\n//  Compares the a and b matrix and returns if they are equal.\n\nexport default function ExactEquals (a: IMatrix2D, b: IMatrix2D): boolean\n{\n    return (\n        a.a === b.a &&\n        a.b === b.b &&\n        a.c === b.c &&\n        a.d === b.d &&\n        a.tx === b.tx &&\n        a.ty === b.ty\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function Rotate (src: IMatrix2D, angle: number): Matrix2D\n{\n    const { a, b, c, d } = src;\n\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    return new Matrix2D(\n        a * cos + c * sin,\n        b * cos + d * sin,\n        a * -sin + c * cos,\n        b * -sin + d * cos\n    );\n}\n","import Rotate from './Rotate';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function FromRotation (angle: number): Matrix2D\n{\n    return Rotate(new Matrix2D(), angle);\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function Scale (src: IMatrix2D, scaleX: number, scaleY: number): Matrix2D\n{\n    return new Matrix2D(\n        src.a * scaleX,\n        src.b * scaleX,\n        src.c * scaleY,\n        src.d * scaleY\n    );\n}\n","import Scale from './Scale';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function FromScaling (scaleX: number, scaleY: number = scaleX): Matrix2D\n{\n    return Scale(new Matrix2D(), scaleX, scaleY);\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function Translate (src: IMatrix2D, x: number, y: number): Matrix2D\n{\n    const { a, b, c, d, tx, ty } = src;\n\n    const dtx = a * x + c * y + tx;\n    const dty = b * x + d * y + ty;\n\n    return new Matrix2D(1, 0, 0, 1, dtx, dty);\n}\n","import Translate from './Translate';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function FromTranslation (x: number, y: number): Matrix2D\n{\n    return Translate(new Matrix2D(), x, y);\n}\n","import Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function Identity (): Matrix2D\n{\n    return new Matrix2D();\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\n//  Inverts the src Matrix and returns the result in a new Matrix, or null.\n\nexport default function Invert (src: IMatrix2D): Matrix2D | null\n{\n    const { a, b, c, d, tx, ty } = src;\n\n    let determinant: number = (a * d) - (b * c);\n\n    if (!determinant)\n    {\n        return null;\n    }\n\n    determinant = 1 / determinant;\n  \n    return new Matrix2D(\n        d * determinant,\n        -b * determinant,\n        -c * determinant,\n        a * determinant,\n        (c * ty - d * tx) * determinant,\n        (b * tx - a * ty) * determinant\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\n//  Multiplies matrix a by b and returns the result in a new Matrix2D.\n\nexport default function Multiply (a: IMatrix2D, b: IMatrix2D): Matrix2D\n{\n    const { a: a0, b: b0, c: c0, d: d0, tx: tx0, ty: ty0 } = a;\n    const { a: a1, b: b1, c: c1, d: d1, tx: tx1, ty: ty1 } = b;\n    \n    return new Matrix2D(\n        a0 * a1 + c0 * b1,\n        b0 * a1 + d0 * b1,\n        a0 * c1 + c0 * d1,\n        b0 * c1 + d0 * d1,\n        a0 * tx1 + c0 * ty1 + tx0,\n        b0 * tx1 + d0 * ty1 + ty0\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function MultiplyScalar (src: IMatrix2D, scale: number): Matrix2D\n{\n    return new Matrix2D(\n        src.a * scale,\n        src.b * scale,\n        src.c * scale,\n        src.d * scale,\n        src.tx * scale,\n        src.ty * scale\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function MultiplyScalarAndAdd (a: IMatrix2D, b: IMatrix2D, scale: number): Matrix2D\n{\n    return new Matrix2D(\n        a.a + (b.a * scale),\n        a.b + (b.b * scale),\n        a.c + (b.c * scale),\n        a.d + (b.d * scale),\n        a.tx + (b.tx * scale),\n        a.ty + (b.ty * scale),\n    );\n}\n","import IMatrix2D from '../matrix2d/IMatrix2D';\nimport Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function Subtract (a: IMatrix2D, b: IMatrix2D): Matrix2D\n{\n    return new Matrix2D(\n        a.a - b.a,\n        a.b - b.b,\n        a.c - b.c,\n        a.c - b.c,\n        a.tx - b.tx,\n        a.ty - b.ty\n    );\n}\n","import Matrix2D from '../matrix2d/Matrix2D';\n\nexport default function Zero (): Matrix2D\n{\n    return new Matrix2D(0, 0, 0, 0, 0, 0);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Returns the nearest power of 2 to the given `value`.\n *\n * @function Phaser.Math.Pow2.GetNext\n * @since 3.0.0\n *\n * @param {number} value - The value.\n *\n * @return {number} The nearest power of 2 to `value`.\n */\nexport default function GetPowerOfTwo (value: number): number\n{\n    var index = Math.log(value) / 0.6931471805599453;\n\n    return (1 << Math.ceil(index));\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Tests the value and returns `true` if it is a power of two.\n *\n * @function Phaser.Math.Pow2.IsValue\n * @since 3.0.0\n *\n * @param {number} value - The value to check if it's a power of two.\n *\n * @return {boolean} Returns `true` if `value` is a power of two, otherwise `false`.\n */\nexport default function IsValuePowerOfTwo (value: number): boolean\n{\n    return (value > 0 && (value & (value - 1)) === 0);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport GetNext from './GetPowerOfTwo';\nimport IsSize from './IsSizePowerOfTwo';\nimport IsValue from './IsValuePowerOfTwo';\n\n/**\n * @namespace Phaser.Math.Pow2\n */\n\nexport {\n    GetNext,\n    IsSize,\n    IsValue\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Snap a value to nearest grid slice, using ceil.\n *\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `15`.\n * As will `14` snap to `15`... but `16` will snap to `20`.\n *\n * @function Phaser.Math.Snap.Ceil\n * @since 3.0.0\n *\n * @param {number} value - The value to snap.\n * @param {number} gap - The interval gap of the grid.\n * @param {number} [start=0] - Optional starting offset for gap.\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\n *\n * @return {number} The snapped value.\n */\nexport default function SnapCeil (value: number, gap: number, start: number = 0, divide: boolean = false): number\n{\n    if (gap === 0)\n    {\n        return value;\n    }\n\n    value -= start;\n    value = gap * Math.ceil(value / gap);\n\n    return (divide) ? (start + value) / gap : start + value;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Snap a value to nearest grid slice, using floor.\n *\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10`.\n * As will `14` snap to `10`... but `16` will snap to `15`.\n *\n * @function Phaser.Math.Snap.Floor\n * @since 3.0.0\n *\n * @param {number} value - The value to snap.\n * @param {number} gap - The interval gap of the grid.\n * @param {number} [start=0] - Optional starting offset for gap.\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\n *\n * @return {number} The snapped value.\n */\nexport default function SnapFloor (value: number, gap: number, start: number = 0, divide: boolean = false): number\n{\n    if (gap === 0)\n    {\n        return value;\n    }\n\n    value -= start;\n    value = gap * Math.floor(value / gap);\n\n    return (divide) ? (start + value) / gap : start + value;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Snap a value to nearest grid slice, using rounding.\n *\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `10` whereas `14` will snap to `15`.\n *\n * @function Phaser.Math.Snap.To\n * @since 3.0.0\n *\n * @param {number} value - The value to snap.\n * @param {number} gap - The interval gap of the grid.\n * @param {number} [start=0] - Optional starting offset for gap.\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\n *\n * @return {number} The snapped value.\n */\nexport default function SnapTo (value: number, gap: number, start: number = 0, divide: boolean = false): number\n{\n    if (gap === 0)\n    {\n        return value;\n    }\n\n    value -= start;\n    value = gap * Math.round(value / gap);\n\n    return (divide) ? (start + value) / gap : start + value;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Ceil from './SnapCeil';\nimport Floor from './SnapFloor';\nimport To from './SnapTo';\n\n/**\n * @namespace Phaser.Math.Snap\n */\n\nexport {\n    Ceil,\n    Floor,\n    To\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate the mean average of the given values.\n *\n * @function Phaser.Math.Average\n * @since 3.0.0\n *\n * @param {number[]} values - The values to average.\n *\n * @return {number} The average value.\n */\nexport default function Average (values: number[]): number\n{\n    let sum = 0;\n\n    for (let i = 0; i < values.length; i++)\n    {\n        sum += (+values[i]);\n    }\n\n    return sum / values.length;\n}\n","export default function Between (min: number, max: number): number\n{\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Ceils to some place comparative to a `base`, default is 10 for decimal place.\n *\n * The `place` is represented by the power applied to `base` to get that place.\n *\n * @function Phaser.Math.CeilTo\n * @since 3.0.0\n *\n * @param {number} value - The value to round.\n * @param {number} [place=0] - The place to round to.\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\n *\n * @return {number} The rounded value.\n */\nexport default function CeilTo (value: number, place: number = 0, base: number = 10): number\n{\n    const p = Math.pow(base, -place);\n\n    return Math.ceil(value * p) / p;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Force a value within the boundaries by clamping it to the range `min`, `max`.\n *\n * @function Phaser.Math.Clamp\n * @since 3.0.0\n *\n * @param {number} value - The value to be clamped.\n * @param {number} min - The minimum bounds.\n * @param {number} max - The maximum bounds.\n *\n * @return {number} The clamped value.\n */\nexport default function Clamp (value: number, min: number, max: number): number\n{\n    return Math.max(min, Math.min(max, value));\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport CONST from './const';\n\n/**\n * Convert the given angle from degrees, to the equivalent angle in radians.\n *\n * @function Phaser.Math.DegToRad\n * @since 3.0.0\n *\n * @param {number} degrees - The angle (in degrees) to convert to radians.\n *\n * @return {number} The given angle converted to radians.\n */\nexport default function DegToRad (degrees: number): number\n{\n    return degrees * CONST.DEG_TO_RAD;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculates the positive difference of two given numbers.\n *\n * @function Phaser.Math.Difference\n * @since 3.0.0\n *\n * @param {number} a - The first number in the calculation.\n * @param {number} b - The second number in the calculation.\n *\n * @return {number} The positive difference of the two given numbers.\n */\nexport default function Difference (a: number, b: number): number\n{\n    return Math.abs(a - b);\n}\n","export default function FloatBetween (min: number, max: number): number\n{\n    return Math.random() * (max - min) + min;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Floors to some place comparative to a `base`, default is 10 for decimal place.\n *\n * The `place` is represented by the power applied to `base` to get that place.\n *\n * @function Phaser.Math.FloorTo\n * @since 3.0.0\n *\n * @param {number} value - The value to round.\n * @param {number} [place=0] - The place to round to.\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\n *\n * @return {number} The rounded value.\n */\nexport default function FloorTo (value: number, place: number = 0, base: number = 10): number\n{\n    const p = Math.pow(base, -place);\n\n    return Math.floor(value * p) / p;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Clamp from './Clamp';\n\n/**\n * Return a value based on the range between `min` and `max` and the percentage given.\n *\n * @function Phaser.Math.FromPercent\n * @since 3.0.0\n *\n * @param {number} percent - A value between 0 and 1 representing the percentage.\n * @param {number} min - The minimum value.\n * @param {number} [max] - The maximum value.\n *\n * @return {number} The value that is `percent` percent between `min` and `max`.\n */\nexport default function FromPercent (percent: number, min: number, max?: number): number\n{\n    percent = Clamp(percent, 0, 1);\n\n    return (max - min) * percent;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Calculate a per-ms speed from a distance and time (given in seconds).\n *\n * @function Phaser.Math.GetSpeed\n * @since 3.0.0\n *\n * @param {number} distance - The distance.\n * @param {number} time - The time, in seconds.\n *\n * @return {number} The speed, in distance per ms.\n */\nexport default function GetSpeed (distance: number, time: number): number\n{\n    return (distance / time) / 1000;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Add an `amount` to a `value`, limiting the maximum result to `max`.\n *\n * @function Phaser.Math.MaxAdd\n * @since 3.0.0\n *\n * @param {number} value - The value to add to.\n * @param {number} amount - The amount to add.\n * @param {number} max - The maximum value to return.\n *\n * @return {number} The resulting value.\n */\nexport default function MaxAdd (value: number, amount: number, max: number): number\n{\n    return Math.min(value + amount, max);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Subtract an `amount` from `value`, limiting the minimum result to `min`.\n *\n * @function Phaser.Math.MinSub\n * @since 3.0.0\n *\n * @param {number} value - The value to subtract from.\n * @param {number} amount - The amount to subtract.\n * @param {number} min - The minimum value to return.\n *\n * @return {number} The resulting value.\n */\nexport default function MinSub (value: number, amount: number, min: number): number\n{\n    return Math.max(value - amount, min);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Work out what percentage `value` is of the range between `min` and `max`.\n * If `max` isn't given then it will return the percentage of `value` to `min`.\n *\n * You can optionally specify an `upperMax` value, which is a mid-way point in the range that represents 100%, after which the % starts to go down to zero again.\n *\n * @function Phaser.Math.Percent\n * @since 3.0.0\n *\n * @param {number} value - The value to determine the percentage of.\n * @param {number} min - The minimum value.\n * @param {number} [max] - The maximum value.\n * @param {number} [upperMax] - The mid-way point in the range that represents 100%.\n *\n * @return {number} A value between 0 and 1 representing the percentage.\n */\nexport default function Percent (value: number, min: number, max?: number, upperMax?: number): number\n{\n    if (max === undefined) { max = min + 1; }\n\n    let percentage = (value - min) / (max - min);\n\n    if (percentage > 1)\n    {\n        if (upperMax !== undefined)\n        {\n            percentage = ((upperMax - value)) / (upperMax - max);\n\n            if (percentage < 0)\n            {\n                percentage = 0;\n            }\n        }\n        else\n        {\n            percentage = 1;\n        }\n    }\n    else if (percentage < 0)\n    {\n        percentage = 0;\n    }\n\n    return percentage;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport CONST from './const';\n\n/**\n * Convert the given angle in radians, to the equivalent angle in degrees.\n *\n * @function Phaser.Math.RadToDeg\n * @since 3.0.0\n *\n * @param {number} radians - The angle in radians to convert ot degrees.\n *\n * @return {number} The given angle converted to degrees.\n */\nexport default function RadToDeg (radians: number): number\n{\n    return radians * CONST.RAD_TO_DEG;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Round a given number so it is further away from zero. That is, positive numbers are rounded up, and negative numbers are rounded down.\n *\n * @function Phaser.Math.RoundAwayFromZero\n * @since 3.0.0\n *\n * @param {number} value - The number to round.\n *\n * @return {number} The rounded number, rounded away from zero.\n */\nexport default function RoundAwayFromZero (value: number): number\n{\n    // \"Opposite\" of truncate.\n    return (value > 0) ? Math.ceil(value) : Math.floor(value);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Round a value to the given precision.\n * \n * For example:\n * \n * ```javascript\n * RoundTo(123.456, 0) = 123\n * RoundTo(123.456, 1) = 120\n * RoundTo(123.456, 2) = 100\n * ```\n * \n * To round the decimal, i.e. to round to precision, pass in a negative `place`:\n * \n * ```javascript\n * RoundTo(123.456789, 0) = 123\n * RoundTo(123.456789, -1) = 123.5\n * RoundTo(123.456789, -2) = 123.46\n * RoundTo(123.456789, -3) = 123.457\n * ```\n *\n * @function Phaser.Math.RoundTo\n * @since 3.0.0\n *\n * @param {number} value - The value to round.\n * @param {number} [place=0] - The place to round to. Positive to round the units, negative to round the decimal.\n * @param {number} [base=10] - The base to round in. Default is 10 for decimal.\n *\n * @return {number} The rounded value.\n */\nexport default function RoundTo (value: number, place: number = 0, base: number = 10): number\n{\n    const p = Math.pow(base, -place);\n\n    return Math.round(value * p) / p;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n /**\n * @typedef {object} Phaser.Types.Math.SinCosTable\n * @since 3.0.0\n *\n * @property {number[]} sin - The sine values.\n * @property {number[]} cos - The cosine values.\n * @property {number} length - The length.\n */\n\ntype SinCosTable = { sin: number[], cos: number[], length: number };\n\n/**\n * Generate a series of sine and cosine values.\n *\n * @function Phaser.Math.SinCosTableGenerator\n * @since 3.0.0\n *\n * @param {number} length - The number of values to generate.\n * @param {number} [sinAmp=1] - The sine value amplitude.\n * @param {number} [cosAmp=1] - The cosine value amplitude.\n * @param {number} [frequency=1] - The frequency of the values.\n *\n * @return {SinCosTable} The generated values.\n */\nexport default function SinCosTableGenerator (length: number, sinAmp: number = 1, cosAmp: number = 1, frequency: number = 1): SinCosTable\n{\n    frequency *= Math.PI / length;\n\n    const cos = [];\n    const sin = [];\n\n    for (let c = 0; c < length; c++)\n    {\n        cosAmp -= sinAmp * frequency;\n        sinAmp += cosAmp * frequency;\n\n        cos[c] = cosAmp;\n        sin[c] = sinAmp;\n    }\n\n    return {\n        sin,\n        cos,\n        length\n    };\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Vec2 from './vec2/Vec2';\n\n/**\n * Returns a Vector2 containing the x and y position of the given index in a `width` x `height` sized grid.\n * \n * For example, in a 6 x 4 grid, index 16 would equal x: 4 y: 2.\n * \n * If the given index is out of range an empty Vector2 is returned.\n *\n * @function Phaser.Math.ToXY\n * @since 3.19.0\n *\n * @param {number} index - The position within the grid to get the x/y value for.\n * @param {number} width - The width of the grid.\n * @param {number} height - The height of the grid.\n * @param {Vec2} [out] - An optional Vector2 to store the result in. If not given, a new Vector2 instance will be created.\n *\n * @return {Vec2} A Vector2 where the x and y properties contain the given grid index.\n */\nexport default function ToXY (index: number, width: number, height: number, out: Vec2 = new Vec2()): Vec2\n{\n    let x = 0;\n    let y = 0;\n    const total = width * height;\n\n    if (index > 0 && index <= total)\n    {\n        if (index > width - 1)\n        {\n            y = Math.floor(index / width);\n            x = index - (y * width);\n        }\n        else\n        {\n            x = index;\n        }\n\n        out.set(x, y);\n    }\n\n    return out;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Vec2 from './vec2/Vec2';\n\n/**\n * Takes the `x` and `y` coordinates and transforms them into the same space as\n * defined by the position, rotation and scale values.\n *\n * @function Phaser.Math.TransformXY\n * @since 3.0.0\n *\n * @param {number} x - The x coordinate to be transformed.\n * @param {number} y - The y coordinate to be transformed.\n * @param {number} positionX - Horizontal position of the transform point.\n * @param {number} positionY - Vertical position of the transform point.\n * @param {number} rotation - Rotation of the transform point, in radians.\n * @param {number} scaleX - Horizontal scale of the transform point.\n * @param {number} scaleY - Vertical scale of the transform point.\n * @param {Vec2} [output] - The output vector, point or object for the translated coordinates.\n *\n * @return {Vec2} The translated point.\n */\nexport default function TransformXY (x: number, y: number, positionX: number, positionY: number, rotation: number, scaleX: number, scaleY: number, output: Vec2 = new Vec2()): Vec2\n{\n    const radianSin = Math.sin(rotation);\n    const radianCos = Math.cos(rotation);\n\n    // Rotate and Scale\n    const a = radianCos * scaleX;\n    const b = radianSin * scaleX;\n    const c = -radianSin * scaleY;\n    const d = radianCos * scaleY;\n\n    //  Invert\n    const id = 1 / ((a * d) + (c * -b));\n\n    output.x = (d * id * x) + (-c * id * y) + (((positionY * c) - (positionX * d)) * id);\n    output.y = (a * id * y) + (-b * id * x) + (((-positionY * a) + (positionX * b)) * id);\n\n    return output;\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Checks if the two values are within the given `tolerance` of each other.\n *\n * @function Phaser.Math.Within\n * @since 3.0.0\n *\n * @param {number} a - The first value to use in the calculation.\n * @param {number} b - The second value to use in the calculation.\n * @param {number} tolerance - The tolerance. Anything equal to or less than this value is considered as being within range.\n *\n * @return {boolean} Returns `true` if `a` is less than or equal to the tolerance of `b`.\n */\nexport default function Within (a: number, b: number, tolerance: number): boolean\n{\n    return (Math.abs(a - b) <= tolerance);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * A 16 color palette by [Arne](http://androidarts.com/palette/16pal.htm)\n *\n * @name Phaser.Create.Palettes.ARNE16\n * @since 3.0.0\n *\n * @type {Phaser.Types.Create.Palette}\n */\nexport default {\n    0: '#000',\n    1: '#9D9D9D',\n    2: '#FFF',\n    3: '#BE2633',\n    4: '#E06F8B',\n    5: '#493C2B',\n    6: '#A46422',\n    7: '#EB8931',\n    8: '#F7E26B',\n    9: '#2F484E',\n    A: '#44891A',\n    B: '#A3CE27',\n    C: '#1B2632',\n    D: '#005784',\n    E: '#31A2F2',\n    F: '#B2DCEF'\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * A 16 color palette inspired by the Commodore 64.\n *\n * @name Phaser.Create.Palettes.C64\n * @since 3.0.0\n *\n * @type {Phaser.Types.Create.Palette}\n */\nexport default {\n    0: '#000',\n    1: '#fff',\n    2: '#8b4131',\n    3: '#7bbdc5',\n    4: '#8b41ac',\n    5: '#6aac41',\n    6: '#3931a4',\n    7: '#d5de73',\n    8: '#945a20',\n    9: '#5a4100',\n    A: '#bd736a',\n    B: '#525252',\n    C: '#838383',\n    D: '#acee8b',\n    E: '#7b73de',\n    F: '#acacac'\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * A 16 color CGA inspired palette by [Arne](http://androidarts.com/palette/16pal.htm)\n *\n * @name Phaser.Create.Palettes.CGA\n * @since 3.0.0\n *\n * @type {Phaser.Types.Create.Palette}\n */\nexport default {\n    0: '#000',\n    1: '#2234d1',\n    2: '#0c7e45',\n    3: '#44aacc',\n    4: '#8a3622',\n    5: '#5c2e78',\n    6: '#aa5c3d',\n    7: '#b5b5b5',\n    8: '#5e606e',\n    9: '#4c81fb',\n    A: '#6cd947',\n    B: '#7be2f9',\n    C: '#eb8a60',\n    D: '#e23d69',\n    E: '#ffd93f',\n    F: '#fff'\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * A 16 color JMP palette by [Arne](http://androidarts.com/palette/16pal.htm)\n *\n * @name Phaser.Create.Palettes.JMP\n * @since 3.0.0\n *\n * @type {Phaser.Types.Create.Palette}\n */\nexport default {\n    0: '#000',\n    1: '#191028',\n    2: '#46af45',\n    3: '#a1d685',\n    4: '#453e78',\n    5: '#7664fe',\n    6: '#833129',\n    7: '#9ec2e8',\n    8: '#dc534b',\n    9: '#e18d79',\n    A: '#d6b97b',\n    B: '#e9d8a1',\n    C: '#216c4b',\n    D: '#d365c8',\n    E: '#afaab9',\n    F: '#f5f4eb'\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * A 16 color palette inspired by Japanese computers like the MSX.\n *\n * @name Phaser.Create.Palettes.MSX\n * @since 3.0.0\n *\n * @type {Phaser.Types.Create.Palette}\n */\nexport default {\n    0: '#000',\n    1: '#191028',\n    2: '#46af45',\n    3: '#a1d685',\n    4: '#453e78',\n    5: '#7664fe',\n    6: '#833129',\n    7: '#9ec2e8',\n    8: '#dc534b',\n    9: '#e18d79',\n    A: '#d6b97b',\n    B: '#e9d8a1',\n    C: '#216c4b',\n    D: '#d365c8',\n    E: '#afaab9',\n    F: '#fff'\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport ARNE16 from './Arne16';\nimport C64 from './C64';\nimport CGA from './CGA';\nimport JMP from './JMP';\nimport MSX from './MSX';\n\n/**\n * @namespace Phaser.Create.Palettes\n */\n\nexport {\n    ARNE16,\n    C64,\n    CGA,\n    JMP,\n    MSX\n}\n","import Texture from '../Texture';\nimport Frame from '../Frame';\n\nexport default function AtlasParser (texture: Texture, data: any)\n{\n    let frames;\n\n    if (Array.isArray(data.textures))\n    {\n        //  TP3 Format\n        frames = data.textures[0].frames;\n    }\n    else if (Array.isArray(data.frames))\n    {\n        //  TP2 Format Array\n        frames = data.frames;\n    }\n    else if (data.hasOwnProperty('frames'))\n    {\n        //  TP2 Format Hash\n        frames = Object.values(data.frames);\n    }\n    else\n    {\n        console.warn('Invalid Texture Atlas JSON');\n    }\n\n    if (frames)\n    {\n        let newFrame: Frame;\n\n        for (let i = 0; i < frames.length; i++)\n        {\n            let src = frames[i];\n\n            //  The frame values are the exact coordinates to cut the frame out of the atlas from\n            newFrame = texture.add(src.filename, src.frame.x, src.frame.y, src.frame.w, src.frame.h)\n\n            //  These are the original (non-trimmed) sprite values\n            if (src.trimmed)\n            {\n                newFrame.setTrim(\n                    src.sourceSize.w,\n                    src.sourceSize.h,\n                    src.spriteSourceSize.x,\n                    src.spriteSourceSize.y,\n                    src.spriteSourceSize.w,\n                    src.spriteSourceSize.h\n                );\n            }\n            else\n            {\n                newFrame.setSourceSize(src.sourceSize.w, src.sourceSize.h);\n            }\n\n            if (src.rotated)\n            {\n                // newFrame.rotated = true;\n                // newFrame.updateUVsInverted();\n            }\n\n            if (src.anchor)\n            {\n                newFrame.setPivot(src.anchor.x, src.anchor.y);\n            }\n        }\n    }\n}\n","import Texture from '../Texture';\nimport Frame from '../Frame';\n\n/**\n * Read an integer value from an XML Node.\n *\n * @function getValue\n * @since 3.0.0\n * @private\n *\n * @param {Node} node - The XML Node.\n * @param {string} attribute - The attribute to read.\n *\n * @return {integer} The parsed value.\n */\nfunction getValue (node: any, attribute: string): number\n{\n    return parseInt(node.getAttribute(attribute), 10);\n}\n\nexport default function BitmapTextParser (texture: Texture, xml: XMLDocument, frame?: Frame)\n{\n    const xSpacing = 0;\n    const ySpacing = 0;\n\n    const info = xml.getElementsByTagName('info')[0];\n    const common = xml.getElementsByTagName('common')[0];\n\n    const data = {\n        font: info.getAttribute('face'),\n        size: getValue(info, 'size'),\n        lineHeight: getValue(common, 'lineHeight') + ySpacing,\n        chars: {}\n    };\n\n    const letters = xml.getElementsByTagName('char');\n\n    // var adjustForTrim = (frame !== undefined && frame.trimmed);\n\n    // if (adjustForTrim)\n    // {\n    //     var top = frame.height;\n    //     var left = frame.width;\n    // }\n\n    for (let i: number = 0; i < letters.length; i++)\n    {\n        let node = letters[i];\n\n        let charCode = getValue(node, 'id');\n        let x = getValue(node, 'x');\n        let y = getValue(node, 'y');\n        let width = getValue(node, 'width');\n        let height = getValue(node, 'height');\n\n        //  Handle frame trim issues\n\n        // if (adjustForTrim)\n        // {\n        //     if (gx < left)\n        //     {\n        //         left = gx;\n        //     }\n\n        //     if (gy < top)\n        //     {\n        //         top = gy;\n        //     }\n        // }\n\n        data.chars[charCode] =\n        {\n            x,\n            y,\n            width,\n            height,\n            // centerX: Math.floor(width / 2),\n            // centerY: Math.floor(height / 2),\n            xOffset: getValue(node, 'xoffset'),\n            yOffset: getValue(node, 'yoffset'),\n            xAdvance: getValue(node, 'xadvance') + xSpacing,\n            // data: {},\n            kerning: {}\n        };\n\n        texture.add(charCode, x, y, width, height);\n    }\n\n    /*\n    if (adjustForTrim && top !== 0 && left !== 0)\n    {\n        //  Now we know the top and left coordinates of the glyphs in the original data\n        //  so we can work out how much to adjust the glyphs by\n\n        for (var code in data.chars)\n        {\n            var glyph = data.chars[code];\n\n            glyph.x -= frame.x;\n            glyph.y -= frame.y;\n        }\n    }\n    */\n\n    const kernings = xml.getElementsByTagName('kerning');\n\n    for (let i: number = 0; i < kernings.length; i++)\n    {\n        let kern = kernings[i];\n\n        let first = getValue(kern, 'first');\n        let second = getValue(kern, 'second');\n        let amount = getValue(kern, 'amount');\n\n        data.chars[second].kerning[first] = amount;\n    }\n\n    return data;\n}\n","import IFrameConfig from '../IFrameConfig';\nimport Texture from '../Texture';\n\nexport default function (texture: Texture, x: number, y: number, width: number, height: number, frameConfig: IFrameConfig)\n{\n    let {\n        frameWidth = null,\n        frameHeight = null,\n        startFrame = 0,\n        endFrame = -1,\n        margin = 0,\n        spacing = 0\n    } = frameConfig;\n\n    if (!frameHeight)\n    {\n        frameHeight = frameWidth;\n    }\n\n    //  If missing we can't proceed\n    if (frameWidth === null)\n    {\n        throw new Error('SpriteSheetParser: Invalid frameWidth');\n    }\n\n    const row: number = Math.floor((width - margin + spacing) / (frameWidth + spacing));\n    const column: number = Math.floor((height - margin + spacing) / (frameHeight + spacing));\n    let total: number = row * column;\n\n    if (total === 0)\n    {\n        console.warn('SpriteSheetParser: Frame config will result in zero frames');\n    }\n\n    if (startFrame > total || startFrame < -total)\n    {\n        startFrame = 0;\n    }\n\n    if (startFrame < 0)\n    {\n        //  Allow negative skipframes.\n        startFrame = total + startFrame;\n    }\n\n    if (endFrame !== -1)\n    {\n        total = startFrame + (endFrame + 1);\n    }\n\n    let fx: number = margin;\n    let fy: number = margin;\n    let ax: number = 0;\n    let ay: number = 0;\n\n    for (let i: number = 0; i < total; i++)\n    {\n        ax = 0;\n        ay = 0;\n\n        let w: number = fx + frameWidth;\n        let h: number = fy + frameHeight;\n\n        if (w > width)\n        {\n            ax = w - width;\n        }\n\n        if (h > height)\n        {\n            ay = h - height;\n        }\n\n        texture.add(i, x + fx, y + fy, frameWidth - ax, frameHeight - ay);\n\n        fx += frameWidth + spacing;\n\n        if (fx + frameWidth > width)\n        {\n            fx = margin;\n            fy += frameHeight + spacing;\n        }\n    }\n}\n","import CreateCanvas from '../CreateCanvas';\nimport Texture from '../Texture';\n\nexport default function GridTexture (color1: string, color2: string, width: number = 32, height: number = 32, cols: number = 2, rows: number = 2): Texture\n{\n    const ctx = CreateCanvas(width, height);\n\n    const colWidth = width / cols;\n    const rowHeight = height / rows;\n\n    ctx.fillStyle = color1;\n    ctx.fillRect(0, 0, width, height);\n\n    ctx.fillStyle = color2;\n\n    for (let y: number = 0; y < rows; y++)\n    {\n        for (let x: number = (y % 2); x < cols; x += 2)\n        {\n            ctx.fillRect(x * colWidth, y * rowHeight, colWidth, rowHeight);\n        }\n    }\n\n    return new Texture(ctx.canvas);\n}\n","/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2020 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nimport Arne16 from '../palettes/Arne16';\nimport CreateCanvas from '../CreateCanvas';\nimport Texture from '../Texture';\n\n/**\n * @callback Phaser.Types.Create.GenerateTextureCallback\n * @since 3.0.0\n *\n * @param {HTMLCanvasElement} canvas - The HTML Canvas element to operate on.\n * @param {CanvasRenderingContext2D} context - The context of the HTML Canvas element.\n */\n\n/**\n * @typedef {object} Phaser.Types.Create.GenerateTextureConfig\n * @since 3.0.0\n *\n * @property {array} [data=[]] - An array of data, where each row is a string of single values 0-9A-F, or the period character.\n * @property {HTMLCanvasElement} [canvas=null] - The HTML Canvas to draw the texture to.\n * @property {Phaser.Types.Create.Palette} [palette=Arne16] - The indexed palette that the data cell values map to.\n * @property {number} [pixelWidth=1] - The width of each 'pixel' in the generated texture.\n * @property {number} [pixelHeight=1] - The height of each 'pixel' in the generated texture.\n * @property {boolean} [resizeCanvas=true] - Should the canvas be resized before the texture is drawn?\n * @property {boolean} [clearCanvas=true] - Should the canvas be cleared before the texture is drawn?\n * @property {Phaser.Types.Create.GenerateTextureCallback} [preRender] - A callback to send the canvas to prior to the texture being drawn.\n * @property {Phaser.Types.Create.GenerateTextureCallback} [postRender] - A callback to send the canvas to after the texture has been drawn.\n */\n\nexport type PixelTextureConfig = {\n    data: string[],\n    canvas?: HTMLCanvasElement,\n    palette?: any,\n    pixelWidth?: number,\n    pixelHeight?: number,\n    resizeCanvas?: boolean,\n    clearCanvas?: boolean,\n    preRender?: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void,\n    postRender?: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => void\n}\n\n/**\n * Generates a texture based on the given Create configuration object.\n * \n * The texture is drawn using a fixed-size indexed palette of 16 colors, where the hex value in the\n * data cells map to a single color. For example, if the texture config looked like this:\n *\n * ```javascript\n * var star = [\n *   '.....828.....',\n *   '....72227....',\n *   '....82228....',\n *   '...7222227...',\n *   '2222222222222',\n *   '8222222222228',\n *   '.72222222227.',\n *   '..787777787..',\n *   '..877777778..',\n *   '.78778887787.',\n *   '.27887.78872.',\n *   '.787.....787.'\n * ];\n * \n * this.textures.generate('star', { data: star, pixelWidth: 4 });\n * ```\n * \n * Then it would generate a texture that is 52 x 48 pixels in size, because each cell of the data array\n * represents 1 pixel multiplied by the `pixelWidth` value. The cell values, such as `8`, maps to color\n * number 8 in the palette. If a cell contains a period character `.` then it is transparent.\n * \n * The default palette is Arne16, but you can specify your own using the `palette` property.\n *\n * @function Phaser.Create.GenerateTexture\n * @since 3.0.0\n *\n * @param {Phaser.Types.Create.GenerateTextureConfig} config - The Generate Texture Configuration object.\n *\n * @return {Texture} An HTMLCanvasElement which contains the generated texture drawn to it.\n */\nexport default function PixelTexture (config: PixelTextureConfig): Texture\n{\n    let {\n        data = [],\n        canvas = null,\n        palette = Arne16,\n        pixelWidth = 1,\n        pixelHeight = 1,\n        resizeCanvas = true,\n        clearCanvas = true,\n        preRender = null,\n        postRender = null\n    } = config;\n\n    const width = Math.floor(Math.abs(data[0].length * pixelWidth));\n    const height = Math.floor(Math.abs(data.length * pixelHeight));\n\n    if (!canvas)\n    {\n        canvas = CreateCanvas(width, height).canvas;\n        resizeCanvas = false;\n        clearCanvas = false;\n    }\n\n    if (resizeCanvas)\n    {\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n    const ctx = canvas.getContext('2d');\n\n    if (clearCanvas)\n    {\n        ctx.clearRect(0, 0, width, height);\n    }\n\n    //  preRender Callback?\n    if (preRender)\n    {\n        preRender(canvas, ctx);\n    }\n\n    //  Draw it\n    for (let y = 0; y < data.length; y++)\n    {\n        const row = data[y];\n\n        for (let x = 0; x < row.length; x++)\n        {\n            const d = row[x];\n\n            if (d !== '.' && d !== ' ')\n            {\n                ctx.fillStyle = palette[d];\n                ctx.fillRect(x * pixelWidth, y * pixelHeight, pixelWidth, pixelHeight);\n            }\n        }\n    }\n\n    //  postRender Callback?\n    if (postRender)\n    {\n        postRender(canvas, ctx);\n    }\n\n    return new Texture(canvas);\n}\n","import ISprite from './ISprite';\nimport WebGLRenderer from '../../renderer/webgl1/WebGLRenderer';\nimport IShader from '../../renderer/webgl1/shaders/IShader';\n\nexport default function RenderWebGL (sprite: ISprite, renderer: WebGLRenderer, shader: IShader, startActiveTexture: number)\n{\n    const texture = sprite.texture;\n\n    if (texture.glIndexCounter < startActiveTexture)\n    {\n        renderer.requestTexture(texture);\n    }\n\n    if (shader.count === shader.batchSize)\n    {\n        shader.flush();\n    }\n\n    sprite.uploadBuffers(shader.vertexViewF32, shader.vertexViewU32, shader.count * shader.quadElementSize);\n\n    shader.count++;\n}\n","export default function Ortho (width: number, height: number, near: number = -1, far: number = 1): Float32Array\n{\n    const m00: number = -2 * (1 / -width);\n    const m11: number = -2 * (1 / height);\n    const m22: number = 2 * (1 / (near - far));\n\n    return new Float32Array([ m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, -1, 1, 0, 1 ]);\n}\n","import GL from './GL';\nimport CreateGLTexture from './CreateGLTexture';\n\nexport default function CreateFramebuffer (width: number, height: number): [ WebGLTexture, WebGLFramebuffer ]\n{\n    const gl = GL.get();\n    const texture = CreateGLTexture(null, width, height);\n    const framebuffer = gl.createFramebuffer();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    return [ texture, framebuffer ];\n}\n","import Texture from '../Texture';\nimport ISprite from '../../gameobjects/sprite/ISprite';\nimport SpriteRenderWebGL from '../../gameobjects/sprite/RenderWebGL';\nimport WebGLRenderer from '../../renderer/webgl1/WebGLRenderer';\nimport Ortho from '../../renderer/webgl1/Ortho';\nimport CreateFramebuffer from '../../renderer/webgl1/CreateFramebuffer';\n\nexport default class RenderTexture extends Texture\n{\n    renderer: WebGLRenderer;\n    cameraMatrix: Float32Array;\n    projectionMatrix: Float32Array;\n\n    constructor (renderer: WebGLRenderer, width: number = 256, height: number = width)\n    {\n        super(null, width, height);\n\n        this.renderer = renderer;\n\n        const [ texture, framebuffer ] = CreateFramebuffer(width, height);\n\n        this.glTexture = texture;\n        this.glFramebuffer = framebuffer;\n\n        this.projectionMatrix = Ortho(width, height);\n        this.cameraMatrix = new Float32Array([ 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, height, 0, 1 ]);\n    }\n\n    cls (): this\n    {\n        const renderer = this.renderer;\n        const gl = renderer.gl;\n\n        renderer.reset(this.glFramebuffer, this.width, this.height);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        renderer.reset();\n\n        return this;\n    }\n\n    batchStart (): this\n    {\n        const renderer = this.renderer;\n\n        renderer.reset(this.glFramebuffer, this.width, this.height);\n\n        renderer.shader.bind(this.projectionMatrix, this.cameraMatrix);\n\n        return this;\n    }\n\n    batchDraw (...sprites: ISprite[]): this\n    {\n        const renderer = this.renderer;\n        const shader = renderer.shader;\n\n        for (let i: number = 0; i < sprites.length; i++)\n        {\n            SpriteRenderWebGL(sprites[i], renderer, shader, renderer.startActiveTexture);\n        }\n\n        return this;\n    }\n\n    batchEnd (): this\n    {\n        const renderer = this.renderer;\n        const shader = renderer.shader;\n\n        shader.flush();\n\n        renderer.reset();\n\n        return this;\n    }\n\n    draw (...sprites: ISprite[]): this\n    {\n        this.batchStart();\n        this.batchDraw(...sprites);\n        this.batchEnd();\n\n        return this;\n    }\n}\n","import CreateCanvas from '../CreateCanvas';\nimport Texture from '../Texture';\n\nexport default function SolidColorTexture (color: string = 'rgba(0,0,0,0)', width: number = 32, height: number = 32): Texture\n{\n    const ctx = CreateCanvas(width, height);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, width, height);\n\n    return new Texture(ctx.canvas);\n}\n","import Texture from './Texture';\nimport CreateCanvas from './CreateCanvas';\n\nexport default class TextureManager\n{\n    textures: Map<string, Texture>;\n\n    constructor ()\n    {\n        this.textures = new Map();\n\n        this.createDefaultTextures();\n    }\n\n    private createDefaultTextures ()\n    {\n        this.add('__BLANK', new Texture(CreateCanvas(32, 32).canvas));\n\n        const missing = CreateCanvas(32, 32);\n\n        missing.strokeStyle = '#0f0';\n        missing.moveTo(0, 0);\n        missing.lineTo(32, 32);\n        missing.stroke();\n        missing.strokeRect(0.5, 0.5, 31, 31);\n\n        this.add('__MISSING', new Texture(missing.canvas));\n    }\n\n    get (key: string): Texture\n    {\n        if (this.textures.has(key))\n        {\n            return this.textures.get(key);\n        }\n        else\n        {\n            return this.textures.get('__MISSING');\n        }\n    }\n\n    has (key: string): boolean\n    {\n        return this.textures.has(key);\n    }\n\n    add (key: string, source: Texture | HTMLImageElement)\n    {\n        let texture: Texture;\n\n        if (!this.textures.has(key))\n        {\n            if (source instanceof Texture)\n            {\n                texture = source;\n            }\n            else\n            {\n                texture = new Texture(source);\n            }\n\n            texture.key = key;\n\n            if (!texture.glTexture)\n            {\n                texture.createGL();\n            }\n\n            this.textures.set(key, texture);\n        }\n\n        return texture;\n    }\n}","//  From Pixi v5\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'void main(void){',\n    'float test = 0.1;',\n    '%forloop%',\n    'gl_FragColor = vec4(0.0);',\n    '}',\n].join('\\n');\n\nfunction generateSrc (maxIfs: number): string\n{\n    let src = '';\n\n    for (let i = 0; i < maxIfs; ++i)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1)\n        {\n            src += `if(test == ${i}.0){}`;\n        }\n    }\n\n    return src;\n}\n\nexport default function CheckShaderMaxIfStatements (maxIfs: number, gl: WebGLRenderingContext): number\n{\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true)\n    {\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            maxIfs = (maxIfs / 2) | 0;\n        }\n        else\n        {\n            // valid!\n            break;\n        }\n    }\n\n    return maxIfs;\n}\n","import WebGLRenderer from '../WebGLRenderer';\nimport IShaderConfig from './IShaderConfig';\n\nconst shaderSource = {\n\n    fragmentShader: `\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nuniform sampler2D uTexture[%count%];\n\nvoid main (void)\n{\n    vec4 color;\n    %forloop%\n\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`,\n    \n    vertexShader: `\nprecision highp float;\n\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute float aTextureId;\nattribute vec4 aTintColor;\n\nuniform mat4 uProjectionMatrix;\nuniform mat4 uCameraMatrix;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\n\nvoid main (void)\n{\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vTintColor = aTintColor;\n\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\n}`\n}\n\nexport default class MultiTextureQuadShader\n{\n    renderer: WebGLRenderer;\n    gl: WebGLRenderingContext;\n\n    program: WebGLProgram;\n\n    attribs: { aVertexPosition: number; aTextureCoord: number; aTextureId: number; aTintColor: number } = { aVertexPosition: 0, aTextureCoord: 0, aTextureId: 0, aTintColor: 0 };\n    uniforms: { uProjectionMatrix: WebGLUniformLocation; uCameraMatrix: WebGLUniformLocation; uTexture: WebGLUniformLocation; } = { uProjectionMatrix: 0, uCameraMatrix: 0, uTexture: 0 };\n\n    /**\n     * Maximum number of quads per batch before a flush takes place.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    batchSize: number;\n\n    /**\n     * The size, in bytes, per entry in the array buffer.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    dataSize: number = 4;\n\n    /**\n     * The size, in bytes, per entry in the element index array.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    indexSize: number = 4;\n\n    /**\n     * The amount of elements / floats a single vertex consists of.\n     * \n     * The default is 6:\n     * \n     * position (x,y - 2 floats)\n     * texture coord (x,y - 2 floats)\n     * texture index (float)\n     * packed color (vec4)\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexElementSize: number = 6;\n\n    /**\n     * The size, in bytes, of a single vertex in the array buffer.\n     * \n     * This is `vertexElementSize * dataSize`.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexByteSize: number = 6 * 4;\n\n    /**\n     * The size, in bytes, of a single quad in the array buffer.\n     * \n     * This is `vertexByteSize * 4`.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    quadByteSize: number = (6 * 4) * 4;\n\n    /**\n     * The size, in quantity of elements, of a single quad in the element index array.\n     * \n     * This is `vertexElementSize * 4`.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    quadElementSize: number = 6 * 4;\n\n    /**\n     * The total number of entries per quad in the element index array.\n     * \n     * The IBO contains 6 entries per quad:\n     * \n     * 0, 1, 2\n     * 2, 3, 0\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    quadIndexSize: number = 6;\n\n    /**\n     * The size, in bytes, of the Array Buffer.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    bufferByteSize: number;\n\n    /**\n     * The Array Buffer.\n     *\n     * @type {ArrayBuffer}\n     * @memberof MultiTextureQuadShader\n     */\n    data: ArrayBuffer;\n\n    /**\n     * Float32 View of the Array Buffer.\n     *\n     * @type {Float32Array}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexViewF32: Float32Array;\n\n    /**\n     * Uint32 View of the Array Buffer.\n     *\n     * @type {Uint32Array}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexViewU32: Uint32Array;\n\n    /**\n     * The Element Array Buffer.\n     *\n     * @type {Uint16Array}\n     * @memberof MultiTextureQuadShader\n     */\n    index: Uint16Array;\n\n    /**\n     * The data array buffer.\n     *\n     * @type {WebGLBuffer}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexBuffer: WebGLBuffer;\n\n    /**\n     * The element array buffer.\n     *\n     * @type {WebGLBuffer}\n     * @memberof MultiTextureQuadShader\n     */\n    indexBuffer: WebGLBuffer;\n\n    /**\n     * The total number of quads added to the batch so far.\n     * Reset every bind and flush.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    count: number;\n\n    //  The number of quads previously flushed\n    prevCount: number;\n\n    constructor (renderer: WebGLRenderer, config: IShaderConfig = {})\n    {\n        this.renderer = renderer;\n        this.gl = renderer.gl;\n\n        const {\n            batchSize = 4096,\n            fragmentShader = shaderSource.fragmentShader,\n            vertexShader = shaderSource.vertexShader\n        } = config;\n\n        this.batchSize = batchSize;\n        this.bufferByteSize = batchSize * this.quadByteSize;\n\n        this.createBuffers();\n        this.createShaders(fragmentShader, vertexShader);\n\n        this.count = 0;\n    }\n\n    createBuffers ()\n    {\n        let ibo: number[] = [];\n        \n        //  Seed the index buffer\n        for (let i: number = 0; i < (this.batchSize * this.indexSize); i += this.indexSize)\n        {\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\n        }\n        \n        this.data = new ArrayBuffer(this.bufferByteSize);\n        this.index = new Uint16Array(ibo);\n\n        this.vertexViewF32 = new Float32Array(this.data);\n        this.vertexViewU32 = new Uint32Array(this.data);\n\n        const gl = this.gl;\n\n        this.vertexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\n       \n        this.indexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n\n        //  Tidy-up\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        ibo = [];\n    }\n\n    createShaders (fragmentShaderSource: string, vertexShaderSource: string)\n    {\n        const gl = this.gl;\n        const maxTextures = this.renderer.maxTextures;\n\n        let src: string = '';\n\n        if (maxTextures > 1)\n        {\n            for (let i: number = 0; i < maxTextures; i++)\n            {\n                if (i > 0)\n                {\n                    src += '\\nelse ';\n                }\n        \n                if (i < maxTextures - 1)\n                {\n                    src += `if (vTextureId < ${i}.5)`;\n                }\n        \n                src += '\\n{';\n                src += `\\n  color = texture2D(uTexture[${i}], vTextureCoord);`;\n                src += '\\n}';\n            }\n    \n            fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\n            fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\n        }\n        else\n        {\n            src = 'color = texture2D(uTexture[0], vTextureCoord);';\n        }\n\n        //  Create the shaders\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        \n        gl.shaderSource(fragmentShader, fragmentShaderSource);\n        gl.compileShader(fragmentShader);\n        \n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        \n        gl.shaderSource(vertexShader, vertexShaderSource);\n        gl.compileShader(vertexShader);\n        \n        const program = gl.createProgram();\n        \n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n\n        gl.useProgram(program);\n\n        this.program = program;\n        \n        for (let key of Object.keys(this.attribs))\n        {\n            let location = gl.getAttribLocation(program, key);\n\n            gl.enableVertexAttribArray(location);\n\n            this.attribs[key] = location;\n        }\n\n        for (let key of Object.keys(this.uniforms))\n        {\n            this.uniforms[key] = gl.getUniformLocation(program, key);\n        }\n    }\n\n    bind (projectionMatrix: Float32Array, cameraMatrix: Float32Array)\n    {\n        const gl = this.gl;\n        const renderer = this.renderer;\n        const uniforms = this.uniforms;\n\n        gl.useProgram(this.program);\n\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\n        gl.uniform1iv(uniforms.uTexture, renderer.textureIndex);\n\n        this.bindBuffers(this.indexBuffer, this.vertexBuffer);\n    }\n\n    bindBuffers (indexBuffer: WebGLBuffer, vertexBuffer: WebGLBuffer)\n    {\n        const gl = this.gl;\n        const stride = this.vertexByteSize;\n        const attribs = this.attribs;\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        //  attributes must be reset whenever you change buffers\n\n        gl.vertexAttribPointer(attribs.aVertexPosition, 2, gl.FLOAT, false, stride, 0);     // size = 8\n        gl.vertexAttribPointer(attribs.aTextureCoord, 2, gl.FLOAT, false, stride, 8);       // size = 8, offset = position\n        gl.vertexAttribPointer(attribs.aTextureId, 1, gl.FLOAT, false, stride, 16);         // size = 4, offset = position + tex coord\n        gl.vertexAttribPointer(attribs.aTintColor, 4, gl.UNSIGNED_BYTE, true, stride, 20);  // size = 4, offset = position + tex coord + index\n\n        this.count = 0;\n    }\n\n    draw (count: number)\n    {\n        const gl = this.gl;\n        const offset = count * this.quadByteSize;\n\n        if (offset === this.bufferByteSize)\n        {\n            gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\n        }\n        else\n        {\n            let view = this.vertexViewF32.subarray(0, offset);\n\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n        }\n\n        gl.drawElements(gl.TRIANGLES, count * this.quadIndexSize, gl.UNSIGNED_SHORT, 0);\n    }\n\n    flush (): boolean\n    {\n        const count = this.count;\n\n        if (count === 0)\n        {\n            return false;\n        }\n\n        this.draw(count);\n\n        this.prevCount = count;\n\n        this.count = 0;\n\n        this.renderer.flushTotal++;\n\n        return true;\n    }\n}\n","let _bgColor: number = 0;\n\nfunction BackgroundColor (color: number = 0)\n{\n    return () => {\n\n        _bgColor = color;\n    \n    };\n}\n\nfunction GetBackgroundColor (): number\n{\n    return _bgColor;\n}\n\nexport {\n    BackgroundColor,\n    GetBackgroundColor\n}\n","import IBaseScene from '../scenes/IBaseScene';\n\nlet _scenes: any[] = [];\n\nfunction Scenes (scenes?: IBaseScene | IBaseScene[] | any | any[])\n{\n    return () => {\n\n        _scenes = [].concat(scenes);\n\n    };\n}\n\nfunction GetScenes (): any[]\n{\n    return _scenes;\n}\n\nexport {\n    Scenes,\n    GetScenes\n}\n","let _width: number = 800;\nlet _height: number = 600;\nlet _resolution: number = 1;\n\nfunction Size (width: number = 800, height: number = 600, resolution: number = 1)\n{\n    if (resolution === 0)\n    {\n        resolution = window.devicePixelRatio;\n    }\n\n    return () => {\n\n        _width = width;\n        _height = height;\n        _resolution = resolution;\n    \n    };\n}\n\nfunction GetWidth (): number\n{\n    return _width;\n}\n\nfunction GetHeight (): number\n{\n    return _height;\n}\n\nfunction GetResolution (): number\n{\n    return _resolution;\n}\n\nexport {\n    Size,\n    GetWidth,\n    GetHeight,\n    GetResolution\n}\n","let _contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    antialias: false,\n    depth: false,\n    premultipliedAlpha: false\n};\n\nfunction WebGLContext (contextAttributes: WebGLContextAttributes)\n{\n    return () => {\n\n        _contextAttributes = contextAttributes;\n    \n    };\n}\n\nfunction GetWebGLContext (): WebGLContextAttributes\n{\n    return _contextAttributes;\n}\n\nexport {\n    WebGLContext,\n    GetWebGLContext\n}\n","import CheckShaderMaxIfStatements from './shaders/CheckShaderMaxIfStatements';\nimport MultiTextureQuadShader from './shaders/MultiTextureQuadShader';\nimport Texture from '../../textures/Texture';\nimport Matrix2dEqual from '../../math/matrix2d-funcs/ExactEquals';\nimport ICamera from '../../camera/ICamera';\nimport Ortho from './Ortho';\nimport GL from './GL';\nimport IGameObject from '../../gameobjects/gameobject/IGameObject';\nimport SpriteRenderWebGL from '../../gameobjects/sprite/RenderWebGL';\nimport ISprite from '../../gameobjects/sprite/ISprite';\nimport IShader from './shaders/IShader';\nimport { GetWidth, GetHeight, GetResolution, GetBackgroundColor, GetWebGLContext } from '../../config';\n\nexport default class WebGLRenderer\n{\n    canvas: HTMLCanvasElement;\n    gl: WebGLRenderingContext;\n\n    clearColor = [ 0, 0, 0, 1 ];\n\n    shader: IShader;\n\n    width: number;\n    height: number;\n    resolution: number;\n    \n    projectionMatrix: Float32Array;\n    textureIndex: number[];\n    flushTotal: number = 0;\n    \n    maxTextures: number = 0;\n    activeTextures: Texture[];\n    currentActiveTexture: number = 0;\n    startActiveTexture: number = 0;\n    tempTextures: WebGLTexture[] = [];\n\n    clearBeforeRender: boolean = true;\n    optimizeRedraw: boolean = true;\n    autoResize: boolean = true;\n\n    contextLost: boolean = false;\n    elementIndexExtension: OES_element_index_uint;\n\n    constructor ()\n    {\n        this.width = GetWidth();\n        this.height = GetHeight();\n        this.resolution = GetResolution();\n\n        this.setBackgroundColor(GetBackgroundColor());\n\n        const canvas = document.createElement('canvas');\n\n        canvas.addEventListener('webglcontextlost', (event) => this.onContextLost(event), false);\n        canvas.addEventListener('webglcontextrestored', () => this.onContextRestored(), false);\n\n        this.canvas = canvas;\n\n        this.initContext();\n\n        this.shader = new MultiTextureQuadShader(this);\n    }\n\n    initContext ()\n    {\n        const gl = this.canvas.getContext('webgl', GetWebGLContext());\n\n        GL.set(gl);\n\n        this.gl = gl;\n\n        this.elementIndexExtension = gl.getExtension('OES_element_index_uint');\n\n        this.getMaxTextures();\n\n        if (this.shader)\n        {\n            this.shader.gl = gl;\n        }\n\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.CULL_FACE);\n\n        this.resize(this.width, this.height, this.resolution);\n    }\n\n    resize (width: number, height: number, resolution: number = 1)\n    {\n        this.width = width * resolution;\n        this.height = height * resolution;\n        this.resolution = resolution;\n    \n        const canvas = this.canvas;\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n    \n        if (this.autoResize)\n        {\n            canvas.style.width = this.width / resolution + 'px';\n            canvas.style.height = this.height / resolution + 'px';\n        }\n    \n        this.gl.viewport(0, 0, this.width, this.height);\n\n        this.projectionMatrix = Ortho(width, height);\n    }\n\n    onContextLost (event)\n    {\n        event.preventDefault();\n\n        this.contextLost = true;\n    }\n\n    onContextRestored ()\n    {\n        this.contextLost = false;\n\n        this.initContext();\n    }\n\n    setBackgroundColor (color: number)\n    {\n        const clearColor = this.clearColor;\n\n        const r: number = color >> 16 & 0xFF;\n        const g: number = color >> 8 & 0xFF;\n        const b: number = color & 0xFF;\n        const a: number = (color > 16777215) ? color >>> 24 : 255;\n    \n        clearColor[0] = r / 255;\n        clearColor[1] = g / 255;\n        clearColor[2] = b / 255;\n        clearColor[3] = a / 255;\n\n        return this;\n    }\n\n    private getMaxTextures ()\n    {\n        const gl = this.gl;\n\n        let maxTextures: number = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), gl);\n\n        const tempTextures = this.tempTextures;\n\n        if (tempTextures.length)\n        {\n            tempTextures.forEach(texture => {\n\n                gl.deleteTexture(texture);\n\n            });\n        }\n\n        //  Create temp textures to stop WebGL errors on mac os\n        for (let i: number = 0; i < maxTextures; i++)\n        {\n            let tempTexture = gl.createTexture();\n    \n            gl.activeTexture(gl.TEXTURE0 + i);\n    \n            gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n    \n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([ 0, 0, 255, 255 ]));\n\n            tempTextures[i] = tempTexture;\n        }\n\n        this.maxTextures = maxTextures;\n        \n        this.textureIndex = Array.from(Array(maxTextures).keys());\n        this.activeTextures = Array(maxTextures);\n\n        this.currentActiveTexture = 0;\n    }\n\n    reset (framebuffer: WebGLFramebuffer = null, width: number = this.width, height: number = this.height)\n    {\n        const gl = this.gl;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        gl.viewport(0, 0, width, height);\n\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n        this.currentActiveTexture = 0;\n        this.startActiveTexture++;\n        this.flushTotal = 0;\n    }\n\n    render (sceneList: any[], dirtyFrame: number, dirtyCameras: number)\n    {\n        if (this.contextLost)\n        {\n            return;\n        }\n\n        const gl = this.gl;\n        const flushTotal = this.flushTotal;\n\n        //  This is only here because if we don't do _something_ with the context, GL Spector can't see it.\n        //  Technically, we could move it below the dirty bail-out below.\n        this.reset();\n\n        //  Cache 1 - Nothing dirty? Display the previous frame\n        if (this.optimizeRedraw && dirtyFrame === 0 && dirtyCameras === 0)\n        {\n            return;\n        }\n\n        const shader = this.shader;\n        const cls = this.clearColor;\n\n        if (this.clearBeforeRender)\n        {\n            gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        const projectionMatrix = this.projectionMatrix;\n\n        //  Cache 2 - Only one dirty camera and one flush? We can re-use the buffers\n        /*\n        if (dirtyCameras === 1 && dirtyFrame === 0 && flushTotal === 1)\n        {\n            //  Total items rendered in the previous frame\n            const count = shader.prevCount;\n\n            shader.bind(projectionMatrix, sceneList[0].matrix);\n\n            shader.draw(count);\n\n            shader.prevCount = count;\n\n            this.flushTotal = 1;\n\n            return;\n        }\n        */\n\n        let prevCamera: ICamera;\n\n        for (let c: number = 0; c < sceneList.length; c += 2)\n        {\n            let camera: ICamera = sceneList[c];\n            let list: IGameObject[] = sceneList[c + 1];\n\n            //  This only needs rebinding if the camera matrix is different to before\n            if (!prevCamera || !Matrix2dEqual(camera.worldTransform, prevCamera.worldTransform))\n            {\n                shader.flush();\n\n                shader.bind(projectionMatrix, camera.matrix);\n\n                prevCamera = camera;\n            }\n\n            //  Process the render list\n            for (let i: number = 0; i < list.length; i++)\n            {\n                SpriteRenderWebGL(list[i] as ISprite, this, shader, this.startActiveTexture);\n            }\n        }\n\n        //  One final sweep\n        shader.flush();\n    }\n\n    resetTextures (texture?: Texture)\n    {\n        const gl = this.gl;\n        const active = this.activeTextures;\n\n        active.fill(null);\n\n        this.currentActiveTexture = 0;\n        this.startActiveTexture++;\n\n        if (texture)\n        {\n            //  Set this texture as texture0\n            active[0] = texture;\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n\n            this.currentActiveTexture = 1;\n        }\n    }\n\n    requestTexture (texture: Texture)\n    {\n        const gl = this.gl;\n\n        texture.glIndexCounter = this.startActiveTexture;\n\n        if (this.currentActiveTexture < this.maxTextures)\n        {\n            //  Make this texture active\n            this.activeTextures[this.currentActiveTexture] = texture;\n\n            texture.glIndex = this.currentActiveTexture;\n\n            gl.activeTexture(gl.TEXTURE0 + this.currentActiveTexture);\n            gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n\n            this.currentActiveTexture++;\n        }\n        else\n        {\n            //  We're out of textures, so flush the batch and reset them all\n            this.shader.flush();\n\n            this.resetTextures(texture);\n        }\n    }\n}\n","import ISceneConfig from './ISceneConfig';\n\nexport default function GetConfigValue (config: ISceneConfig, property: string, defaultValue: any): any\n{\n    if (config.hasOwnProperty(property))\n    {\n        return config[property];\n    }\n    else\n    {\n        return defaultValue;\n    }\n}\n","import Game from '../Game';\nimport IBaseScene from './IBaseScene';\nimport ISceneConfig from './ISceneConfig';\nimport GetConfigValue from './GetConfigValue';\nimport IBaseSceneConstructor from './IBaseSceneConstructor';\nimport { GetScenes } from '../config';\nimport GameInstance from '../GameInstance';\n\nexport default class SceneManager\n{\n    game: Game;\n\n    scenes: Map<string, IBaseScene>;\n\n    sceneIndex: number = 0;\n\n    //  Flush the cache\n    flush: boolean = false;\n\n    //  How many Cameras were made dirty this frame across all Scenes?\n    dirtyCameras: number = 0;\n\n    //  How many Game Objects were made dirty this frame across all Scenes?\n    dirtyFrame: number = 0;\n\n    //  How many Game Objects were processed this frame across all Scenes?\n    totalFrame: number = 0;\n\n    renderList: any[];\n    \n    constructor ()\n    {\n        this.game = GameInstance.get();\n\n        this.scenes = new Map();\n\n        this.renderList = [];\n\n        this.game.once('boot', () => this.boot());\n    }\n\n    boot ()\n    {\n        const scenes = GetScenes();\n\n        scenes.forEach(scene => {\n\n            this.add(scene);\n\n        });\n    }\n\n    add (scene: IBaseSceneConstructor)\n    {\n        const instance = new scene();\n\n        //  At this point the act of creating a new instance of the Scene\n        //  will have invoked the init method below, so we can now safely\n        //  add the Scene into our Map\n\n        if (instance.willUpdate)\n        {\n            instance.boot.call(instance);\n        }\n    }\n\n    init (scene: IBaseScene, config: string | ISceneConfig = {})\n    {\n        const size = this.scenes.size;\n        const sceneIndex = this.sceneIndex;\n        const firstScene: boolean = (size === 0);\n\n        if (typeof config === 'string')\n        {\n            scene.key = config;\n        }\n        else if (config || (!config && firstScene))\n        {\n            scene.key = GetConfigValue(config, 'key', 'scene' + sceneIndex) as string;\n            scene.willUpdate = GetConfigValue(config, 'willUpdate', firstScene) as boolean;\n            scene.willRender = GetConfigValue(config, 'willRender', firstScene) as boolean;\n        }\n\n        if (this.scenes.has(scene.key))\n        {\n            console.warn('Scene key already in use: ' + scene.key);\n        }\n        else\n        {\n            this.scenes.set(scene.key, scene);\n\n            this.flush = true;\n\n            this.sceneIndex++;\n        }\n    }\n\n    update (delta: number, now: number)\n    {\n        for (const scene of this.scenes.values())\n        {\n            if (scene.willUpdate)\n            {\n                scene.update.call(scene, delta, now);\n\n                scene.world.update(delta, now);\n            }\n        }\n    }\n\n    render (gameFrame: number): [ any[], number, number ]\n    {\n        const renderList = this.renderList;\n\n        renderList.length = 0;\n\n        this.dirtyCameras = 0;\n        this.dirtyFrame = 0;\n        this.totalFrame = 0;\n\n        for (let scene of this.scenes.values())\n        {\n            if (scene.willRender)\n            {\n                let world = scene.world;\n\n                this.dirtyFrame += world.render(gameFrame);\n                this.totalFrame += world.totalFrame;\n\n                if (world.renderList.length === 0)\n                {\n                    continue;\n                }\n\n                if (world.camera.dirtyRender)\n                {\n                    this.dirtyCameras++;\n\n                    world.camera.dirtyRender = false;\n                }\n    \n                renderList.push(world.camera);\n                renderList.push(world.renderList);\n            }\n        }\n\n        if (this.flush)\n        {\n            //  Invalidate the renderer cache\n            this.dirtyFrame++;\n\n            //  And reset\n            this.flush = false;\n        }\n\n        return [ renderList, this.dirtyFrame, this.dirtyCameras ];\n    }\n}\n","import { AddToDOM, DOMContentLoaded } from './dom';\nimport WebGLRenderer from './renderer/webgl1/WebGLRenderer';\nimport SceneManager from './scenes/SceneManager';\nimport TextureManager from './textures/TextureManager';\nimport EventEmitter from './events/EventEmitter';\nimport GameInstance from './GameInstance';\nimport { GetParent } from './config';\n\nexport default class Game extends EventEmitter\n{\n    VERSION: string = '4.0.0-beta1';\n\n    isPaused: boolean = false;\n    isBooted: boolean = false;\n\n    scenes: SceneManager;\n    textures: TextureManager;\n    renderer: WebGLRenderer;\n    cache: { json: Map<string, any>; csv: Map<string, any>; xml: Map<string, any>; };\n\n    private lastTick: number;\n    lifetime: number = 0;\n    elapsed: number = 0;\n\n    //  The current game frame\n    frame: number = 0;\n\n    constructor (...settings: { (): void }[])\n    {\n        super();\n\n        settings.forEach(setting => {\n\n            setting();\n\n        });\n\n        this.cache = {\n            json: new Map(),\n            csv: new Map(),\n            xml: new Map()\n        };\n\n        GameInstance.set(this);\n\n        DOMContentLoaded(() => this.boot());\n    }\n\n    pause ()\n    {\n        this.isPaused = true;\n\n        this.emit('pause');\n    }\n\n    resume ()\n    {\n        this.isPaused = false;\n\n        this.lastTick = Date.now();\n\n        this.emit('resume');\n    }\n\n    boot ()\n    {\n        this.isBooted = true;\n        this.lastTick = Date.now();\n\n        const renderer = new WebGLRenderer();\n\n        //  Only add to the DOM if they either didn't set a Parent, or expressly set it to be non-null\n        //  Otherwise we'll let them add the canvas to the DOM themselves\n        if (GetParent())\n        {\n            AddToDOM(renderer.canvas, GetParent());\n        }\n\n        this.renderer = renderer;\n        this.textures = new TextureManager();\n        this.scenes = new SceneManager();\n\n        this.banner(this.VERSION);\n\n        //  Visibility API\n        document.addEventListener('visibilitychange', () => {\n\n            this.emit('visibilitychange', document.hidden);\n\n            if (document.hidden)\n            {\n                this.pause();\n            }\n            else\n            {\n                this.resume();\n            }\n\n        });\n\n        // window.addEventListener('blur', () => this.pause());\n        // window.addEventListener('focus', () => this.resume());\n\n        this.emit('boot');\n\n        requestAnimationFrame(() => this.step());\n    }\n\n    banner (version: string)\n    {\n        console.log(\n            '%cPhaser v' + version + '%c https://phaser4.io',\n            'padding: 4px 16px; color: #fff; background: linear-gradient(#3e0081 40%, #00bcc3)',\n            ''\n        );\n    }\n\n    step ()\n    {\n        const now = Date.now();\n        const delta = now - this.lastTick;\n\n        const dt = delta / 1000;\n\n        this.lifetime += dt;\n        this.elapsed = dt;\n        this.lastTick = now;\n    \n        this.emit('step', dt, now);\n\n        const sceneManager = this.scenes;\n\n        if (!this.isPaused)\n        {\n            sceneManager.update(dt, now);\n        }\n\n        this.emit('update', dt, now);\n\n        //  TODO: Optimize to remove const and array creation here:\n        const [ renderList, dirtyFrame, dirtyCameras ] = sceneManager.render(this.frame);\n\n        this.renderer.render(renderList, dirtyFrame, dirtyCameras);\n\n        this.emit('render', dt, now);\n\n        //  The frame always advances by 1 each step (even when paused)\n        this.frame++;\n\n        requestAnimationFrame(() => this.step());\n    }\n\n    destroy ()\n    {\n        //  TODO\n    }\n}\n","import TransformGameObject from '../gameobjects/transformgameobject/TransformGameObject';\nimport WebGLRenderer from '../renderer/webgl1/WebGLRenderer';\nimport GameInstance from '../GameInstance';\n\nexport default class Camera extends TransformGameObject\n{\n    matrix: Float32Array;\n    renderer: WebGLRenderer;\n\n    constructor (x: number = 0, y: number = 0)\n    {\n        super(x, y);\n\n        this.type = 'Camera';\n\n        const game = GameInstance.get();\n\n        this.renderer = game.renderer;\n\n        this.reset();\n    }\n\n    updateTransform ()\n    {\n        if (!this.renderer)\n        {\n            return this;\n        }\n\n        this.dirtyRender = true;\n\n        const lt = this.localTransform;\n        const wt = this.worldTransform;\n\n        lt.tx = 0 - this.x;\n        lt.ty = 0 - this.y;\n\n        const mat = this.matrix;\n        const { a, b, c, d, tx, ty } = lt;\n\n        const viewportW = this.renderer.width * this.originX;\n        const viewportH = this.renderer.height * this.originY;\n\n        mat[0] = a;\n        mat[1] = b;\n        mat[4] = c;\n        mat[5] = d;\n\n        //  combines viewport translation + scrollX/Y\n\n        const worldX = (a * -viewportW) + (c * -viewportH) + (viewportW + tx);\n        const worldY = (b * -viewportW) + (d * -viewportH) + (viewportH + ty);\n\n        mat[12] = worldX;\n        mat[13] = worldY;\n\n        //  Store in worldTransform\n        wt.set(\n            a, b, c, d, worldX, worldY\n        );\n\n        // mat[12] = viewportW + tx; // combines translation to center of viewport + scrollX\n        // mat[13] = viewportH + ty; // combines translation to center of viewport + scrollY\n        // this.translate(-viewportW, -viewportH);\n        // console.log(mat);\n\n        this.bounds.x = worldX * -1;\n        this.bounds.y = worldY * -1;\n\n        return this;\n    }\n\n    reset ()\n    {\n        this.matrix = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]);\n\n        const width = this.renderer.width;\n        const height = this.renderer.height;\n\n        this.setSize(width, height);\n        this.setBounds(0, 0, width, height);\n    }\n\n    destroy ()\n    {\n        super.destroy();\n\n        this.renderer = null;\n        this.matrix = null;\n    }\n}\n","import IRectangle from '../rectangle/IRectangle';\n\nexport default function RectangleToRectangle (rectA: IRectangle, rectB: IRectangle): boolean\n{\n    if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0)\n    {\n        return false;\n    }\n\n    return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\n}\n","import Camera from '../camera/Camera';\nimport Scene from '../scenes/Scene';\nimport RectangleToRectangle from '../geom/intersects/RectangleToRectangle';\nimport IGameObject from '../gameobjects/gameobject/IGameObject';\nimport IContainer from '../gameobjects/container/IContainer';\nimport Matrix2D from '../math/matrix2d/Matrix2D';\n\nexport default class World\n{\n    scene: Scene;\n\n    children: IGameObject[];\n\n    camera: Camera;\n\n    //  How many Game Objects were made dirty this frame?\n    dirtyFrame: number = 0;\n\n    //  How many Game Objects will be rendered this frame? (are in-bounds)\n    totalFrame: number = 0;\n\n    //  How many Game Objects passed `willRender` this frame? (but may not have been in bounds)\n    visibleFrame: number = 0;\n\n    //  How many Game Objects were out of bounds this frame?\n    boundsFrame: number = 0;\n\n    //  A list of Game Objects that will be rendered in the next pass\n    private renderList: IGameObject[];\n\n    forceRefresh: boolean = false;\n\n    enableCameraCull: boolean = true;\n\n    worldTransform: Matrix2D;\n\n    constructor (scene: Scene)\n    {\n        this.scene = scene;\n\n        this.children = [];\n        this.renderList = [];\n\n        this.worldTransform = new Matrix2D();\n\n        this.camera = new Camera();\n    }\n\n    private scanChildren (root: IContainer | World, gameFrame: number)\n    {\n        const children = root.children;\n\n        for (let i: number = 0; i < children.length; i++)\n        {\n            this.buildRenderList(children[i], gameFrame);\n        }\n    }\n\n    private buildRenderList (root: IGameObject, gameFrame: number)\n    {\n        if (root.isRenderable())\n        {\n            const cull = this.enableCameraCull;\n\n            if (!cull || (cull && RectangleToRectangle(root.getBounds(), this.camera.bounds)))\n            {\n                this.renderList.push(root);\n\n                if (root.dirtyFrame >= gameFrame)\n                {\n                    this.dirtyFrame++;\n                }\n            }\n\n            this.visibleFrame++;\n        }\n\n        if (root.isParent && root.visible)\n        {\n            this.scanChildren(root as IContainer, gameFrame);\n        }\n    }\n\n    update (delta?: number, time?: number)\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            let child = children[i];\n\n            if (child && child.willUpdate)\n            {\n                child.update(delta, time);\n            }\n        }\n    }\n\n    render (gameFrame: number): number\n    {\n        this.dirtyFrame = 0;\n        this.boundsFrame = 0;\n        this.visibleFrame = 0;\n        this.renderList.length = 0;\n\n        this.scanChildren(this, gameFrame);\n\n        this.totalFrame = this.renderList.length;\n\n        if (this.forceRefresh)\n        {\n            this.dirtyFrame++;\n            this.forceRefresh = false;\n        }\n\n        return this.dirtyFrame;\n    }\n\n    shutdown ()\n    {\n        //  Clear the display list and reset the camera, but leave\n        //  everything in place so we can return to this World again\n        //  at a later stage\n\n        // this.removeChildren();\n\n        this.renderList = [];\n\n        this.camera.reset();\n    }\n\n    destroy ()\n    {\n        this.camera.destroy();\n\n        this.camera = null;\n        this.renderList = null;\n    }\n\n    get numChildren (): number\n    {\n        return this.children.length;\n    }\n}\n","import Game from '../Game';\nimport GameInstance from '../GameInstance';\nimport World from '../world/World';\nimport ISceneConfig from './ISceneConfig';\n\nexport default class Scene\n{\n    key: string;\n    willUpdate: boolean = false;\n    willRender: boolean = false;\n    game: Game;\n    world: World;\n\n    constructor (config?: string | ISceneConfig)\n    {\n        this.game = GameInstance.get();\n\n        this.world = new World(this);\n\n        this.game.scenes.init(this, config);\n    }\n\n    boot ()\n    {\n    }\n\n    update ()\n    {\n    }\n\n    render ()\n    {\n    }\n\n    shutdown ()\n    {\n    }\n\n    destroy ()\n    {\n        this.world.destroy();\n\n        this.world = null;\n        this.game = null;\n    }\n}\n","import WebGLRenderer from '../renderer/webgl1/WebGLRenderer';\nimport Rectangle from '../geom/rectangle/Rectangle';\nimport IBaseScene from '../scenes/IBaseScene';\n\nexport default class StaticCamera\n{\n    scene: IBaseScene;\n    matrix: Float32Array;\n    renderer: WebGLRenderer;\n\n    width: number;\n    height: number;\n    bounds: Rectangle;\n\n    constructor (scene: IBaseScene)\n    {\n        this.scene = scene;\n\n        this.renderer = scene.game.renderer;\n\n        this.matrix = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]);\n\n        this.bounds = new Rectangle();\n\n        this.reset();\n    }\n\n    reset ()\n    {\n        const width = this.renderer.width;\n        const height = this.renderer.height;\n\n        this.width = width;\n        this.height = height;\n\n        this.bounds.set(0, 0, width, height);\n    }\n\n    destroy ()\n    {\n        this.scene = null;\n        this.renderer = null;\n        this.matrix = null;\n        this.bounds = null;\n    }\n}\n","import IGameObject from '../gameobjects/gameobject/IGameObject';\nimport StaticCamera from '../camera/StaticCamera';\nimport IContainer from '../gameobjects/container/IContainer';\nimport StaticScene from '../scenes/StaticScene';\nimport Matrix2D from '../math/matrix2d/Matrix2D';\n\n//  A Static World is designed specifically to have a bounds of a fixed size\n//  and a camera that doesn't move at all (no scrolling, rotation, etc)\n//  Because it has a fixed size, there is no camera culling enabled.\n//  Games that use this kind of world include Pacman, Bejeweled and 2048.\n\nexport default class StaticWorld\n{\n    scene: StaticScene;\n\n    children: IGameObject[];\n\n    camera: StaticCamera;\n\n    //  How many Game Objects were made dirty this frame?\n    dirtyFrame: number = 0;\n\n    //  How many Game Objects will be rendered this frame? (are in-bounds)\n    totalFrame: number = 0;\n\n    //  How many Game Objects passed `willRender` this frame? (but may not have been in bounds)\n    visibleFrame: number = 0;\n\n    //  A list of Game Objects that will be rendered in the next pass\n    private renderList: IGameObject[];\n\n    forceRefresh: boolean = false;\n\n    worldTransform: Matrix2D;\n\n    constructor (scene: StaticScene)\n    {\n        this.scene = scene;\n\n        this.children = [];\n        this.renderList = [];\n\n        this.worldTransform = new Matrix2D();\n\n        this.camera = new StaticCamera(scene);\n    }\n\n    private scanChildren (root: IContainer | StaticWorld, gameFrame: number)\n    {\n        const children = root.children;\n\n        for (let i: number = 0; i < children.length; i++)\n        {\n            this.buildRenderList(children[i], gameFrame);\n        }\n    }\n\n    private buildRenderList (root: IGameObject, gameFrame: number)\n    {\n        if (root.isRenderable())\n        {\n            this.renderList.push(root);\n\n            if (root.dirtyFrame >= gameFrame)\n            {\n                this.dirtyFrame++;\n            }\n\n            this.visibleFrame++;\n        }\n\n        if (root.isParent && root.visible)\n        {\n            this.scanChildren(root as IContainer, gameFrame);\n        }\n    }\n\n    update (delta?: number, time?: number)\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            let child = children[i];\n\n            if (child && child.willUpdate)\n            {\n                child.update(delta, time);\n            }\n        }\n    }\n\n    render (gameFrame: number): number\n    {\n        this.dirtyFrame = 0;\n        this.visibleFrame = 0;\n        this.renderList.length = 0;\n\n        this.scanChildren(this, gameFrame);\n\n        this.totalFrame = this.renderList.length;\n\n        if (this.forceRefresh)\n        {\n            this.dirtyFrame++;\n            this.forceRefresh = false;\n        }\n\n        return this.dirtyFrame;\n    }\n\n    shutdown ()\n    {\n        //  Clear the display list and reset the camera, but leave\n        //  everything in place so we can return to this World again\n        //  at a later stage\n\n        // this.removeChildren();\n\n        this.renderList = [];\n\n        this.camera.reset();\n    }\n\n    destroy ()\n    {\n        this.camera.destroy();\n\n        this.camera = null;\n        this.renderList = null;\n    }\n\n    get numChildren (): number\n    {\n        return this.children.length;\n    }\n}\n","import Game from '../Game';\nimport GameInstance from '../GameInstance';\nimport ISceneConfig from './ISceneConfig';\nimport StaticWorld from '../world/StaticWorld';\n\nexport default class StaticScene\n{\n    key: string;\n    willUpdate: boolean = false;\n    willRender: boolean = false;\n    game: Game;\n    world: StaticWorld;\n\n    constructor (config?: string | ISceneConfig)\n    {\n        this.game = GameInstance.get();\n\n        this.world = new StaticWorld(this);\n\n        this.game.scenes.init(this, config);\n    }\n\n    boot ()\n    {\n    }\n\n    update ()\n    {\n    }\n\n    render ()\n    {\n    }\n\n    shutdown ()\n    {\n    }\n    \n    destroy ()\n    {\n        this.world.destroy();\n\n        this.world = null;\n        this.game = null;\n    }\n}\n","import File from './File';\nimport EventEmitter from '../events/EventEmitter';\n\nexport default class Loader extends EventEmitter\n{\n    baseURL: string = '';\n    path: string = '';\n    crossOrigin: string = 'anonymous';\n\n    //  -1 means load everything at once (only recommended on http/2 servers)\n    maxParallelDownloads: number = -1;\n\n    isLoading: boolean = false;\n    progress: number;\n\n    queue: Set<File>;\n    inflight: Set<File>;\n    completed: Set<File>;\n\n    onComplete: Function;\n\n    constructor ()\n    {\n        super();\n\n        this.reset();\n    }\n\n    reset ()\n    {\n        this.isLoading = false;\n\n        this.queue = new Set();\n        this.inflight = new Set();\n        this.completed = new Set();\n\n        this.progress = 0;\n    }\n\n    add (...file: File[]): this\n    {\n        file.forEach(entity => {\n\n            entity.loader = this;\n\n            this.queue.add(entity);\n    \n        });\n\n        return this;\n    }\n\n    start (onComplete: Function): this\n    {\n        if (this.isLoading)\n        {\n            return;\n        }\n\n        this.completed.clear();\n        this.progress = 0;\n\n        if (this.queue.size > 0)\n        {\n            this.isLoading = true;\n\n            this.onComplete = onComplete;\n\n            this.emit('start');\n\n            this.nextFile();\n        }\n        else\n        {\n            this.progress = 1;\n\n            this.emit('complete');\n\n            onComplete();\n        }\n\n        return this;\n    }\n\n    nextFile ()\n    {\n        let limit = this.queue.size;\n\n        if (this.maxParallelDownloads !== -1)\n        {\n            limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\n        }\n\n        if (limit)\n        {\n            // console.log('Batching', limit, 'files to download');\n\n            const iterator = this.queue.values();\n\n            while (limit > 0)\n            {\n                const file = iterator.next().value;\n\n                // console.log('Loader.nextFile', file.key, '=>', file.url);\n    \n                this.inflight.add(file);\n    \n                this.queue.delete(file);\n    \n                file.load().then((file: File) => this.fileComplete(file)).catch((file: File) => this.fileError(file));\n\n                limit--;\n            }\n        }\n        else if (this.inflight.size === 0)\n        {\n            this.stop();\n        }\n    }\n\n    stop ()\n    {\n        this.isLoading = false;\n\n        this.emit('complete', this.completed);\n\n        this.onComplete();\n\n        this.completed.clear();\n    }\n\n    private updateProgress (file: File)\n    {\n        this.inflight.delete(file);\n        this.completed.add(file);\n\n        const totalCompleted = this.completed.size;\n        const totalQueued = this.queue.size + this.inflight.size;\n\n        if (totalCompleted > 0)\n        {\n            this.progress = totalCompleted / (totalCompleted + totalQueued);\n        }\n\n        this.emit('progress', this.progress, totalCompleted, totalQueued);\n\n        this.nextFile();\n    }\n\n    private fileComplete (file: File)\n    {\n        this.emit('filecomplete', file);\n\n        this.updateProgress(file);\n    }\n\n    private fileError (file: File)\n    {\n        this.emit('fileerror', file);\n\n        this.updateProgress(file);\n    }\n\n    totalFilesToLoad (): number\n    {\n        return this.queue.size + this.inflight.size;\n    }\n\n    setBaseURL (url: string = ''): this\n    {\n        if (url !== '' && url.substr(-1) !== '/')\n        {\n            url = url.concat('/');\n        }\n\n        this.baseURL = url;\n\n        return this;\n    }\n\n    setPath (path: string = ''): this\n    {\n        if (path !== '' && path.substr(-1) !== '/')\n        {\n            path = path.concat('/');\n        }\n\n        this.path = path;\n\n        return this;\n    }\n\n    setCORS (crossOrigin: string): this\n    {\n        this.crossOrigin = crossOrigin;\n\n        return this;\n    }\n\n    setMaxParallelDownloads (max: number): this\n    {\n        this.maxParallelDownloads = max;\n\n        return this;\n    }\n}\n"],"names":["get","set","CONST","MATH_CONST","Wrap","MathWrap","P0","P1","P2","Add","Rotate","Scale","Translate","Invert","Multiply","MultiplyScalar","MultiplyScalarAndAdd","Subtract","Zero","Between","SpriteRenderWebGL","Matrix2dEqual"],"mappings":"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"}