{"version":3,"file":"Phaser4.esm.js","sources":["../src/geom/Rectangle.ts","../src/gameobjects/gameobject/GameObject.ts","../src/gameobjects/transformgameobject/const.ts","../src/gameobjects/transformgameobject/TransformGameObject.ts","../src/gameobjects/container/Container.ts","../src/textures/Frame.ts","../src/renderer/GL.ts","../src/renderer/SetGLTextureFilterMode.ts","../src/renderer/DeleteGLTexture.ts","../src/renderer/DeleteFramebuffer.ts","../src/math/IsPowerOfTwo.ts","../src/renderer/CreateGLTexture.ts","../src/renderer/UpdateGLTexture.ts","../src/textures/Texture.ts","../src/GameInstance.ts","../src/gameobjects/sprite/SetFrame.ts","../src/gameobjects/sprite/SetTexture.ts","../src/gameobjects/sprite/Sprite.ts","../src/gameobjects/index.ts","../src/math/AppendMatrix2d.ts","../src/math/Between.ts","../src/math/Ease.ts","../src/math/FloatBetween.ts","../src/math/Vec2.ts","../src/math/GlobalToLocal.ts","../src/math/LocalToGlobal.ts","../src/math/Matrix2dEqual.ts","../src/math/index.ts","../src/textures/AtlasParser.ts","../src/textures/CreateCanvas.ts","../src/textures/CanvasTexture.ts","../src/textures/GridTexture.ts","../src/gameobjects/sprite/RenderWebGL.ts","../src/renderer/Ortho.ts","../src/renderer/CreateFramebuffer.ts","../src/textures/RenderTexture.ts","../src/textures/SolidColorTexture.ts","../src/textures/SpriteSheetParser.ts","../src/textures/TextureManager.ts","../src/textures/index.ts","../src/dom/AddToDOM.ts","../src/dom/DOMContentLoaded.ts","../src/renderer/CheckShaderMaxIfStatements.ts","../src/renderer/MultiTextureQuadShader.ts","../src/renderer/WebGLRenderer.ts","../src/scenes/GetConfigValue.ts","../src/scenes/SceneManager.ts","../src/core/EventEmitter.ts","../src/Game.ts","../src/camera/Camera.ts","../src/geom/intersection/RectangleToRectangle.ts","../src/world/World.ts","../src/scenes/Scene.ts","../src/camera/StaticCamera.ts","../src/world/StaticWorld.ts","../src/scenes/StaticScene.ts","../src/loader/Loader.ts"],"sourcesContent":["export default class Rectangle\n{\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor (x: number = 0, y: number = 0, width: number = 0, height: number = 0)\n    {\n        this.set(x, y, width, height);\n    }\n\n    set (x: number = 0, y: number = 0, width: number = 0, height: number = 0): Rectangle\n    {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n\n        return this;\n    }\n\n    set right (value: number)\n    {\n        if (value <= this.x)\n        {\n            this.width = 0;\n        }\n        else\n        {\n            this.width = value - this.x;\n        }\n    }\n\n    get right (): number\n    {\n        return this.x + this.width;\n    }\n\n    set bottom (value: number)\n    {\n        if (value <= this.y)\n        {\n            this.height = 0;\n        }\n        else\n        {\n            this.height = value - this.y;\n        }\n    }\n\n    get bottom (): number\n    {\n        return this.y + this.height;\n    }\n\n    contains (px: number, py: number): boolean\n    {\n        const { x, y, width, height } = this;\n\n        if (width <= 0 || height <= 0)\n        {\n            return false;\n        }\n    \n        return (x <= px && x + width >= px && y <= py && y + height >= py);\n    }\n}","import IInteractiveArea from '../../input/IInteractiveArea';\nimport Rectangle from '../../geom/Rectangle';\nimport IParent from '../container/IParent';\nimport IBaseScene from '../../scenes/IBaseScene';\n\n//  The Base Game Object which all Scene entites extend\n\nexport default class GameObject\n{\n    scene: IBaseScene;\n    name: string = '';\n    type: string = 'GameObject';\n\n    willRender: boolean = true;\n    willUpdate: boolean = true;\n\n    dirtyRender: boolean = true;\n    dirtyUpdate: boolean = true;\n    dirtyFrame: number = 0;\n\n    parent: IParent;\n    isParent: boolean = false;\n\n    visible: boolean = true;\n\n    inputEnabled: boolean = false;\n    inputEnabledChildren: boolean = true;\n    inputHitArea: IInteractiveArea;\n\n    fixBounds: boolean = false;\n    bounds: Rectangle = new Rectangle();\n\n    constructor ()\n    {\n    }\n\n    isRenderable (): boolean\n    {\n        return (this.visible && this.willRender);\n    }\n\n    setDirtyRender (setFrame: boolean = true)\n    {\n        this.dirtyRender = true;\n\n        const scene = this.scene;\n\n        if (setFrame && scene)\n        {\n            this.dirtyFrame = scene.game.frame;\n        }\n\n        return this;\n    }\n\n    setDirtyUpdate ()\n    {\n        this.dirtyUpdate = true;\n\n        return this;\n    }\n\n    getBounds (includeChildren: boolean = false): Rectangle\n    {\n        return this.bounds;\n    }\n\n    setBounds (x: number, y: number, width: number, height: number)\n    {\n        this.bounds.set(x, y, width, height);\n\n        return this;\n    }\n\n    update ()\n    {\n    }\n\n    updateTransform ()\n    {\n        return this;\n    }\n\n    render ()\n    {\n    }\n\n    destroy (reparentChildren?: IParent)\n    {\n        this.scene = null;\n    }\n}\n","export default {\n    POSITION_X: 0,\n    POSITION_Y: 1,\n    ORIGIN_X: 2,\n    ORIGIN_Y: 3,\n    SKEW_X: 4,\n    SKEW_Y: 5,\n    SCALE_X: 6,\n    SCALE_Y: 7,\n    ROTATION: 8,\n    ANGLE: 9\n}\n","import GameObject from '../gameobject/GameObject';\nimport CONST from './const';\n\nexport default class TransformGameObject extends GameObject\n{\n    private transformBuffer: ArrayBuffer;\n\n    transformData: Float32Array;\n    localTransform: Float32Array;\n    worldTransform: Float32Array;\n\n    width: number;\n    height: number;\n\n    constructor (x: number = 0, y: number = 0)\n    {\n        super();\n\n        const byte = Float32Array.BYTES_PER_ELEMENT;\n\n        const buffer = new ArrayBuffer(22 * byte);\n\n        this.transformBuffer = buffer;\n\n        /**\n         * transformData:\n         * 0 = position x\n         * 1 = position y\n         * 2 = origin x\n         * 3 = origin y\n         * 4 = skew x\n         * 5 = skew y\n         * 6 = scale x\n         * 7 = scale y\n         * 8 = rotation\n         * 9 = angle\n         * localTransform\n         * 10 = local transform a\n         * 11 = local transform b\n         * 12 = local transform c\n         * 13 = local transform d\n         * 14 = local transform tx\n         * 15 = local transform ty\n         * worldTransform\n         * 16 = world transform a\n         * 17 = world transform b\n         * 18 = world transform c\n         * 19 = world transform d\n         * 20 = world transform tx\n         * 21 = world transform ty\n         */\n        this.transformData = new Float32Array(buffer, 0, 10);\n        this.localTransform = new Float32Array(buffer, byte * 10, 6);\n        this.worldTransform = new Float32Array(buffer, byte * 16, 6);\n\n        this.transformData.set([ x, y, 0.5, 0.5, 0, 0, 1, 1, 0, 0 ]);\n        this.localTransform.set([ 1, 0, 0, 1, 0, 0 ]);\n        this.worldTransform.set([ 1, 0, 0, 1, 0, 0 ]);\n\n        this.width = 0;\n        this.height = 0;\n\n        this.updateCache();\n    }\n\n    updateCache ()\n    {\n        const transform = this.localTransform;\n\n        const { rotation, skewX, skewY, scaleX, scaleY } = this;\n\n        transform.set([\n            Math.cos(rotation + skewY) * scaleX,\n            Math.sin(rotation + skewY) * scaleX,\n            -Math.sin(rotation - skewX) * scaleY,\n            Math.cos(rotation - skewX) * scaleY\n        ]);\n\n        return this.updateTransform();\n    }\n\n    updateTransform ()\n    {\n        this.setDirtyRender();\n\n        const parent = this.parent;\n\n        const lt = this.localTransform;\n        const wt = this.worldTransform;\n\n        lt[4] = this.x;\n        lt[5] = this.y;\n\n        if (!parent)\n        {\n            wt.set(lt);\n\n            return this;\n        }\n\n        const [ a, b, c, d, tx, ty ] = lt;\n        const [ pa, pb, pc, pd, ptx, pty ] = parent.worldTransform;\n\n        wt.set([\n            a  * pa + b  * pc,\n            a  * pb + b  * pd,\n            c  * pa + d  * pc,\n            c  * pb + d  * pd,\n            tx * pa + ty * pc + ptx,\n            tx * pb + ty * pd + pty\n        ]);\n\n        return this;\n    }\n\n    setSize (width: number, height: number)\n    {\n        this.width = width;\n        this.height = height;\n\n        return this;\n    }\n\n    setOrigin (originX: number, originY: number = originX)\n    {\n        const data = this.transformData;\n\n        data[CONST.ORIGIN_X] = originX;\n        data[CONST.ORIGIN_Y] = originY;\n\n        return this;\n    }\n\n    setPosition (x: number, y: number = x)\n    {\n        const data = this.transformData;\n\n        data[CONST.POSITION_X] = x;\n        data[CONST.POSITION_Y] = y;\n\n        return this.updateTransform();\n    }\n\n    setRotation (rotation: number)\n    {\n        const data = this.transformData;\n\n        if (rotation !== data[CONST.ROTATION])\n        {\n            data[CONST.ROTATION] = rotation;\n\n            this.updateCache();\n        }\n\n        return this;\n    }\n\n    setScale (scaleX: number, scaleY: number = scaleX)\n    {\n        const data = this.transformData;\n\n        data[CONST.SCALE_X] = scaleX;\n        data[CONST.SCALE_Y] = scaleY;\n\n        return this.updateCache();\n    }\n\n    setSkew (skewX: number, skewY: number = skewX)\n    {\n        const data = this.transformData;\n\n        data[CONST.SKEW_X] = skewX;\n        data[CONST.SKEW_Y] = skewY;\n\n        return this.updateCache();\n    }\n\n    destroy ()\n    {\n        super.destroy();\n\n        this.localTransform = null;\n        this.worldTransform = null;\n        this.transformBuffer = null;\n        this.transformData = null;\n    }\n\n    set x (value: number)\n    {\n        this.transformData[CONST.POSITION_X] = value;\n\n        this.updateTransform();\n    }\n\n    get x (): number\n    {\n        return this.transformData[CONST.POSITION_X];\n    }\n\n    set y (value: number)\n    {\n        this.transformData[CONST.POSITION_Y] = value;\n\n        this.updateTransform();\n    }\n\n    get y (): number\n    {\n        return this.transformData[CONST.POSITION_Y];\n    }\n\n    get originX (): number\n    {\n        return this.transformData[CONST.ORIGIN_X];\n    }\n\n    set originX (value: number)\n    {\n        this.transformData[CONST.ORIGIN_X] = value;\n    }\n\n    get originY (): number\n    {\n        return this.transformData[CONST.ORIGIN_Y];\n    }\n\n    set originY (value: number)\n    {\n        this.transformData[CONST.ORIGIN_Y] = value;\n    }\n\n    set skewX (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SKEW_X])\n        {\n            data[CONST.SKEW_X] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get skewX (): number\n    {\n        return this.transformData[CONST.SKEW_X];\n    }\n\n    set skewY (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SKEW_Y])\n        {\n            data[CONST.SKEW_Y] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get skewY (): number\n    {\n        return this.transformData[CONST.SKEW_Y];\n    }\n\n    set scaleX (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SCALE_X])\n        {\n            data[CONST.SCALE_X] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get scaleX (): number\n    {\n        return this.transformData[CONST.SCALE_X];\n    }\n\n    set scaleY (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.SCALE_Y])\n        {\n            data[CONST.SCALE_Y] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get scaleY (): number\n    {\n        return this.transformData[CONST.SCALE_Y];\n    }\n\n    set rotation (value: number)\n    {\n        const data = this.transformData;\n\n        if (value !== data[CONST.ROTATION])\n        {\n            data[CONST.ROTATION] = value;\n\n            this.updateCache();\n        }\n    }\n\n    get rotation (): number\n    {\n        return this.transformData[CONST.ROTATION];\n    }\n}\n","import IGameObject from '../gameobject/IGameObject';\nimport TransformGameObject from '../transformgameobject/TransformGameObject';\nimport IParent from './IParent';\n\nexport default class Container extends TransformGameObject\n{\n    children: IGameObject[];\n\n    private _alpha: number = 1;\n\n    constructor (x: number = 0, y: number = 0)\n    {\n        super(x, y);\n\n        this.children = [];\n        this.isParent = true;\n        this.type = 'Container';\n    }\n\n    update (delta?: number, time?: number)\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            let child = children[i];\n\n            if (child && child.willUpdate)\n            {\n                child.update(delta, time);\n            }\n        }\n    }\n\n    destroy (reparentChildren?: IParent)\n    {\n        // if (reparentChildren)\n        // {\n        //     this.reparentChildren(reparentChildren);\n        // }\n        // else\n        // {\n        //     this.destroyChildren();\n        // }\n\n        this.children = null;\n\n        super.destroy();\n    }\n\n    get numChildren (): number\n    {\n        return this.children.length;\n    }\n\n    get alpha (): number\n    {\n        return this._alpha;\n    }\n\n    set alpha (value: number)\n    {\n        if (value !== this._alpha)\n        {\n            this._alpha = value;\n\n            this.setDirtyRender();\n        }\n    }\n}\n","import Texture from './Texture';\n\nexport default class Frame\n{\n    texture: Texture;\n    key: string | number;\n\n    //  This is the actual area of the texture to draw to canvas / webgl, including any extruded data.\n    //  This is the same as the 'trimmed' + 'extruded' area from an atlas.\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    trimmed: boolean = false;\n\n    //  Original size of the image before being trimmed or added to an atlas (which can add extrude data to it).\n    sourceSizeWidth: number;\n    sourceSizeHeight: number;\n\n    //  The size of the image having been trimmed, before being added to the atlas (i.e. doesn't have any extrusion values in it)\n    spriteSourceSizeX: number;\n    spriteSourceSizeY: number;\n    spriteSourceSizeWidth: number;\n    spriteSourceSizeHeight: number;\n\n    pivot: { x: number, y: number };\n\n    u0: number;\n    v0: number;\n    u1: number;\n    v1: number;\n\n    constructor (texture: Texture, key: string | number, x: number, y: number, width: number, height: number)\n    {\n        this.texture = texture;\n        this.key = key;\n\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n\n        this.updateUVs();\n    }\n\n    setPivot (x: number, y: number)\n    {\n        this.pivot = { x, y };\n    }\n\n    setSize (width: number, height: number)\n    {\n        this.width = width;\n        this.height = height;\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n\n        this.updateUVs();\n    }\n\n    setSourceSize (width: number, height: number)\n    {\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n    }\n\n    setTrim (width: number, height: number, x: number, y: number, w: number, h: number)\n    {\n        this.trimmed = true;\n\n        this.sourceSizeWidth = width;\n        this.sourceSizeHeight = height;\n\n        this.spriteSourceSizeX = x;\n        this.spriteSourceSizeY = y;\n        this.spriteSourceSizeWidth = w;\n        this.spriteSourceSizeHeight = h;\n    }\n\n    updateUVs ()\n    {\n        const { x, y, width, height } = this;\n\n        const baseTextureWidth = this.texture.width;\n        const baseTextureHeight = this.texture.height;\n\n        this.u0 = x / baseTextureWidth;\n        this.v0 = y / baseTextureHeight;\n\n        this.u1 = (x + width) / baseTextureWidth;\n        this.v1 = (y + height) / baseTextureHeight;\n    }\n}\n","let gl: WebGLRenderingContext;\n\nfunction get ()\n{\n    return gl;\n}\n\nfunction set (context: WebGLRenderingContext)\n{\n    gl = context;\n}\n\nexport default {\n    get,\n    set\n}\n","import GL from '../renderer/GL';\n\nexport default function SetGLTextureFilterMode (texture: WebGLTexture, linear: boolean = true)\n{\n    const gl = GL.get();\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n}\n","import GL from '../renderer/GL';\n\nexport default function DeleteGLTexture (texture: WebGLTexture)\n{\n    const gl = GL.get();\n\n    if (gl.isTexture(texture))\n    {\n        gl.deleteTexture(texture);\n    }\n}\n","import GL from '../renderer/GL';\n\nexport default function DeleteFramebuffer (framebuffer: WebGLFramebuffer)\n{\n    const gl = GL.get();\n\n    if (gl.isFramebuffer(framebuffer))\n    {\n        gl.deleteFramebuffer(framebuffer);\n    }\n}\n","export default function IsPowerOfTwo (width: number, height: number): boolean\n{\n    if (width < 1 || height < 1)\n    {\n        return false;\n    }\n\n    return ((width & (width - 1)) === 0) && ((height & (height - 1)) === 0);\n}\n","import GL from '../renderer/GL';\nimport IsPowerOfTwo from '../math/IsPowerOfTwo';\n\nexport default function CreateGLTexture (source?: TexImageSource, width?: number, height?: number, potClamp: boolean = true, linear: boolean = true): WebGLTexture\n{\n    const gl = GL.get();\n    const glTexture: WebGLTexture = gl.createTexture();\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    if (source)\n    {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n\n        width = source.width;\n        height = source.height;\n    }\n    else\n    {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n\n    const mode = (linear) ? gl.LINEAR : gl.NEAREST;\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mode);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mode);\n\n    const pot = (source && IsPowerOfTwo(width, height));\n\n    const wrap = (pot && potClamp) ? gl.REPEAT : gl.CLAMP_TO_EDGE;\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\n    if (pot)\n    {\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    return glTexture;\n}\n","import GL from '../renderer/GL';\n\nexport default function UpdateGLTexture (source: TexImageSource, dstTexture: WebGLTexture, flipY: boolean = false)\n{\n    const gl = GL.get();\n    const width = source.width;\n    const height = source.height;\n\n    if (width > 0 && height > 0)\n    {\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, dstTexture);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n    }\n}\n","import Frame from './Frame';\nimport SetGLTextureFilterMode from '../renderer/SetGLTextureFilterMode';\nimport DeleteGLTexture from '../renderer/DeleteGLTexture';\nimport DeleteFramebuffer from '../renderer/DeleteFramebuffer';\nimport CreateGLTexture from '../renderer/CreateGLTexture';\nimport UpdateGLTexture from '../renderer/UpdateGLTexture';\n\nexport default class Texture\n{\n    //  Unique identifier of this Texture, if stored in the Texture Manager\n    key: string = '';\n\n    width: number;\n    height: number;\n\n    image: TexImageSource;\n\n    glTexture: WebGLTexture;\n    glIndex: number = 0;\n    glIndexCounter: number = -1;\n    glFramebuffer: WebGLFramebuffer;\n\n    firstFrame: Frame;\n\n    frames: Map<string | number, Frame>;\n\n    data: any;\n\n    constructor (image?: TexImageSource, width?: number, height?: number)\n    {\n        if (image)\n        {\n            width = image.width;\n            height = image.height;\n        }\n\n        this.image = image;\n\n        this.width = width;\n        this.height = height;\n\n        this.frames = new Map();\n\n        this.data = {};\n\n        this.add('__BASE', 0, 0, width, height);\n    }\n\n    add (key: string | number, x: number, y: number, width: number, height: number): Frame\n    {\n        if (this.frames.has(key))\n        {\n            return null;\n        }\n\n        let frame = new Frame(this, key, x, y, width, height);\n\n        this.frames.set(key, frame);\n\n        if (!this.firstFrame || this.firstFrame.key === '__BASE')\n        {\n            this.firstFrame = frame;\n        }\n\n        return frame;\n    }\n\n    get (key?: string | number | Frame)\n    {\n        //  null, undefined, empty string, zero\n        if (!key)\n        {\n            return this.firstFrame;\n        }\n\n        if (key instanceof Frame)\n        {\n            key = key.key;\n        }\n\n        let frame: Frame = this.frames.get(key);\n\n        if (!frame)\n        {\n            console.warn('Texture.frame missing: ' + key);\n\n            frame = this.firstFrame;\n        }\n\n        return frame;\n    }\n\n    getFrames (frames: string[] | number[]): Frame[]\n    {\n        const output: Frame[] = [];\n\n        frames.forEach((key: string | number) => {\n\n            output.push(this.get(key));\n\n        });\n\n        return output;\n    }\n\n    getFramesInRange (prefix: string, start: number, end: number, zeroPad: number = 0, suffix: string = ''): Frame[]\n    {\n        const frameKeys = [];\n\n        const diff: number = (start < end) ? 1 : -1;\n\n        //  Adjust because we use i !== end in the for loop\n        end += diff;\n\n        for (let i: number = start; i !== end; i += diff)\n        {\n            frameKeys.push(prefix + i.toString().padStart(zeroPad, '0') + suffix);\n        }\n\n        return this.getFrames(frameKeys);\n    }\n\n    setSize (width: number, height: number)\n    {\n        this.width = width;\n        this.height = height;\n\n        const frame = this.frames.get('__BASE');\n\n        frame.setSize(width, height);\n    }\n\n    setFilter (linear: boolean)\n    {\n        SetGLTextureFilterMode(this.glTexture, linear);\n    }\n    \n    createGL ()\n    {\n        if (this.glTexture)\n        {\n            DeleteGLTexture(this.glTexture);\n        }\n\n        this.glTexture = CreateGLTexture(this.image);\n    }\n\n    updateGL ()\n    {\n        if (!this.glTexture)\n        {\n            this.glTexture = CreateGLTexture(this.image);\n        }\n        else\n        {\n            UpdateGLTexture(this.image, this.glTexture);\n        }\n    }\n\n    destroy ()\n    {\n        this.frames.clear();\n\n        this.image = null;\n        this.firstFrame = null;\n        this.data = null;\n\n        DeleteGLTexture(this.glTexture);\n        DeleteFramebuffer(this.glFramebuffer);\n    }\n}\n","import Game from './Game';\n\nlet gameInstance: Game;\n\nfunction get ()\n{\n    return gameInstance;\n}\n\nfunction set (game: Game | null)\n{\n    gameInstance = game;\n}\n\nexport default {\n    get,\n    set\n}\n","import ISprite from './ISprite';\nimport Frame from '../../textures/Frame';\n\nexport default function SetFrame (key?: string | number | Frame, ...sprite: ISprite[])\n{\n    sprite.forEach(entity => {\n\n        let frame: Frame = entity.texture.get(key);\n\n        if (frame === entity.frame)\n        {\n            return;\n        }\n    \n        entity.frame = frame;\n    \n        entity.setSize(frame.sourceSizeWidth, frame.sourceSizeHeight);\n        entity.setBounds(entity.x, entity.y, entity.width, entity.height);\n    \n        if (frame.pivot)\n        {\n            entity.setOrigin(frame.pivot.x, frame.pivot.y);\n        }\n    \n        let data = entity.vertexData;\n    \n        //  This rarely changes, so we'll set it here, rather than every game step:\n    \n        data[2] = frame.u0;\n        data[3] = frame.v0;\n    \n        data[8] = frame.u0;\n        data[9] = frame.v1;\n    \n        data[14] = frame.u1;\n        data[15] = frame.v1;\n    \n        data[20] = frame.u1;\n        data[21] = frame.v0;\n    \n        entity.setDirtyRender();\n    \n        entity.hasTexture = true;\n\n    });\n}\n","import ISprite from './ISprite';\nimport Texture from '../../textures/Texture';\nimport Frame from '../../textures/Frame';\nimport GameInstance from '../../GameInstance';\nimport SetFrame from './SetFrame';\n\nexport default function SetTexture (key: string | Texture, frame: string | number | Frame, ...sprite: ISprite[])\n{\n    sprite.forEach(entity => {\n\n        if (!key)\n        {\n            return;\n        }\n    \n        if (key instanceof Texture)\n        {\n            entity.texture = key;\n        }\n        else\n        {\n            entity.texture = GameInstance.get().textures.get(key);\n        }\n    \n        if (!entity.texture)\n        {\n            console.warn('Invalid Texture key: ' + key);\n        }\n        else\n        {\n            SetFrame(frame, entity);\n        }\n\n    });\n}\n","import Container from '../container/Container';\nimport Texture from '../../textures/Texture';\nimport Frame from '../../textures/Frame';\nimport IContainer from '../container/IContainer';\nimport Rectangle from '../../geom/Rectangle';\nimport SetTexture from './SetTexture';\nimport SetFrame from './SetFrame';\n\nexport default class Sprite extends Container\n{\n    texture: Texture;\n    frame: Frame;\n    hasTexture: boolean = false;\n\n    vertexData: Float32Array;\n    vertexColor: Uint32Array;\n\n    vertexAlpha: Float32Array;\n    vertexTint: Uint32Array;\n\n    private _tint: number = 0xffffff;\n    private _prevTextureID: number = -1;\n\n    constructor (x: number, y: number, texture: string | Texture, frame?: string | number)\n    {\n        super(x, y);\n\n        this.vertexData = new Float32Array(24).fill(0);\n        this.vertexColor = new Uint32Array(4).fill(4294967295);\n\n        this.vertexAlpha = new Float32Array(4).fill(1);\n        this.vertexTint = new Uint32Array(4).fill(0xffffff);\n\n        this.type = 'Sprite';\n        this.setTexture(texture, frame);\n        this.setBounds(x, y, this.width, this.height);\n    }\n\n    getBounds (includeChildren: boolean = false): Rectangle\n    {\n        if (this.dirtyRender)\n        {\n            this.updateVertices();\n        }\n\n        super.getBounds(includeChildren);\n\n        return this.bounds;\n    }\n\n    setTexture (key: string | Texture, frame?: string | number)\n    {\n        SetTexture(key, frame, this);\n\n        return this;\n    }\n\n    setFrame (key?: string | number | Frame)\n    {\n        SetFrame(key, this);\n\n        return this;\n    }\n\n    isRenderable (): boolean\n    {\n        return (this.visible && this.willRender && this.hasTexture && this.alpha > 0);\n    }\n\n    updateVertices ()\n    {\n        const data = this.vertexData;\n\n        this.dirtyRender = false;\n\n        const frame = this.frame;\n        const originX = this.originX;\n        const originY = this.originY;\n\n        let w0: number;\n        let w1: number;\n        let h0: number;\n        let h1: number;\n\n        const [ a, b, c, d, tx, ty ] = this.worldTransform;\n\n        if (frame.trimmed)\n        {\n            w1 = frame.spriteSourceSizeX - (originX * frame.sourceSizeWidth);\n            w0 = w1 + frame.spriteSourceSizeWidth;\n\n            h1 = frame.spriteSourceSizeY - (originY * frame.sourceSizeHeight);\n            h0 = h1 + frame.spriteSourceSizeHeight;\n        }\n        else\n        {\n            w1 = -originX * frame.sourceSizeWidth;\n            w0 = w1 + frame.sourceSizeWidth;\n\n            h1 = -originY * frame.sourceSizeHeight;\n            h0 = h1 + frame.sourceSizeHeight;\n        }\n\n        const x0 = (w1 * a) + (h1 * c) + tx;\n        const y0 = (w1 * b) + (h1 * d) + ty;\n\n        const x1 = (w1 * a) + (h0 * c) + tx;\n        const y1 = (w1 * b) + (h0 * d) + ty;\n\n        const x2 = (w0 * a) + (h0 * c) + tx;\n        const y2 = (w0 * b) + (h0 * d) + ty;\n\n        const x3 = (w0 * a) + (h1 * c) + tx;\n        const y3 = (w0 * b) + (h1 * d) + ty;\n\n        //  top left\n        data[0] = x0;\n        data[1] = y0;\n\n        //  bottom left\n        data[6] = x1;\n        data[7] = y1;\n\n        //  bottom right\n        data[12] = x2;\n        data[13] = y2;\n\n        //  top right\n        data[18] = x3;\n        data[19] = y3;\n\n        const bounds = this.bounds;\n\n        bounds.x = Math.min(x0, x1, x2, x3);\n        bounds.y = Math.min(y0, y1, y2, y3);\n        bounds.right = Math.max(x0, x1, x2, x3);\n        bounds.bottom = Math.max(y0, y1, y2, y3);\n    }\n\n    uploadBuffers (F32: Float32Array, U32: Uint32Array, offset: number, setTexture: boolean = true)\n    {\n        //  Skip all of this if not dirty\n        if (this.dirtyRender)\n        {\n            this.updateVertices();\n        }\n\n        const data = this.vertexData;\n        const textureIndex = this.texture.glIndex;\n\n        //  Do we have a different texture ID?\n        if (setTexture && textureIndex !== this._prevTextureID)\n        {\n            this._prevTextureID = textureIndex;\n\n            data[4] = textureIndex;\n            data[10] = textureIndex;\n            data[16] = textureIndex;\n            data[22] = textureIndex;\n        }\n\n        //  Copy the data to the array buffer\n        F32.set(data, offset);\n\n        const color = this.vertexColor;\n\n        //  Copy the vertex colors to the Uint32 view (as the data copy above overwrites them)\n        U32[offset + 5] = color[0];\n        U32[offset + 11] = color[2];\n        U32[offset + 17] = color[3];\n        U32[offset + 23] = color[1];\n    }\n\n    destroy (reparentChildren?: IContainer)\n    {\n        super.destroy(reparentChildren);\n\n        this.texture = null;\n        this.frame = null;\n        this.hasTexture = false;\n        this.vertexData = null;\n        this.vertexColor = null;\n        this.vertexAlpha = null;\n        this.vertexTint = null;\n    }\n\n    get tint (): number\n    {\n        return this._tint;\n    }\n\n    set tint (value: number)\n    {\n        this._tint = value;\n\n        // this.setTint(value);\n    }\n}\n\n/*\n    vertexData array structure:\n\n    0 = topLeft.x\n    1 = topLeft.y\n    2 = frame.u0\n    3 = frame.v0\n    4 = textureIndex\n    5 = topLeft.packedColor\n\n    6 = bottomLeft.x\n    7 = bottomLeft.y\n    8 = frame.u0\n    9 = frame.v1\n    10 = textureIndex\n    11 = bottomLeft.packedColor\n\n    12 = bottomRight.x\n    13 = bottomRight.y\n    14 = frame.u1\n    15 = frame.v1\n    16 = textureIndex\n    17 = bottomRight.packedColor\n\n    18 = topRight.x\n    19 = topRight.y\n    20 = frame.u1\n    21 = frame.v0\n    22 = textureIndex\n    23 = topRight.packedColor\n*/\n","// import AnimatedSprite from './animatedsprite/AnimatedSprite';\nimport Container from './container/Container';\nimport GameObject from './gameobject/GameObject';\nimport Sprite from './sprite/Sprite';\n// import SpriteBuffer from './spritebuffer/SpriteBuffer';\n// import Text from './text/Text';\n\nexport default {\n    Container,\n    GameObject,\n    Sprite\n}\n","export default function AppendMatrix2d (mat1: Float32Array, mat2: Float32Array, out: Float32Array = new Float32Array(6)): Float32Array\n{\n    const [ a1, b1, c1, d1, tx1, ty1 ] = mat1;\n    const [ a2, b2, c2, d2, tx2, ty2 ] = mat2;\n\n    out.set([\n        (a2 * a1) + (b2 * c1),\n        (a2 * b1) + (b2 * d1),\n        (c2 * a1) + (d2 * c1),\n        (c2 * b1) + (d2 * d1),\n        (tx2 * a1) + (ty2 * c1) + tx1,\n        (tx2 * b1) + (ty2 * d1) + ty1\n    ]);\n\n    return out;\n}\n","export default function Between (min: number, max: number): number\n{\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","const easeCache = {\n\n    linear: (t: number) => {\n\n        return t\n\n    },\n\n    inQuad: (t: number) => {\n\n        return t * t\n\n    },\n\n    outQuad: (t: number) => {\n\n        return t * (2 - t)\n\n    },\n\n    inOutQuad: (t: number) => {\n\n        return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t\n\n    },\n\n    inCubic: (t: number) => {\n\n        return t * t * t\n\n    },\n\n    outCubic: (t: number) => {\n\n        return (--t) * t * t + 1\n\n    },\n\n    inOutCubic: (t: number) => {\n\n        return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n\n    },\n\n    inQuart: (t: number) => {\n\n        return t * t * t * t\n\n    },\n\n    outQuart: (t: number) => {\n\n        return 1 - (--t) * t * t * t\n\n    },\n\n    inOutQuart: (t: number) => {\n\n        return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t\n\n    },\n\n    inQuint: (t: number) => {\n\n        return t * t * t * t * t\n\n    },\n\n    outQuint: (t: number) => {\n\n        return 1 + (--t) * t * t * t * t\n\n    },\n\n    inOutQuint: (t: number) => {\n\n        return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\n\n    },\n\n    inSine: (t: number) => {\n\n        return -1 * Math.cos(t / 1 * (Math.PI * 0.5)) + 1;\n\n    },\n\n    outSine: (t: number) => {\n\n        return Math.sin(t / 1 * (Math.PI * 0.5));\n\n    },\n\n    inOutSine: (t: number) => {\n\n        return -1 / 2 * (Math.cos(Math.PI * t) - 1);\n\n    },\n\n    inExpo: (t: number) => {\n\n        return (t == 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\n    },\n\n    outExpo: (t: number) => {\n\n        return (t == 1) ? 1 : (-Math.pow(2, -10 * t) + 1);\n\n    },\n\n    inOutExpo: (t: number) => {\n\n        if (t == 0) return 0;\n        if (t == 1) return 1;\n        if ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n\n        return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\n    },\n\n    inCirc: (t: number) => {\n\n        return -1 * (Math.sqrt(1 - t * t) - 1);\n\n    },\n\n    outCirc: (t: number) => {\n\n        return Math.sqrt(1 - (t = t - 1) * t);\n\n    },\n\n    inOutCirc: (t: number) => {\n\n        if ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\n        return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\n    },\n\n    inElastic: (t: number) => {\n\n        if (t == 0) return 0;\n        if (t == 1) return 1;\n\n        let s = 1.70158;\n        let p = 0;\n        let a = 1;\n        if (!p) p = 0.3;\n\n        if (a < 1)\n        {\n            a = 1;\n            s = p / 4;\n        }\n        else\n        {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\n    },\n\n    outElastic: (t: number) => {\n\n        if (t == 0) return 0;\n        if (t == 1) return 1;\n\n        let s = 1.70158;\n        let p = 0;\n        let a = 1;\n\n        if (!p) p = 0.3;\n\n        if (a < 1)\n        {\n            a = 1;\n            s = p / 4;\n        }\n        else\n        {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n\n        return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\n    },\n\n    inOutElastic: (t: number) => {\n\n        if (t == 0) return 0;\n        if ((t /= 1 / 2) == 2) return 1;\n\n        let s = 1.70158;\n        let p = 0;\n        let a = 1;\n\n        if (!p) p = (0.3 * 1.5);\n\n        if (a < 1)\n        {\n            a = 1;\n            s = p / 4;\n        }\n        else\n        {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n    },\n\n    inBack: (t: number, s: number = 1.70158) => {\n\n        return 1 * t * t * ((s + 1) * t - s);\n\n    },\n\n    outBack: (t: number, s: number = 1.70158) => {\n\n        return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\n    },\n\n    inOutBack: (t: number, s: number = 1.70158) => {\n\n        if ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\n        return 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\n    },\n\n    inBounce: (t: number) => {\n\n        return 1 - easeCache.outBounce(1 - t);\n\n    },\n\n    outBounce: (t: number) => {\n\n        if ((t /= 1) < (1 / 2.75))\n        {\n            return (7.5625 * t * t);\n        }\n        else if (t < (2 / 2.75))\n        {\n            return (7.5625 * (t -= (1.5 / 2.75)) * t + .75);\n        }\n        else if (t < (2.5 / 2.75))\n        {\n            return (7.5625 * (t -= (2.25 / 2.75)) * t + .9375);\n        }\n        else\n        {\n            return (7.5625 * (t -= (2.625 / 2.75)) * t + .984375);\n        }\n\n    },\n\n    inOutBounce: (t: number) => {\n\n        if (t < 1 / 2) return easeCache.inBounce(t * 2) * 0.5;\n\n        return easeCache.outBounce(t * 2 - 1) * 0.5 + 0.5;\n\n    }\n\n};\n\nexport default function Ease (progress: number, easing: string)\n{\n    if (easeCache[easing])\n    {\n        return easeCache[easing](progress);\n    }\n}\n","export default function FloatBetween (min: number, max: number): number\n{\n    return Math.random() * (max - min) + min;\n}\n","export default class Vec2\n{\n    /**\n     * X component\n     *\n     * @type {number}\n     * @memberof Vec2\n     */\n    x: number;\n\n    /**\n     * Y component\n     *\n     * @type {number}\n     * @memberof Vec2\n     */\n    y: number;\n\n    /**\n     * Creates an instance of a Vector2.\n     * \n     * @param {number} [x=0] - X component\n     * @param {number} [y=x] - Y component\n     * @memberof Vec2\n     */\n    constructor (x: number = 0, y: number = x)\n    {\n        this.set(x, y);\n    }\n\n    /**\n     * Sets the components of this Vector2.\n     * \n     * @param {number} [x=0] - X component\n     * @param {number} [y=0] - Y component\n     * @returns {Vec2}\n     * @memberof Vec2\n     */\n    set (x: number = 0, y: number = 0): Vec2\n    {\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n}\n","import Vec2 from './Vec2';\n\nexport default function GlobalToLocal (transform: Float32Array, x: number, y: number, outPoint: Vec2 = new Vec2()): Vec2\n{\n    const [ a, b, c, d, tx, ty ] = transform;\n\n    const id: number = 1 / ((a * d) + (c * -b));\n\n    outPoint.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\n    outPoint.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\n\n    return outPoint;\n}\n","import Vec2 from './Vec2';\n\nexport default function LocalToGlobal (transform: Float32Array, x: number, y: number, outPoint: Vec2 = new Vec2()): Vec2\n{\n    const [ a, b, c, d, tx, ty ] = transform;\n\n    outPoint.x = (a * x) + (c * y) + tx;\n    outPoint.y = (b * x) + (d * y) + ty;\n\n    return outPoint;\n}\n","export default function Matrix2dEqual (mat1: Float32Array, mat2: Float32Array): boolean\n{\n    return (\n        mat1[0] === mat2[0] &&\n        mat1[1] === mat2[1] &&\n        mat1[2] === mat2[2] &&\n        mat1[3] === mat2[3] &&\n        mat1[4] === mat2[4] &&\n        mat1[5] === mat2[5]\n    );\n}\n","import AppendMatrix2d from './AppendMatrix2d';\nimport Between from './Between';\nimport Ease from './Ease';\nimport FloatBetween from './FloatBetween';\nimport GlobalToLocal from './GlobalToLocal';\nimport LocalToGlobal from './LocalToGlobal';\nimport Matrix2dEqual from './Matrix2dEqual';\nimport Vec2 from './Vec2';\n\nexport default {\n    AppendMatrix2d,\n    Between,\n    Ease,\n    FloatBetween,\n    GlobalToLocal,\n    LocalToGlobal,\n    Matrix2dEqual,\n    Vec2\n}\n","import Texture from './Texture';\nimport Frame from './Frame';\n\nexport default function AtlasParser (texture: Texture, data: any)\n{\n    let frames;\n\n    if (Array.isArray(data.textures))\n    {\n        //  TP3 Format\n        frames = data.textures[0].frames;\n    }\n    else if (Array.isArray(data.frames))\n    {\n        //  TP2 Format Array\n        frames = data.frames;\n    }\n    else if (data.hasOwnProperty('frames'))\n    {\n        //  TP2 Format Hash\n        frames = Object.values(data.frames);\n    }\n    else\n    {\n        console.warn('Invalid Texture Atlas JSON');\n    }\n\n    if (frames)\n    {\n        let newFrame: Frame;\n\n        for (let i = 0; i < frames.length; i++)\n        {\n            let src = frames[i];\n\n            //  The frame values are the exact coordinates to cut the frame out of the atlas from\n            newFrame = texture.add(src.filename, src.frame.x, src.frame.y, src.frame.w, src.frame.h)\n\n            //  These are the original (non-trimmed) sprite values\n            if (src.trimmed)\n            {\n                newFrame.setTrim(\n                    src.sourceSize.w,\n                    src.sourceSize.h,\n                    src.spriteSourceSize.x,\n                    src.spriteSourceSize.y,\n                    src.spriteSourceSize.w,\n                    src.spriteSourceSize.h\n                );\n            }\n            else\n            {\n                newFrame.setSourceSize(src.sourceSize.w, src.sourceSize.h);\n            }\n\n            if (src.rotated)\n            {\n                // newFrame.rotated = true;\n                // newFrame.updateUVsInverted();\n            }\n\n            if (src.anchor)\n            {\n                newFrame.setPivot(src.anchor.x, src.anchor.y);\n            }\n        }\n    }\n}\n","export default function CreateCanvas (width: number, height: number): CanvasRenderingContext2D\n{\n    const canvas = document.createElement('canvas');\n\n    canvas.width = width;\n    canvas.height = height;\n\n    return canvas.getContext('2d');\n}\n","import CreateCanvas from './CreateCanvas';\nimport Texture from './Texture';\n\nexport default function CanvasTexture (width: number = 32, height: number = 32): Texture\n{\n    const ctx = CreateCanvas(width, height);\n\n    return new Texture(ctx.canvas);\n}\n","import CreateCanvas from './CreateCanvas';\nimport Texture from './Texture';\n\nexport default function GridTexture (color1: string, color2: string, width: number = 32, height: number = 32, cols: number = 2, rows: number = 2): Texture\n{\n    const ctx = CreateCanvas(width, height);\n\n    const colWidth = width / cols;\n    const rowHeight = height / rows;\n\n    ctx.fillStyle = color1;\n    ctx.fillRect(0, 0, width, height);\n\n    ctx.fillStyle = color2;\n\n    for (let y: number = 0; y < rows; y++)\n    {\n        for (let x: number = (y % 2); x < cols; x += 2)\n        {\n            ctx.fillRect(x * colWidth, y * rowHeight, colWidth, rowHeight);\n        }\n    }\n\n    return new Texture(ctx.canvas);\n}\n","import ISprite from './ISprite';\nimport WebGLRenderer from '../../renderer/WebGLRenderer';\nimport MultiTextureQuadShader from '../../renderer/MultiTextureQuadShader';\n\nexport default function RenderWebGL (sprite: ISprite, renderer: WebGLRenderer, shader: MultiTextureQuadShader, startActiveTexture: number)\n{\n    const texture = sprite.texture;\n\n    if (texture.glIndexCounter < startActiveTexture)\n    {\n        renderer.requestTexture(texture);\n    }\n\n    if (shader.count === shader.batchSize)\n    {\n        shader.flush();\n    }\n\n    sprite.uploadBuffers(shader.vertexViewF32, shader.vertexViewU32, shader.count * shader.quadElementSize);\n\n    shader.count++;\n}\n","export default function Ortho (width: number, height: number, near: number = -1, far: number = 1): Float32Array\n{\n    const m00: number = -2 * (1 / -width);\n    const m11: number = -2 * (1 / height);\n    const m22: number = 2 * (1 / (near - far));\n\n    return new Float32Array([ m00, 0, 0, 0, 0, m11, 0, 0, 0, 0, m22, 0, -1, 1, 0, 1 ]);\n}\n","import GL from '../renderer/GL';\nimport CreateGLTexture from './CreateGLTexture';\n\nexport default function CreateFramebuffer (width: number, height: number): [ WebGLTexture, WebGLFramebuffer ]\n{\n    const gl = GL.get();\n    const texture = CreateGLTexture(null, width, height);\n    const framebuffer = gl.createFramebuffer();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    return [ texture, framebuffer ];\n}\n","import Texture from './Texture';\nimport ISprite from '../gameobjects/sprite/ISprite';\nimport SpriteRenderWebGL from '../gameobjects/sprite/RenderWebGL';\nimport WebGLRenderer from '../renderer/WebGLRenderer';\nimport Ortho from '../renderer/Ortho';\nimport CreateFramebuffer from '../renderer/CreateFramebuffer';\n\nexport default class RenderTexture extends Texture\n{\n    renderer: WebGLRenderer;\n    cameraMatrix: Float32Array;\n    projectionMatrix: Float32Array;\n\n    constructor (renderer: WebGLRenderer, width: number = 256, height: number = width)\n    {\n        super(null, width, height);\n\n        this.renderer = renderer;\n\n        const [ texture, framebuffer ] = CreateFramebuffer(width, height);\n\n        this.glTexture = texture;\n        this.glFramebuffer = framebuffer;\n\n        this.projectionMatrix = Ortho(width, height);\n        this.cameraMatrix = new Float32Array([ 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, height, 0, 1 ]);\n    }\n\n    cls (): this\n    {\n        const renderer = this.renderer;\n        const gl = renderer.gl;\n\n        renderer.reset(this.glFramebuffer, this.width, this.height);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        renderer.reset();\n\n        return this;\n    }\n\n    batchStart (): this\n    {\n        const renderer = this.renderer;\n\n        renderer.reset(this.glFramebuffer, this.width, this.height);\n\n        renderer.shader.bind(this.projectionMatrix, this.cameraMatrix);\n\n        return this;\n    }\n\n    batchDraw (...sprites: ISprite[]): this\n    {\n        const renderer = this.renderer;\n        const shader = renderer.shader;\n\n        for (let i: number = 0; i < sprites.length; i++)\n        {\n            SpriteRenderWebGL(sprites[i], renderer, shader, renderer.startActiveTexture);\n        }\n\n        return this;\n    }\n\n    batchEnd (): this\n    {\n        const renderer = this.renderer;\n        const shader = renderer.shader;\n\n        shader.flush();\n\n        renderer.reset();\n\n        return this;\n    }\n\n    draw (...sprites: ISprite[]): this\n    {\n        this.batchStart();\n        this.batchDraw(...sprites);\n        this.batchEnd();\n\n        return this;\n    }\n}\n","import CreateCanvas from './CreateCanvas';\nimport Texture from './Texture';\n\nexport default function SolidColorTexture (color: string = 'rgba(0,0,0,0)', width: number = 32, height: number = 32): Texture\n{\n    const ctx = CreateCanvas(width, height);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, width, height);\n\n    return new Texture(ctx.canvas);\n}\n","import IFrameConfig from './IFrameConfig';\nimport Texture from './Texture';\n\nexport default function (texture: Texture, x: number, y: number, width: number, height: number, frameConfig: IFrameConfig)\n{\n    let {\n        frameWidth = null,\n        frameHeight = null,\n        startFrame = 0,\n        endFrame = -1,\n        margin = 0,\n        spacing = 0\n    } = frameConfig;\n\n    if (!frameHeight)\n    {\n        frameHeight = frameWidth;\n    }\n\n    //  If missing we can't proceed\n    if (frameWidth === null)\n    {\n        throw new Error('SpriteSheetParser: Invalid frameWidth');\n    }\n\n    const row: number = Math.floor((width - margin + spacing) / (frameWidth + spacing));\n    const column: number = Math.floor((height - margin + spacing) / (frameHeight + spacing));\n    let total: number = row * column;\n\n    if (total === 0)\n    {\n        console.warn('SpriteSheetParser: Frame config will result in zero frames');\n    }\n\n    if (startFrame > total || startFrame < -total)\n    {\n        startFrame = 0;\n    }\n\n    if (startFrame < 0)\n    {\n        //  Allow negative skipframes.\n        startFrame = total + startFrame;\n    }\n\n    if (endFrame !== -1)\n    {\n        total = startFrame + (endFrame + 1);\n    }\n\n    let fx: number = margin;\n    let fy: number = margin;\n    let ax: number = 0;\n    let ay: number = 0;\n\n    for (let i: number = 0; i < total; i++)\n    {\n        ax = 0;\n        ay = 0;\n\n        let w: number = fx + frameWidth;\n        let h: number = fy + frameHeight;\n\n        if (w > width)\n        {\n            ax = w - width;\n        }\n\n        if (h > height)\n        {\n            ay = h - height;\n        }\n\n        texture.add(i, x + fx, y + fy, frameWidth - ax, frameHeight - ay);\n\n        fx += frameWidth + spacing;\n\n        if (fx + frameWidth > width)\n        {\n            fx = margin;\n            fy += frameHeight + spacing;\n        }\n    }\n}\n","import Texture from './Texture';\nimport CreateCanvas from './CreateCanvas';\n\nexport default class TextureManager\n{\n    textures: Map<string, Texture>;\n\n    constructor ()\n    {\n        this.textures = new Map();\n\n        this.createDefaultTextures();\n    }\n\n    private createDefaultTextures ()\n    {\n        this.add('__BLANK', new Texture(CreateCanvas(32, 32).canvas));\n\n        const missing = CreateCanvas(32, 32);\n\n        missing.strokeStyle = '#0f0';\n        missing.moveTo(0, 0);\n        missing.lineTo(32, 32);\n        missing.stroke();\n        missing.strokeRect(0.5, 0.5, 31, 31);\n\n        this.add('__MISSING', new Texture(missing.canvas));\n    }\n\n    get (key: string): Texture\n    {\n        if (this.textures.has(key))\n        {\n            return this.textures.get(key);\n        }\n        else\n        {\n            return this.textures.get('__MISSING');\n        }\n    }\n\n    has (key: string): boolean\n    {\n        return this.textures.has(key);\n    }\n\n    add (key: string, source: Texture | HTMLImageElement)\n    {\n        let texture: Texture;\n\n        if (!this.textures.has(key))\n        {\n            if (source instanceof Texture)\n            {\n                texture = source;\n            }\n            else\n            {\n                texture = new Texture(source);\n            }\n\n            texture.key = key;\n\n            if (!texture.glTexture)\n            {\n                texture.createGL();\n            }\n\n            this.textures.set(key, texture);\n        }\n\n        return texture;\n    }\n}","import AtlasParser from './AtlasParser';\nimport CanvasTexture from './CanvasTexture';\nimport CreateCanvas from './CreateCanvas';\nimport Frame from './Frame';\nimport GridTexture from './GridTexture';\nimport RenderTexture from './RenderTexture';\nimport SolidColorTexture from './SolidColorTexture';\nimport SpriteSheetParser from './SpriteSheetParser';\nimport Texture from './Texture';\nimport TextureManager from './TextureManager';\n\nexport default {\n    AtlasParser,\n    CanvasTexture,\n    CreateCanvas,\n    Frame,\n    GridTexture,\n    RenderTexture,\n    SolidColorTexture,\n    SpriteSheetParser,\n    Texture,\n    TextureManager\n}\n","export default function AddToDOM (element: HTMLElement, parent?: string | HTMLElement): HTMLElement\n{\n    let target: HTMLElement;\n\n    if (parent)\n    {\n        if (typeof parent === 'string')\n        {\n            //  Hopefully an element ID\n            target = document.getElementById(parent);\n        }\n        else if (typeof parent === 'object' && parent.nodeType === 1)\n        {\n            //  Quick test for a HTMLElement\n            target = parent;\n        }\n    }\n    else if (element.parentElement)\n    {\n        return element;\n    }\n\n    //  Fallback, covers an invalid ID and a non HTMLElement object\n    if (!target)\n    {\n        target = document.body;\n    }\n\n    target.appendChild(element);\n\n    return element;\n}\n","export default function DOMContentLoaded (callback: () => void)\n{\n    const readyState = document.readyState;\n\n    if (readyState === 'complete' || readyState === 'interactive')\n    {\n        callback();\n\n        return;\n    }\n\n    const check = () =>\n    {\n        document.removeEventListener('deviceready', check, true);\n        document.removeEventListener('DOMContentLoaded', check, true);\n        window.removeEventListener('load', check, true);\n\n        callback();\n    };\n\n    if (!document.body)\n    {\n        window.setTimeout(check, 20);\n    }\n    else if (window.hasOwnProperty('cordova'))\n    {\n        document.addEventListener('deviceready', check, true);\n    }\n    else\n    {\n        document.addEventListener('DOMContentLoaded', check, true);\n        window.addEventListener('load', check, true);\n    }\n}\n","//  From Pixi v5\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'void main(void){',\n    'float test = 0.1;',\n    '%forloop%',\n    'gl_FragColor = vec4(0.0);',\n    '}',\n].join('\\n');\n\nfunction generateSrc (maxIfs: number): string\n{\n    let src = '';\n\n    for (let i = 0; i < maxIfs; ++i)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1)\n        {\n            src += `if(test == ${i}.0){}`;\n        }\n    }\n\n    return src;\n}\n\nexport default function (maxIfs: number, gl: WebGLRenderingContext): number\n{\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true)\n    {\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            maxIfs = (maxIfs / 2) | 0;\n        }\n        else\n        {\n            // valid!\n            break;\n        }\n    }\n\n    return maxIfs;\n}\n","import WebGLRenderer from './WebGLRenderer';\nimport ISpriteMultiShader from './ISpriteMultiShader';\n\nconst shaderSource = {\n\n    fragmentShader: `\nprecision highp float;\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\nuniform sampler2D uTexture[%count%];\nvoid main (void)\n{\n    vec4 color;\n    %forloop%\n    gl_FragColor = color * vec4(vTintColor.bgr * vTintColor.a, vTintColor.a);\n}`,\n    \n    vertexShader: `\nprecision highp float;\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute float aTextureId;\nattribute vec4 aTintColor;\nuniform mat4 uProjectionMatrix;\nuniform mat4 uCameraMatrix;\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vTintColor;\nvoid main (void)\n{\n    vTextureCoord = aTextureCoord;\n    vTextureId = aTextureId;\n    vTintColor = aTintColor;\n    gl_Position = uProjectionMatrix * uCameraMatrix * vec4(aVertexPosition, 0.0, 1.0);\n}`\n}\n\nexport default class MultiTextureQuadShader\n{\n    renderer: WebGLRenderer;\n    gl: WebGLRenderingContext;\n\n    program: WebGLProgram;\n\n    attribs: { aVertexPosition: number; aTextureCoord: number; aTextureId: number; aTintColor: number } = { aVertexPosition: 0, aTextureCoord: 0, aTextureId: 0, aTintColor: 0 };\n    uniforms: { uProjectionMatrix: WebGLUniformLocation; uCameraMatrix: WebGLUniformLocation; uTexture: WebGLUniformLocation; } = { uProjectionMatrix: 0, uCameraMatrix: 0, uTexture: 0 };\n\n    /**\n     * Maximum number of quads per batch before a flush takes place.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    batchSize: number;\n\n    /**\n     * The size, in bytes, per entry in the array buffer.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    dataSize: number = 4;\n\n    /**\n     * The size, in bytes, per entry in the element index array.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    indexSize: number = 4;\n\n    /**\n     * The amount of elements / floats a single vertex consists of.\n     * \n     * The default is 6:\n     * \n     * position (x,y - 2 floats)\n     * texture coord (x,y - 2 floats)\n     * texture index (float)\n     * packed color (vec4)\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexElementSize: number = 6;\n\n    /**\n     * The size, in bytes, of a single vertex in the array buffer.\n     * \n     * This is `vertexElementSize * dataSize`.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexByteSize: number = 6 * 4;\n\n    /**\n     * The size, in bytes, of a single quad in the array buffer.\n     * \n     * This is `vertexByteSize * 4`.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    quadByteSize: number = (6 * 4) * 4;\n\n    /**\n     * The size, in quantity of elements, of a single quad in the element index array.\n     * \n     * This is `vertexElementSize * 4`.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    quadElementSize: number = 6 * 4;\n\n    /**\n     * The total number of entries per quad in the element index array.\n     * \n     * The IBO contains 6 entries per quad:\n     * \n     * 0, 1, 2\n     * 2, 3, 0\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    quadIndexSize: number = 6;\n\n    /**\n     * The size, in bytes, of the Array Buffer.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    bufferByteSize: number;\n\n    /**\n     * The Array Buffer.\n     *\n     * @type {ArrayBuffer}\n     * @memberof MultiTextureQuadShader\n     */\n    data: ArrayBuffer;\n\n    /**\n     * Float32 View of the Array Buffer.\n     *\n     * @type {Float32Array}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexViewF32: Float32Array;\n\n    /**\n     * Uint32 View of the Array Buffer.\n     *\n     * @type {Uint32Array}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexViewU32: Uint32Array;\n\n    /**\n     * The Element Array Buffer.\n     *\n     * @type {Uint16Array}\n     * @memberof MultiTextureQuadShader\n     */\n    index: Uint16Array;\n\n    /**\n     * The data array buffer.\n     *\n     * @type {WebGLBuffer}\n     * @memberof MultiTextureQuadShader\n     */\n    vertexBuffer: WebGLBuffer;\n\n    /**\n     * The element array buffer.\n     *\n     * @type {WebGLBuffer}\n     * @memberof MultiTextureQuadShader\n     */\n    indexBuffer: WebGLBuffer;\n\n    /**\n     * The total number of quads added to the batch so far.\n     * Reset every bind and flush.\n     *\n     * @type {number}\n     * @memberof MultiTextureQuadShader\n     */\n    count: number;\n\n    //  The number of quads previously flushed\n    prevCount: number;\n\n    constructor (renderer: WebGLRenderer, config: ISpriteMultiShader = {})\n    {\n        this.renderer = renderer;\n        this.gl = renderer.gl;\n\n        const {\n            batchSize = 4096,\n            fragmentShader = shaderSource.fragmentShader,\n            vertexShader = shaderSource.vertexShader\n        } = config;\n\n        this.batchSize = batchSize;\n        this.bufferByteSize = batchSize * this.quadByteSize;\n\n        this.createBuffers();\n        this.createShaders(fragmentShader, vertexShader);\n\n        this.count = 0;\n    }\n\n    createBuffers ()\n    {\n        let ibo: number[] = [];\n        \n        //  Seed the index buffer\n        for (let i: number = 0; i < (this.batchSize * this.indexSize); i += this.indexSize)\n        {\n            ibo.push(i + 0, i + 1, i + 2, i + 2, i + 3, i + 0);\n        }\n        \n        this.data = new ArrayBuffer(this.bufferByteSize);\n        this.index = new Uint16Array(ibo);\n\n        this.vertexViewF32 = new Float32Array(this.data);\n        this.vertexViewU32 = new Uint32Array(this.data);\n\n        const gl = this.gl;\n\n        this.vertexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\n       \n        this.indexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.index, gl.STATIC_DRAW);\n\n        //  Tidy-up\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        ibo = [];\n    }\n\n    createShaders (fragmentShaderSource: string, vertexShaderSource: string)\n    {\n        const gl = this.gl;\n        const maxTextures = this.renderer.maxTextures;\n\n        let src: string = '';\n\n        if (maxTextures > 1)\n        {\n            for (let i: number = 0; i < maxTextures; i++)\n            {\n                if (i > 0)\n                {\n                    src += '\\nelse ';\n                }\n        \n                if (i < maxTextures - 1)\n                {\n                    src += `if (vTextureId < ${i}.5)`;\n                }\n        \n                src += '\\n{';\n                src += `\\n  color = texture2D(uTexture[${i}], vTextureCoord);`;\n                src += '\\n}';\n            }\n    \n            fragmentShaderSource = fragmentShaderSource.replace(/%count%/gi, `${maxTextures}`);\n            fragmentShaderSource = fragmentShaderSource.replace(/%forloop%/gi, src);\n        }\n        else\n        {\n            src = 'color = texture2D(uTexture[0], vTextureCoord);';\n        }\n\n        //  Create the shaders\n\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        \n        gl.shaderSource(fragmentShader, fragmentShaderSource);\n        gl.compileShader(fragmentShader);\n        \n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        \n        gl.shaderSource(vertexShader, vertexShaderSource);\n        gl.compileShader(vertexShader);\n        \n        const program = gl.createProgram();\n        \n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n\n        gl.useProgram(program);\n\n        this.program = program;\n        \n        for (let key of Object.keys(this.attribs))\n        {\n            let location = gl.getAttribLocation(program, key);\n\n            gl.enableVertexAttribArray(location);\n\n            this.attribs[key] = location;\n        }\n\n        for (let key of Object.keys(this.uniforms))\n        {\n            this.uniforms[key] = gl.getUniformLocation(program, key);\n        }\n    }\n\n    bind (projectionMatrix: Float32Array, cameraMatrix: Float32Array)\n    {\n        const gl = this.gl;\n        const renderer = this.renderer;\n        const uniforms = this.uniforms;\n\n        gl.useProgram(this.program);\n\n        gl.uniformMatrix4fv(uniforms.uProjectionMatrix, false, projectionMatrix);\n        gl.uniformMatrix4fv(uniforms.uCameraMatrix, false, cameraMatrix);\n        gl.uniform1iv(uniforms.uTexture, renderer.textureIndex);\n\n        this.bindBuffers(this.indexBuffer, this.vertexBuffer);\n    }\n\n    bindBuffers (indexBuffer: WebGLBuffer, vertexBuffer: WebGLBuffer)\n    {\n        const gl = this.gl;\n        const stride = this.vertexByteSize;\n        const attribs = this.attribs;\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n        //  attributes must be reset whenever you change buffers\n\n        gl.vertexAttribPointer(attribs.aVertexPosition, 2, gl.FLOAT, false, stride, 0);     // size = 8\n        gl.vertexAttribPointer(attribs.aTextureCoord, 2, gl.FLOAT, false, stride, 8);       // size = 8, offset = position\n        gl.vertexAttribPointer(attribs.aTextureId, 1, gl.FLOAT, false, stride, 16);         // size = 4, offset = position + tex coord\n        gl.vertexAttribPointer(attribs.aTintColor, 4, gl.UNSIGNED_BYTE, true, stride, 20);  // size = 4, offset = position + tex coord + index\n\n        this.count = 0;\n    }\n\n    draw (count: number)\n    {\n        const gl = this.gl;\n        const offset = count * this.quadByteSize;\n\n        if (offset === this.bufferByteSize)\n        {\n            gl.bufferData(gl.ARRAY_BUFFER, this.data, gl.DYNAMIC_DRAW);\n        }\n        else\n        {\n            let view = this.vertexViewF32.subarray(0, offset);\n\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n        }\n\n        gl.drawElements(gl.TRIANGLES, count * this.quadIndexSize, gl.UNSIGNED_SHORT, 0);\n    }\n\n    flush (): boolean\n    {\n        const count = this.count;\n\n        if (count === 0)\n        {\n            return false;\n        }\n\n        this.draw(count);\n\n        this.prevCount = count;\n\n        this.count = 0;\n\n        this.renderer.flushTotal++;\n\n        return true;\n    }\n}\n","import CheckShaderMaxIfStatements from './CheckShaderMaxIfStatements';\nimport MultiTextureQuadShader from './MultiTextureQuadShader';\nimport Texture from '../textures/Texture';\nimport Matrix2dEqual from '../math/Matrix2dEqual';\nimport ICamera from '../camera/ICamera';\nimport Ortho from './Ortho';\nimport GL from './GL';\nimport IGameObject from '../gameobjects/gameobject/IGameObject';\nimport SpriteRenderWebGL from '../gameobjects/sprite/RenderWebGL';\nimport ISprite from '../gameobjects/sprite/ISprite';\n\nexport default class WebGLRenderer\n{\n    canvas: HTMLCanvasElement;\n    gl: WebGLRenderingContext;\n\n    contextOptions: WebGLContextAttributes = {\n        alpha: false,\n        antialias: false,\n        premultipliedAlpha: false,\n        stencil: false,\n        preserveDrawingBuffer: false,\n        desynchronized: false\n    };\n\n    clearColor = [ 0, 0, 0, 1 ];\n\n    shader: MultiTextureQuadShader;\n\n    width: number;\n    height: number;\n    resolution: number;\n    \n    projectionMatrix: Float32Array;\n    textureIndex: number[];\n    flushTotal: number = 0;\n    \n    maxTextures: number = 0;\n    activeTextures: Texture[];\n    currentActiveTexture: number = 0;\n    startActiveTexture: number = 0;\n    tempTextures: WebGLTexture[] = [];\n\n    clearBeforeRender: boolean = true;\n    optimizeRedraw: boolean = true;\n    autoResize: boolean = true;\n\n    contextLost: boolean = false;\n    elementIndexExtension: OES_element_index_uint;\n\n    constructor (width: number, height: number, resolution: number)\n    {\n        this.width = width;\n        this.height = height;\n        this.resolution = resolution;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.addEventListener('webglcontextlost', (event) => this.onContextLost(event), false);\n        canvas.addEventListener('webglcontextrestored', () => this.onContextRestored(), false);\n\n        this.canvas = canvas;\n\n        this.initContext();\n\n        this.shader = new MultiTextureQuadShader(this);\n    }\n\n    initContext ()\n    {\n        const gl = this.canvas.getContext('webgl', this.contextOptions);\n\n        GL.set(gl);\n\n        this.gl = gl;\n\n        this.elementIndexExtension = gl.getExtension('OES_element_index_uint');\n\n        this.getMaxTextures();\n\n        if (this.shader)\n        {\n            this.shader.gl = gl;\n        }\n\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.CULL_FACE);\n\n        this.resize(this.width, this.height, this.resolution);\n    }\n\n    resize (width: number, height: number, resolution: number = 1)\n    {\n        this.width = width * resolution;\n        this.height = height * resolution;\n        this.resolution = resolution;\n    \n        const canvas = this.canvas;\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n    \n        if (this.autoResize)\n        {\n            canvas.style.width = this.width / resolution + 'px';\n            canvas.style.height = this.height / resolution + 'px';\n        }\n    \n        this.gl.viewport(0, 0, this.width, this.height);\n\n        this.projectionMatrix = Ortho(width, height);\n    }\n\n    onContextLost (event)\n    {\n        event.preventDefault();\n\n        this.contextLost = true;\n    }\n\n    onContextRestored ()\n    {\n        this.contextLost = false;\n\n        this.initContext();\n    }\n\n    setBackgroundColor (color: number)\n    {\n        const clearColor = this.clearColor;\n\n        const r: number = color >> 16 & 0xFF;\n        const g: number = color >> 8 & 0xFF;\n        const b: number = color & 0xFF;\n        const a: number = (color > 16777215) ? color >>> 24 : 255;\n    \n        clearColor[0] = r / 255;\n        clearColor[1] = g / 255;\n        clearColor[2] = b / 255;\n        clearColor[3] = a / 255;\n\n        return this;\n    }\n\n    private getMaxTextures ()\n    {\n        const gl = this.gl;\n\n        let maxTextures: number = CheckShaderMaxIfStatements(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS), gl);\n\n        const tempTextures = this.tempTextures;\n\n        if (tempTextures.length)\n        {\n            tempTextures.forEach(texture => {\n\n                gl.deleteTexture(texture);\n\n            });\n        }\n\n        //  Create temp textures to stop WebGL errors on mac os\n        for (let i: number = 0; i < maxTextures; i++)\n        {\n            let tempTexture = gl.createTexture();\n    \n            gl.activeTexture(gl.TEXTURE0 + i);\n    \n            gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n    \n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([ 0, 0, 255, 255 ]));\n\n            tempTextures[i] = tempTexture;\n        }\n\n        this.maxTextures = maxTextures;\n        \n        this.textureIndex = Array.from(Array(maxTextures).keys());\n        this.activeTextures = Array(maxTextures);\n\n        this.currentActiveTexture = 0;\n    }\n\n    reset (framebuffer: WebGLFramebuffer = null, width: number = this.width, height: number = this.height)\n    {\n        const gl = this.gl;\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        gl.viewport(0, 0, width, height);\n\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n        this.currentActiveTexture = 0;\n        this.startActiveTexture++;\n        this.flushTotal = 0;\n    }\n\n    render (sceneList: any[], dirtyFrame: number, dirtyCameras: number)\n    {\n        if (this.contextLost)\n        {\n            return;\n        }\n\n        const gl = this.gl;\n        const flushTotal = this.flushTotal;\n\n        //  This is only here because if we don't do _something_ with the context, GL Spector can't see it.\n        //  Technically, we could move it below the dirty bail-out below.\n        this.reset();\n\n        //  Cache 1 - Nothing dirty? Display the previous frame\n        if (this.optimizeRedraw && dirtyFrame === 0 && dirtyCameras === 0)\n        {\n            return;\n        }\n\n        const shader = this.shader;\n        const cls = this.clearColor;\n\n        if (this.clearBeforeRender)\n        {\n            gl.clearColor(cls[0], cls[1], cls[2], cls[3]);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        const projectionMatrix = this.projectionMatrix;\n\n        //  Cache 2 - Only one dirty camera and one flush? We can re-use the buffers\n        /*\n        if (dirtyCameras === 1 && dirtyFrame === 0 && flushTotal === 1)\n        {\n            //  Total items rendered in the previous frame\n            const count = shader.prevCount;\n\n            shader.bind(projectionMatrix, sceneList[0].matrix);\n\n            shader.draw(count);\n\n            shader.prevCount = count;\n\n            this.flushTotal = 1;\n\n            return;\n        }\n        */\n\n        let prevCamera: ICamera;\n\n        for (let c: number = 0; c < sceneList.length; c += 2)\n        {\n            let camera: ICamera = sceneList[c];\n            let list: IGameObject[] = sceneList[c + 1];\n\n            //  This only needs rebinding if the camera matrix is different to before\n            if (!prevCamera || !Matrix2dEqual(camera.worldTransform, prevCamera.worldTransform))\n            {\n                shader.flush();\n\n                shader.bind(projectionMatrix, camera.matrix);\n\n                prevCamera = camera;\n            }\n\n            //  Process the render list\n            for (let i: number = 0; i < list.length; i++)\n            {\n                SpriteRenderWebGL(list[i] as ISprite, this, shader, this.startActiveTexture);\n            }\n        }\n\n        //  One final sweep\n        shader.flush();\n    }\n\n    resetTextures (texture?: Texture)\n    {\n        const gl = this.gl;\n        const active = this.activeTextures;\n\n        active.fill(null);\n\n        this.currentActiveTexture = 0;\n        this.startActiveTexture++;\n\n        if (texture)\n        {\n            //  Set this texture as texture0\n            active[0] = texture;\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n\n            this.currentActiveTexture = 1;\n        }\n    }\n\n    requestTexture (texture: Texture)\n    {\n        const gl = this.gl;\n\n        texture.glIndexCounter = this.startActiveTexture;\n\n        if (this.currentActiveTexture < this.maxTextures)\n        {\n            //  Make this texture active\n            this.activeTextures[this.currentActiveTexture] = texture;\n\n            texture.glIndex = this.currentActiveTexture;\n\n            gl.activeTexture(gl.TEXTURE0 + this.currentActiveTexture);\n            gl.bindTexture(gl.TEXTURE_2D, texture.glTexture);\n\n            this.currentActiveTexture++;\n        }\n        else\n        {\n            //  We're out of textures, so flush the batch and reset them all\n            this.shader.flush();\n\n            this.resetTextures(texture);\n        }\n    }\n}\n","import ISceneConfig from './ISceneConfig';\n\nexport default function GetConfigValue (config: ISceneConfig, property: string, defaultValue: any): any\n{\n    if (config.hasOwnProperty(property))\n    {\n        return config[property];\n    }\n    else\n    {\n        return defaultValue;\n    }\n}\n","import Game from '../Game';\nimport IBaseScene from './IBaseScene';\nimport ISceneConfig from './ISceneConfig';\nimport GetConfigValue from './GetConfigValue';\nimport IBaseSceneConstructor from './IBaseSceneConstructor';\n\nexport default class SceneManager\n{\n    game: Game;\n\n    scenes: Map<string, IBaseScene>;\n\n    sceneIndex: number = 0;\n\n    //  Flush the cache\n    flush: boolean = false;\n\n    //  How many Cameras were made dirty this frame across all Scenes?\n    dirtyCameras: number = 0;\n\n    //  How many Game Objects were made dirty this frame across all Scenes?\n    dirtyFrame: number = 0;\n\n    //  How many Game Objects were processed this frame across all Scenes?\n    totalFrame: number = 0;\n\n    renderList: any[];\n    \n    constructor (game: Game)\n    {\n        this.game = game;\n\n        this.scenes = new Map();\n\n        this.renderList = [];\n    }\n\n    boot (scenes: any[] | IBaseScene[])\n    {\n        scenes.forEach(scene => {\n\n            this.add(scene);\n\n        });\n    }\n\n    add (scene: IBaseSceneConstructor)\n    {\n        const instance = new scene();\n\n        //  At this point the act of creating a new instance of the Scene\n        //  will have invoked the init method below, so we can now safely\n        //  add the Scene into our Map\n\n        if (instance.willUpdate)\n        {\n            instance.boot.call(instance);\n        }\n    }\n\n    init (scene: IBaseScene, config: string | ISceneConfig = {})\n    {\n        const size = this.scenes.size;\n        const sceneIndex = this.sceneIndex;\n        const firstScene: boolean = (size === 0);\n\n        if (typeof config === 'string')\n        {\n            scene.key = config;\n        }\n        else if (config || (!config && firstScene))\n        {\n            scene.key = GetConfigValue(config, 'key', 'scene' + sceneIndex) as string;\n            scene.willUpdate = GetConfigValue(config, 'willUpdate', firstScene) as boolean;\n            scene.willRender = GetConfigValue(config, 'willRender', firstScene) as boolean;\n        }\n\n        if (this.scenes.has(scene.key))\n        {\n            console.warn('Scene key already in use: ' + scene.key);\n        }\n        else\n        {\n            this.scenes.set(scene.key, scene);\n\n            this.flush = true;\n\n            this.sceneIndex++;\n        }\n    }\n\n    update (delta: number, now: number)\n    {\n        for (const scene of this.scenes.values())\n        {\n            if (scene.willUpdate)\n            {\n                scene.update.call(scene, delta, now);\n\n                scene.world.update(delta, now);\n            }\n        }\n    }\n\n    render (gameFrame: number): [ any[], number, number ]\n    {\n        const renderList = this.renderList;\n\n        renderList.length = 0;\n\n        this.dirtyCameras = 0;\n        this.dirtyFrame = 0;\n        this.totalFrame = 0;\n\n        for (let scene of this.scenes.values())\n        {\n            if (scene.willRender)\n            {\n                let world = scene.world;\n\n                this.dirtyFrame += world.render(gameFrame);\n                this.totalFrame += world.totalFrame;\n\n                if (world.renderList.length === 0)\n                {\n                    continue;\n                }\n\n                if (world.camera.dirtyRender)\n                {\n                    this.dirtyCameras++;\n\n                    world.camera.dirtyRender = false;\n                }\n    \n                renderList.push(world.camera);\n                renderList.push(world.renderList);\n            }\n        }\n\n        if (this.flush)\n        {\n            //  Invalidate the renderer cache\n            this.dirtyFrame++;\n\n            //  And reset\n            this.flush = false;\n        }\n\n        return [ renderList, this.dirtyFrame, this.dirtyCameras ];\n    }\n}\n","class EE\n{\n    callback: Function;\n    context: any;\n    once: boolean;\n\n    constructor (callback: Function, context: any, once: boolean = false)\n    {\n        this.callback = callback;\n        this.context = context;\n        this.once = once;\n    }\n}\n\nexport default class EventEmitter\n{\n    private _events: Map<string, Set<EE>>;\n\n    constructor ()\n    {\n        this._events = new Map();\n    }\n\n    on (event: string, callback: Function, context: any = this, once: boolean = false)\n    {\n        if (typeof callback !== 'function')\n        {\n            throw new TypeError('The listener must be a function');\n        }\n\n        const listener = new EE(callback, context, once);\n        const listeners = this._events.get(event);\n\n        if (!listeners)\n        {\n            this._events.set(event, new Set([ listener ]));\n        }\n        else\n        {\n            listeners.add(listener);\n        }\n\n        return this;\n    }\n\n    once (event: string, callback: Function, context: any = this)\n    {\n        return this.on(event, callback, context, true);\n    }\n\n    /**\n     * Clear an event by name.\n     */\n    clearEvent (event: string)\n    {\n        this._events.delete(event);\n\n        return this;\n    }\n\n    /**\n     * Return an array listing the events for which the emitter has registered listeners.\n     */\n    eventNames (): string[]\n    {\n        return [ ...this._events.keys() ];\n    }\n\n    /**\n     * Return the listeners registered for a given event.\n     */\n    listeners (event: string): Function[]\n    {\n        const out = [];\n\n        const listeners = this._events.get(event);\n\n        listeners.forEach((ee) => {\n\n            out.push(ee.callback);\n\n        });\n\n        return out;\n    }\n\n    /**\n     * Return the number of listeners listening to a given event.\n     */\n    listenerCount (event: string): number\n    {\n        const listeners = this._events.get(event);\n\n        return (listeners) ? listeners.size : 0;\n    }\n\n    /**\n     * Calls each of the listeners registered for a given event.\n     */\n    emit (event: string, ...args: any[]): boolean\n    {\n        if (!this._events.has(event))\n        {\n            return false;\n        }\n\n        const listeners = this._events.get(event);\n\n        for (const ee of listeners)\n        {\n            ee.callback.apply(ee.context, args);\n\n            if (ee.once)\n            {\n                listeners.delete(ee);\n            }\n        }\n\n        if (listeners.size === 0)\n        {\n            this._events.delete(event);\n        }\n\n        return true;\n    }\n\n    /**\n     * Remove the listeners of a given event.\n     * \n     * @param event \n     * @param callback \n     * @param context \n     * @param once \n     */\n    off (event: string, callback?: Function, context?: any, once?: boolean)\n    {\n        if (!callback)\n        {\n            //  Remove all events matching the given key\n            this._events.delete(event);\n        }\n        else\n        {\n            const listeners = this._events.get(event);\n            const hasContext: boolean = !context;\n            const hasOnce: boolean = (once !== undefined);\n\n            for (const ee of listeners)\n            {\n                if (ee.callback === callback && (hasContext && ee.context === console) && (hasOnce && ee.once === once))\n                {\n                    listeners.delete(ee);\n                }\n            }\n\n            if (listeners.size === 0)\n            {\n                this._events.delete(event);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove all listeners, or those of the specified event.\n     * \n     * @param event \n     */\n    removeAllListeners (event?: string)\n    {\n        if (!event)\n        {\n            this._events.clear();\n        }\n        else\n        {\n            this._events.delete(event);\n        }\n    }\n}\n","import { AddToDOM, DOMContentLoaded } from './dom';\nimport WebGLRenderer from './renderer/WebGLRenderer';\nimport SceneManager from './scenes/SceneManager';\nimport TextureManager from './textures/TextureManager';\nimport IGameConfig from './IGameConfig';\nimport EventEmitter from './core/EventEmitter';\nimport GameInstance from './GameInstance';\n\nexport default class Game extends EventEmitter\n{\n    VERSION: string = '4.0.0-beta1';\n\n    config: IGameConfig;\n\n    isPaused: boolean = false;\n    isBooted: boolean = false;\n\n    scenes: SceneManager;\n    textures: TextureManager;\n    renderer: WebGLRenderer;\n    cache: { json: Map<string, any>; csv: Map<string, any>; xml: Map<string, any>; };\n\n    private lastTick: number;\n    lifetime: number = 0;\n    elapsed: number = 0;\n\n    //  The current game frame\n    frame: number = 0;\n\n    constructor (config?: IGameConfig)\n    {\n        super();\n\n        const {\n            width = 800,\n            height = 600,\n            resolution = 1,\n            backgroundColor = 0x00000,\n            parent = document.body,\n            scene = null\n        } = config;\n\n        this.config = { width, height, resolution, backgroundColor, parent, scene };\n\n        this.cache = {\n            json: new Map(),\n            csv: new Map(),\n            xml: new Map()\n        };\n\n        GameInstance.set(this);\n\n        DOMContentLoaded(() => this.boot());\n    }\n\n    pause ()\n    {\n        this.isPaused = true;\n\n        this.emit('pause');\n    }\n\n    resume ()\n    {\n        this.isPaused = false;\n\n        this.lastTick = Date.now();\n\n        this.emit('resume');\n    }\n\n    boot ()\n    {\n        const config = this.config;\n\n        this.isBooted = true;\n        this.lastTick = Date.now();\n\n        const renderer = new WebGLRenderer(config.width, config.height, config.resolution);\n\n        renderer.setBackgroundColor(config.backgroundColor);\n\n        AddToDOM(renderer.canvas, config.parent);\n\n        this.renderer = renderer;\n        this.textures = new TextureManager();\n        this.scenes = new SceneManager(this);\n\n        this.banner(this.VERSION);\n\n        this.scenes.boot([].concat(config.scene));\n\n        //  Visibility API\n        document.addEventListener('visibilitychange', () => {\n\n            this.emit('visibilitychange', document.hidden);\n\n            if (document.hidden)\n            {\n                this.pause();\n            }\n            else\n            {\n                this.resume();\n            }\n\n        });\n\n        // window.addEventListener('blur', () => this.pause());\n        // window.addEventListener('focus', () => this.resume());\n\n        this.emit('boot');\n\n        requestAnimationFrame(() => this.step());\n    }\n\n    banner (version: string)\n    {\n        console.log(\n            '%cPhaser v' + version + '%c https://phaser4.io',\n            'padding: 4px 16px; color: #fff; background: linear-gradient(#3e0081 40%, #00bcc3)',\n            ''\n        );\n    }\n\n    step ()\n    {\n        const now = Date.now();\n        const delta = now - this.lastTick;\n\n        const dt = delta / 1000;\n\n        this.lifetime += dt;\n        this.elapsed = dt;\n        this.lastTick = now;\n    \n        this.emit('step', dt, now);\n\n        const sceneManager = this.scenes;\n\n        if (!this.isPaused)\n        {\n            sceneManager.update(dt, now);\n        }\n\n        this.emit('update', dt, now);\n\n        //  TODO: Optimize to remove const and array creation here:\n        const [ renderList, dirtyFrame, dirtyCameras ] = sceneManager.render(this.frame);\n\n        this.renderer.render(renderList, dirtyFrame, dirtyCameras);\n\n        this.emit('render', dt, now);\n\n        //  The frame always advances by 1 each step (even when paused)\n        this.frame++;\n\n        requestAnimationFrame(() => this.step());\n    }\n\n    destroy ()\n    {\n        //  TODO\n    }\n\n}\n","import TransformGameObject from '../gameobjects/transformgameobject/TransformGameObject';\nimport WebGLRenderer from '../renderer/WebGLRenderer';\nimport GameInstance from '../GameInstance';\n\nexport default class Camera extends TransformGameObject\n{\n    matrix: Float32Array;\n    renderer: WebGLRenderer;\n\n    constructor (x: number = 0, y: number = 0)\n    {\n        super(x, y);\n\n        this.type = 'Camera';\n\n        const game = GameInstance.get();\n\n        this.renderer = game.renderer;\n\n        this.reset();\n    }\n\n    updateTransform ()\n    {\n        if (!this.renderer)\n        {\n            return this;\n        }\n\n        this.dirtyRender = true;\n\n        const lt = this.localTransform;\n        const wt = this.worldTransform;\n\n        lt[4] = 0 - this.x;\n        lt[5] = 0 - this.y;\n\n        const mat = this.matrix;\n        const [ a, b, c, d, tx, ty ] = lt;\n\n        const viewportW = this.renderer.width * this.originX;\n        const viewportH = this.renderer.height * this.originY;\n\n        mat[0] = a;\n        mat[1] = b;\n        mat[4] = c;\n        mat[5] = d;\n\n        //  combines viewport translation + scrollX/Y\n\n        const worldX = (a * -viewportW) + (c * -viewportH) + (viewportW + tx);\n        const worldY = (b * -viewportW) + (d * -viewportH) + (viewportH + ty);\n\n        mat[12] = worldX;\n        mat[13] = worldY;\n\n        //  Store in worldTransform\n        wt.set([\n            a, b, c, d, worldX, worldY\n        ]);\n\n        // mat[12] = viewportW + tx; // combines translation to center of viewport + scrollX\n        // mat[13] = viewportH + ty; // combines translation to center of viewport + scrollY\n        // this.translate(-viewportW, -viewportH);\n        // console.log(mat);\n\n        this.bounds.x = worldX * -1;\n        this.bounds.y = worldY * -1;\n\n        return this;\n    }\n\n    reset ()\n    {\n        this.matrix = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]);\n\n        const width = this.renderer.width;\n        const height = this.renderer.height;\n\n        this.setSize(width, height);\n        this.setBounds(0, 0, width, height);\n    }\n\n    destroy ()\n    {\n        super.destroy();\n\n        this.renderer = null;\n        this.matrix = null;\n    }\n}\n","import Rectangle from '../Rectangle';\n\nexport default function RectangleToRectangle (rectA: Rectangle, rectB: Rectangle): boolean\n{\n    if (rectA.width <= 0 || rectA.height <= 0 || rectB.width <= 0 || rectB.height <= 0)\n    {\n        return false;\n    }\n\n    return !(rectA.right < rectB.x || rectA.bottom < rectB.y || rectA.x > rectB.right || rectA.y > rectB.bottom);\n};\n","import Camera from '../camera/Camera';\nimport Scene from '../scenes/Scene';\nimport RectangleToRectangle from '../geom/intersection/RectangleToRectangle';\nimport IGameObject from '../gameobjects/gameobject/IGameObject';\nimport IContainer from '../gameobjects/container/IContainer';\n\nexport default class World\n{\n    scene: Scene;\n\n    children: IGameObject[];\n\n    camera: Camera;\n\n    //  How many Game Objects were made dirty this frame?\n    dirtyFrame: number = 0;\n\n    //  How many Game Objects will be rendered this frame? (are in-bounds)\n    totalFrame: number = 0;\n\n    //  How many Game Objects passed `willRender` this frame? (but may not have been in bounds)\n    visibleFrame: number = 0;\n\n    //  How many Game Objects were out of bounds this frame?\n    boundsFrame: number = 0;\n\n    //  A list of Game Objects that will be rendered in the next pass\n    private renderList: IGameObject[];\n\n    forceRefresh: boolean = false;\n\n    enableCameraCull: boolean = true;\n\n    worldTransform: Float32Array;\n\n    constructor (scene: Scene)\n    {\n        this.scene = scene;\n\n        this.children = [];\n        this.renderList = [];\n\n        this.worldTransform = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n        this.camera = new Camera();\n    }\n\n    private scanChildren (root: IContainer | World, gameFrame: number)\n    {\n        const children = root.children;\n\n        for (let i: number = 0; i < children.length; i++)\n        {\n            this.buildRenderList(children[i], gameFrame);\n        }\n    }\n\n    private buildRenderList (root: IGameObject, gameFrame: number)\n    {\n        if (root.isRenderable())\n        {\n            const cull = this.enableCameraCull;\n\n            if (!cull || (cull && RectangleToRectangle(root.getBounds(), this.camera.bounds)))\n            {\n                this.renderList.push(root);\n\n                if (root.dirtyFrame >= gameFrame)\n                {\n                    this.dirtyFrame++;\n                }\n            }\n\n            this.visibleFrame++;\n        }\n\n        if (root.isParent && root.visible)\n        {\n            this.scanChildren(root as IContainer, gameFrame);\n        }\n    }\n\n    update (delta?: number, time?: number)\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            let child = children[i];\n\n            if (child && child.willUpdate)\n            {\n                child.update(delta, time);\n            }\n        }\n    }\n\n    render (gameFrame: number): number\n    {\n        this.dirtyFrame = 0;\n        this.boundsFrame = 0;\n        this.visibleFrame = 0;\n        this.renderList.length = 0;\n\n        this.scanChildren(this, gameFrame);\n\n        this.totalFrame = this.renderList.length;\n\n        if (this.forceRefresh)\n        {\n            this.dirtyFrame++;\n            this.forceRefresh = false;\n        }\n\n        return this.dirtyFrame;\n    }\n\n    shutdown ()\n    {\n        //  Clear the display list and reset the camera, but leave\n        //  everything in place so we can return to this World again\n        //  at a later stage\n\n        // this.removeChildren();\n\n        this.renderList = [];\n\n        this.camera.reset();\n    }\n\n    destroy ()\n    {\n        this.camera.destroy();\n\n        this.camera = null;\n        this.renderList = null;\n    }\n\n    get numChildren (): number\n    {\n        return this.children.length;\n    }\n}\n","import Game from '../Game';\nimport GameInstance from '../GameInstance';\nimport World from '../world/World';\nimport ISceneConfig from './ISceneConfig';\n\nexport default class Scene\n{\n    key: string;\n    willUpdate: boolean = false;\n    willRender: boolean = false;\n    game: Game;\n    world: World;\n\n    constructor (config?: string | ISceneConfig)\n    {\n        this.game = GameInstance.get();\n\n        this.world = new World(this);\n\n        this.game.scenes.init(this, config);\n    }\n\n    boot ()\n    {\n    }\n\n    update ()\n    {\n    }\n\n    render ()\n    {\n    }\n\n    shutdown ()\n    {\n    }\n\n    destroy ()\n    {\n        this.world.destroy();\n\n        this.world = null;\n        this.game = null;\n    }\n}\n","import WebGLRenderer from '../renderer/WebGLRenderer';\nimport Rectangle from '../geom/Rectangle';\nimport IBaseScene from '../scenes/IBaseScene';\n\nexport default class StaticCamera\n{\n    scene: IBaseScene;\n    matrix: Float32Array;\n    renderer: WebGLRenderer;\n\n    width: number;\n    height: number;\n    bounds: Rectangle;\n\n    constructor (scene: IBaseScene)\n    {\n        this.scene = scene;\n\n        this.renderer = scene.game.renderer;\n\n        this.matrix = new Float32Array([ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]);\n\n        this.bounds = new Rectangle();\n\n        this.reset();\n    }\n\n    reset ()\n    {\n        const width = this.renderer.width;\n        const height = this.renderer.height;\n\n        this.width = width;\n        this.height = height;\n\n        this.bounds.set(0, 0, width, height);\n    }\n\n    destroy ()\n    {\n        this.scene = null;\n        this.renderer = null;\n        this.matrix = null;\n        this.bounds = null;\n    }\n}\n","import IGameObject from '../gameobjects/gameobject/IGameObject';\nimport StaticCamera from '../camera/StaticCamera';\nimport IContainer from '../gameobjects/container/IContainer';\nimport StaticScene from '../scenes/StaticScene';\n\n//  A Static World is designed specifically to have a bounds of a fixed size\n//  and a camera that doesn't move at all (no scrolling, rotation, etc)\n//  Because it has a fixed size, there is no camera culling enabled.\n//  Games that use this kind of world include Pacman, Bejeweled and 2048.\n\nexport default class StaticWorld\n{\n    scene: StaticScene;\n\n    children: IGameObject[];\n\n    camera: StaticCamera;\n\n    //  How many Game Objects were made dirty this frame?\n    dirtyFrame: number = 0;\n\n    //  How many Game Objects will be rendered this frame? (are in-bounds)\n    totalFrame: number = 0;\n\n    //  How many Game Objects passed `willRender` this frame? (but may not have been in bounds)\n    visibleFrame: number = 0;\n\n    //  A list of Game Objects that will be rendered in the next pass\n    private renderList: IGameObject[];\n\n    forceRefresh: boolean = false;\n\n    worldTransform: Float32Array;\n\n    constructor (scene: StaticScene)\n    {\n        this.scene = scene;\n\n        this.children = [];\n        this.renderList = [];\n\n        this.worldTransform = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n        this.camera = new StaticCamera(scene);\n    }\n\n    private scanChildren (root: IContainer | StaticWorld, gameFrame: number)\n    {\n        const children = root.children;\n\n        for (let i: number = 0; i < children.length; i++)\n        {\n            this.buildRenderList(children[i], gameFrame);\n        }\n    }\n\n    private buildRenderList (root: IGameObject, gameFrame: number)\n    {\n        if (root.isRenderable())\n        {\n            this.renderList.push(root);\n\n            if (root.dirtyFrame >= gameFrame)\n            {\n                this.dirtyFrame++;\n            }\n\n            this.visibleFrame++;\n        }\n\n        if (root.isParent && root.visible)\n        {\n            this.scanChildren(root as IContainer, gameFrame);\n        }\n    }\n\n    update (delta?: number, time?: number)\n    {\n        const children = this.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            let child = children[i];\n\n            if (child && child.willUpdate)\n            {\n                child.update(delta, time);\n            }\n        }\n    }\n\n    render (gameFrame: number): number\n    {\n        this.dirtyFrame = 0;\n        this.visibleFrame = 0;\n        this.renderList.length = 0;\n\n        this.scanChildren(this, gameFrame);\n\n        this.totalFrame = this.renderList.length;\n\n        if (this.forceRefresh)\n        {\n            this.dirtyFrame++;\n            this.forceRefresh = false;\n        }\n\n        return this.dirtyFrame;\n    }\n\n    shutdown ()\n    {\n        //  Clear the display list and reset the camera, but leave\n        //  everything in place so we can return to this World again\n        //  at a later stage\n\n        // this.removeChildren();\n\n        this.renderList = [];\n\n        this.camera.reset();\n    }\n\n    destroy ()\n    {\n        this.camera.destroy();\n\n        this.camera = null;\n        this.renderList = null;\n    }\n\n    get numChildren (): number\n    {\n        return this.children.length;\n    }\n}\n","import Game from '../Game';\nimport GameInstance from '../GameInstance';\nimport ISceneConfig from './ISceneConfig';\nimport StaticWorld from '../world/StaticWorld';\n\nexport default class StaticScene\n{\n    key: string;\n    willUpdate: boolean = false;\n    willRender: boolean = false;\n    game: Game;\n    world: StaticWorld;\n\n    constructor (config?: string | ISceneConfig)\n    {\n        this.game = GameInstance.get();\n\n        this.world = new StaticWorld(this);\n\n        this.game.scenes.init(this, config);\n    }\n\n    boot ()\n    {\n    }\n\n    update ()\n    {\n    }\n\n    render ()\n    {\n    }\n\n    shutdown ()\n    {\n    }\n    \n    destroy ()\n    {\n        this.world.destroy();\n\n        this.world = null;\n        this.game = null;\n    }\n}\n","import File from './File';\nimport EventEmitter from '../core/EventEmitter';\n\nexport default class Loader extends EventEmitter\n{\n    baseURL: string = '';\n    path: string = '';\n    crossOrigin: string = 'anonymous';\n\n    //  -1 means load everything at once (only recommended on http/2 servers)\n    maxParallelDownloads: number = -1;\n\n    isLoading: boolean = false;\n    progress: number;\n\n    queue: Set<File>;\n    inflight: Set<File>;\n    completed: Set<File>;\n\n    onComplete: Function;\n\n    constructor ()\n    {\n        super();\n\n        this.reset();\n    }\n\n    reset ()\n    {\n        this.isLoading = false;\n\n        this.queue = new Set();\n        this.inflight = new Set();\n        this.completed = new Set();\n\n        this.progress = 0;\n    }\n\n    add (...file: File[]): this\n    {\n        file.forEach(entity => {\n\n            entity.loader = this;\n\n            this.queue.add(entity);\n    \n        });\n\n        return this;\n    }\n\n    start (onComplete: Function): this\n    {\n        if (this.isLoading)\n        {\n            return;\n        }\n\n        this.completed.clear();\n        this.progress = 0;\n\n        if (this.queue.size > 0)\n        {\n            this.isLoading = true;\n\n            this.onComplete = onComplete;\n\n            this.emit('start');\n\n            this.nextFile();\n        }\n        else\n        {\n            this.progress = 1;\n\n            this.emit('complete');\n\n            onComplete();\n        }\n\n        return this;\n    }\n\n    nextFile ()\n    {\n        let limit = this.queue.size;\n\n        if (this.maxParallelDownloads !== -1)\n        {\n            limit = Math.min(limit, this.maxParallelDownloads) - this.inflight.size;\n        }\n\n        if (limit)\n        {\n            // console.log('Batching', limit, 'files to download');\n\n            const iterator = this.queue.values();\n\n            while (limit > 0)\n            {\n                const file = iterator.next().value;\n\n                // console.log('Loader.nextFile', file.key, '=>', file.url);\n    \n                this.inflight.add(file);\n    \n                this.queue.delete(file);\n    \n                file.load().then((file: File) => this.fileComplete(file)).catch((file: File) => this.fileError(file));\n\n                limit--;\n            }\n        }\n        else if (this.inflight.size === 0)\n        {\n            this.stop();\n        }\n    }\n\n    stop ()\n    {\n        this.isLoading = false;\n\n        this.emit('complete', this.completed);\n\n        this.onComplete();\n\n        this.completed.clear();\n    }\n\n    private updateProgress (file: File)\n    {\n        this.inflight.delete(file);\n        this.completed.add(file);\n\n        const totalCompleted = this.completed.size;\n        const totalQueued = this.queue.size + this.inflight.size;\n\n        if (totalCompleted > 0)\n        {\n            this.progress = totalCompleted / (totalCompleted + totalQueued);\n        }\n\n        this.emit('progress', this.progress, totalCompleted, totalQueued);\n\n        this.nextFile();\n    }\n\n    private fileComplete (file: File)\n    {\n        this.emit('filecomplete', file);\n\n        this.updateProgress(file);\n    }\n\n    private fileError (file: File)\n    {\n        this.emit('fileerror', file);\n\n        this.updateProgress(file);\n    }\n\n    totalFilesToLoad (): number\n    {\n        return this.queue.size + this.inflight.size;\n    }\n\n    setBaseURL (url: string = ''): this\n    {\n        if (url !== '' && url.substr(-1) !== '/')\n        {\n            url = url.concat('/');\n        }\n\n        this.baseURL = url;\n\n        return this;\n    }\n\n    setPath (path: string = ''): this\n    {\n        if (path !== '' && path.substr(-1) !== '/')\n        {\n            path = path.concat('/');\n        }\n\n        this.path = path;\n\n        return this;\n    }\n\n    setCORS (crossOrigin: string): this\n    {\n        this.crossOrigin = crossOrigin;\n\n        return this;\n    }\n\n    setMaxParallelDownloads (max: number): this\n    {\n        this.maxParallelDownloads = max;\n\n        return this;\n    }\n}\n"],"names":["get","set","SpriteRenderWebGL"],"mappings":"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"}